/**
 * Make a map and return a function for checking if a key
 * is in that map.
 * IMPORTANT: all calls of this function must be prefixed with
 * \/\*#\_\_PURE\_\_\*\/
 * So that rollup can tree-shake them if necessary.
 */
var vendor09F8Aeee = (function () {
'use strict';
function makeMap(str, expectsLowerCase) {
    const map = Object.create(null);
    const list = str.split(',');
    for (let i = 0; i < list.length; i++) {
        map[list[i]] = true;
    }
    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];
}

const GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +
    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +
    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';
const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);

/**
 * On the client we only need to offer special cases for boolean attributes that
 * have different names from their corresponding dom properties:
 * - itemscope -> N/A
 * - allowfullscreen -> allowFullscreen
 * - formnovalidate -> formNoValidate
 * - ismap -> isMap
 * - nomodule -> noModule
 * - novalidate -> noValidate
 * - readonly -> readOnly
 */
const specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);

function normalizeStyle(value) {
    if (isArray$1(value)) {
        const res = {};
        for (let i = 0; i < value.length; i++) {
            const item = value[i];
            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);
            if (normalized) {
                for (const key in normalized) {
                    res[key] = normalized[key];
                }
            }
        }
        return res;
    }
    else if (isObject$3(value)) {
        return value;
    }
}
const listDelimiterRE = /;(?![^(]*\))/g;
const propertyDelimiterRE = /:(.+)/;
function parseStringStyle(cssText) {
    const ret = {};
    cssText.split(listDelimiterRE).forEach(item => {
        if (item) {
            const tmp = item.split(propertyDelimiterRE);
            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
        }
    });
    return ret;
}
function normalizeClass(value) {
    let res = '';
    if (isString(value)) {
        res = value;
    }
    else if (isArray$1(value)) {
        for (let i = 0; i < value.length; i++) {
            const normalized = normalizeClass(value[i]);
            if (normalized) {
                res += normalized + ' ';
            }
        }
    }
    else if (isObject$3(value)) {
        for (const name in value) {
            if (value[name]) {
                res += name + ' ';
            }
        }
    }
    return res.trim();
}

// These tag configs are shared between compiler-dom and runtime-dom, so they
// https://developer.mozilla.org/en-US/docs/Web/HTML/Element
const HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +
    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +
    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +
    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +
    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +
    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +
    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +
    'option,output,progress,select,textarea,details,dialog,menu,' +
    'summary,template,blockquote,iframe,tfoot';
// https://developer.mozilla.org/en-US/docs/Web/SVG/Element
const SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +
    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +
    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +
    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +
    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +
    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +
    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +
    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +
    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +
    'text,textPath,title,tspan,unknown,use,view';
const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);
const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);

function looseCompareArrays(a, b) {
    if (a.length !== b.length)
        return false;
    let equal = true;
    for (let i = 0; equal && i < a.length; i++) {
        equal = looseEqual(a[i], b[i]);
    }
    return equal;
}
function looseEqual(a, b) {
    if (a === b)
        return true;
    let aValidType = isDate(a);
    let bValidType = isDate(b);
    if (aValidType || bValidType) {
        return aValidType && bValidType ? a.getTime() === b.getTime() : false;
    }
    aValidType = isArray$1(a);
    bValidType = isArray$1(b);
    if (aValidType || bValidType) {
        return aValidType && bValidType ? looseCompareArrays(a, b) : false;
    }
    aValidType = isObject$3(a);
    bValidType = isObject$3(b);
    if (aValidType || bValidType) {
        /* istanbul ignore if: this if will probably never be called */
        if (!aValidType || !bValidType) {
            return false;
        }
        const aKeysCount = Object.keys(a).length;
        const bKeysCount = Object.keys(b).length;
        if (aKeysCount !== bKeysCount) {
            return false;
        }
        for (const key in a) {
            const aHasKey = a.hasOwnProperty(key);
            const bHasKey = b.hasOwnProperty(key);
            if ((aHasKey && !bHasKey) ||
                (!aHasKey && bHasKey) ||
                !looseEqual(a[key], b[key])) {
                return false;
            }
        }
    }
    return String(a) === String(b);
}
function looseIndexOf(arr, val) {
    return arr.findIndex(item => looseEqual(item, val));
}

/**
 * For converting {{ interpolation }} values to displayed strings.
 * @private
 */
const toDisplayString = (val) => {
    return val == null
        ? ''
        : isObject$3(val)
            ? JSON.stringify(val, replacer, 2)
            : String(val);
};
const replacer = (_key, val) => {
    if (isMap(val)) {
        return {
            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {
                entries[`${key} =>`] = val;
                return entries;
            }, {})
        };
    }
    else if (isSet(val)) {
        return {
            [`Set(${val.size})`]: [...val.values()]
        };
    }
    else if (isObject$3(val) && !isArray$1(val) && !isPlainObject(val)) {
        return String(val);
    }
    return val;
};
const EMPTY_OBJ = Object.freeze({})
    ;
const EMPTY_ARR = Object.freeze([]) ;
const NOOP = () => { };
/**
 * Always return false.
 */
const NO = () => false;
const onRE = /^on[^a-z]/;
const isOn = (key) => onRE.test(key);
const isModelListener = (key) => key.startsWith('onUpdate:');
const extend = Object.assign;
const remove = (arr, el) => {
    const i = arr.indexOf(el);
    if (i > -1) {
        arr.splice(i, 1);
    }
};
const hasOwnProperty$d = Object.prototype.hasOwnProperty;
const hasOwn$1 = (val, key) => hasOwnProperty$d.call(val, key);
const isArray$1 = Array.isArray;
const isMap = (val) => toTypeString(val) === '[object Map]';
const isSet = (val) => toTypeString(val) === '[object Set]';
const isDate = (val) => val instanceof Date;
const isFunction$1 = (val) => typeof val === 'function';
const isString = (val) => typeof val === 'string';
const isSymbol$1 = (val) => typeof val === 'symbol';
const isObject$3 = (val) => val !== null && typeof val === 'object';
const isPromise = (val) => {
    return isObject$3(val) && isFunction$1(val.then) && isFunction$1(val.catch);
};
const objectToString$1 = Object.prototype.toString;
const toTypeString = (value) => objectToString$1.call(value);
const toRawType = (value) => {
    // extract "RawType" from strings like "[object RawType]"
    return toTypeString(value).slice(8, -1);
};
const isPlainObject = (val) => toTypeString(val) === '[object Object]';
const isIntegerKey = (key) => isString(key) &&
    key !== 'NaN' &&
    key[0] !== '-' &&
    '' + parseInt(key, 10) === key;
const isReservedProp = /*#__PURE__*/ makeMap(
// the leading comma is intentional so empty string "" is also included
',key,ref,' +
    'onVnodeBeforeMount,onVnodeMounted,' +
    'onVnodeBeforeUpdate,onVnodeUpdated,' +
    'onVnodeBeforeUnmount,onVnodeUnmounted');
const cacheStringFunction = (fn) => {
    const cache = Object.create(null);
    return ((str) => {
        const hit = cache[str];
        return hit || (cache[str] = fn(str));
    });
};
const camelizeRE = /-(\w)/g;
/**
 * @private
 */
const camelize = cacheStringFunction((str) => {
    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));
});
const hyphenateRE = /\B([A-Z])/g;
/**
 * @private
 */
const hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());
/**
 * @private
 */
const capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));
/**
 * @private
 */
const toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));
// compare whether a value has changed, accounting for NaN.
const hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);
const invokeArrayFns = (fns, arg) => {
    for (let i = 0; i < fns.length; i++) {
        fns[i](arg);
    }
};
const def = (obj, key, value) => {
    Object.defineProperty(obj, key, {
        configurable: true,
        enumerable: false,
        value
    });
};
const toNumber$1 = (val) => {
    const n = parseFloat(val);
    return isNaN(n) ? val : n;
};
let _globalThis;
const getGlobalThis = () => {
    return (_globalThis ||
        (_globalThis =
            typeof globalThis !== 'undefined'
                ? globalThis
                : typeof self !== 'undefined'
                    ? self
                    : typeof window !== 'undefined'
                        ? window
                        : typeof global !== 'undefined'
                            ? global
                            : {}));
};

const targetMap = new WeakMap();
const effectStack = [];
let activeEffect;
const ITERATE_KEY = Symbol('iterate' );
const MAP_KEY_ITERATE_KEY = Symbol('Map key iterate' );
function isEffect(fn) {
    return fn && fn._isEffect === true;
}
function effect$3(fn, options = EMPTY_OBJ) {
    if (isEffect(fn)) {
        fn = fn.raw;
    }
    const effect = createReactiveEffect(fn, options);
    if (!options.lazy) {
        effect();
    }
    return effect;
}
function stop(effect) {
    if (effect.active) {
        cleanup(effect);
        if (effect.options.onStop) {
            effect.options.onStop();
        }
        effect.active = false;
    }
}
let uid$2 = 0;
function createReactiveEffect(fn, options) {
    const effect = function reactiveEffect() {
        if (!effect.active) {
            return options.scheduler ? undefined : fn();
        }
        if (!effectStack.includes(effect)) {
            cleanup(effect);
            try {
                enableTracking();
                effectStack.push(effect);
                activeEffect = effect;
                return fn();
            }
            finally {
                effectStack.pop();
                resetTracking();
                activeEffect = effectStack[effectStack.length - 1];
            }
        }
    };
    effect.id = uid$2++;
    effect.allowRecurse = !!options.allowRecurse;
    effect._isEffect = true;
    effect.active = true;
    effect.raw = fn;
    effect.deps = [];
    effect.options = options;
    return effect;
}
function cleanup(effect) {
    const { deps } = effect;
    if (deps.length) {
        for (let i = 0; i < deps.length; i++) {
            deps[i].delete(effect);
        }
        deps.length = 0;
    }
}
let shouldTrack = true;
const trackStack = [];
function pauseTracking() {
    trackStack.push(shouldTrack);
    shouldTrack = false;
}
function enableTracking() {
    trackStack.push(shouldTrack);
    shouldTrack = true;
}
function resetTracking() {
    const last = trackStack.pop();
    shouldTrack = last === undefined ? true : last;
}
function track(target, type, key) {
    if (!shouldTrack || activeEffect === undefined) {
        return;
    }
    let depsMap = targetMap.get(target);
    if (!depsMap) {
        targetMap.set(target, (depsMap = new Map()));
    }
    let dep = depsMap.get(key);
    if (!dep) {
        depsMap.set(key, (dep = new Set()));
    }
    if (!dep.has(activeEffect)) {
        dep.add(activeEffect);
        activeEffect.deps.push(dep);
        if (activeEffect.options.onTrack) {
            activeEffect.options.onTrack({
                effect: activeEffect,
                target,
                type,
                key
            });
        }
    }
}
function trigger$1(target, type, key, newValue, oldValue, oldTarget) {
    const depsMap = targetMap.get(target);
    if (!depsMap) {
        // never been tracked
        return;
    }
    const effects = new Set();
    const add = (effectsToAdd) => {
        if (effectsToAdd) {
            effectsToAdd.forEach(effect => {
                if (effect !== activeEffect || effect.allowRecurse) {
                    effects.add(effect);
                }
            });
        }
    };
    if (type === "clear" /* CLEAR */) {
        // collection being cleared
        // trigger all effects for target
        depsMap.forEach(add);
    }
    else if (key === 'length' && isArray$1(target)) {
        depsMap.forEach((dep, key) => {
            if (key === 'length' || key >= newValue) {
                add(dep);
            }
        });
    }
    else {
        // schedule runs for SET | ADD | DELETE
        if (key !== void 0) {
            add(depsMap.get(key));
        }
        // also run for iteration key on ADD | DELETE | Map.SET
        switch (type) {
            case "add" /* ADD */:
                if (!isArray$1(target)) {
                    add(depsMap.get(ITERATE_KEY));
                    if (isMap(target)) {
                        add(depsMap.get(MAP_KEY_ITERATE_KEY));
                    }
                }
                else if (isIntegerKey(key)) {
                    // new index added to array -> length changes
                    add(depsMap.get('length'));
                }
                break;
            case "delete" /* DELETE */:
                if (!isArray$1(target)) {
                    add(depsMap.get(ITERATE_KEY));
                    if (isMap(target)) {
                        add(depsMap.get(MAP_KEY_ITERATE_KEY));
                    }
                }
                break;
            case "set" /* SET */:
                if (isMap(target)) {
                    add(depsMap.get(ITERATE_KEY));
                }
                break;
        }
    }
    const run = (effect) => {
        if (effect.options.onTrigger) {
            effect.options.onTrigger({
                effect,
                target,
                key,
                type,
                newValue,
                oldValue,
                oldTarget
            });
        }
        if (effect.options.scheduler) {
            effect.options.scheduler(effect);
        }
        else {
            effect();
        }
    };
    effects.forEach(run);
}

const isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);
const builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)
    .map(key => Symbol[key])
    .filter(isSymbol$1));
const get = /*#__PURE__*/ createGetter();
const shallowGet = /*#__PURE__*/ createGetter(false, true);
const readonlyGet = /*#__PURE__*/ createGetter(true);
const shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);
const arrayInstrumentations = {};
['includes', 'indexOf', 'lastIndexOf'].forEach(key => {
    const method = Array.prototype[key];
    arrayInstrumentations[key] = function (...args) {
        const arr = toRaw(this);
        for (let i = 0, l = this.length; i < l; i++) {
            track(arr, "get" /* GET */, i + '');
        }
        // we run the method using the original args first (which may be reactive)
        const res = method.apply(arr, args);
        if (res === -1 || res === false) {
            // if that didn't work, run it again using raw values.
            return method.apply(arr, args.map(toRaw));
        }
        else {
            return res;
        }
    };
});
['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {
    const method = Array.prototype[key];
    arrayInstrumentations[key] = function (...args) {
        pauseTracking();
        const res = method.apply(this, args);
        resetTracking();
        return res;
    };
});
function createGetter(isReadonly = false, shallow = false) {
    return function get(target, key, receiver) {
        if (key === "__v_isReactive" /* IS_REACTIVE */) {
            return !isReadonly;
        }
        else if (key === "__v_isReadonly" /* IS_READONLY */) {
            return isReadonly;
        }
        else if (key === "__v_raw" /* RAW */ &&
            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {
            return target;
        }
        const targetIsArray = isArray$1(target);
        if (!isReadonly && targetIsArray && hasOwn$1(arrayInstrumentations, key)) {
            return Reflect.get(arrayInstrumentations, key, receiver);
        }
        const res = Reflect.get(target, key, receiver);
        if (isSymbol$1(key)
            ? builtInSymbols.has(key)
            : isNonTrackableKeys(key)) {
            return res;
        }
        if (!isReadonly) {
            track(target, "get" /* GET */, key);
        }
        if (shallow) {
            return res;
        }
        if (isRef(res)) {
            // ref unwrapping - does not apply for Array + integer key.
            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);
            return shouldUnwrap ? res.value : res;
        }
        if (isObject$3(res)) {
            // Convert returned value into a proxy as well. we do the isObject check
            // here to avoid invalid value warning. Also need to lazy access readonly
            // and reactive here to avoid circular dependency.
            return isReadonly ? readonly(res) : reactive(res);
        }
        return res;
    };
}
const set = /*#__PURE__*/ createSetter();
const shallowSet = /*#__PURE__*/ createSetter(true);
function createSetter(shallow = false) {
    return function set(target, key, value, receiver) {
        const oldValue = target[key];
        if (!shallow) {
            value = toRaw(value);
            if (!isArray$1(target) && isRef(oldValue) && !isRef(value)) {
                oldValue.value = value;
                return true;
            }
        }
        const hadKey = isArray$1(target) && isIntegerKey(key)
            ? Number(key) < target.length
            : hasOwn$1(target, key);
        const result = Reflect.set(target, key, value, receiver);
        // don't trigger if target is something up in the prototype chain of original
        if (target === toRaw(receiver)) {
            if (!hadKey) {
                trigger$1(target, "add" /* ADD */, key, value);
            }
            else if (hasChanged(value, oldValue)) {
                trigger$1(target, "set" /* SET */, key, value, oldValue);
            }
        }
        return result;
    };
}
function deleteProperty(target, key) {
    const hadKey = hasOwn$1(target, key);
    const oldValue = target[key];
    const result = Reflect.deleteProperty(target, key);
    if (result && hadKey) {
        trigger$1(target, "delete" /* DELETE */, key, undefined, oldValue);
    }
    return result;
}
function has(target, key) {
    const result = Reflect.has(target, key);
    if (!isSymbol$1(key) || !builtInSymbols.has(key)) {
        track(target, "has" /* HAS */, key);
    }
    return result;
}
function ownKeys(target) {
    track(target, "iterate" /* ITERATE */, isArray$1(target) ? 'length' : ITERATE_KEY);
    return Reflect.ownKeys(target);
}
const mutableHandlers = {
    get,
    set,
    deleteProperty,
    has,
    ownKeys
};
const readonlyHandlers = {
    get: readonlyGet,
    set(target, key) {
        {
            console.warn(`Set operation on key "${String(key)}" failed: target is readonly.`, target);
        }
        return true;
    },
    deleteProperty(target, key) {
        {
            console.warn(`Delete operation on key "${String(key)}" failed: target is readonly.`, target);
        }
        return true;
    }
};
const shallowReactiveHandlers = extend({}, mutableHandlers, {
    get: shallowGet,
    set: shallowSet
});
// Props handlers are special in the sense that it should not unwrap top-level
// refs (in order to allow refs to be explicitly passed down), but should
// retain the reactivity of the normal readonly object.
const shallowReadonlyHandlers = extend({}, readonlyHandlers, {
    get: shallowReadonlyGet
});

const toReactive = (value) => isObject$3(value) ? reactive(value) : value;
const toReadonly = (value) => isObject$3(value) ? readonly(value) : value;
const toShallow = (value) => value;
const getProto = (v) => Reflect.getPrototypeOf(v);
function get$1(target, key, isReadonly = false, isShallow = false) {
    // #1772: readonly(reactive(Map)) should return readonly + reactive version
    // of the value
    target = target["__v_raw" /* RAW */];
    const rawTarget = toRaw(target);
    const rawKey = toRaw(key);
    if (key !== rawKey) {
        !isReadonly && track(rawTarget, "get" /* GET */, key);
    }
    !isReadonly && track(rawTarget, "get" /* GET */, rawKey);
    const { has } = getProto(rawTarget);
    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;
    if (has.call(rawTarget, key)) {
        return wrap(target.get(key));
    }
    else if (has.call(rawTarget, rawKey)) {
        return wrap(target.get(rawKey));
    }
}
function has$1(key, isReadonly = false) {
    const target = this["__v_raw" /* RAW */];
    const rawTarget = toRaw(target);
    const rawKey = toRaw(key);
    if (key !== rawKey) {
        !isReadonly && track(rawTarget, "has" /* HAS */, key);
    }
    !isReadonly && track(rawTarget, "has" /* HAS */, rawKey);
    return key === rawKey
        ? target.has(key)
        : target.has(key) || target.has(rawKey);
}
function size(target, isReadonly = false) {
    target = target["__v_raw" /* RAW */];
    !isReadonly && track(toRaw(target), "iterate" /* ITERATE */, ITERATE_KEY);
    return Reflect.get(target, 'size', target);
}
function add(value) {
    value = toRaw(value);
    const target = toRaw(this);
    const proto = getProto(target);
    const hadKey = proto.has.call(target, value);
    if (!hadKey) {
        target.add(value);
        trigger$1(target, "add" /* ADD */, value, value);
    }
    return this;
}
function set$1(key, value) {
    value = toRaw(value);
    const target = toRaw(this);
    const { has, get } = getProto(target);
    let hadKey = has.call(target, key);
    if (!hadKey) {
        key = toRaw(key);
        hadKey = has.call(target, key);
    }
    else {
        checkIdentityKeys(target, has, key);
    }
    const oldValue = get.call(target, key);
    target.set(key, value);
    if (!hadKey) {
        trigger$1(target, "add" /* ADD */, key, value);
    }
    else if (hasChanged(value, oldValue)) {
        trigger$1(target, "set" /* SET */, key, value, oldValue);
    }
    return this;
}
function deleteEntry(key) {
    const target = toRaw(this);
    const { has, get } = getProto(target);
    let hadKey = has.call(target, key);
    if (!hadKey) {
        key = toRaw(key);
        hadKey = has.call(target, key);
    }
    else {
        checkIdentityKeys(target, has, key);
    }
    const oldValue = get ? get.call(target, key) : undefined;
    // forward the operation before queueing reactions
    const result = target.delete(key);
    if (hadKey) {
        trigger$1(target, "delete" /* DELETE */, key, undefined, oldValue);
    }
    return result;
}
function clear() {
    const target = toRaw(this);
    const hadItems = target.size !== 0;
    const oldTarget = isMap(target)
            ? new Map(target)
            : new Set(target)
        ;
    // forward the operation before queueing reactions
    const result = target.clear();
    if (hadItems) {
        trigger$1(target, "clear" /* CLEAR */, undefined, undefined, oldTarget);
    }
    return result;
}
function createForEach(isReadonly, isShallow) {
    return function forEach(callback, thisArg) {
        const observed = this;
        const target = observed["__v_raw" /* RAW */];
        const rawTarget = toRaw(target);
        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;
        !isReadonly && track(rawTarget, "iterate" /* ITERATE */, ITERATE_KEY);
        return target.forEach((value, key) => {
            // important: make sure the callback is
            // 1. invoked with the reactive map as `this` and 3rd arg
            // 2. the value received should be a corresponding reactive/readonly.
            return callback.call(thisArg, wrap(value), wrap(key), observed);
        });
    };
}
function createIterableMethod(method, isReadonly, isShallow) {
    return function (...args) {
        const target = this["__v_raw" /* RAW */];
        const rawTarget = toRaw(target);
        const targetIsMap = isMap(rawTarget);
        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);
        const isKeyOnly = method === 'keys' && targetIsMap;
        const innerIterator = target[method](...args);
        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;
        !isReadonly &&
            track(rawTarget, "iterate" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);
        // return a wrapped iterator which returns observed versions of the
        // values emitted from the real iterator
        return {
            // iterator protocol
            next() {
                const { value, done } = innerIterator.next();
                return done
                    ? { value, done }
                    : {
                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),
                        done
                    };
            },
            // iterable protocol
            [Symbol.iterator]() {
                return this;
            }
        };
    };
}
function createReadonlyMethod(type) {
    return function (...args) {
        {
            const key = args[0] ? `on key "${args[0]}" ` : ``;
            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));
        }
        return type === "delete" /* DELETE */ ? false : this;
    };
}
const mutableInstrumentations = {
    get(key) {
        return get$1(this, key);
    },
    get size() {
        return size(this);
    },
    has: has$1,
    add,
    set: set$1,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, false)
};
const shallowInstrumentations = {
    get(key) {
        return get$1(this, key, false, true);
    },
    get size() {
        return size(this);
    },
    has: has$1,
    add,
    set: set$1,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, true)
};
const readonlyInstrumentations = {
    get(key) {
        return get$1(this, key, true);
    },
    get size() {
        return size(this, true);
    },
    has(key) {
        return has$1.call(this, key, true);
    },
    add: createReadonlyMethod("add" /* ADD */),
    set: createReadonlyMethod("set" /* SET */),
    delete: createReadonlyMethod("delete" /* DELETE */),
    clear: createReadonlyMethod("clear" /* CLEAR */),
    forEach: createForEach(true, false)
};
const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];
iteratorMethods.forEach(method => {
    mutableInstrumentations[method] = createIterableMethod(method, false, false);
    readonlyInstrumentations[method] = createIterableMethod(method, true, false);
    shallowInstrumentations[method] = createIterableMethod(method, false, true);
});
function createInstrumentationGetter(isReadonly, shallow) {
    const instrumentations = shallow
        ? shallowInstrumentations
        : isReadonly
            ? readonlyInstrumentations
            : mutableInstrumentations;
    return (target, key, receiver) => {
        if (key === "__v_isReactive" /* IS_REACTIVE */) {
            return !isReadonly;
        }
        else if (key === "__v_isReadonly" /* IS_READONLY */) {
            return isReadonly;
        }
        else if (key === "__v_raw" /* RAW */) {
            return target;
        }
        return Reflect.get(hasOwn$1(instrumentations, key) && key in target
            ? instrumentations
            : target, key, receiver);
    };
}
const mutableCollectionHandlers = {
    get: createInstrumentationGetter(false, false)
};
const shallowCollectionHandlers = {
    get: createInstrumentationGetter(false, true)
};
const readonlyCollectionHandlers = {
    get: createInstrumentationGetter(true, false)
};
function checkIdentityKeys(target, has, key) {
    const rawKey = toRaw(key);
    if (rawKey !== key && has.call(target, rawKey)) {
        const type = toRawType(target);
        console.warn(`Reactive ${type} contains both the raw and reactive ` +
            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +
            `which can lead to inconsistencies. ` +
            `Avoid differentiating between the raw and reactive versions ` +
            `of an object and only use the reactive version if possible.`);
    }
}

const reactiveMap = new WeakMap();
const readonlyMap = new WeakMap();
function targetTypeMap(rawType) {
    switch (rawType) {
        case 'Object':
        case 'Array':
            return 1 /* COMMON */;
        case 'Map':
        case 'Set':
        case 'WeakMap':
        case 'WeakSet':
            return 2 /* COLLECTION */;
        default:
            return 0 /* INVALID */;
    }
}
function getTargetType(value) {
    return value["__v_skip" /* SKIP */] || !Object.isExtensible(value)
        ? 0 /* INVALID */
        : targetTypeMap(toRawType(value));
}
function reactive(target) {
    // if trying to observe a readonly proxy, return the readonly version.
    if (target && target["__v_isReadonly" /* IS_READONLY */]) {
        return target;
    }
    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);
}
/**
 * Return a shallowly-reactive copy of the original object, where only the root
 * level properties are reactive. It also does not auto-unwrap refs (even at the
 * root level).
 */
function shallowReactive(target) {
    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);
}
/**
 * Creates a readonly copy of the original object. Note the returned copy is not
 * made reactive, but `readonly` can be called on an already reactive object.
 */
function readonly(target) {
    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);
}
/**
 * Returns a reactive-copy of the original object, where only the root level
 * properties are readonly, and does NOT unwrap refs nor recursively convert
 * returned properties.
 * This is used for creating the props proxy object for stateful components.
 */
function shallowReadonly(target) {
    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);
}
function createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {
    if (!isObject$3(target)) {
        {
            console.warn(`value cannot be made reactive: ${String(target)}`);
        }
        return target;
    }
    // target is already a Proxy, return it.
    // exception: calling readonly() on a reactive object
    if (target["__v_raw" /* RAW */] &&
        !(isReadonly && target["__v_isReactive" /* IS_REACTIVE */])) {
        return target;
    }
    // target already has corresponding Proxy
    const proxyMap = isReadonly ? readonlyMap : reactiveMap;
    const existingProxy = proxyMap.get(target);
    if (existingProxy) {
        return existingProxy;
    }
    // only a whitelist of value types can be observed.
    const targetType = getTargetType(target);
    if (targetType === 0 /* INVALID */) {
        return target;
    }
    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);
    proxyMap.set(target, proxy);
    return proxy;
}
function isReactive(value) {
    if (isReadonly(value)) {
        return isReactive(value["__v_raw" /* RAW */]);
    }
    return !!(value && value["__v_isReactive" /* IS_REACTIVE */]);
}
function isReadonly(value) {
    return !!(value && value["__v_isReadonly" /* IS_READONLY */]);
}
function isProxy(value) {
    return isReactive(value) || isReadonly(value);
}
function toRaw(observed) {
    return ((observed && toRaw(observed["__v_raw" /* RAW */])) || observed);
}

const convert = (val) => isObject$3(val) ? reactive(val) : val;
function isRef(r) {
    return Boolean(r && r.__v_isRef === true);
}
function ref(value) {
    return createRef(value);
}
function shallowRef(value) {
    return createRef(value, true);
}
class RefImpl {
    constructor(_rawValue, _shallow = false) {
        this._rawValue = _rawValue;
        this._shallow = _shallow;
        this.__v_isRef = true;
        this._value = _shallow ? _rawValue : convert(_rawValue);
    }
    get value() {
        track(toRaw(this), "get" /* GET */, 'value');
        return this._value;
    }
    set value(newVal) {
        if (hasChanged(toRaw(newVal), this._rawValue)) {
            this._rawValue = newVal;
            this._value = this._shallow ? newVal : convert(newVal);
            trigger$1(toRaw(this), "set" /* SET */, 'value', newVal);
        }
    }
}
function createRef(rawValue, shallow = false) {
    if (isRef(rawValue)) {
        return rawValue;
    }
    return new RefImpl(rawValue, shallow);
}
function unref(ref) {
    return isRef(ref) ? ref.value : ref;
}
const shallowUnwrapHandlers = {
    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),
    set: (target, key, value, receiver) => {
        const oldValue = target[key];
        if (isRef(oldValue) && !isRef(value)) {
            oldValue.value = value;
            return true;
        }
        else {
            return Reflect.set(target, key, value, receiver);
        }
    }
};
function proxyRefs(objectWithRefs) {
    return isReactive(objectWithRefs)
        ? objectWithRefs
        : new Proxy(objectWithRefs, shallowUnwrapHandlers);
}
function toRefs(object) {
    if (!isProxy(object)) {
        console.warn(`toRefs() expects a reactive object but received a plain one.`);
    }
    const ret = isArray$1(object) ? new Array(object.length) : {};
    for (const key in object) {
        ret[key] = toRef(object, key);
    }
    return ret;
}
class ObjectRefImpl {
    constructor(_object, _key) {
        this._object = _object;
        this._key = _key;
        this.__v_isRef = true;
    }
    get value() {
        return this._object[this._key];
    }
    set value(newVal) {
        this._object[this._key] = newVal;
    }
}
function toRef(object, key) {
    return isRef(object[key])
        ? object[key]
        : new ObjectRefImpl(object, key);
}

class ComputedRefImpl {
    constructor(getter, _setter, isReadonly) {
        this._setter = _setter;
        this._dirty = true;
        this.__v_isRef = true;
        this.effect = effect$3(getter, {
            lazy: true,
            scheduler: () => {
                if (!this._dirty) {
                    this._dirty = true;
                    trigger$1(toRaw(this), "set" /* SET */, 'value');
                }
            }
        });
        this["__v_isReadonly" /* IS_READONLY */] = isReadonly;
    }
    get value() {
        if (this._dirty) {
            this._value = this.effect();
            this._dirty = false;
        }
        track(toRaw(this), "get" /* GET */, 'value');
        return this._value;
    }
    set value(newValue) {
        this._setter(newValue);
    }
}
function computed$1(getterOrOptions) {
    let getter;
    let setter;
    if (isFunction$1(getterOrOptions)) {
        getter = getterOrOptions;
        setter = () => {
                console.warn('Write operation failed: computed value is readonly');
            }
            ;
    }
    else {
        getter = getterOrOptions.get;
        setter = getterOrOptions.set;
    }
    return new ComputedRefImpl(getter, setter, isFunction$1(getterOrOptions) || !getterOrOptions.set);
}

const stack = [];
function pushWarningContext(vnode) {
    stack.push(vnode);
}
function popWarningContext() {
    stack.pop();
}
function warn$1(msg, ...args) {
    // avoid props formatting or warn handler tracking deps that might be mutated
    // during patch, leading to infinite recursion.
    pauseTracking();
    const instance = stack.length ? stack[stack.length - 1].component : null;
    const appWarnHandler = instance && instance.appContext.config.warnHandler;
    const trace = getComponentTrace();
    if (appWarnHandler) {
        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [
            msg + args.join(''),
            instance && instance.proxy,
            trace
                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)
                .join('\n'),
            trace
        ]);
    }
    else {
        const warnArgs = [`[Vue warn]: ${msg}`, ...args];
        /* istanbul ignore if */
        if (trace.length &&
            // avoid spamming console during tests
            !false) {
            warnArgs.push(`\n`, ...formatTrace(trace));
        }
        console.warn(...warnArgs);
    }
    resetTracking();
}
function getComponentTrace() {
    let currentVNode = stack[stack.length - 1];
    if (!currentVNode) {
        return [];
    }
    // we can't just use the stack because it will be incomplete during updates
    // that did not start from the root. Re-construct the parent chain using
    // instance parent pointers.
    const normalizedStack = [];
    while (currentVNode) {
        const last = normalizedStack[0];
        if (last && last.vnode === currentVNode) {
            last.recurseCount++;
        }
        else {
            normalizedStack.push({
                vnode: currentVNode,
                recurseCount: 0
            });
        }
        const parentInstance = currentVNode.component && currentVNode.component.parent;
        currentVNode = parentInstance && parentInstance.vnode;
    }
    return normalizedStack;
}
/* istanbul ignore next */
function formatTrace(trace) {
    const logs = [];
    trace.forEach((entry, i) => {
        logs.push(...(i === 0 ? [] : [`\n`]), ...formatTraceEntry(entry));
    });
    return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;
    const isRoot = vnode.component ? vnode.component.parent == null : false;
    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;
    const close = `>` + postfix;
    return vnode.props
        ? [open, ...formatProps(vnode.props), close]
        : [open + close];
}
/* istanbul ignore next */
function formatProps(props) {
    const res = [];
    const keys = Object.keys(props);
    keys.slice(0, 3).forEach(key => {
        res.push(...formatProp(key, props[key]));
    });
    if (keys.length > 3) {
        res.push(` ...`);
    }
    return res;
}
/* istanbul ignore next */
function formatProp(key, value, raw) {
    if (isString(value)) {
        value = JSON.stringify(value);
        return raw ? value : [`${key}=${value}`];
    }
    else if (typeof value === 'number' ||
        typeof value === 'boolean' ||
        value == null) {
        return raw ? value : [`${key}=${value}`];
    }
    else if (isRef(value)) {
        value = formatProp(key, toRaw(value.value), true);
        return raw ? value : [`${key}=Ref<`, value, `>`];
    }
    else if (isFunction$1(value)) {
        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];
    }
    else {
        value = toRaw(value);
        return raw ? value : [`${key}=`, value];
    }
}

const ErrorTypeStrings = {
    ["bc" /* BEFORE_CREATE */]: 'beforeCreate hook',
    ["c" /* CREATED */]: 'created hook',
    ["bm" /* BEFORE_MOUNT */]: 'beforeMount hook',
    ["m" /* MOUNTED */]: 'mounted hook',
    ["bu" /* BEFORE_UPDATE */]: 'beforeUpdate hook',
    ["u" /* UPDATED */]: 'updated',
    ["bum" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',
    ["um" /* UNMOUNTED */]: 'unmounted hook',
    ["a" /* ACTIVATED */]: 'activated hook',
    ["da" /* DEACTIVATED */]: 'deactivated hook',
    ["ec" /* ERROR_CAPTURED */]: 'errorCaptured hook',
    ["rtc" /* RENDER_TRACKED */]: 'renderTracked hook',
    ["rtg" /* RENDER_TRIGGERED */]: 'renderTriggered hook',
    [0 /* SETUP_FUNCTION */]: 'setup function',
    [1 /* RENDER_FUNCTION */]: 'render function',
    [2 /* WATCH_GETTER */]: 'watcher getter',
    [3 /* WATCH_CALLBACK */]: 'watcher callback',
    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',
    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',
    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',
    [7 /* VNODE_HOOK */]: 'vnode hook',
    [8 /* DIRECTIVE_HOOK */]: 'directive hook',
    [9 /* TRANSITION_HOOK */]: 'transition hook',
    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',
    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',
    [12 /* FUNCTION_REF */]: 'ref function',
    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',
    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +
        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'
};
function callWithErrorHandling(fn, instance, type, args) {
    let res;
    try {
        res = args ? fn(...args) : fn();
    }
    catch (err) {
        handleError(err, instance, type);
    }
    return res;
}
function callWithAsyncErrorHandling(fn, instance, type, args) {
    if (isFunction$1(fn)) {
        const res = callWithErrorHandling(fn, instance, type, args);
        if (res && isPromise(res)) {
            res.catch(err => {
                handleError(err, instance, type);
            });
        }
        return res;
    }
    const values = [];
    for (let i = 0; i < fn.length; i++) {
        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));
    }
    return values;
}
function handleError(err, instance, type, throwInDev = true) {
    const contextVNode = instance ? instance.vnode : null;
    if (instance) {
        let cur = instance.parent;
        // the exposed instance is the render proxy to keep it consistent with 2.x
        const exposedInstance = instance.proxy;
        // in production the hook receives only the error code
        const errorInfo = ErrorTypeStrings[type] ;
        while (cur) {
            const errorCapturedHooks = cur.ec;
            if (errorCapturedHooks) {
                for (let i = 0; i < errorCapturedHooks.length; i++) {
                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {
                        return;
                    }
                }
            }
            cur = cur.parent;
        }
        // app-level handling
        const appErrorHandler = instance.appContext.config.errorHandler;
        if (appErrorHandler) {
            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);
            return;
        }
    }
    logError(err, type, contextVNode, throwInDev);
}
function logError(err, type, contextVNode, throwInDev = true) {
    {
        const info = ErrorTypeStrings[type];
        if (contextVNode) {
            pushWarningContext(contextVNode);
        }
        warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);
        if (contextVNode) {
            popWarningContext();
        }
        // crash in dev by default so it's more noticeable
        if (throwInDev) {
            throw err;
        }
        else {
            console.error(err);
        }
    }
}

let isFlushing = false;
let isFlushPending = false;
const queue = [];
let flushIndex = 0;
const pendingPreFlushCbs = [];
let activePreFlushCbs = null;
let preFlushIndex = 0;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null;
let postFlushIndex = 0;
const resolvedPromise = Promise.resolve();
let currentFlushPromise = null;
let currentPreFlushParentJob = null;
const RECURSION_LIMIT = 100;
function nextTick(fn) {
    const p = currentFlushPromise || resolvedPromise;
    return fn ? p.then(this ? fn.bind(this) : fn) : p;
}
// #2768
// Use binary-search to find a suitable position in the queue,
// so that the queue maintains the increasing order of job's id,
// which can prevent the job from being skipped and also can avoid repeated patching.
function findInsertionIndex(job) {
    // the start index should be `flushIndex + 1`
    let start = flushIndex + 1;
    let end = queue.length;
    const jobId = getId(job);
    while (start < end) {
        const middle = (start + end) >>> 1;
        const middleJobId = getId(queue[middle]);
        middleJobId < jobId ? (start = middle + 1) : (end = middle);
    }
    return start;
}
function queueJob(job) {
    // the dedupe search uses the startIndex argument of Array.includes()
    // by default the search index includes the current job that is being run
    // so it cannot recursively trigger itself again.
    // if the job is a watch() callback, the search will start with a +1 index to
    // allow it recursively trigger itself - it is the user's responsibility to
    // ensure it doesn't end up in an infinite loop.
    if ((!queue.length ||
        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&
        job !== currentPreFlushParentJob) {
        const pos = findInsertionIndex(job);
        if (pos > -1) {
            queue.splice(pos, 0, job);
        }
        else {
            queue.push(job);
        }
        queueFlush();
    }
}
function queueFlush() {
    if (!isFlushing && !isFlushPending) {
        isFlushPending = true;
        currentFlushPromise = resolvedPromise.then(flushJobs);
    }
}
function invalidateJob(job) {
    const i = queue.indexOf(job);
    if (i > -1) {
        queue.splice(i, 1);
    }
}
function queueCb(cb, activeQueue, pendingQueue, index) {
    if (!isArray$1(cb)) {
        if (!activeQueue ||
            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {
            pendingQueue.push(cb);
        }
    }
    else {
        // if cb is an array, it is a component lifecycle hook which can only be
        // triggered by a job, which is already deduped in the main queue, so
        // we can skip duplicate check here to improve perf
        pendingQueue.push(...cb);
    }
    queueFlush();
}
function queuePreFlushCb(cb) {
    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);
}
function queuePostFlushCb(cb) {
    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);
}
function flushPreFlushCbs(seen, parentJob = null) {
    if (pendingPreFlushCbs.length) {
        currentPreFlushParentJob = parentJob;
        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];
        pendingPreFlushCbs.length = 0;
        {
            seen = seen || new Map();
        }
        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {
            {
                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);
            }
            activePreFlushCbs[preFlushIndex]();
        }
        activePreFlushCbs = null;
        preFlushIndex = 0;
        currentPreFlushParentJob = null;
        // recursively flush until it drains
        flushPreFlushCbs(seen, parentJob);
    }
}
function flushPostFlushCbs(seen) {
    if (pendingPostFlushCbs.length) {
        const deduped = [...new Set(pendingPostFlushCbs)];
        pendingPostFlushCbs.length = 0;
        // #1947 already has active queue, nested flushPostFlushCbs call
        if (activePostFlushCbs) {
            activePostFlushCbs.push(...deduped);
            return;
        }
        activePostFlushCbs = deduped;
        {
            seen = seen || new Map();
        }
        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));
        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {
            {
                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);
            }
            activePostFlushCbs[postFlushIndex]();
        }
        activePostFlushCbs = null;
        postFlushIndex = 0;
    }
}
const getId = (job) => job.id == null ? Infinity : job.id;
function flushJobs(seen) {
    isFlushPending = false;
    isFlushing = true;
    {
        seen = seen || new Map();
    }
    flushPreFlushCbs(seen);
    // Sort queue before flush.
    // This ensures that:
    // 1. Components are updated from parent to child. (because parent is always
    //    created before the child so its render effect will have smaller
    //    priority number)
    // 2. If a component is unmounted during a parent component's update,
    //    its update can be skipped.
    queue.sort((a, b) => getId(a) - getId(b));
    try {
        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
            const job = queue[flushIndex];
            if (job) {
                if (("development" !== 'production')) {
                    checkRecursiveUpdates(seen, job);
                }
                callWithErrorHandling(job, null, 14 /* SCHEDULER */);
            }
        }
    }
    finally {
        flushIndex = 0;
        queue.length = 0;
        flushPostFlushCbs(seen);
        isFlushing = false;
        currentFlushPromise = null;
        // some postFlushCb queued jobs!
        // keep flushing until it drains.
        if (queue.length || pendingPostFlushCbs.length) {
            flushJobs(seen);
        }
    }
}
function checkRecursiveUpdates(seen, fn) {
    if (!seen.has(fn)) {
        seen.set(fn, 1);
    }
    else {
        const count = seen.get(fn);
        if (count > RECURSION_LIMIT) {
            throw new Error(`Maximum recursive updates exceeded. ` +
                `This means you have a reactive effect that is mutating its own ` +
                `dependencies and thus recursively triggering itself. Possible sources ` +
                `include component template, render function, updated hook or ` +
                `watcher source function.`);
        }
        else {
            seen.set(fn, count + 1);
        }
    }
}

/* eslint-disable no-restricted-globals */
let isHmrUpdating = false;
const hmrDirtyComponents = new Set();
// Expose the HMR runtime on the global object
// This makes it entirely tree-shakable without polluting the exports and makes
// it easier to be used in toolings like vue-loader
// Note: for a component to be eligible for HMR it also needs the __hmrId option
// to be set so that its instances can be registered / removed.
{
    const globalObject = typeof global !== 'undefined'
        ? global
        : typeof self !== 'undefined'
            ? self
            : typeof window !== 'undefined'
                ? window
                : {};
    globalObject.__VUE_HMR_RUNTIME__ = {
        createRecord: tryWrap(createRecord),
        rerender: tryWrap(rerender),
        reload: tryWrap(reload)
    };
}
const map = new Map();
function registerHMR(instance) {
    const id = instance.type.__hmrId;
    let record = map.get(id);
    if (!record) {
        createRecord(id, instance.type);
        record = map.get(id);
    }
    record.instances.add(instance);
}
function unregisterHMR(instance) {
    map.get(instance.type.__hmrId).instances.delete(instance);
}
function createRecord(id, component) {
    if (!component) {
        warn$1(`HMR API usage is out of date.\n` +
            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +
            `dependency that handles Vue SFC compilation.`);
        component = {};
    }
    if (map.has(id)) {
        return false;
    }
    map.set(id, {
        component: isClassComponent(component) ? component.__vccOpts : component,
        instances: new Set()
    });
    return true;
}
function rerender(id, newRender) {
    const record = map.get(id);
    if (!record)
        return;
    if (newRender)
        record.component.render = newRender;
    // Array.from creates a snapshot which avoids the set being mutated during
    // updates
    Array.from(record.instances).forEach(instance => {
        if (newRender) {
            instance.render = newRender;
        }
        instance.renderCache = [];
        // this flag forces child components with slot content to update
        isHmrUpdating = true;
        instance.update();
        isHmrUpdating = false;
    });
}
function reload(id, newComp) {
    const record = map.get(id);
    if (!record)
        return;
    // Array.from creates a snapshot which avoids the set being mutated during
    // updates
    const { component, instances } = record;
    if (!hmrDirtyComponents.has(component)) {
        // 1. Update existing comp definition to match new one
        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;
        extend(component, newComp);
        for (const key in component) {
            if (!(key in newComp)) {
                delete component[key];
            }
        }
        // 2. Mark component dirty. This forces the renderer to replace the component
        // on patch.
        hmrDirtyComponents.add(component);
        // 3. Make sure to unmark the component after the reload.
        queuePostFlushCb(() => {
            hmrDirtyComponents.delete(component);
        });
    }
    Array.from(instances).forEach(instance => {
        if (instance.parent) {
            // 4. Force the parent instance to re-render. This will cause all updated
            // components to be unmounted and re-mounted. Queue the update so that we
            // don't end up forcing the same parent to re-render multiple times.
            queueJob(instance.parent.update);
        }
        else if (instance.appContext.reload) {
            // root instance mounted via createApp() has a reload method
            instance.appContext.reload();
        }
        else if (typeof window !== 'undefined') {
            // root instance inside tree created via raw render(). Force reload.
            window.location.reload();
        }
        else {
            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');
        }
    });
}
function tryWrap(fn) {
    return (id, arg) => {
        try {
            return fn(id, arg);
        }
        catch (e) {
            console.error(e);
            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +
                `Full reload required.`);
        }
    };
}

let devtools;
function setDevtoolsHook(hook) {
    devtools = hook;
}
function devtoolsInitApp(app, version) {
    // TODO queue if devtools is undefined
    if (!devtools)
        return;
    devtools.emit("app:init" /* APP_INIT */, app, version, {
        Fragment,
        Text,
        Comment,
        Static
    });
}
function devtoolsUnmountApp(app) {
    if (!devtools)
        return;
    devtools.emit("app:unmount" /* APP_UNMOUNT */, app);
}
const devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook("component:added" /* COMPONENT_ADDED */);
const devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook("component:updated" /* COMPONENT_UPDATED */);
const devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook("component:removed" /* COMPONENT_REMOVED */);
function createDevtoolsComponentHook(hook) {
    return (component) => {
        if (!devtools)
            return;
        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);
    };
}
function devtoolsComponentEmit(component, event, params) {
    if (!devtools)
        return;
    devtools.emit("component:emit" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);
}

function emit(instance, event, ...rawArgs) {
    const props = instance.vnode.props || EMPTY_OBJ;
    {
        const { emitsOptions, propsOptions: [propsOptions] } = instance;
        if (emitsOptions) {
            if (!(event in emitsOptions)) {
                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {
                    warn$1(`Component emitted event "${event}" but it is neither declared in ` +
                        `the emits option nor as an "${toHandlerKey(event)}" prop.`);
                }
            }
            else {
                const validator = emitsOptions[event];
                if (isFunction$1(validator)) {
                    const isValid = validator(...rawArgs);
                    if (!isValid) {
                        warn$1(`Invalid event arguments: event validation failed for event "${event}".`);
                    }
                }
            }
        }
    }
    let args = rawArgs;
    const isModelListener = event.startsWith('update:');
    // for v-model update:xxx events, apply modifiers on args
    const modelArg = isModelListener && event.slice(7);
    if (modelArg && modelArg in props) {
        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;
        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;
        if (trim) {
            args = rawArgs.map(a => a.trim());
        }
        else if (number) {
            args = rawArgs.map(toNumber$1);
        }
    }
    {
        devtoolsComponentEmit(instance, event, args);
    }
    {
        const lowerCaseEvent = event.toLowerCase();
        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {
            warn$1(`Event "${lowerCaseEvent}" is emitted in component ` +
                `${formatComponentName(instance, instance.type)} but the handler is registered for "${event}". ` +
                `Note that HTML attributes are case-insensitive and you cannot use ` +
                `v-on to listen to camelCase events when using in-DOM templates. ` +
                `You should probably use "${hyphenate(event)}" instead of "${event}".`);
        }
    }
    // convert handler name to camelCase. See issue #2249
    let handlerName = toHandlerKey(camelize(event));
    let handler = props[handlerName];
    // for v-model update:xxx events, also trigger kebab-case equivalent
    // for props passed via kebab-case
    if (!handler && isModelListener) {
        handlerName = toHandlerKey(hyphenate(event));
        handler = props[handlerName];
    }
    if (handler) {
        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);
    }
    const onceHandler = props[handlerName + `Once`];
    if (onceHandler) {
        if (!instance.emitted) {
            (instance.emitted = {})[handlerName] = true;
        }
        else if (instance.emitted[handlerName]) {
            return;
        }
        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);
    }
}
function normalizeEmitsOptions(comp, appContext, asMixin = false) {
    if (!appContext.deopt && comp.__emits !== undefined) {
        return comp.__emits;
    }
    const raw = comp.emits;
    let normalized = {};
    // apply mixin/extends props
    let hasExtends = false;
    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {
        const extendEmits = (raw) => {
            hasExtends = true;
            extend(normalized, normalizeEmitsOptions(raw, appContext, true));
        };
        if (!asMixin && appContext.mixins.length) {
            appContext.mixins.forEach(extendEmits);
        }
        if (comp.extends) {
            extendEmits(comp.extends);
        }
        if (comp.mixins) {
            comp.mixins.forEach(extendEmits);
        }
    }
    if (!raw && !hasExtends) {
        return (comp.__emits = null);
    }
    if (isArray$1(raw)) {
        raw.forEach(key => (normalized[key] = null));
    }
    else {
        extend(normalized, raw);
    }
    return (comp.__emits = normalized);
}
// Check if an incoming prop key is a declared emit event listener.
// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are
// both considered matched listeners.
function isEmitListener(options, key) {
    if (!options || !isOn(key)) {
        return false;
    }
    key = key.slice(2).replace(/Once$/, '');
    return (hasOwn$1(options, key[0].toLowerCase() + key.slice(1)) ||
        hasOwn$1(options, hyphenate(key)) ||
        hasOwn$1(options, key));
}

/**
 * mark the current rendering instance for asset resolution (e.g.
 * resolveComponent, resolveDirective) during render
 */
let currentRenderingInstance = null;
function setCurrentRenderingInstance(instance) {
    currentRenderingInstance = instance;
}
/**
 * dev only flag to track whether $attrs was used during render.
 * If $attrs was used during render then the warning for failed attrs
 * fallthrough can be suppressed.
 */
let accessedAttrs = false;
function markAttrsAccessed() {
    accessedAttrs = true;
}
function renderComponentRoot(instance) {
    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;
    let result;
    currentRenderingInstance = instance;
    {
        accessedAttrs = false;
    }
    try {
        let fallthroughAttrs;
        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {
            // withProxy is a proxy with a different `has` trap only for
            // runtime-compiled render functions using `with` block.
            const proxyToUse = withProxy || proxy;
            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));
            fallthroughAttrs = attrs;
        }
        else {
            // functional
            const render = Component;
            // in dev, mark attrs accessed if optional props (attrs === props)
            if (("development" !== 'production') && attrs === props) {
                markAttrsAccessed();
            }
            result = normalizeVNode(render.length > 1
                ? render(props, ("development" !== 'production')
                    ? {
                        get attrs() {
                            markAttrsAccessed();
                            return attrs;
                        },
                        slots,
                        emit
                    }
                    : { attrs, slots, emit })
                : render(props, null /* we know it doesn't need it */));
            fallthroughAttrs = Component.props
                ? attrs
                : getFunctionalFallthrough(attrs);
        }
        // attr merging
        // in dev mode, comments are preserved, and it's possible for a template
        // to have comments along side the root element which makes it a fragment
        let root = result;
        let setRoot = undefined;
        if (("development" !== 'production') &&
            result.patchFlag > 0 &&
            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {
            ;
            [root, setRoot] = getChildRoot(result);
        }
        if (Component.inheritAttrs !== false && fallthroughAttrs) {
            const keys = Object.keys(fallthroughAttrs);
            const { shapeFlag } = root;
            if (keys.length) {
                if (shapeFlag & 1 /* ELEMENT */ ||
                    shapeFlag & 6 /* COMPONENT */) {
                    if (propsOptions && keys.some(isModelListener)) {
                        // If a v-model listener (onUpdate:xxx) has a corresponding declared
                        // prop, it indicates this component expects to handle v-model and
                        // it should not fallthrough.
                        // related: #1543, #1643, #1989
                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);
                    }
                    root = cloneVNode(root, fallthroughAttrs);
                }
                else if (("development" !== 'production') && !accessedAttrs && root.type !== Comment) {
                    const allAttrs = Object.keys(attrs);
                    const eventAttrs = [];
                    const extraAttrs = [];
                    for (let i = 0, l = allAttrs.length; i < l; i++) {
                        const key = allAttrs[i];
                        if (isOn(key)) {
                            // ignore v-model handlers when they fail to fallthrough
                            if (!isModelListener(key)) {
                                // remove `on`, lowercase first letter to reflect event casing
                                // accurately
                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));
                            }
                        }
                        else {
                            extraAttrs.push(key);
                        }
                    }
                    if (extraAttrs.length) {
                        warn$1(`Extraneous non-props attributes (` +
                            `${extraAttrs.join(', ')}) ` +
                            `were passed to component but could not be automatically inherited ` +
                            `because component renders fragment or text root nodes.`);
                    }
                    if (eventAttrs.length) {
                        warn$1(`Extraneous non-emits event listeners (` +
                            `${eventAttrs.join(', ')}) ` +
                            `were passed to component but could not be automatically inherited ` +
                            `because component renders fragment or text root nodes. ` +
                            `If the listener is intended to be a component custom event listener only, ` +
                            `declare it using the "emits" option.`);
                    }
                }
            }
        }
        // inherit directives
        if (vnode.dirs) {
            if (("development" !== 'production') && !isElementRoot(root)) {
                warn$1(`Runtime directive used on component with non-element root node. ` +
                    `The directives will not function as intended.`);
            }
            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;
        }
        // inherit transition data
        if (vnode.transition) {
            if (("development" !== 'production') && !isElementRoot(root)) {
                warn$1(`Component inside <Transition> renders non-element root node ` +
                    `that cannot be animated.`);
            }
            root.transition = vnode.transition;
        }
        if (("development" !== 'production') && setRoot) {
            setRoot(root);
        }
        else {
            result = root;
        }
    }
    catch (err) {
        handleError(err, instance, 1 /* RENDER_FUNCTION */);
        result = createVNode(Comment);
    }
    currentRenderingInstance = null;
    return result;
}
/**
 * dev only
 * In dev mode, template root level comments are rendered, which turns the
 * template into a fragment root, but we need to locate the single element
 * root for attrs and scope id processing.
 */
const getChildRoot = (vnode) => {
    const rawChildren = vnode.children;
    const dynamicChildren = vnode.dynamicChildren;
    const childRoot = filterSingleRoot(rawChildren);
    if (!childRoot) {
        return [vnode, undefined];
    }
    const index = rawChildren.indexOf(childRoot);
    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;
    const setRoot = (updatedRoot) => {
        rawChildren[index] = updatedRoot;
        if (dynamicChildren) {
            if (dynamicIndex > -1) {
                dynamicChildren[dynamicIndex] = updatedRoot;
            }
            else if (updatedRoot.patchFlag > 0) {
                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];
            }
        }
    };
    return [normalizeVNode(childRoot), setRoot];
};
function filterSingleRoot(children) {
    let singleRoot;
    for (let i = 0; i < children.length; i++) {
        const child = children[i];
        if (isVNode(child)) {
            // ignore user comment
            if (child.type !== Comment || child.children === 'v-if') {
                if (singleRoot) {
                    // has more than 1 non-comment child, return now
                    return;
                }
                else {
                    singleRoot = child;
                }
            }
        }
        else {
            return;
        }
    }
    return singleRoot;
}
const getFunctionalFallthrough = (attrs) => {
    let res;
    for (const key in attrs) {
        if (key === 'class' || key === 'style' || isOn(key)) {
            (res || (res = {}))[key] = attrs[key];
        }
    }
    return res;
};
const filterModelListeners = (attrs, props) => {
    const res = {};
    for (const key in attrs) {
        if (!isModelListener(key) || !(key.slice(9) in props)) {
            res[key] = attrs[key];
        }
    }
    return res;
};
const isElementRoot = (vnode) => {
    return (vnode.shapeFlag & 6 /* COMPONENT */ ||
        vnode.shapeFlag & 1 /* ELEMENT */ ||
        vnode.type === Comment // potential v-if branch switch
    );
};
function shouldUpdateComponent(prevVNode, nextVNode, optimized) {
    const { props: prevProps, children: prevChildren, component } = prevVNode;
    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;
    const emits = component.emitsOptions;
    // Parent component's render function was hot-updated. Since this may have
    // caused the child component's slots content to have changed, we need to
    // force the child to update as well.
    if ((prevChildren || nextChildren) && isHmrUpdating) {
        return true;
    }
    // force child update for runtime directive or transition on component vnode.
    if (nextVNode.dirs || nextVNode.transition) {
        return true;
    }
    if (optimized && patchFlag >= 0) {
        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {
            // slot content that references values that might have changed,
            // e.g. in a v-for
            return true;
        }
        if (patchFlag & 16 /* FULL_PROPS */) {
            if (!prevProps) {
                return !!nextProps;
            }
            // presence of this flag indicates props are always non-null
            return hasPropsChanged(prevProps, nextProps, emits);
        }
        else if (patchFlag & 8 /* PROPS */) {
            const dynamicProps = nextVNode.dynamicProps;
            for (let i = 0; i < dynamicProps.length; i++) {
                const key = dynamicProps[i];
                if (nextProps[key] !== prevProps[key] &&
                    !isEmitListener(emits, key)) {
                    return true;
                }
            }
        }
    }
    else {
        // this path is only taken by manually written render functions
        // so presence of any children leads to a forced update
        if (prevChildren || nextChildren) {
            if (!nextChildren || !nextChildren.$stable) {
                return true;
            }
        }
        if (prevProps === nextProps) {
            return false;
        }
        if (!prevProps) {
            return !!nextProps;
        }
        if (!nextProps) {
            return true;
        }
        return hasPropsChanged(prevProps, nextProps, emits);
    }
    return false;
}
function hasPropsChanged(prevProps, nextProps, emitsOptions) {
    const nextKeys = Object.keys(nextProps);
    if (nextKeys.length !== Object.keys(prevProps).length) {
        return true;
    }
    for (let i = 0; i < nextKeys.length; i++) {
        const key = nextKeys[i];
        if (nextProps[key] !== prevProps[key] &&
            !isEmitListener(emitsOptions, key)) {
            return true;
        }
    }
    return false;
}
function updateHOCHostEl({ vnode, parent }, el // HostNode
) {
    while (parent && parent.subTree === vnode) {
        (vnode = parent.vnode).el = el;
        parent = parent.parent;
    }
}

const isSuspense = (type) => type.__isSuspense;
function normalizeSuspenseChildren(vnode) {
    const { shapeFlag, children } = vnode;
    let content;
    let fallback;
    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {
        content = normalizeSuspenseSlot(children.default);
        fallback = normalizeSuspenseSlot(children.fallback);
    }
    else {
        content = normalizeSuspenseSlot(children);
        fallback = normalizeVNode(null);
    }
    return {
        content,
        fallback
    };
}
function normalizeSuspenseSlot(s) {
    if (isFunction$1(s)) {
        s = s();
    }
    if (isArray$1(s)) {
        const singleChild = filterSingleRoot(s);
        if (!singleChild) {
            warn$1(`<Suspense> slots expect a single root node.`);
        }
        s = singleChild;
    }
    return normalizeVNode(s);
}
function queueEffectWithSuspense(fn, suspense) {
    if (suspense && suspense.pendingBranch) {
        if (isArray$1(fn)) {
            suspense.effects.push(...fn);
        }
        else {
            suspense.effects.push(fn);
        }
    }
    else {
        queuePostFlushCb(fn);
    }
}

let isRenderingCompiledSlot = 0;
const setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);
/**
 * Compiler runtime helper for rendering `<slot/>`
 * @private
 */
function renderSlot(slots, name, props = {}, 
// this is not a user-facing function, so the fallback is always generated by
// the compiler and guaranteed to be a function returning an array
fallback) {
    let slot = slots[name];
    if (slot && slot.length > 1) {
        warn$1(`SSR-optimized slot function detected in a non-SSR-optimized render ` +
            `function. You need to mark this component with $dynamic-slots in the ` +
            `parent template.`);
        slot = () => [];
    }
    // a compiled slot disables block tracking by default to avoid manual
    // invocation interfering with template-based block tracking, but in
    // `renderSlot` we can be sure that it's template-based so we can force
    // enable it.
    isRenderingCompiledSlot++;
    openBlock();
    const validSlotContent = slot && ensureValidVNode(slot(props));
    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */
        ? 64 /* STABLE_FRAGMENT */
        : -2 /* BAIL */);
    isRenderingCompiledSlot--;
    return rendered;
}
function ensureValidVNode(vnodes) {
    return vnodes.some(child => {
        if (!isVNode(child))
            return true;
        if (child.type === Comment)
            return false;
        if (child.type === Fragment &&
            !ensureValidVNode(child.children))
            return false;
        return true;
    })
        ? vnodes
        : null;
}

/**
 * Wrap a slot function to memoize current rendering instance
 * @private
 */
function withCtx(fn, ctx = currentRenderingInstance) {
    if (!ctx)
        return fn;
    const renderFnWithContext = (...args) => {
        // If a user calls a compiled slot inside a template expression (#1745), it
        // can mess up block tracking, so by default we need to push a null block to
        // avoid that. This isn't necessary if rendering a compiled `<slot>`.
        if (!isRenderingCompiledSlot) {
            openBlock(true /* null block that disables tracking */);
        }
        const owner = currentRenderingInstance;
        setCurrentRenderingInstance(ctx);
        const res = fn(...args);
        setCurrentRenderingInstance(owner);
        if (!isRenderingCompiledSlot) {
            closeBlock();
        }
        return res;
    };
    renderFnWithContext._c = true;
    return renderFnWithContext;
}

// SFC scoped style ID management.
let currentScopeId = null;
const scopeIdStack = [];
/**
 * @private
 */
function pushScopeId(id) {
    scopeIdStack.push((currentScopeId = id));
}
/**
 * @private
 */
function popScopeId() {
    scopeIdStack.pop();
    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;
}
/**
 * @private
 */
function withScopeId(id) {
    return ((fn) => withCtx(function () {
        pushScopeId(id);
        const res = fn.apply(this, arguments);
        popScopeId();
        return res;
    }));
}

function initProps(instance, rawProps, isStateful, // result of bitwise flag comparison
isSSR = false) {
    const props = {};
    const attrs = {};
    def(attrs, InternalObjectKey, 1);
    setFullProps(instance, rawProps, props, attrs);
    // validation
    {
        validateProps(props, instance);
    }
    if (isStateful) {
        // stateful
        instance.props = isSSR ? props : shallowReactive(props);
    }
    else {
        if (!instance.type.props) {
            // functional w/ optional props, props === attrs
            instance.props = attrs;
        }
        else {
            // functional w/ declared props
            instance.props = props;
        }
    }
    instance.attrs = attrs;
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
    const { props, attrs, vnode: { patchFlag } } = instance;
    const rawCurrentProps = toRaw(props);
    const [options] = instance.propsOptions;
    if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    !((instance.type.__hmrId ||
            (instance.parent && instance.parent.type.__hmrId))) &&
        (optimized || patchFlag > 0) &&
        !(patchFlag & 16 /* FULL_PROPS */)) {
        if (patchFlag & 8 /* PROPS */) {
            // Compiler-generated props & no keys change, just set the updated
            // the props.
            const propsToUpdate = instance.vnode.dynamicProps;
            for (let i = 0; i < propsToUpdate.length; i++) {
                const key = propsToUpdate[i];
                // PROPS flag guarantees rawProps to be non-null
                const value = rawProps[key];
                if (options) {
                    // attr / props separation was done on init and will be consistent
                    // in this code path, so just check if attrs have it.
                    if (hasOwn$1(attrs, key)) {
                        attrs[key] = value;
                    }
                    else {
                        const camelizedKey = camelize(key);
                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);
                    }
                }
                else {
                    attrs[key] = value;
                }
            }
        }
    }
    else {
        // full props update.
        setFullProps(instance, rawProps, props, attrs);
        // in case of dynamic props, check if we need to delete keys from
        // the props object
        let kebabKey;
        for (const key in rawCurrentProps) {
            if (!rawProps ||
                // for camelCase
                (!hasOwn$1(rawProps, key) &&
                    // it's possible the original props was passed in as kebab-case
                    // and converted to camelCase (#955)
                    ((kebabKey = hyphenate(key)) === key || !hasOwn$1(rawProps, kebabKey)))) {
                if (options) {
                    if (rawPrevProps &&
                        // for camelCase
                        (rawPrevProps[key] !== undefined ||
                            // for kebab-case
                            rawPrevProps[kebabKey] !== undefined)) {
                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);
                    }
                }
                else {
                    delete props[key];
                }
            }
        }
        // in the case of functional component w/o props declaration, props and
        // attrs point to the same object so it should already have been updated.
        if (attrs !== rawCurrentProps) {
            for (const key in attrs) {
                if (!rawProps || !hasOwn$1(rawProps, key)) {
                    delete attrs[key];
                }
            }
        }
    }
    // trigger updates for $attrs in case it's used in component slots
    trigger$1(instance, "set" /* SET */, '$attrs');
    if (rawProps) {
        validateProps(props, instance);
    }
}
function setFullProps(instance, rawProps, props, attrs) {
    const [options, needCastKeys] = instance.propsOptions;
    if (rawProps) {
        for (const key in rawProps) {
            const value = rawProps[key];
            // key, ref are reserved and never passed down
            if (isReservedProp(key)) {
                continue;
            }
            // prop option names are camelized during normalization, so to support
            // kebab -> camel conversion here we need to camelize the key.
            let camelKey;
            if (options && hasOwn$1(options, (camelKey = camelize(key)))) {
                props[camelKey] = value;
            }
            else if (!isEmitListener(instance.emitsOptions, key)) {
                // Any non-declared (either as a prop or an emitted event) props are put
                // into a separate `attrs` object for spreading. Make sure to preserve
                // original key casing
                attrs[key] = value;
            }
        }
    }
    if (needCastKeys) {
        const rawCurrentProps = toRaw(props);
        for (let i = 0; i < needCastKeys.length; i++) {
            const key = needCastKeys[i];
            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);
        }
    }
}
function resolvePropValue(options, props, key, value, instance) {
    const opt = options[key];
    if (opt != null) {
        const hasDefault = hasOwn$1(opt, 'default');
        // default values
        if (hasDefault && value === undefined) {
            const defaultValue = opt.default;
            if (opt.type !== Function && isFunction$1(defaultValue)) {
                setCurrentInstance(instance);
                value = defaultValue(props);
                setCurrentInstance(null);
            }
            else {
                value = defaultValue;
            }
        }
        // boolean casting
        if (opt[0 /* shouldCast */]) {
            if (!hasOwn$1(props, key) && !hasDefault) {
                value = false;
            }
            else if (opt[1 /* shouldCastTrue */] &&
                (value === '' || value === hyphenate(key))) {
                value = true;
            }
        }
    }
    return value;
}
function normalizePropsOptions(comp, appContext, asMixin = false) {
    if (!appContext.deopt && comp.__props) {
        return comp.__props;
    }
    const raw = comp.props;
    const normalized = {};
    const needCastKeys = [];
    // apply mixin/extends props
    let hasExtends = false;
    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {
        const extendProps = (raw) => {
            hasExtends = true;
            const [props, keys] = normalizePropsOptions(raw, appContext, true);
            extend(normalized, props);
            if (keys)
                needCastKeys.push(...keys);
        };
        if (!asMixin && appContext.mixins.length) {
            appContext.mixins.forEach(extendProps);
        }
        if (comp.extends) {
            extendProps(comp.extends);
        }
        if (comp.mixins) {
            comp.mixins.forEach(extendProps);
        }
    }
    if (!raw && !hasExtends) {
        return (comp.__props = EMPTY_ARR);
    }
    if (isArray$1(raw)) {
        for (let i = 0; i < raw.length; i++) {
            if (!isString(raw[i])) {
                warn$1(`props must be strings when using array syntax.`, raw[i]);
            }
            const normalizedKey = camelize(raw[i]);
            if (validatePropName(normalizedKey)) {
                normalized[normalizedKey] = EMPTY_OBJ;
            }
        }
    }
    else if (raw) {
        if (!isObject$3(raw)) {
            warn$1(`invalid props options`, raw);
        }
        for (const key in raw) {
            const normalizedKey = camelize(key);
            if (validatePropName(normalizedKey)) {
                const opt = raw[key];
                const prop = (normalized[normalizedKey] =
                    isArray$1(opt) || isFunction$1(opt) ? { type: opt } : opt);
                if (prop) {
                    const booleanIndex = getTypeIndex(Boolean, prop.type);
                    const stringIndex = getTypeIndex(String, prop.type);
                    prop[0 /* shouldCast */] = booleanIndex > -1;
                    prop[1 /* shouldCastTrue */] =
                        stringIndex < 0 || booleanIndex < stringIndex;
                    // if the prop needs boolean casting or default value
                    if (booleanIndex > -1 || hasOwn$1(prop, 'default')) {
                        needCastKeys.push(normalizedKey);
                    }
                }
            }
        }
    }
    return (comp.__props = [normalized, needCastKeys]);
}
function validatePropName(key) {
    if (key[0] !== '$') {
        return true;
    }
    else {
        warn$1(`Invalid prop name: "${key}" is a reserved property.`);
    }
    return false;
}
// use function string name to check type constructors
// so that it works across vms / iframes.
function getType(ctor) {
    const match = ctor && ctor.toString().match(/^\s*function (\w+)/);
    return match ? match[1] : '';
}
function isSameType(a, b) {
    return getType(a) === getType(b);
}
function getTypeIndex(type, expectedTypes) {
    if (isArray$1(expectedTypes)) {
        for (let i = 0, len = expectedTypes.length; i < len; i++) {
            if (isSameType(expectedTypes[i], type)) {
                return i;
            }
        }
    }
    else if (isFunction$1(expectedTypes)) {
        return isSameType(expectedTypes, type) ? 0 : -1;
    }
    return -1;
}
/**
 * dev only
 */
function validateProps(props, instance) {
    const rawValues = toRaw(props);
    const options = instance.propsOptions[0];
    for (const key in options) {
        let opt = options[key];
        if (opt == null)
            continue;
        validateProp(key, rawValues[key], opt, !hasOwn$1(rawValues, key));
    }
}
/**
 * dev only
 */
function validateProp(name, value, prop, isAbsent) {
    const { type, required, validator } = prop;
    // required!
    if (required && isAbsent) {
        warn$1('Missing required prop: "' + name + '"');
        return;
    }
    // missing but optional
    if (value == null && !prop.required) {
        return;
    }
    // type check
    if (type != null && type !== true) {
        let isValid = false;
        const types = isArray$1(type) ? type : [type];
        const expectedTypes = [];
        // value is valid as long as one of the specified types match
        for (let i = 0; i < types.length && !isValid; i++) {
            const { valid, expectedType } = assertType(value, types[i]);
            expectedTypes.push(expectedType || '');
            isValid = valid;
        }
        if (!isValid) {
            warn$1(getInvalidTypeMessage(name, value, expectedTypes));
            return;
        }
    }
    // custom validator
    if (validator && !validator(value)) {
        warn$1('Invalid prop: custom validator check failed for prop "' + name + '".');
    }
}
const isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');
/**
 * dev only
 */
function assertType(value, type) {
    let valid;
    const expectedType = getType(type);
    if (isSimpleType(expectedType)) {
        const t = typeof value;
        valid = t === expectedType.toLowerCase();
        // for primitive wrapper objects
        if (!valid && t === 'object') {
            valid = value instanceof type;
        }
    }
    else if (expectedType === 'Object') {
        valid = isObject$3(value);
    }
    else if (expectedType === 'Array') {
        valid = isArray$1(value);
    }
    else {
        valid = value instanceof type;
    }
    return {
        valid,
        expectedType
    };
}
/**
 * dev only
 */
function getInvalidTypeMessage(name, value, expectedTypes) {
    let message = `Invalid prop: type check failed for prop "${name}".` +
        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;
    const expectedType = expectedTypes[0];
    const receivedType = toRawType(value);
    const expectedValue = styleValue(value, expectedType);
    const receivedValue = styleValue(value, receivedType);
    // check if we need to specify expected value
    if (expectedTypes.length === 1 &&
        isExplicable(expectedType) &&
        !isBoolean(expectedType, receivedType)) {
        message += ` with value ${expectedValue}`;
    }
    message += `, got ${receivedType} `;
    // check if we need to specify received value
    if (isExplicable(receivedType)) {
        message += `with value ${receivedValue}.`;
    }
    return message;
}
/**
 * dev only
 */
function styleValue(value, type) {
    if (type === 'String') {
        return `"${value}"`;
    }
    else if (type === 'Number') {
        return `${Number(value)}`;
    }
    else {
        return `${value}`;
    }
}
/**
 * dev only
 */
function isExplicable(type) {
    const explicitTypes = ['string', 'number', 'boolean'];
    return explicitTypes.some(elem => type.toLowerCase() === elem);
}
/**
 * dev only
 */
function isBoolean(...args) {
    return args.some(elem => elem.toLowerCase() === 'boolean');
}

function injectHook(type, hook, target = currentInstance, prepend = false) {
    if (target) {
        const hooks = target[type] || (target[type] = []);
        // cache the error handling wrapper for injected hooks so the same hook
        // can be properly deduped by the scheduler. "__weh" stands for "with error
        // handling".
        const wrappedHook = hook.__weh ||
            (hook.__weh = (...args) => {
                if (target.isUnmounted) {
                    return;
                }
                // disable tracking inside all lifecycle hooks
                // since they can potentially be called inside effects.
                pauseTracking();
                // Set currentInstance during hook invocation.
                // This assumes the hook does not synchronously trigger other hooks, which
                // can only be false when the user does something really funky.
                setCurrentInstance(target);
                const res = callWithAsyncErrorHandling(hook, target, type, args);
                setCurrentInstance(null);
                resetTracking();
                return res;
            });
        if (prepend) {
            hooks.unshift(wrappedHook);
        }
        else {
            hooks.push(wrappedHook);
        }
        return wrappedHook;
    }
    else {
        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));
        warn$1(`${apiName} is called when there is no active component instance to be ` +
            `associated with. ` +
            `Lifecycle injection APIs can only be used during execution of setup().` +
            (` If you are using async setup(), make sure to register lifecycle ` +
                    `hooks before the first await statement.`
                ));
    }
}
const createHook = (lifecycle) => (hook, target = currentInstance) => 
// post-create lifecycle registrations are noops during SSR
!isInSSRComponentSetup && injectHook(lifecycle, hook, target);
const onBeforeMount = createHook("bm" /* BEFORE_MOUNT */);
const onMounted = createHook("m" /* MOUNTED */);
const onBeforeUpdate = createHook("bu" /* BEFORE_UPDATE */);
const onUpdated = createHook("u" /* UPDATED */);
const onBeforeUnmount = createHook("bum" /* BEFORE_UNMOUNT */);
const onUnmounted = createHook("um" /* UNMOUNTED */);
const onRenderTriggered = createHook("rtg" /* RENDER_TRIGGERED */);
const onRenderTracked = createHook("rtc" /* RENDER_TRACKED */);
const onErrorCaptured = (hook, target = currentInstance) => {
    injectHook("ec" /* ERROR_CAPTURED */, hook, target);
};

// Simple effect.
function watchEffect(effect, options) {
    return doWatch(effect, null, options);
}
// initial value for watchers to trigger on undefined initial values
const INITIAL_WATCHER_VALUE = {};
// implementation
function watch(source, cb, options) {
    if (!isFunction$1(cb)) {
        warn$1(`\`watch(fn, options?)\` signature has been moved to a separate API. ` +
            `Use \`watchEffect(fn, options?)\` instead. \`watch\` now only ` +
            `supports \`watch(source, cb, options?) signature.`);
    }
    return doWatch(source, cb, options);
}
function doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {
    if (!cb) {
        if (immediate !== undefined) {
            warn$1(`watch() "immediate" option is only respected when using the ` +
                `watch(source, callback, options?) signature.`);
        }
        if (deep !== undefined) {
            warn$1(`watch() "deep" option is only respected when using the ` +
                `watch(source, callback, options?) signature.`);
        }
    }
    const warnInvalidSource = (s) => {
        warn$1(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +
            `a reactive object, or an array of these types.`);
    };
    let getter;
    let forceTrigger = false;
    if (isRef(source)) {
        getter = () => source.value;
        forceTrigger = !!source._shallow;
    }
    else if (isReactive(source)) {
        getter = () => source;
        deep = true;
    }
    else if (isArray$1(source)) {
        getter = () => source.map(s => {
            if (isRef(s)) {
                return s.value;
            }
            else if (isReactive(s)) {
                return traverse(s);
            }
            else if (isFunction$1(s)) {
                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [
                    instance && instance.proxy
                ]);
            }
            else {
                warnInvalidSource(s);
            }
        });
    }
    else if (isFunction$1(source)) {
        if (cb) {
            // getter with cb
            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [
                instance && instance.proxy
            ]);
        }
        else {
            // no cb -> simple effect
            getter = () => {
                if (instance && instance.isUnmounted) {
                    return;
                }
                if (cleanup) {
                    cleanup();
                }
                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);
            };
        }
    }
    else {
        getter = NOOP;
        warnInvalidSource(source);
    }
    if (cb && deep) {
        const baseGetter = getter;
        getter = () => traverse(baseGetter());
    }
    let cleanup;
    const onInvalidate = (fn) => {
        cleanup = runner.options.onStop = () => {
            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);
        };
    };
    let oldValue = isArray$1(source) ? [] : INITIAL_WATCHER_VALUE;
    const job = () => {
        if (!runner.active) {
            return;
        }
        if (cb) {
            // watch(source, cb)
            const newValue = runner();
            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {
                // cleanup before running cb again
                if (cleanup) {
                    cleanup();
                }
                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [
                    newValue,
                    // pass undefined as the old value when it's changed for the first time
                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,
                    onInvalidate
                ]);
                oldValue = newValue;
            }
        }
        else {
            // watchEffect
            runner();
        }
    };
    // important: mark the job as a watcher callback so that scheduler knows
    // it is allowed to self-trigger (#1727)
    job.allowRecurse = !!cb;
    let scheduler;
    if (flush === 'sync') {
        scheduler = job;
    }
    else if (flush === 'post') {
        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);
    }
    else {
        // default: 'pre'
        scheduler = () => {
            if (!instance || instance.isMounted) {
                queuePreFlushCb(job);
            }
            else {
                // with 'pre' option, the first call must happen before
                // the component is mounted so it is called synchronously.
                job();
            }
        };
    }
    const runner = effect$3(getter, {
        lazy: true,
        onTrack,
        onTrigger,
        scheduler
    });
    recordInstanceBoundEffect(runner, instance);
    // initial run
    if (cb) {
        if (immediate) {
            job();
        }
        else {
            oldValue = runner();
        }
    }
    else if (flush === 'post') {
        queuePostRenderEffect(runner, instance && instance.suspense);
    }
    else {
        runner();
    }
    return () => {
        stop(runner);
        if (instance) {
            remove(instance.effects, runner);
        }
    };
}
// this.$watch
function instanceWatch(source, cb, options) {
    const publicThis = this.proxy;
    const getter = isString(source)
        ? () => publicThis[source]
        : source.bind(publicThis);
    return doWatch(getter, cb.bind(publicThis), options, this);
}
function traverse(value, seen = new Set()) {
    if (!isObject$3(value) || seen.has(value)) {
        return value;
    }
    seen.add(value);
    if (isRef(value)) {
        traverse(value.value, seen);
    }
    else if (isArray$1(value)) {
        for (let i = 0; i < value.length; i++) {
            traverse(value[i], seen);
        }
    }
    else if (isSet(value) || isMap(value)) {
        value.forEach((v) => {
            traverse(v, seen);
        });
    }
    else {
        for (const key in value) {
            traverse(value[key], seen);
        }
    }
    return value;
}

function useTransitionState() {
    const state = {
        isMounted: false,
        isLeaving: false,
        isUnmounting: false,
        leavingVNodes: new Map()
    };
    onMounted(() => {
        state.isMounted = true;
    });
    onBeforeUnmount(() => {
        state.isUnmounting = true;
    });
    return state;
}
const TransitionHookValidator = [Function, Array];
const BaseTransitionImpl = {
    name: `BaseTransition`,
    props: {
        mode: String,
        appear: Boolean,
        persisted: Boolean,
        // enter
        onBeforeEnter: TransitionHookValidator,
        onEnter: TransitionHookValidator,
        onAfterEnter: TransitionHookValidator,
        onEnterCancelled: TransitionHookValidator,
        // leave
        onBeforeLeave: TransitionHookValidator,
        onLeave: TransitionHookValidator,
        onAfterLeave: TransitionHookValidator,
        onLeaveCancelled: TransitionHookValidator,
        // appear
        onBeforeAppear: TransitionHookValidator,
        onAppear: TransitionHookValidator,
        onAfterAppear: TransitionHookValidator,
        onAppearCancelled: TransitionHookValidator
    },
    setup(props, { slots }) {
        const instance = getCurrentInstance();
        const state = useTransitionState();
        let prevTransitionKey;
        return () => {
            const children = slots.default && getTransitionRawChildren(slots.default(), true);
            if (!children || !children.length) {
                return;
            }
            // warn multiple elements
            if (children.length > 1) {
                warn$1('<transition> can only be used on a single element or component. Use ' +
                    '<transition-group> for lists.');
            }
            // there's no need to track reactivity for these props so use the raw
            // props for a bit better perf
            const rawProps = toRaw(props);
            const { mode } = rawProps;
            // check mode
            if (mode && !['in-out', 'out-in', 'default'].includes(mode)) {
                warn$1(`invalid <transition> mode: ${mode}`);
            }
            // at this point children has a guaranteed length of 1.
            const child = children[0];
            if (state.isLeaving) {
                return emptyPlaceholder(child);
            }
            // in the case of <transition><keep-alive/></transition>, we need to
            // compare the type of the kept-alive children.
            const innerChild = getKeepAliveChild(child);
            if (!innerChild) {
                return emptyPlaceholder(child);
            }
            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);
            setTransitionHooks(innerChild, enterHooks);
            const oldChild = instance.subTree;
            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);
            let transitionKeyChanged = false;
            const { getTransitionKey } = innerChild.type;
            if (getTransitionKey) {
                const key = getTransitionKey();
                if (prevTransitionKey === undefined) {
                    prevTransitionKey = key;
                }
                else if (key !== prevTransitionKey) {
                    prevTransitionKey = key;
                    transitionKeyChanged = true;
                }
            }
            // handle mode
            if (oldInnerChild &&
                oldInnerChild.type !== Comment &&
                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {
                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);
                // update old tree's hooks in case of dynamic transition
                setTransitionHooks(oldInnerChild, leavingHooks);
                // switching between different views
                if (mode === 'out-in') {
                    state.isLeaving = true;
                    // return placeholder node and queue update when leave finishes
                    leavingHooks.afterLeave = () => {
                        state.isLeaving = false;
                        instance.update();
                    };
                    return emptyPlaceholder(child);
                }
                else if (mode === 'in-out') {
                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {
                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);
                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;
                        // early removal callback
                        el._leaveCb = () => {
                            earlyRemove();
                            el._leaveCb = undefined;
                            delete enterHooks.delayedLeave;
                        };
                        enterHooks.delayedLeave = delayedLeave;
                    };
                }
            }
            return child;
        };
    }
};
// export the public type for h/tsx inference
// also to avoid inline import() in generated d.ts files
const BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(state, vnode) {
    const { leavingVNodes } = state;
    let leavingVNodesCache = leavingVNodes.get(vnode.type);
    if (!leavingVNodesCache) {
        leavingVNodesCache = Object.create(null);
        leavingVNodes.set(vnode.type, leavingVNodesCache);
    }
    return leavingVNodesCache;
}
// The transition hooks are attached to the vnode as vnode.transition
// and will be called at appropriate timing in the renderer.
function resolveTransitionHooks(vnode, props, state, instance) {
    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;
    const key = String(vnode.key);
    const leavingVNodesCache = getLeavingNodesForType(state, vnode);
    const callHook = (hook, args) => {
        hook &&
            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);
    };
    const hooks = {
        mode,
        persisted,
        beforeEnter(el) {
            let hook = onBeforeEnter;
            if (!state.isMounted) {
                if (appear) {
                    hook = onBeforeAppear || onBeforeEnter;
                }
                else {
                    return;
                }
            }
            // for same element (v-show)
            if (el._leaveCb) {
                el._leaveCb(true /* cancelled */);
            }
            // for toggled element with same key (v-if)
            const leavingVNode = leavingVNodesCache[key];
            if (leavingVNode &&
                isSameVNodeType(vnode, leavingVNode) &&
                leavingVNode.el._leaveCb) {
                // force early removal (not cancelled)
                leavingVNode.el._leaveCb();
            }
            callHook(hook, [el]);
        },
        enter(el) {
            let hook = onEnter;
            let afterHook = onAfterEnter;
            let cancelHook = onEnterCancelled;
            if (!state.isMounted) {
                if (appear) {
                    hook = onAppear || onEnter;
                    afterHook = onAfterAppear || onAfterEnter;
                    cancelHook = onAppearCancelled || onEnterCancelled;
                }
                else {
                    return;
                }
            }
            let called = false;
            const done = (el._enterCb = (cancelled) => {
                if (called)
                    return;
                called = true;
                if (cancelled) {
                    callHook(cancelHook, [el]);
                }
                else {
                    callHook(afterHook, [el]);
                }
                if (hooks.delayedLeave) {
                    hooks.delayedLeave();
                }
                el._enterCb = undefined;
            });
            if (hook) {
                hook(el, done);
                if (hook.length <= 1) {
                    done();
                }
            }
            else {
                done();
            }
        },
        leave(el, remove) {
            const key = String(vnode.key);
            if (el._enterCb) {
                el._enterCb(true /* cancelled */);
            }
            if (state.isUnmounting) {
                return remove();
            }
            callHook(onBeforeLeave, [el]);
            let called = false;
            const done = (el._leaveCb = (cancelled) => {
                if (called)
                    return;
                called = true;
                remove();
                if (cancelled) {
                    callHook(onLeaveCancelled, [el]);
                }
                else {
                    callHook(onAfterLeave, [el]);
                }
                el._leaveCb = undefined;
                if (leavingVNodesCache[key] === vnode) {
                    delete leavingVNodesCache[key];
                }
            });
            leavingVNodesCache[key] = vnode;
            if (onLeave) {
                onLeave(el, done);
                if (onLeave.length <= 1) {
                    done();
                }
            }
            else {
                done();
            }
        },
        clone(vnode) {
            return resolveTransitionHooks(vnode, props, state, instance);
        }
    };
    return hooks;
}
// the placeholder really only handles one special case: KeepAlive
// in the case of a KeepAlive in a leave phase we need to return a KeepAlive
// placeholder with empty content to avoid the KeepAlive instance from being
// unmounted.
function emptyPlaceholder(vnode) {
    if (isKeepAlive(vnode)) {
        vnode = cloneVNode(vnode);
        vnode.children = null;
        return vnode;
    }
}
function getKeepAliveChild(vnode) {
    return isKeepAlive(vnode)
        ? vnode.children
            ? vnode.children[0]
            : undefined
        : vnode;
}
function setTransitionHooks(vnode, hooks) {
    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {
        setTransitionHooks(vnode.component.subTree, hooks);
    }
    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {
        vnode.ssContent.transition = hooks.clone(vnode.ssContent);
        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);
    }
    else {
        vnode.transition = hooks;
    }
}
function getTransitionRawChildren(children, keepComment = false) {
    let ret = [];
    let keyedFragmentCount = 0;
    for (let i = 0; i < children.length; i++) {
        const child = children[i];
        // handle fragment children case, e.g. v-for
        if (child.type === Fragment) {
            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)
                keyedFragmentCount++;
            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));
        }
        // comment placeholders should be skipped, e.g. v-if
        else if (keepComment || child.type !== Comment) {
            ret.push(child);
        }
    }
    // #1126 if a transition children list contains multiple sub fragments, these
    // fragments will be merged into a flat children array. Since each v-for
    // fragment may contain different static bindings inside, we need to de-op
    // these children to force full diffs to ensure correct behavior.
    if (keyedFragmentCount > 1) {
        for (let i = 0; i < ret.length; i++) {
            ret[i].patchFlag = -2 /* BAIL */;
        }
    }
    return ret;
}

const isKeepAlive = (vnode) => vnode.type.__isKeepAlive;
function onActivated(hook, target) {
    registerKeepAliveHook(hook, "a" /* ACTIVATED */, target);
}
function onDeactivated(hook, target) {
    registerKeepAliveHook(hook, "da" /* DEACTIVATED */, target);
}
function registerKeepAliveHook(hook, type, target = currentInstance) {
    // cache the deactivate branch check wrapper for injected hooks so the same
    // hook can be properly deduped by the scheduler. "__wdc" stands for "with
    // deactivation check".
    const wrappedHook = hook.__wdc ||
        (hook.__wdc = () => {
            // only fire the hook if the target instance is NOT in a deactivated branch.
            let current = target;
            while (current) {
                if (current.isDeactivated) {
                    return;
                }
                current = current.parent;
            }
            hook();
        });
    injectHook(type, wrappedHook, target);
    // In addition to registering it on the target instance, we walk up the parent
    // chain and register it on all ancestor instances that are keep-alive roots.
    // This avoids the need to walk the entire component tree when invoking these
    // hooks, and more importantly, avoids the need to track child components in
    // arrays.
    if (target) {
        let current = target.parent;
        while (current && current.parent) {
            if (isKeepAlive(current.parent.vnode)) {
                injectToKeepAliveRoot(wrappedHook, type, target, current);
            }
            current = current.parent;
        }
    }
}
function injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {
    // injectHook wraps the original for error handling, so make sure to remove
    // the wrapped version.
    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);
    onUnmounted(() => {
        remove(keepAliveRoot[type], injected);
    }, target);
}

const isInternalKey = (key) => key[0] === '_' || key === '$stable';
const normalizeSlotValue = (value) => isArray$1(value)
    ? value.map(normalizeVNode)
    : [normalizeVNode(value)];
const normalizeSlot$1 = (key, rawSlot, ctx) => withCtx((props) => {
    if (currentInstance) {
        warn$1(`Slot "${key}" invoked outside of the render function: ` +
            `this will not track dependencies used in the slot. ` +
            `Invoke the slot function inside the render function instead.`);
    }
    return normalizeSlotValue(rawSlot(props));
}, ctx);
const normalizeObjectSlots = (rawSlots, slots) => {
    const ctx = rawSlots._ctx;
    for (const key in rawSlots) {
        if (isInternalKey(key))
            continue;
        const value = rawSlots[key];
        if (isFunction$1(value)) {
            slots[key] = normalizeSlot$1(key, value, ctx);
        }
        else if (value != null) {
            {
                warn$1(`Non-function value encountered for slot "${key}". ` +
                    `Prefer function slots for better performance.`);
            }
            const normalized = normalizeSlotValue(value);
            slots[key] = () => normalized;
        }
    }
};
const normalizeVNodeSlots = (instance, children) => {
    if (!isKeepAlive(instance.vnode)) {
        warn$1(`Non-function value encountered for default slot. ` +
            `Prefer function slots for better performance.`);
    }
    const normalized = normalizeSlotValue(children);
    instance.slots.default = () => normalized;
};
const initSlots = (instance, children) => {
    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {
        const type = children._;
        if (type) {
            instance.slots = children;
            // make compiler marker non-enumerable
            def(children, '_', type);
        }
        else {
            normalizeObjectSlots(children, (instance.slots = {}));
        }
    }
    else {
        instance.slots = {};
        if (children) {
            normalizeVNodeSlots(instance, children);
        }
    }
    def(instance.slots, InternalObjectKey, 1);
};
const updateSlots = (instance, children) => {
    const { vnode, slots } = instance;
    let needDeletionCheck = true;
    let deletionComparisonTarget = EMPTY_OBJ;
    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {
        const type = children._;
        if (type) {
            // compiled slots.
            if (isHmrUpdating) {
                // Parent was HMR updated so slot content may have changed.
                // force update slots and mark instance for hmr as well
                extend(slots, children);
            }
            else if (type === 1 /* STABLE */) {
                // compiled AND stable.
                // no need to update, and skip stale slots removal.
                needDeletionCheck = false;
            }
            else {
                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip
                // normalization.
                extend(slots, children);
            }
        }
        else {
            needDeletionCheck = !children.$stable;
            normalizeObjectSlots(children, slots);
        }
        deletionComparisonTarget = children;
    }
    else if (children) {
        // non slot object children (direct value) passed to a component
        normalizeVNodeSlots(instance, children);
        deletionComparisonTarget = { default: 1 };
    }
    // delete stale slots
    if (needDeletionCheck) {
        for (const key in slots) {
            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {
                delete slots[key];
            }
        }
    }
};

/**
Runtime helper for applying directives to a vnode. Example usage:

const comp = resolveComponent('comp')
const foo = resolveDirective('foo')
const bar = resolveDirective('bar')

return withDirectives(h(comp), [
  [foo, this.x],
  [bar, this.y]
])
*/
const isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');
function validateDirectiveName(name) {
    if (isBuiltInDirective(name)) {
        warn$1('Do not use built-in directive ids as custom directive id: ' + name);
    }
}
/**
 * Adds directives to a VNode.
 */
function withDirectives(vnode, directives) {
    const internalInstance = currentRenderingInstance;
    if (internalInstance === null) {
        warn$1(`withDirectives can only be used inside render functions.`);
        return vnode;
    }
    const instance = internalInstance.proxy;
    const bindings = vnode.dirs || (vnode.dirs = []);
    for (let i = 0; i < directives.length; i++) {
        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];
        if (isFunction$1(dir)) {
            dir = {
                mounted: dir,
                updated: dir
            };
        }
        bindings.push({
            dir,
            instance,
            value,
            oldValue: void 0,
            arg,
            modifiers
        });
    }
    return vnode;
}
function invokeDirectiveHook(vnode, prevVNode, instance, name) {
    const bindings = vnode.dirs;
    const oldBindings = prevVNode && prevVNode.dirs;
    for (let i = 0; i < bindings.length; i++) {
        const binding = bindings[i];
        if (oldBindings) {
            binding.oldValue = oldBindings[i].value;
        }
        const hook = binding.dir[name];
        if (hook) {
            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [
                vnode.el,
                binding,
                vnode,
                prevVNode
            ]);
        }
    }
}

function createAppContext() {
    return {
        app: null,
        config: {
            isNativeTag: NO,
            performance: false,
            globalProperties: {},
            optionMergeStrategies: {},
            isCustomElement: NO,
            errorHandler: undefined,
            warnHandler: undefined
        },
        mixins: [],
        components: {},
        directives: {},
        provides: Object.create(null)
    };
}
let uid = 0;
function createAppAPI(render, hydrate) {
    return function createApp(rootComponent, rootProps = null) {
        if (rootProps != null && !isObject$3(rootProps)) {
            warn$1(`root props passed to app.mount() must be an object.`);
            rootProps = null;
        }
        const context = createAppContext();
        const installedPlugins = new Set();
        let isMounted = false;
        const app = (context.app = {
            _uid: uid++,
            _component: rootComponent,
            _props: rootProps,
            _container: null,
            _context: context,
            version: version$1,
            get config() {
                return context.config;
            },
            set config(v) {
                {
                    warn$1(`app.config cannot be replaced. Modify individual options instead.`);
                }
            },
            use(plugin, ...options) {
                if (installedPlugins.has(plugin)) {
                    warn$1(`Plugin has already been applied to target app.`);
                }
                else if (plugin && isFunction$1(plugin.install)) {
                    installedPlugins.add(plugin);
                    plugin.install(app, ...options);
                }
                else if (isFunction$1(plugin)) {
                    installedPlugins.add(plugin);
                    plugin(app, ...options);
                }
                else {
                    warn$1(`A plugin must either be a function or an object with an "install" ` +
                        `function.`);
                }
                return app;
            },
            mixin(mixin) {
                if (__VUE_OPTIONS_API__) {
                    if (!context.mixins.includes(mixin)) {
                        context.mixins.push(mixin);
                        // global mixin with props/emits de-optimizes props/emits
                        // normalization caching.
                        if (mixin.props || mixin.emits) {
                            context.deopt = true;
                        }
                    }
                    else {
                        warn$1('Mixin has already been applied to target app' +
                            (mixin.name ? `: ${mixin.name}` : ''));
                    }
                }
                else {
                    warn$1('Mixins are only available in builds supporting Options API');
                }
                return app;
            },
            component(name, component) {
                {
                    validateComponentName(name, context.config);
                }
                if (!component) {
                    return context.components[name];
                }
                if (context.components[name]) {
                    warn$1(`Component "${name}" has already been registered in target app.`);
                }
                context.components[name] = component;
                return app;
            },
            directive(name, directive) {
                {
                    validateDirectiveName(name);
                }
                if (!directive) {
                    return context.directives[name];
                }
                if (context.directives[name]) {
                    warn$1(`Directive "${name}" has already been registered in target app.`);
                }
                context.directives[name] = directive;
                return app;
            },
            mount(rootContainer, isHydrate) {
                if (!isMounted) {
                    const vnode = createVNode(rootComponent, rootProps);
                    // store app context on the root VNode.
                    // this will be set on the root instance on initial mount.
                    vnode.appContext = context;
                    // HMR root reload
                    {
                        context.reload = () => {
                            render(cloneVNode(vnode), rootContainer);
                        };
                    }
                    if (isHydrate && hydrate) {
                        hydrate(vnode, rootContainer);
                    }
                    else {
                        render(vnode, rootContainer);
                    }
                    isMounted = true;
                    app._container = rootContainer;
                    rootContainer.__vue_app__ = app;
                    {
                        devtoolsInitApp(app, version$1);
                    }
                    return vnode.component.proxy;
                }
                else {
                    warn$1(`App has already been mounted.\n` +
                        `If you want to remount the same app, move your app creation logic ` +
                        `into a factory function and create fresh app instances for each ` +
                        `mount - e.g. \`const createMyApp = () => createApp(App)\``);
                }
            },
            unmount() {
                if (isMounted) {
                    render(null, app._container);
                    {
                        devtoolsUnmountApp(app);
                    }
                    delete app._container.__vue_app__;
                }
                else {
                    warn$1(`Cannot unmount an app that is not mounted.`);
                }
            },
            provide(key, value) {
                if (key in context.provides) {
                    warn$1(`App already provides property with key "${String(key)}". ` +
                        `It will be overwritten with the new value.`);
                }
                // TypeScript doesn't allow symbols as index type
                // https://github.com/Microsoft/TypeScript/issues/24587
                context.provides[key] = value;
                return app;
            }
        });
        return app;
    };
}

let supported;
let perf;
function startMeasure(instance, type) {
    if (instance.appContext.config.performance && isSupported()) {
        perf.mark(`vue-${type}-${instance.uid}`);
    }
}
function endMeasure(instance, type) {
    if (instance.appContext.config.performance && isSupported()) {
        const startTag = `vue-${type}-${instance.uid}`;
        const endTag = startTag + `:end`;
        perf.mark(endTag);
        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);
        perf.clearMarks(startTag);
        perf.clearMarks(endTag);
    }
}
function isSupported() {
    if (supported !== undefined) {
        return supported;
    }
    /* eslint-disable no-restricted-globals */
    if (typeof window !== 'undefined' && window.performance) {
        supported = true;
        perf = window.performance;
    }
    else {
        supported = false;
    }
    /* eslint-enable no-restricted-globals */
    return supported;
}

/**
 * This is only called in esm-bundler builds.
 * It is called when a renderer is created, in `baseCreateRenderer` so that
 * importing runtime-core is side-effects free.
 *
 * istanbul-ignore-next
 */
function initFeatureFlags() {
    let needWarn = false;
    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {
        needWarn = true;
        getGlobalThis().__VUE_OPTIONS_API__ = true;
    }
    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {
        needWarn = true;
        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;
    }
    if (needWarn) {
        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +
            `configure your bundler to explicitly replace feature flag globals ` +
            `with boolean literals to get proper tree-shaking in the final bundle. ` +
            `See http://link.vuejs.org/feature-flags for more details.`);
    }
}

// implementation, close to no-op
function defineComponent(options) {
    return isFunction$1(options) ? { setup: options, name: options.name } : options;
}

const isAsyncWrapper = (i) => !!i.type.__asyncLoader;
function createDevEffectOptions(instance) {
    return {
        scheduler: queueJob,
        allowRecurse: true,
        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,
        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0
    };
}
const queuePostRenderEffect = queueEffectWithSuspense
    ;
const setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {
    if (isArray$1(rawRef)) {
        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray$1(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));
        return;
    }
    let value;
    if (!vnode || isAsyncWrapper(vnode)) {
        value = null;
    }
    else {
        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {
            value = vnode.component.exposed || vnode.component.proxy;
        }
        else {
            value = vnode.el;
        }
    }
    const { i: owner, r: ref } = rawRef;
    if (!owner) {
        warn$1(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +
            `A vnode with ref must be created inside the render function.`);
        return;
    }
    const oldRef = oldRawRef && oldRawRef.r;
    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;
    const setupState = owner.setupState;
    // unset old ref
    if (oldRef != null && oldRef !== ref) {
        if (isString(oldRef)) {
            refs[oldRef] = null;
            if (hasOwn$1(setupState, oldRef)) {
                setupState[oldRef] = null;
            }
        }
        else if (isRef(oldRef)) {
            oldRef.value = null;
        }
    }
    if (isString(ref)) {
        const doSet = () => {
            refs[ref] = value;
            if (hasOwn$1(setupState, ref)) {
                setupState[ref] = value;
            }
        };
        // #1789: for non-null values, set them after render
        // null values means this is unmount and it should not overwrite another
        // ref with the same key
        if (value) {
            doSet.id = -1;
            queuePostRenderEffect(doSet, parentSuspense);
        }
        else {
            doSet();
        }
    }
    else if (isRef(ref)) {
        const doSet = () => {
            ref.value = value;
        };
        if (value) {
            doSet.id = -1;
            queuePostRenderEffect(doSet, parentSuspense);
        }
        else {
            doSet();
        }
    }
    else if (isFunction$1(ref)) {
        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);
    }
    else {
        warn$1('Invalid template ref type:', value, `(${typeof value})`);
    }
};
/**
 * The createRenderer function accepts two generic arguments:
 * HostNode and HostElement, corresponding to Node and Element types in the
 * host environment. For example, for runtime-dom, HostNode would be the DOM
 * `Node` interface and HostElement would be the DOM `Element` interface.
 *
 * Custom renderers can pass in the platform specific types like this:
 *
 * ``` js
 * const { render, createApp } = createRenderer<Node, Element>({
 *   patchProp,
 *   ...nodeOps
 * })
 * ```
 */
function createRenderer(options) {
    return baseCreateRenderer(options);
}
// implementation
function baseCreateRenderer(options, createHydrationFns) {
    // compile-time feature flags check
    {
        initFeatureFlags();
    }
    {
        const target = getGlobalThis();
        target.__VUE__ = true;
        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);
    }
    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;
    // Note: functions inside this closure should use `const xxx = () => {}`
    // style in order to prevent being inlined by minifiers.
    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {
        // patching & not same type, unmount old tree
        if (n1 && !isSameVNodeType(n1, n2)) {
            anchor = getNextHostNode(n1);
            unmount(n1, parentComponent, parentSuspense, true);
            n1 = null;
        }
        if (n2.patchFlag === -2 /* BAIL */) {
            optimized = false;
            n2.dynamicChildren = null;
        }
        const { type, ref, shapeFlag } = n2;
        switch (type) {
            case Text:
                processText(n1, n2, container, anchor);
                break;
            case Comment:
                processCommentNode(n1, n2, container, anchor);
                break;
            case Static:
                if (n1 == null) {
                    mountStaticNode(n2, container, anchor, isSVG);
                }
                else {
                    patchStaticNode(n1, n2, container, isSVG);
                }
                break;
            case Fragment:
                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                break;
            default:
                if (shapeFlag & 1 /* ELEMENT */) {
                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
                else if (shapeFlag & 6 /* COMPONENT */) {
                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
                else if (shapeFlag & 64 /* TELEPORT */) {
                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);
                }
                else if (shapeFlag & 128 /* SUSPENSE */) {
                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);
                }
                else {
                    warn$1('Invalid VNode type:', type, `(${typeof type})`);
                }
        }
        // set ref
        if (ref != null && parentComponent) {
            setRef(ref, n1 && n1.ref, parentSuspense, n2);
        }
    };
    const processText = (n1, n2, container, anchor) => {
        if (n1 == null) {
            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);
        }
        else {
            const el = (n2.el = n1.el);
            if (n2.children !== n1.children) {
                hostSetText(el, n2.children);
            }
        }
    };
    const processCommentNode = (n1, n2, container, anchor) => {
        if (n1 == null) {
            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);
        }
        else {
            // there's no support for dynamic comments
            n2.el = n1.el;
        }
    };
    const mountStaticNode = (n2, container, anchor, isSVG) => {
        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);
    };
    /**
     * Dev / HMR only
     */
    const patchStaticNode = (n1, n2, container, isSVG) => {
        // static nodes are only patched during dev for HMR
        if (n2.children !== n1.children) {
            const anchor = hostNextSibling(n1.anchor);
            // remove existing
            removeStaticNode(n1);
            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);
        }
        else {
            n2.el = n1.el;
            n2.anchor = n1.anchor;
        }
    };
    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {
        let next;
        while (el && el !== anchor) {
            next = hostNextSibling(el);
            hostInsert(el, container, nextSibling);
            el = next;
        }
        hostInsert(anchor, container, nextSibling);
    };
    const removeStaticNode = ({ el, anchor }) => {
        let next;
        while (el && el !== anchor) {
            next = hostNextSibling(el);
            hostRemove(el);
            el = next;
        }
        hostRemove(anchor);
    };
    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        isSVG = isSVG || n2.type === 'svg';
        if (n1 == null) {
            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
        }
        else {
            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);
        }
    };
    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        let el;
        let vnodeHook;
        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;
        {
            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);
            // mount children first, since some props may rely on child content
            // being already rendered, e.g. `<select value>`
            if (shapeFlag & 8 /* TEXT_CHILDREN */) {
                hostSetElementText(el, vnode.children);
            }
            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);
            }
            if (dirs) {
                invokeDirectiveHook(vnode, null, parentComponent, 'created');
            }
            // props
            if (props) {
                for (const key in props) {
                    if (!isReservedProp(key)) {
                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);
                    }
                }
                if ((vnodeHook = props.onVnodeBeforeMount)) {
                    invokeVNodeHook(vnodeHook, parentComponent, vnode);
                }
            }
            // scopeId
            setScopeId(el, scopeId, vnode, parentComponent);
        }
        {
            Object.defineProperty(el, '__vnode', {
                value: vnode,
                enumerable: false
            });
            Object.defineProperty(el, '__vueParentComponent', {
                value: parentComponent,
                enumerable: false
            });
        }
        if (dirs) {
            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');
        }
        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved
        // #1689 For inside suspense + suspense resolved case, just call it
        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&
            transition &&
            !transition.persisted;
        if (needCallTransitionHooks) {
            transition.beforeEnter(el);
        }
        hostInsert(el, container, anchor);
        if ((vnodeHook = props && props.onVnodeMounted) ||
            needCallTransitionHooks ||
            dirs) {
            queuePostRenderEffect(() => {
                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
                needCallTransitionHooks && transition.enter(el);
                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');
            }, parentSuspense);
        }
    };
    const setScopeId = (el, scopeId, vnode, parentComponent) => {
        if (scopeId) {
            hostSetScopeId(el, scopeId);
        }
        if (parentComponent) {
            const treeOwnerId = parentComponent.type.__scopeId;
            // vnode's own scopeId and the current patched component's scopeId is
            // different - this is a slot content node.
            if (treeOwnerId && treeOwnerId !== scopeId) {
                hostSetScopeId(el, treeOwnerId + '-s');
            }
            let subTree = parentComponent.subTree;
            if (subTree.type === Fragment) {
                subTree =
                    filterSingleRoot(subTree.children) || subTree;
            }
            if (vnode === subTree) {
                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);
            }
        }
    };
    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {
        for (let i = start; i < children.length; i++) {
            const child = (children[i] = optimized
                ? cloneIfMounted(children[i])
                : normalizeVNode(children[i]));
            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
        }
    };
    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {
        const el = (n2.el = n1.el);
        let { patchFlag, dynamicChildren, dirs } = n2;
        // #1426 take the old vnode's patch flag into account since user may clone a
        // compiler-generated vnode, which de-opts to FULL_PROPS
        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;
        const oldProps = n1.props || EMPTY_OBJ;
        const newProps = n2.props || EMPTY_OBJ;
        let vnodeHook;
        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {
            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
        }
        if (dirs) {
            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');
        }
        if (isHmrUpdating) {
            // HMR updated, force full diff
            patchFlag = 0;
            optimized = false;
            dynamicChildren = null;
        }
        if (patchFlag > 0) {
            // the presence of a patchFlag means this element's render code was
            // generated by the compiler and can take the fast path.
            // in this path old node and new node are guaranteed to have the same shape
            // (i.e. at the exact same position in the source template)
            if (patchFlag & 16 /* FULL_PROPS */) {
                // element props contain dynamic keys, full diff needed
                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);
            }
            else {
                // class
                // this flag is matched when the element has dynamic class bindings.
                if (patchFlag & 2 /* CLASS */) {
                    if (oldProps.class !== newProps.class) {
                        hostPatchProp(el, 'class', null, newProps.class, isSVG);
                    }
                }
                // style
                // this flag is matched when the element has dynamic style bindings
                if (patchFlag & 4 /* STYLE */) {
                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);
                }
                // props
                // This flag is matched when the element has dynamic prop/attr bindings
                // other than class and style. The keys of dynamic prop/attrs are saved for
                // faster iteration.
                // Note dynamic keys like :[foo]="bar" will cause this optimization to
                // bail out and go through a full diff because we need to unset the old key
                if (patchFlag & 8 /* PROPS */) {
                    // if the flag is present then dynamicProps must be non-null
                    const propsToUpdate = n2.dynamicProps;
                    for (let i = 0; i < propsToUpdate.length; i++) {
                        const key = propsToUpdate[i];
                        const prev = oldProps[key];
                        const next = newProps[key];
                        if (next !== prev ||
                            (hostForcePatchProp && hostForcePatchProp(el, key))) {
                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);
                        }
                    }
                }
            }
            // text
            // This flag is matched when the element has only dynamic text children.
            if (patchFlag & 1 /* TEXT */) {
                if (n1.children !== n2.children) {
                    hostSetElementText(el, n2.children);
                }
            }
        }
        else if (!optimized && dynamicChildren == null) {
            // unoptimized, full diff
            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);
        }
        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';
        if (dynamicChildren) {
            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);
            if (parentComponent && parentComponent.type.__hmrId) {
                traverseStaticChildren(n1, n2);
            }
        }
        else if (!optimized) {
            // full diff
            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);
        }
        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {
            queuePostRenderEffect(() => {
                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');
            }, parentSuspense);
        }
    };
    // The fast path for blocks.
    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {
        for (let i = 0; i < newChildren.length; i++) {
            const oldVNode = oldChildren[i];
            const newVNode = newChildren[i];
            // Determine the container (parent element) for the patch.
            const container = 
            // - In the case of a Fragment, we need to provide the actual parent
            // of the Fragment itself so it can move its children.
            oldVNode.type === Fragment ||
                // - In the case of different nodes, there is going to be a replacement
                // which also requires the correct parent container
                !isSameVNodeType(oldVNode, newVNode) ||
                // - In the case of a component, it could contain anything.
                oldVNode.shapeFlag & 6 /* COMPONENT */ ||
                oldVNode.shapeFlag & 64 /* TELEPORT */
                ? hostParentNode(oldVNode.el)
                : // In other cases, the parent container is not actually used so we
                    // just pass the block element here to avoid a DOM parentNode call.
                    fallbackContainer;
            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);
        }
    };
    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {
        if (oldProps !== newProps) {
            for (const key in newProps) {
                // empty string is not valid prop
                if (isReservedProp(key))
                    continue;
                const next = newProps[key];
                const prev = oldProps[key];
                if (next !== prev ||
                    (hostForcePatchProp && hostForcePatchProp(el, key))) {
                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);
                }
            }
            if (oldProps !== EMPTY_OBJ) {
                for (const key in oldProps) {
                    if (!isReservedProp(key) && !(key in newProps)) {
                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);
                    }
                }
            }
        }
    };
    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));
        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));
        let { patchFlag, dynamicChildren } = n2;
        if (patchFlag > 0) {
            optimized = true;
        }
        if (isHmrUpdating) {
            // HMR updated, force full diff
            patchFlag = 0;
            optimized = false;
            dynamicChildren = null;
        }
        if (n1 == null) {
            hostInsert(fragmentStartAnchor, container, anchor);
            hostInsert(fragmentEndAnchor, container, anchor);
            // a fragment can only have array children
            // since they are either generated by the compiler, or implicitly created
            // from arrays.
            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);
        }
        else {
            if (patchFlag > 0 &&
                patchFlag & 64 /* STABLE_FRAGMENT */ &&
                dynamicChildren &&
                // #2715 the previous fragment could've been a BAILed one as a result
                // of renderSlot() with no valid children
                n1.dynamicChildren) {
                // a stable fragment (template root or <template v-for>) doesn't need to
                // patch children order, but it may contain dynamicChildren.
                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);
                if (parentComponent && parentComponent.type.__hmrId) {
                    traverseStaticChildren(n1, n2);
                }
                else if (
                // #2080 if the stable fragment has a key, it's a <template v-for> that may
                //  get moved around. Make sure all root level vnodes inherit el.
                // #2134 or if it's a component root, it may also get moved around
                // as the component is being moved.
                n2.key != null ||
                    (parentComponent && n2 === parentComponent.subTree)) {
                    traverseStaticChildren(n1, n2, true /* shallow */);
                }
            }
            else {
                // keyed / unkeyed, or manual fragments.
                // for keyed & unkeyed, since they are compiler generated from v-for,
                // each child is guaranteed to be a block so the fragment will never
                // have dynamicChildren.
                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);
            }
        }
    };
    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        if (n1 == null) {
            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {
                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);
            }
            else {
                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
            }
        }
        else {
            updateComponent(n1, n2, optimized);
        }
    };
    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));
        if (instance.type.__hmrId) {
            registerHMR(instance);
        }
        {
            pushWarningContext(initialVNode);
            startMeasure(instance, `mount`);
        }
        // inject renderer internals for keepAlive
        if (isKeepAlive(initialVNode)) {
            instance.ctx.renderer = internals;
        }
        // resolve props and slots for setup context
        {
            startMeasure(instance, `init`);
        }
        setupComponent(instance);
        {
            endMeasure(instance, `init`);
        }
        // setup() is async. This component relies on async logic to be resolved
        // before proceeding
        if (instance.asyncDep) {
            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);
            // Give it a placeholder if this is not hydration
            // TODO handle self-defined fallback
            if (!initialVNode.el) {
                const placeholder = (instance.subTree = createVNode(Comment));
                processCommentNode(null, placeholder, container, anchor);
            }
            return;
        }
        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);
        {
            popWarningContext();
            endMeasure(instance, `mount`);
        }
    };
    const updateComponent = (n1, n2, optimized) => {
        const instance = (n2.component = n1.component);
        if (shouldUpdateComponent(n1, n2, optimized)) {
            if (instance.asyncDep &&
                !instance.asyncResolved) {
                // async & still pending - just update props and slots
                // since the component's reactive effect for render isn't set-up yet
                {
                    pushWarningContext(n2);
                }
                updateComponentPreRender(instance, n2, optimized);
                {
                    popWarningContext();
                }
                return;
            }
            else {
                // normal update
                instance.next = n2;
                // in case the child component is also queued, remove it to avoid
                // double updating the same child component in the same flush.
                invalidateJob(instance.update);
                // instance.update is the reactive effect runner.
                instance.update();
            }
        }
        else {
            // no update needed. just copy over properties
            n2.component = n1.component;
            n2.el = n1.el;
            instance.vnode = n2;
        }
    };
    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {
        // create reactive effect for rendering
        instance.update = effect$3(function componentEffect() {
            if (!instance.isMounted) {
                let vnodeHook;
                const { el, props } = initialVNode;
                const { bm, m, parent } = instance;
                // beforeMount hook
                if (bm) {
                    invokeArrayFns(bm);
                }
                // onVnodeBeforeMount
                if ((vnodeHook = props && props.onVnodeBeforeMount)) {
                    invokeVNodeHook(vnodeHook, parent, initialVNode);
                }
                // render
                {
                    startMeasure(instance, `render`);
                }
                const subTree = (instance.subTree = renderComponentRoot(instance));
                {
                    endMeasure(instance, `render`);
                }
                if (el && hydrateNode) {
                    {
                        startMeasure(instance, `hydrate`);
                    }
                    // vnode has adopted host node - perform hydration instead of mount.
                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);
                    {
                        endMeasure(instance, `hydrate`);
                    }
                }
                else {
                    {
                        startMeasure(instance, `patch`);
                    }
                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);
                    {
                        endMeasure(instance, `patch`);
                    }
                    initialVNode.el = subTree.el;
                }
                // mounted hook
                if (m) {
                    queuePostRenderEffect(m, parentSuspense);
                }
                // onVnodeMounted
                if ((vnodeHook = props && props.onVnodeMounted)) {
                    const scopedInitialVNode = initialVNode;
                    queuePostRenderEffect(() => {
                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);
                    }, parentSuspense);
                }
                // activated hook for keep-alive roots.
                // #1742 activated hook must be accessed after first render
                // since the hook may be injected by a child keep-alive
                const { a } = instance;
                if (a &&
                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {
                    queuePostRenderEffect(a, parentSuspense);
                }
                instance.isMounted = true;
                {
                    devtoolsComponentAdded(instance);
                }
                // #2458: deference mount-only object parameters to prevent memleaks
                initialVNode = container = anchor = null;
            }
            else {
                // updateComponent
                // This is triggered by mutation of component's own state (next: null)
                // OR parent calling processComponent (next: VNode)
                let { next, bu, u, parent, vnode } = instance;
                let originNext = next;
                let vnodeHook;
                {
                    pushWarningContext(next || instance.vnode);
                }
                if (next) {
                    next.el = vnode.el;
                    updateComponentPreRender(instance, next, optimized);
                }
                else {
                    next = vnode;
                }
                // beforeUpdate hook
                if (bu) {
                    invokeArrayFns(bu);
                }
                // onVnodeBeforeUpdate
                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {
                    invokeVNodeHook(vnodeHook, parent, next, vnode);
                }
                // render
                {
                    startMeasure(instance, `render`);
                }
                const nextTree = renderComponentRoot(instance);
                {
                    endMeasure(instance, `render`);
                }
                const prevTree = instance.subTree;
                instance.subTree = nextTree;
                {
                    startMeasure(instance, `patch`);
                }
                patch(prevTree, nextTree, 
                // parent may have changed if it's in a teleport
                hostParentNode(prevTree.el), 
                // anchor may have changed if it's in a fragment
                getNextHostNode(prevTree), instance, parentSuspense, isSVG);
                {
                    endMeasure(instance, `patch`);
                }
                next.el = nextTree.el;
                if (originNext === null) {
                    // self-triggered update. In case of HOC, update parent component
                    // vnode el. HOC is indicated by parent instance's subTree pointing
                    // to child component's vnode
                    updateHOCHostEl(instance, nextTree.el);
                }
                // updated hook
                if (u) {
                    queuePostRenderEffect(u, parentSuspense);
                }
                // onVnodeUpdated
                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {
                    queuePostRenderEffect(() => {
                        invokeVNodeHook(vnodeHook, parent, next, vnode);
                    }, parentSuspense);
                }
                {
                    devtoolsComponentUpdated(instance);
                }
                {
                    popWarningContext();
                }
            }
        }, createDevEffectOptions(instance) );
    };
    const updateComponentPreRender = (instance, nextVNode, optimized) => {
        nextVNode.component = instance;
        const prevProps = instance.vnode.props;
        instance.vnode = nextVNode;
        instance.next = null;
        updateProps(instance, nextVNode.props, prevProps, optimized);
        updateSlots(instance, nextVNode.children);
        // props update may have triggered pre-flush watchers.
        // flush them before the render update.
        flushPreFlushCbs(undefined, instance.update);
    };
    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {
        const c1 = n1 && n1.children;
        const prevShapeFlag = n1 ? n1.shapeFlag : 0;
        const c2 = n2.children;
        const { patchFlag, shapeFlag } = n2;
        // fast path
        if (patchFlag > 0) {
            if (patchFlag & 128 /* KEYED_FRAGMENT */) {
                // this could be either fully-keyed or mixed (some keyed some not)
                // presence of patchFlag means children are guaranteed to be arrays
                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                return;
            }
            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {
                // unkeyed
                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                return;
            }
        }
        // children has 3 possibilities: text, array or no children.
        if (shapeFlag & 8 /* TEXT_CHILDREN */) {
            // text children fast path
            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {
                unmountChildren(c1, parentComponent, parentSuspense);
            }
            if (c2 !== c1) {
                hostSetElementText(container, c2);
            }
        }
        else {
            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {
                // prev children was array
                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                    // two arrays, cannot assume anything, do full diff
                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
                else {
                    // no new children, just unmount old
                    unmountChildren(c1, parentComponent, parentSuspense, true);
                }
            }
            else {
                // prev children was text OR null
                // new children is array OR null
                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {
                    hostSetElementText(container, '');
                }
                // mount new if array
                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
            }
        }
    };
    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        c1 = c1 || EMPTY_ARR;
        c2 = c2 || EMPTY_ARR;
        const oldLength = c1.length;
        const newLength = c2.length;
        const commonLength = Math.min(oldLength, newLength);
        let i;
        for (i = 0; i < commonLength; i++) {
            const nextChild = (c2[i] = optimized
                ? cloneIfMounted(c2[i])
                : normalizeVNode(c2[i]));
            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);
        }
        if (oldLength > newLength) {
            // remove old
            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);
        }
        else {
            // mount new
            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);
        }
    };
    // can be all-keyed or mixed
    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {
        let i = 0;
        const l2 = c2.length;
        let e1 = c1.length - 1; // prev ending index
        let e2 = l2 - 1; // next ending index
        // 1. sync from start
        // (a b) c
        // (a b) d e
        while (i <= e1 && i <= e2) {
            const n1 = c1[i];
            const n2 = (c2[i] = optimized
                ? cloneIfMounted(c2[i])
                : normalizeVNode(c2[i]));
            if (isSameVNodeType(n1, n2)) {
                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);
            }
            else {
                break;
            }
            i++;
        }
        // 2. sync from end
        // a (b c)
        // d e (b c)
        while (i <= e1 && i <= e2) {
            const n1 = c1[e1];
            const n2 = (c2[e2] = optimized
                ? cloneIfMounted(c2[e2])
                : normalizeVNode(c2[e2]));
            if (isSameVNodeType(n1, n2)) {
                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);
            }
            else {
                break;
            }
            e1--;
            e2--;
        }
        // 3. common sequence + mount
        // (a b)
        // (a b) c
        // i = 2, e1 = 1, e2 = 2
        // (a b)
        // c (a b)
        // i = 0, e1 = -1, e2 = 0
        if (i > e1) {
            if (i <= e2) {
                const nextPos = e2 + 1;
                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;
                while (i <= e2) {
                    patch(null, (c2[i] = optimized
                        ? cloneIfMounted(c2[i])
                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);
                    i++;
                }
            }
        }
        // 4. common sequence + unmount
        // (a b) c
        // (a b)
        // i = 2, e1 = 2, e2 = 1
        // a (b c)
        // (b c)
        // i = 0, e1 = 0, e2 = -1
        else if (i > e2) {
            while (i <= e1) {
                unmount(c1[i], parentComponent, parentSuspense, true);
                i++;
            }
        }
        // 5. unknown sequence
        // [i ... e1 + 1]: a b [c d e] f g
        // [i ... e2 + 1]: a b [e d c h] f g
        // i = 2, e1 = 4, e2 = 5
        else {
            const s1 = i; // prev starting index
            const s2 = i; // next starting index
            // 5.1 build key:index map for newChildren
            const keyToNewIndexMap = new Map();
            for (i = s2; i <= e2; i++) {
                const nextChild = (c2[i] = optimized
                    ? cloneIfMounted(c2[i])
                    : normalizeVNode(c2[i]));
                if (nextChild.key != null) {
                    if (keyToNewIndexMap.has(nextChild.key)) {
                        warn$1(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);
                    }
                    keyToNewIndexMap.set(nextChild.key, i);
                }
            }
            // 5.2 loop through old children left to be patched and try to patch
            // matching nodes & remove nodes that are no longer present
            let j;
            let patched = 0;
            const toBePatched = e2 - s2 + 1;
            let moved = false;
            // used to track whether any node has moved
            let maxNewIndexSoFar = 0;
            // works as Map<newIndex, oldIndex>
            // Note that oldIndex is offset by +1
            // and oldIndex = 0 is a special value indicating the new node has
            // no corresponding old node.
            // used for determining longest stable subsequence
            const newIndexToOldIndexMap = new Array(toBePatched);
            for (i = 0; i < toBePatched; i++)
                newIndexToOldIndexMap[i] = 0;
            for (i = s1; i <= e1; i++) {
                const prevChild = c1[i];
                if (patched >= toBePatched) {
                    // all new children have been patched so this can only be a removal
                    unmount(prevChild, parentComponent, parentSuspense, true);
                    continue;
                }
                let newIndex;
                if (prevChild.key != null) {
                    newIndex = keyToNewIndexMap.get(prevChild.key);
                }
                else {
                    // key-less node, try to locate a key-less node of the same type
                    for (j = s2; j <= e2; j++) {
                        if (newIndexToOldIndexMap[j - s2] === 0 &&
                            isSameVNodeType(prevChild, c2[j])) {
                            newIndex = j;
                            break;
                        }
                    }
                }
                if (newIndex === undefined) {
                    unmount(prevChild, parentComponent, parentSuspense, true);
                }
                else {
                    newIndexToOldIndexMap[newIndex - s2] = i + 1;
                    if (newIndex >= maxNewIndexSoFar) {
                        maxNewIndexSoFar = newIndex;
                    }
                    else {
                        moved = true;
                    }
                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);
                    patched++;
                }
            }
            // 5.3 move and mount
            // generate longest stable subsequence only when nodes have moved
            const increasingNewIndexSequence = moved
                ? getSequence(newIndexToOldIndexMap)
                : EMPTY_ARR;
            j = increasingNewIndexSequence.length - 1;
            // looping backwards so that we can use last patched node as anchor
            for (i = toBePatched - 1; i >= 0; i--) {
                const nextIndex = s2 + i;
                const nextChild = c2[nextIndex];
                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;
                if (newIndexToOldIndexMap[i] === 0) {
                    // mount new
                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);
                }
                else if (moved) {
                    // move if:
                    // There is no stable subsequence (e.g. a reverse)
                    // OR current node is not among the stable sequence
                    if (j < 0 || i !== increasingNewIndexSequence[j]) {
                        move(nextChild, container, anchor, 2 /* REORDER */);
                    }
                    else {
                        j--;
                    }
                }
            }
        }
    };
    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {
        const { el, type, transition, children, shapeFlag } = vnode;
        if (shapeFlag & 6 /* COMPONENT */) {
            move(vnode.component.subTree, container, anchor, moveType);
            return;
        }
        if (shapeFlag & 128 /* SUSPENSE */) {
            vnode.suspense.move(container, anchor, moveType);
            return;
        }
        if (shapeFlag & 64 /* TELEPORT */) {
            type.move(vnode, container, anchor, internals);
            return;
        }
        if (type === Fragment) {
            hostInsert(el, container, anchor);
            for (let i = 0; i < children.length; i++) {
                move(children[i], container, anchor, moveType);
            }
            hostInsert(vnode.anchor, container, anchor);
            return;
        }
        if (type === Static) {
            moveStaticNode(vnode, container, anchor);
            return;
        }
        // single nodes
        const needTransition = moveType !== 2 /* REORDER */ &&
            shapeFlag & 1 /* ELEMENT */ &&
            transition;
        if (needTransition) {
            if (moveType === 0 /* ENTER */) {
                transition.beforeEnter(el);
                hostInsert(el, container, anchor);
                queuePostRenderEffect(() => transition.enter(el), parentSuspense);
            }
            else {
                const { leave, delayLeave, afterLeave } = transition;
                const remove = () => hostInsert(el, container, anchor);
                const performLeave = () => {
                    leave(el, () => {
                        remove();
                        afterLeave && afterLeave();
                    });
                };
                if (delayLeave) {
                    delayLeave(el, remove, performLeave);
                }
                else {
                    performLeave();
                }
            }
        }
        else {
            hostInsert(el, container, anchor);
        }
    };
    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {
        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;
        // unset ref
        if (ref != null) {
            setRef(ref, null, parentSuspense, null);
        }
        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {
            parentComponent.ctx.deactivate(vnode);
            return;
        }
        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;
        let vnodeHook;
        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {
            invokeVNodeHook(vnodeHook, parentComponent, vnode);
        }
        if (shapeFlag & 6 /* COMPONENT */) {
            unmountComponent(vnode.component, parentSuspense, doRemove);
        }
        else {
            if (shapeFlag & 128 /* SUSPENSE */) {
                vnode.suspense.unmount(parentSuspense, doRemove);
                return;
            }
            if (shouldInvokeDirs) {
                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');
            }
            if (dynamicChildren &&
                // #1153: fast path should not be taken for non-stable (v-for) fragments
                (type !== Fragment ||
                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {
                // fast path for block nodes: only need to unmount dynamic children.
                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);
            }
            else if ((type === Fragment &&
                (patchFlag & 128 /* KEYED_FRAGMENT */ ||
                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||
                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {
                unmountChildren(children, parentComponent, parentSuspense);
            }
            // an unmounted teleport should always remove its children if not disabled
            if (shapeFlag & 64 /* TELEPORT */ &&
                (doRemove || !isTeleportDisabled(vnode.props))) {
                vnode.type.remove(vnode, internals);
            }
            if (doRemove) {
                remove(vnode);
            }
        }
        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {
            queuePostRenderEffect(() => {
                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
                shouldInvokeDirs &&
                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');
            }, parentSuspense);
        }
    };
    const remove = vnode => {
        const { type, el, anchor, transition } = vnode;
        if (type === Fragment) {
            removeFragment(el, anchor);
            return;
        }
        if (type === Static) {
            removeStaticNode(vnode);
            return;
        }
        const performRemove = () => {
            hostRemove(el);
            if (transition && !transition.persisted && transition.afterLeave) {
                transition.afterLeave();
            }
        };
        if (vnode.shapeFlag & 1 /* ELEMENT */ &&
            transition &&
            !transition.persisted) {
            const { leave, delayLeave } = transition;
            const performLeave = () => leave(el, performRemove);
            if (delayLeave) {
                delayLeave(vnode.el, performRemove, performLeave);
            }
            else {
                performLeave();
            }
        }
        else {
            performRemove();
        }
    };
    const removeFragment = (cur, end) => {
        // For fragments, directly remove all contained DOM nodes.
        // (fragment child nodes cannot have transition)
        let next;
        while (cur !== end) {
            next = hostNextSibling(cur);
            hostRemove(cur);
            cur = next;
        }
        hostRemove(end);
    };
    const unmountComponent = (instance, parentSuspense, doRemove) => {
        if (instance.type.__hmrId) {
            unregisterHMR(instance);
        }
        const { bum, effects, update, subTree, um } = instance;
        // beforeUnmount hook
        if (bum) {
            invokeArrayFns(bum);
        }
        if (effects) {
            for (let i = 0; i < effects.length; i++) {
                stop(effects[i]);
            }
        }
        // update may be null if a component is unmounted before its async
        // setup has resolved.
        if (update) {
            stop(update);
            unmount(subTree, instance, parentSuspense, doRemove);
        }
        // unmounted hook
        if (um) {
            queuePostRenderEffect(um, parentSuspense);
        }
        queuePostRenderEffect(() => {
            instance.isUnmounted = true;
        }, parentSuspense);
        // A component with async dep inside a pending suspense is unmounted before
        // its async dep resolves. This should remove the dep from the suspense, and
        // cause the suspense to resolve immediately if that was the last dep.
        if (parentSuspense &&
            parentSuspense.pendingBranch &&
            !parentSuspense.isUnmounted &&
            instance.asyncDep &&
            !instance.asyncResolved &&
            instance.suspenseId === parentSuspense.pendingId) {
            parentSuspense.deps--;
            if (parentSuspense.deps === 0) {
                parentSuspense.resolve();
            }
        }
        {
            devtoolsComponentRemoved(instance);
        }
    };
    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {
        for (let i = start; i < children.length; i++) {
            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);
        }
    };
    const getNextHostNode = vnode => {
        if (vnode.shapeFlag & 6 /* COMPONENT */) {
            return getNextHostNode(vnode.component.subTree);
        }
        if (vnode.shapeFlag & 128 /* SUSPENSE */) {
            return vnode.suspense.next();
        }
        return hostNextSibling((vnode.anchor || vnode.el));
    };
    const render = (vnode, container) => {
        if (vnode == null) {
            if (container._vnode) {
                unmount(container._vnode, null, null, true);
            }
        }
        else {
            patch(container._vnode || null, vnode, container);
        }
        flushPostFlushCbs();
        container._vnode = vnode;
    };
    const internals = {
        p: patch,
        um: unmount,
        m: move,
        r: remove,
        mt: mountComponent,
        mc: mountChildren,
        pc: patchChildren,
        pbc: patchBlockChildren,
        n: getNextHostNode,
        o: options
    };
    let hydrate;
    let hydrateNode;
    if (createHydrationFns) {
        [hydrate, hydrateNode] = createHydrationFns(internals);
    }
    return {
        render,
        hydrate,
        createApp: createAppAPI(render, hydrate)
    };
}
function invokeVNodeHook(hook, instance, vnode, prevVNode = null) {
    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [
        vnode,
        prevVNode
    ]);
}
/**
 * #1156
 * When a component is HMR-enabled, we need to make sure that all static nodes
 * inside a block also inherit the DOM element from the previous tree so that
 * HMR updates (which are full updates) can retrieve the element for patching.
 *
 * #2080
 * Inside keyed `template` fragment static children, if a fragment is moved,
 * the children will always moved so that need inherit el form previous nodes
 * to ensure correct moved position.
 */
function traverseStaticChildren(n1, n2, shallow = false) {
    const ch1 = n1.children;
    const ch2 = n2.children;
    if (isArray$1(ch1) && isArray$1(ch2)) {
        for (let i = 0; i < ch1.length; i++) {
            // this is only called in the optimized path so array children are
            // guaranteed to be vnodes
            const c1 = ch1[i];
            let c2 = ch2[i];
            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {
                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {
                    c2 = ch2[i] = cloneIfMounted(ch2[i]);
                    c2.el = c1.el;
                }
                if (!shallow)
                    traverseStaticChildren(c1, c2);
            }
            // also inherit for comment nodes, but not placeholders (e.g. v-if which
            // would have received .el during block patch)
            if (c2.type === Comment && !c2.el) {
                c2.el = c1.el;
            }
        }
    }
}
// https://en.wikipedia.org/wiki/Longest_increasing_subsequence
function getSequence(arr) {
    const p = arr.slice();
    const result = [0];
    let i, j, u, v, c;
    const len = arr.length;
    for (i = 0; i < len; i++) {
        const arrI = arr[i];
        if (arrI !== 0) {
            j = result[result.length - 1];
            if (arr[j] < arrI) {
                p[i] = j;
                result.push(i);
                continue;
            }
            u = 0;
            v = result.length - 1;
            while (u < v) {
                c = ((u + v) / 2) | 0;
                if (arr[result[c]] < arrI) {
                    u = c + 1;
                }
                else {
                    v = c;
                }
            }
            if (arrI < arr[result[u]]) {
                if (u > 0) {
                    p[i] = result[u - 1];
                }
                result[u] = i;
            }
        }
    }
    u = result.length;
    v = result[u - 1];
    while (u-- > 0) {
        result[u] = v;
        v = p[v];
    }
    return result;
}

const isTeleport = (type) => type.__isTeleport;
const isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');
const isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;
const resolveTarget = (props, select) => {
    const targetSelector = props && props.to;
    if (isString(targetSelector)) {
        if (!select) {
            warn$1(`Current renderer does not support string target for Teleports. ` +
                    `(missing querySelector renderer option)`);
            return null;
        }
        else {
            const target = select(targetSelector);
            if (!target) {
                warn$1(`Failed to locate Teleport target with selector "${targetSelector}". ` +
                        `Note the target element must exist before the component is mounted - ` +
                        `i.e. the target cannot be rendered by the component itself, and ` +
                        `ideally should be outside of the entire Vue component tree.`);
            }
            return target;
        }
    }
    else {
        if (!targetSelector && !isTeleportDisabled(props)) {
            warn$1(`Invalid Teleport target: ${targetSelector}`);
        }
        return targetSelector;
    }
};
const TeleportImpl = {
    __isTeleport: true,
    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {
        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;
        const disabled = isTeleportDisabled(n2.props);
        const { shapeFlag, children } = n2;
        if (n1 == null) {
            // insert anchors in the main view
            const placeholder = (n2.el = createComment('teleport start')
                );
            const mainAnchor = (n2.anchor = createComment('teleport end')
                );
            insert(placeholder, container, anchor);
            insert(mainAnchor, container, anchor);
            const target = (n2.target = resolveTarget(n2.props, querySelector));
            const targetAnchor = (n2.targetAnchor = createText(''));
            if (target) {
                insert(targetAnchor, target);
                // #2652 we could be teleporting from a non-SVG tree into an SVG tree
                isSVG = isSVG || isTargetSVG(target);
            }
            else if (!disabled) {
                warn$1('Invalid Teleport target on mount:', target, `(${typeof target})`);
            }
            const mount = (container, anchor) => {
                // Teleport *always* has Array children. This is enforced in both the
                // compiler and vnode children normalization.
                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
            };
            if (disabled) {
                mount(container, mainAnchor);
            }
            else if (target) {
                mount(target, targetAnchor);
            }
        }
        else {
            // update content
            n2.el = n1.el;
            const mainAnchor = (n2.anchor = n1.anchor);
            const target = (n2.target = n1.target);
            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);
            const wasDisabled = isTeleportDisabled(n1.props);
            const currentContainer = wasDisabled ? container : target;
            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;
            isSVG = isSVG || isTargetSVG(target);
            if (n2.dynamicChildren) {
                // fast path when the teleport happens to be a block root
                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);
                // even in block tree mode we need to make sure all root-level nodes
                // in the teleport inherit previous DOM references so that they can
                // be moved in future patches.
                traverseStaticChildren(n1, n2, true);
            }
            else if (!optimized) {
                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);
            }
            if (disabled) {
                if (!wasDisabled) {
                    // enabled -> disabled
                    // move into main container
                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);
                }
            }
            else {
                // target changed
                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {
                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));
                    if (nextTarget) {
                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);
                    }
                    else {
                        warn$1('Invalid Teleport target on update:', target, `(${typeof target})`);
                    }
                }
                else if (wasDisabled) {
                    // disabled -> enabled
                    // move into teleport target
                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);
                }
            }
        }
    },
    remove(vnode, { r: remove, o: { remove: hostRemove } }) {
        const { shapeFlag, children, anchor } = vnode;
        hostRemove(anchor);
        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
            for (let i = 0; i < children.length; i++) {
                remove(children[i]);
            }
        }
    },
    move: moveTeleport,
    hydrate: hydrateTeleport
};
function moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {
    // move target anchor if this is a target change.
    if (moveType === 0 /* TARGET_CHANGE */) {
        insert(vnode.targetAnchor, container, parentAnchor);
    }
    const { el, anchor, shapeFlag, children, props } = vnode;
    const isReorder = moveType === 2 /* REORDER */;
    // move main view anchor if this is a re-order.
    if (isReorder) {
        insert(el, container, parentAnchor);
    }
    // if this is a re-order and teleport is enabled (content is in target)
    // do not move children. So the opposite is: only move children if this
    // is not a reorder, or the teleport is disabled
    if (!isReorder || isTeleportDisabled(props)) {
        // Teleport has either Array children or no children.
        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
            for (let i = 0; i < children.length; i++) {
                move(children[i], container, parentAnchor, 2 /* REORDER */);
            }
        }
    }
    // move main view anchor if this is a re-order.
    if (isReorder) {
        insert(anchor, container, parentAnchor);
    }
}
function hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {
    const target = (vnode.target = resolveTarget(vnode.props, querySelector));
    if (target) {
        // if multiple teleports rendered to the same target element, we need to
        // pick up from where the last teleport finished instead of the first node
        const targetNode = target._lpa || target.firstChild;
        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {
            if (isTeleportDisabled(vnode.props)) {
                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);
                vnode.targetAnchor = targetNode;
            }
            else {
                vnode.anchor = nextSibling(node);
                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);
            }
            target._lpa =
                vnode.targetAnchor && nextSibling(vnode.targetAnchor);
        }
    }
    return vnode.anchor && nextSibling(vnode.anchor);
}
// Force-casted public typing for h and TSX props inference
const Teleport = TeleportImpl;

const COMPONENTS = 'components';
const DIRECTIVES = 'directives';
/**
 * @private
 */
function resolveComponent(name) {
    return resolveAsset(COMPONENTS, name) || name;
}
const NULL_DYNAMIC_COMPONENT = Symbol();
/**
 * @private
 */
function resolveDynamicComponent(component) {
    if (isString(component)) {
        return resolveAsset(COMPONENTS, component, false) || component;
    }
    else {
        // invalid types will fallthrough to createVNode and raise warning
        return (component || NULL_DYNAMIC_COMPONENT);
    }
}
/**
 * @private
 */
function resolveDirective(name) {
    return resolveAsset(DIRECTIVES, name);
}
// implementation
function resolveAsset(type, name, warnMissing = true) {
    const instance = currentRenderingInstance || currentInstance;
    if (instance) {
        const Component = instance.type;
        // self name has highest priority
        if (type === COMPONENTS) {
            // special self referencing call generated by compiler
            // inferred from SFC filename
            if (name === `_self`) {
                return Component;
            }
            const selfName = getComponentName(Component);
            if (selfName &&
                (selfName === name ||
                    selfName === camelize(name) ||
                    selfName === capitalize(camelize(name)))) {
                return Component;
            }
        }
        const res = 
        // local registration
        // check instance[type] first for components with mixin or extends.
        resolve(instance[type] || Component[type], name) ||
            // global registration
            resolve(instance.appContext[type], name);
        if (warnMissing && !res) {
            warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}`);
        }
        return res;
    }
    else {
        warn$1(`resolve${capitalize(type.slice(0, -1))} ` +
            `can only be used in render() or setup().`);
    }
}
function resolve(registry, name) {
    return (registry &&
        (registry[name] ||
            registry[camelize(name)] ||
            registry[capitalize(camelize(name))]));
}

const Fragment = Symbol('Fragment' );
const Text = Symbol('Text' );
const Comment = Symbol('Comment' );
const Static = Symbol('Static' );
// Since v-if and v-for are the two possible ways node structure can dynamically
// change, once we consider v-if branches and each v-for fragment a block, we
// can divide a template into nested blocks, and within each block the node
// structure would be stable. This allows us to skip most children diffing
// and only worry about the dynamic nodes (indicated by patch flags).
const blockStack = [];
let currentBlock = null;
/**
 * Open a block.
 * This must be called before `createBlock`. It cannot be part of `createBlock`
 * because the children of the block are evaluated before `createBlock` itself
 * is called. The generated code typically looks like this:
 *
 * ```js
 * function render() {
 *   return (openBlock(),createBlock('div', null, [...]))
 * }
 * ```
 * disableTracking is true when creating a v-for fragment block, since a v-for
 * fragment always diffs its children.
 *
 * @private
 */
function openBlock(disableTracking = false) {
    blockStack.push((currentBlock = disableTracking ? null : []));
}
function closeBlock() {
    blockStack.pop();
    currentBlock = blockStack[blockStack.length - 1] || null;
}
/**
 * Create a block root vnode. Takes the same exact arguments as `createVNode`.
 * A block root keeps track of dynamic nodes within the block in the
 * `dynamicChildren` array.
 *
 * @private
 */
function createBlock(type, props, children, patchFlag, dynamicProps) {
    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);
    // save current block children on the block vnode
    vnode.dynamicChildren = currentBlock || EMPTY_ARR;
    // close block
    closeBlock();
    // a block is always going to be patched, so track it as a child of its
    // parent block
    if (currentBlock) {
        currentBlock.push(vnode);
    }
    return vnode;
}
function isVNode(value) {
    return value ? value.__v_isVNode === true : false;
}
function isSameVNodeType(n1, n2) {
    if (n2.shapeFlag & 6 /* COMPONENT */ &&
        hmrDirtyComponents.has(n2.type)) {
        // HMR only: if the component has been hot-updated, force a reload.
        return false;
    }
    return n1.type === n2.type && n1.key === n2.key;
}
const createVNodeWithArgsTransform = (...args) => {
    return _createVNode(...(args));
};
const InternalObjectKey = `__vInternal`;
const normalizeKey = ({ key }) => key != null ? key : null;
const normalizeRef = ({ ref }) => {
    return (ref != null
        ? isString(ref) || isRef(ref) || isFunction$1(ref)
            ? { i: currentRenderingInstance, r: ref }
            : ref
        : null);
};
const createVNode = (createVNodeWithArgsTransform
    );
function _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {
    if (!type || type === NULL_DYNAMIC_COMPONENT) {
        if (!type) {
            warn$1(`Invalid vnode type when creating vnode: ${type}.`);
        }
        type = Comment;
    }
    if (isVNode(type)) {
        // createVNode receiving an existing vnode. This happens in cases like
        // <component :is="vnode"/>
        // #2078 make sure to merge refs during the clone instead of overwriting it
        const cloned = cloneVNode(type, props, true /* mergeRef: true */);
        if (children) {
            normalizeChildren(cloned, children);
        }
        return cloned;
    }
    // class component normalization.
    if (isClassComponent(type)) {
        type = type.__vccOpts;
    }
    // class & style normalization.
    if (props) {
        // for reactive or proxy objects, we need to clone it to enable mutation.
        if (isProxy(props) || InternalObjectKey in props) {
            props = extend({}, props);
        }
        let { class: klass, style } = props;
        if (klass && !isString(klass)) {
            props.class = normalizeClass(klass);
        }
        if (isObject$3(style)) {
            // reactive state objects need to be cloned since they are likely to be
            // mutated
            if (isProxy(style) && !isArray$1(style)) {
                style = extend({}, style);
            }
            props.style = normalizeStyle(style);
        }
    }
    // encode the vnode type information into a bitmap
    const shapeFlag = isString(type)
        ? 1 /* ELEMENT */
        : isSuspense(type)
            ? 128 /* SUSPENSE */
            : isTeleport(type)
                ? 64 /* TELEPORT */
                : isObject$3(type)
                    ? 4 /* STATEFUL_COMPONENT */
                    : isFunction$1(type)
                        ? 2 /* FUNCTIONAL_COMPONENT */
                        : 0;
    if (shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {
        type = toRaw(type);
        warn$1(`Vue received a Component which was made a reactive object. This can ` +
            `lead to unnecessary performance overhead, and should be avoided by ` +
            `marking the component with \`markRaw\` or using \`shallowRef\` ` +
            `instead of \`ref\`.`, `\nComponent that was made reactive: `, type);
    }
    const vnode = {
        __v_isVNode: true,
        ["__v_skip" /* SKIP */]: true,
        type,
        props,
        key: props && normalizeKey(props),
        ref: props && normalizeRef(props),
        scopeId: currentScopeId,
        children: null,
        component: null,
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag,
        patchFlag,
        dynamicProps,
        dynamicChildren: null,
        appContext: null
    };
    // validate key
    if (vnode.key !== vnode.key) {
        warn$1(`VNode created with invalid key (NaN). VNode type:`, vnode.type);
    }
    normalizeChildren(vnode, children);
    // normalize suspense children
    if (shapeFlag & 128 /* SUSPENSE */) {
        const { content, fallback } = normalizeSuspenseChildren(vnode);
        vnode.ssContent = content;
        vnode.ssFallback = fallback;
    }
    if (// avoid a block node from tracking itself
        !isBlockNode &&
        // has current parent block
        currentBlock &&
        // presence of a patch flag indicates this node needs patching on updates.
        // component nodes also should always be patched, because even if the
        // component doesn't need to update, it needs to persist the instance on to
        // the next vnode so that it can be properly unmounted later.
        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&
        // the EVENTS flag is only for hydration and if it is the only flag, the
        // vnode should not be considered dynamic due to handler caching.
        patchFlag !== 32 /* HYDRATE_EVENTS */) {
        currentBlock.push(vnode);
    }
    return vnode;
}
function cloneVNode(vnode, extraProps, mergeRef = false) {
    // This is intentionally NOT using spread or extend to avoid the runtime
    // key enumeration cost.
    const { props, ref, patchFlag, children } = vnode;
    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;
    return {
        __v_isVNode: true,
        ["__v_skip" /* SKIP */]: true,
        type: vnode.type,
        props: mergedProps,
        key: mergedProps && normalizeKey(mergedProps),
        ref: extraProps && extraProps.ref
            ? // #2078 in the case of <component :is="vnode" ref="extra"/>
                // if the vnode itself already has a ref, cloneVNode will need to merge
                // the refs so the single vnode can be set on multiple refs
                mergeRef && ref
                    ? isArray$1(ref)
                        ? ref.concat(normalizeRef(extraProps))
                        : [ref, normalizeRef(extraProps)]
                    : normalizeRef(extraProps)
            : ref,
        scopeId: vnode.scopeId,
        children: patchFlag === -1 /* HOISTED */ && isArray$1(children)
            ? children.map(deepCloneVNode)
            : children,
        target: vnode.target,
        targetAnchor: vnode.targetAnchor,
        staticCount: vnode.staticCount,
        shapeFlag: vnode.shapeFlag,
        // if the vnode is cloned with extra props, we can no longer assume its
        // existing patch flag to be reliable and need to add the FULL_PROPS flag.
        // note: perserve flag for fragments since they use the flag for children
        // fast paths only.
        patchFlag: extraProps && vnode.type !== Fragment
            ? patchFlag === -1 // hoisted node
                ? 16 /* FULL_PROPS */
                : patchFlag | 16 /* FULL_PROPS */
            : patchFlag,
        dynamicProps: vnode.dynamicProps,
        dynamicChildren: vnode.dynamicChildren,
        appContext: vnode.appContext,
        dirs: vnode.dirs,
        transition: vnode.transition,
        // These should technically only be non-null on mounted VNodes. However,
        // they *should* be copied for kept-alive vnodes. So we just always copy
        // them since them being non-null during a mount doesn't affect the logic as
        // they will simply be overwritten.
        component: vnode.component,
        suspense: vnode.suspense,
        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),
        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),
        el: vnode.el,
        anchor: vnode.anchor
    };
}
/**
 * Dev only, for HMR of hoisted vnodes reused in v-for
 * https://github.com/vitejs/vite/issues/2022
 */
function deepCloneVNode(vnode) {
    const cloned = cloneVNode(vnode);
    if (isArray$1(vnode.children)) {
        cloned.children = vnode.children.map(deepCloneVNode);
    }
    return cloned;
}
/**
 * @private
 */
function createTextVNode(text = ' ', flag = 0) {
    return createVNode(Text, null, text, flag);
}
/**
 * @private
 */
function createCommentVNode(text = '', 
// when used as the v-else branch, the comment node must be created as a
// block to ensure correct updates.
asBlock = false) {
    return asBlock
        ? (openBlock(), createBlock(Comment, null, text))
        : createVNode(Comment, null, text);
}
function normalizeVNode(child) {
    if (child == null || typeof child === 'boolean') {
        // empty placeholder
        return createVNode(Comment);
    }
    else if (isArray$1(child)) {
        // fragment
        return createVNode(Fragment, null, child);
    }
    else if (typeof child === 'object') {
        // already vnode, this should be the most common since compiled templates
        // always produce all-vnode children arrays
        return child.el === null ? child : cloneVNode(child);
    }
    else {
        // strings and numbers
        return createVNode(Text, null, String(child));
    }
}
// optimized normalization for template-compiled render fns
function cloneIfMounted(child) {
    return child.el === null ? child : cloneVNode(child);
}
function normalizeChildren(vnode, children) {
    let type = 0;
    const { shapeFlag } = vnode;
    if (children == null) {
        children = null;
    }
    else if (isArray$1(children)) {
        type = 16 /* ARRAY_CHILDREN */;
    }
    else if (typeof children === 'object') {
        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {
            // Normalize slot to plain children for plain element and Teleport
            const slot = children.default;
            if (slot) {
                // _c marker is added by withCtx() indicating this is a compiled slot
                slot._c && setCompiledSlotRendering(1);
                normalizeChildren(vnode, slot());
                slot._c && setCompiledSlotRendering(-1);
            }
            return;
        }
        else {
            type = 32 /* SLOTS_CHILDREN */;
            const slotFlag = children._;
            if (!slotFlag && !(InternalObjectKey in children)) {
                children._ctx = currentRenderingInstance;
            }
            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {
                // a child component receives forwarded slots from the parent.
                // its slot type is determined by its parent's slot type.
                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {
                    children._ = 2 /* DYNAMIC */;
                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;
                }
                else {
                    children._ = 1 /* STABLE */;
                }
            }
        }
    }
    else if (isFunction$1(children)) {
        children = { default: children, _ctx: currentRenderingInstance };
        type = 32 /* SLOTS_CHILDREN */;
    }
    else {
        children = String(children);
        // force teleport children to array so it can be moved around
        if (shapeFlag & 64 /* TELEPORT */) {
            type = 16 /* ARRAY_CHILDREN */;
            children = [createTextVNode(children)];
        }
        else {
            type = 8 /* TEXT_CHILDREN */;
        }
    }
    vnode.children = children;
    vnode.shapeFlag |= type;
}
function mergeProps(...args) {
    const ret = extend({}, args[0]);
    for (let i = 1; i < args.length; i++) {
        const toMerge = args[i];
        for (const key in toMerge) {
            if (key === 'class') {
                if (ret.class !== toMerge.class) {
                    ret.class = normalizeClass([ret.class, toMerge.class]);
                }
            }
            else if (key === 'style') {
                ret.style = normalizeStyle([ret.style, toMerge.style]);
            }
            else if (isOn(key)) {
                const existing = ret[key];
                const incoming = toMerge[key];
                if (existing !== incoming) {
                    ret[key] = existing
                        ? [].concat(existing, toMerge[key])
                        : incoming;
                }
            }
            else if (key !== '') {
                ret[key] = toMerge[key];
            }
        }
    }
    return ret;
}

function provide(key, value) {
    if (!currentInstance) {
        {
            warn$1(`provide() can only be used inside setup().`);
        }
    }
    else {
        let provides = currentInstance.provides;
        // by default an instance inherits its parent's provides object
        // but when it needs to provide values of its own, it creates its
        // own provides object using parent provides object as prototype.
        // this way in `inject` we can simply look up injections from direct
        // parent and let the prototype chain do the work.
        const parentProvides = currentInstance.parent && currentInstance.parent.provides;
        if (parentProvides === provides) {
            provides = currentInstance.provides = Object.create(parentProvides);
        }
        // TS doesn't allow symbol as index type
        provides[key] = value;
    }
}
function inject(key, defaultValue, treatDefaultAsFactory = false) {
    // fallback to `currentRenderingInstance` so that this can be called in
    // a functional component
    const instance = currentInstance || currentRenderingInstance;
    if (instance) {
        // #2400
        // to support `app.use` plugins,
        // fallback to appContext's `provides` if the intance is at root
        const provides = instance.parent == null
            ? instance.vnode.appContext && instance.vnode.appContext.provides
            : instance.parent.provides;
        if (provides && key in provides) {
            // TS doesn't allow symbol as index type
            return provides[key];
        }
        else if (arguments.length > 1) {
            return treatDefaultAsFactory && isFunction$1(defaultValue)
                ? defaultValue()
                : defaultValue;
        }
        else {
            warn$1(`injection "${String(key)}" not found.`);
        }
    }
    else {
        warn$1(`inject() can only be used inside setup() or functional components.`);
    }
}

function createDuplicateChecker() {
    const cache = Object.create(null);
    return (type, key) => {
        if (cache[key]) {
            warn$1(`${type} property "${key}" is already defined in ${cache[key]}.`);
        }
        else {
            cache[key] = type;
        }
    };
}
let isInBeforeCreate = false;
function applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {
    const { 
    // composition
    mixins, extends: extendsOptions, 
    // state
    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, 
    // assets
    components, directives, 
    // lifecycle
    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, 
    // public API
    expose } = options;
    const publicThis = instance.proxy;
    const ctx = instance.ctx;
    const globalMixins = instance.appContext.mixins;
    if (asMixin && render && instance.render === NOOP) {
        instance.render = render;
    }
    // applyOptions is called non-as-mixin once per instance
    if (!asMixin) {
        isInBeforeCreate = true;
        callSyncHook('beforeCreate', "bc" /* BEFORE_CREATE */, options, instance, globalMixins);
        isInBeforeCreate = false;
        // global mixins are applied first
        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);
    }
    // extending a base component...
    if (extendsOptions) {
        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);
    }
    // local mixins
    if (mixins) {
        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);
    }
    const checkDuplicateProperties = createDuplicateChecker() ;
    {
        const [propsOptions] = instance.propsOptions;
        if (propsOptions) {
            for (const key in propsOptions) {
                checkDuplicateProperties("Props" /* PROPS */, key);
            }
        }
    }
    // options initialization order (to be consistent with Vue 2):
    // - props (already done outside of this function)
    // - inject
    // - methods
    // - data (deferred since it relies on `this` access)
    // - computed
    // - watch (deferred since it relies on `this` access)
    if (injectOptions) {
        if (isArray$1(injectOptions)) {
            for (let i = 0; i < injectOptions.length; i++) {
                const key = injectOptions[i];
                ctx[key] = inject(key);
                {
                    checkDuplicateProperties("Inject" /* INJECT */, key);
                }
            }
        }
        else {
            for (const key in injectOptions) {
                const opt = injectOptions[key];
                if (isObject$3(opt)) {
                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);
                }
                else {
                    ctx[key] = inject(opt);
                }
                {
                    checkDuplicateProperties("Inject" /* INJECT */, key);
                }
            }
        }
    }
    if (methods) {
        for (const key in methods) {
            const methodHandler = methods[key];
            if (isFunction$1(methodHandler)) {
                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,
                // and those are read-only but reconfigurable, so it needs to be redefined here
                {
                    Object.defineProperty(ctx, key, {
                        value: methodHandler.bind(publicThis),
                        configurable: true,
                        enumerable: true,
                        writable: true
                    });
                }
                {
                    checkDuplicateProperties("Methods" /* METHODS */, key);
                }
            }
            else {
                warn$1(`Method "${key}" has type "${typeof methodHandler}" in the component definition. ` +
                    `Did you reference the function correctly?`);
            }
        }
    }
    if (!asMixin) {
        if (deferredData.length) {
            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));
        }
        if (dataOptions) {
            // @ts-ignore dataOptions is not fully type safe
            resolveData(instance, dataOptions, publicThis);
        }
        {
            const rawData = toRaw(instance.data);
            for (const key in rawData) {
                checkDuplicateProperties("Data" /* DATA */, key);
                // expose data on ctx during dev
                if (key[0] !== '$' && key[0] !== '_') {
                    Object.defineProperty(ctx, key, {
                        configurable: true,
                        enumerable: true,
                        get: () => rawData[key],
                        set: NOOP
                    });
                }
            }
        }
    }
    else if (dataOptions) {
        deferredData.push(dataOptions);
    }
    if (computedOptions) {
        for (const key in computedOptions) {
            const opt = computedOptions[key];
            const get = isFunction$1(opt)
                ? opt.bind(publicThis, publicThis)
                : isFunction$1(opt.get)
                    ? opt.get.bind(publicThis, publicThis)
                    : NOOP;
            if (get === NOOP) {
                warn$1(`Computed property "${key}" has no getter.`);
            }
            const set = !isFunction$1(opt) && isFunction$1(opt.set)
                ? opt.set.bind(publicThis)
                : () => {
                        warn$1(`Write operation failed: computed property "${key}" is readonly.`);
                    }
                    ;
            const c = computed({
                get,
                set
            });
            Object.defineProperty(ctx, key, {
                enumerable: true,
                configurable: true,
                get: () => c.value,
                set: v => (c.value = v)
            });
            {
                checkDuplicateProperties("Computed" /* COMPUTED */, key);
            }
        }
    }
    if (watchOptions) {
        deferredWatch.push(watchOptions);
    }
    if (!asMixin && deferredWatch.length) {
        deferredWatch.forEach(watchOptions => {
            for (const key in watchOptions) {
                createWatcher(watchOptions[key], ctx, publicThis, key);
            }
        });
    }
    if (provideOptions) {
        deferredProvide.push(provideOptions);
    }
    if (!asMixin && deferredProvide.length) {
        deferredProvide.forEach(provideOptions => {
            const provides = isFunction$1(provideOptions)
                ? provideOptions.call(publicThis)
                : provideOptions;
            Reflect.ownKeys(provides).forEach(key => {
                provide(key, provides[key]);
            });
        });
    }
    // asset options.
    // To reduce memory usage, only components with mixins or extends will have
    // resolved asset registry attached to instance.
    if (asMixin) {
        if (components) {
            extend(instance.components ||
                (instance.components = extend({}, instance.type.components)), components);
        }
        if (directives) {
            extend(instance.directives ||
                (instance.directives = extend({}, instance.type.directives)), directives);
        }
    }
    // lifecycle options
    if (!asMixin) {
        callSyncHook('created', "c" /* CREATED */, options, instance, globalMixins);
    }
    if (beforeMount) {
        onBeforeMount(beforeMount.bind(publicThis));
    }
    if (mounted) {
        onMounted(mounted.bind(publicThis));
    }
    if (beforeUpdate) {
        onBeforeUpdate(beforeUpdate.bind(publicThis));
    }
    if (updated) {
        onUpdated(updated.bind(publicThis));
    }
    if (activated) {
        onActivated(activated.bind(publicThis));
    }
    if (deactivated) {
        onDeactivated(deactivated.bind(publicThis));
    }
    if (errorCaptured) {
        onErrorCaptured(errorCaptured.bind(publicThis));
    }
    if (renderTracked) {
        onRenderTracked(renderTracked.bind(publicThis));
    }
    if (renderTriggered) {
        onRenderTriggered(renderTriggered.bind(publicThis));
    }
    if (beforeDestroy) {
        warn$1(`\`beforeDestroy\` has been renamed to \`beforeUnmount\`.`);
    }
    if (beforeUnmount) {
        onBeforeUnmount(beforeUnmount.bind(publicThis));
    }
    if (destroyed) {
        warn$1(`\`destroyed\` has been renamed to \`unmounted\`.`);
    }
    if (unmounted) {
        onUnmounted(unmounted.bind(publicThis));
    }
    if (isArray$1(expose)) {
        if (!asMixin) {
            if (expose.length) {
                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));
                expose.forEach(key => {
                    exposed[key] = toRef(publicThis, key);
                });
            }
            else if (!instance.exposed) {
                instance.exposed = EMPTY_OBJ;
            }
        }
        else {
            warn$1(`The \`expose\` option is ignored when used in mixins.`);
        }
    }
}
function callSyncHook(name, type, options, instance, globalMixins) {
    callHookFromMixins(name, type, globalMixins, instance);
    const { extends: base, mixins } = options;
    if (base) {
        callHookFromExtends(name, type, base, instance);
    }
    if (mixins) {
        callHookFromMixins(name, type, mixins, instance);
    }
    const selfHook = options[name];
    if (selfHook) {
        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);
    }
}
function callHookFromExtends(name, type, base, instance) {
    if (base.extends) {
        callHookFromExtends(name, type, base.extends, instance);
    }
    const baseHook = base[name];
    if (baseHook) {
        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);
    }
}
function callHookFromMixins(name, type, mixins, instance) {
    for (let i = 0; i < mixins.length; i++) {
        const chainedMixins = mixins[i].mixins;
        if (chainedMixins) {
            callHookFromMixins(name, type, chainedMixins, instance);
        }
        const fn = mixins[i][name];
        if (fn) {
            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);
        }
    }
}
function applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {
    for (let i = 0; i < mixins.length; i++) {
        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);
    }
}
function resolveData(instance, dataFn, publicThis) {
    if (!isFunction$1(dataFn)) {
        warn$1(`The data option must be a function. ` +
            `Plain object usage is no longer supported.`);
    }
    const data = dataFn.call(publicThis, publicThis);
    if (isPromise(data)) {
        warn$1(`data() returned a Promise - note data() cannot be async; If you ` +
            `intend to perform data fetching before component renders, use ` +
            `async setup() + <Suspense>.`);
    }
    if (!isObject$3(data)) {
        warn$1(`data() should return an object.`);
    }
    else if (instance.data === EMPTY_OBJ) {
        instance.data = reactive(data);
    }
    else {
        // existing data: this is a mixin or extends.
        extend(instance.data, data);
    }
}
function createWatcher(raw, ctx, publicThis, key) {
    const getter = key.includes('.')
        ? createPathGetter(publicThis, key)
        : () => publicThis[key];
    if (isString(raw)) {
        const handler = ctx[raw];
        if (isFunction$1(handler)) {
            watch(getter, handler);
        }
        else {
            warn$1(`Invalid watch handler specified by key "${raw}"`, handler);
        }
    }
    else if (isFunction$1(raw)) {
        watch(getter, raw.bind(publicThis));
    }
    else if (isObject$3(raw)) {
        if (isArray$1(raw)) {
            raw.forEach(r => createWatcher(r, ctx, publicThis, key));
        }
        else {
            const handler = isFunction$1(raw.handler)
                ? raw.handler.bind(publicThis)
                : ctx[raw.handler];
            if (isFunction$1(handler)) {
                watch(getter, handler, raw);
            }
            else {
                warn$1(`Invalid watch handler specified by key "${raw.handler}"`, handler);
            }
        }
    }
    else {
        warn$1(`Invalid watch option: "${key}"`, raw);
    }
}
function createPathGetter(ctx, path) {
    const segments = path.split('.');
    return () => {
        let cur = ctx;
        for (let i = 0; i < segments.length && cur; i++) {
            cur = cur[segments[i]];
        }
        return cur;
    };
}
function resolveMergedOptions(instance) {
    const raw = instance.type;
    const { __merged, mixins, extends: extendsOptions } = raw;
    if (__merged)
        return __merged;
    const globalMixins = instance.appContext.mixins;
    if (!globalMixins.length && !mixins && !extendsOptions)
        return raw;
    const options = {};
    globalMixins.forEach(m => mergeOptions$2(options, m, instance));
    mergeOptions$2(options, raw, instance);
    return (raw.__merged = options);
}
function mergeOptions$2(to, from, instance) {
    const strats = instance.appContext.config.optionMergeStrategies;
    const { mixins, extends: extendsOptions } = from;
    extendsOptions && mergeOptions$2(to, extendsOptions, instance);
    mixins &&
        mixins.forEach((m) => mergeOptions$2(to, m, instance));
    for (const key in from) {
        if (strats && hasOwn$1(strats, key)) {
            to[key] = strats[key](to[key], from[key], instance.proxy, key);
        }
        else {
            to[key] = from[key];
        }
    }
}

/**
 * #2437 In Vue 3, functional components do not have a public instance proxy but
 * they exist in the internal parent chain. For code that relies on traversing
 * public $parent chains, skip functional ones and go to the parent instead.
 */
const getPublicInstance = (i) => {
    if (!i)
        return null;
    if (isStatefulComponent(i))
        return i.exposed ? i.exposed : i.proxy;
    return getPublicInstance(i.parent);
};
const publicPropertiesMap = extend(Object.create(null), {
    $: i => i,
    $el: i => i.vnode.el,
    $data: i => i.data,
    $props: i => (shallowReadonly(i.props) ),
    $attrs: i => (shallowReadonly(i.attrs) ),
    $slots: i => (shallowReadonly(i.slots) ),
    $refs: i => (shallowReadonly(i.refs) ),
    $parent: i => getPublicInstance(i.parent),
    $root: i => getPublicInstance(i.root),
    $emit: i => i.emit,
    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),
    $forceUpdate: i => () => queueJob(i.update),
    $nextTick: i => nextTick.bind(i.proxy),
    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)
});
const PublicInstanceProxyHandlers = {
    get({ _: instance }, key) {
        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
        // let @vue/reactivity know it should never observe Vue public instances.
        if (key === "__v_skip" /* SKIP */) {
            return true;
        }
        // for internal formatters to know that this is a Vue instance
        if (key === '__isVue') {
            return true;
        }
        // data / props / ctx
        // This getter gets called for every property access on the render context
        // during render and is a major hotspot. The most expensive part of this
        // is the multiple hasOwn() calls. It's much faster to do a simple property
        // access on a plain object, so we use an accessCache object (with null
        // prototype) to memoize what access type a key corresponds to.
        let normalizedProps;
        if (key[0] !== '$') {
            const n = accessCache[key];
            if (n !== undefined) {
                switch (n) {
                    case 0 /* SETUP */:
                        return setupState[key];
                    case 1 /* DATA */:
                        return data[key];
                    case 3 /* CONTEXT */:
                        return ctx[key];
                    case 2 /* PROPS */:
                        return props[key];
                    // default: just fallthrough
                }
            }
            else if (setupState !== EMPTY_OBJ && hasOwn$1(setupState, key)) {
                accessCache[key] = 0 /* SETUP */;
                return setupState[key];
            }
            else if (data !== EMPTY_OBJ && hasOwn$1(data, key)) {
                accessCache[key] = 1 /* DATA */;
                return data[key];
            }
            else if (
            // only cache other properties when instance has declared (thus stable)
            // props
            (normalizedProps = instance.propsOptions[0]) &&
                hasOwn$1(normalizedProps, key)) {
                accessCache[key] = 2 /* PROPS */;
                return props[key];
            }
            else if (ctx !== EMPTY_OBJ && hasOwn$1(ctx, key)) {
                accessCache[key] = 3 /* CONTEXT */;
                return ctx[key];
            }
            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {
                accessCache[key] = 4 /* OTHER */;
            }
        }
        const publicGetter = publicPropertiesMap[key];
        let cssModule, globalProperties;
        // public $xxx properties
        if (publicGetter) {
            if (key === '$attrs') {
                track(instance, "get" /* GET */, key);
                markAttrsAccessed();
            }
            return publicGetter(instance);
        }
        else if (
        // css module (injected by vue-loader)
        (cssModule = type.__cssModules) &&
            (cssModule = cssModule[key])) {
            return cssModule;
        }
        else if (ctx !== EMPTY_OBJ && hasOwn$1(ctx, key)) {
            // user may set custom properties to `this` that start with `$`
            accessCache[key] = 3 /* CONTEXT */;
            return ctx[key];
        }
        else if (
        // global properties
        ((globalProperties = appContext.config.globalProperties),
            hasOwn$1(globalProperties, key))) {
            return globalProperties[key];
        }
        else if (currentRenderingInstance &&
            (!isString(key) ||
                // #1091 avoid internal isRef/isVNode checks on component instance leading
                // to infinite warning loop
                key.indexOf('__v') !== 0)) {
            if (data !== EMPTY_OBJ &&
                (key[0] === '$' || key[0] === '_') &&
                hasOwn$1(data, key)) {
                warn$1(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +
                    `character ("$" or "_") and is not proxied on the render context.`);
            }
            else if (instance === currentRenderingInstance) {
                warn$1(`Property ${JSON.stringify(key)} was accessed during render ` +
                    `but is not defined on instance.`);
            }
        }
    },
    set({ _: instance }, key, value) {
        const { data, setupState, ctx } = instance;
        if (setupState !== EMPTY_OBJ && hasOwn$1(setupState, key)) {
            setupState[key] = value;
        }
        else if (data !== EMPTY_OBJ && hasOwn$1(data, key)) {
            data[key] = value;
        }
        else if (hasOwn$1(instance.props, key)) {
            warn$1(`Attempting to mutate prop "${key}". Props are readonly.`, instance);
            return false;
        }
        if (key[0] === '$' && key.slice(1) in instance) {
            warn$1(`Attempting to mutate public property "${key}". ` +
                    `Properties starting with $ are reserved and readonly.`, instance);
            return false;
        }
        else {
            if (key in instance.appContext.config.globalProperties) {
                Object.defineProperty(ctx, key, {
                    enumerable: true,
                    configurable: true,
                    value
                });
            }
            else {
                ctx[key] = value;
            }
        }
        return true;
    },
    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {
        let normalizedProps;
        return (accessCache[key] !== undefined ||
            (data !== EMPTY_OBJ && hasOwn$1(data, key)) ||
            (setupState !== EMPTY_OBJ && hasOwn$1(setupState, key)) ||
            ((normalizedProps = propsOptions[0]) && hasOwn$1(normalizedProps, key)) ||
            hasOwn$1(ctx, key) ||
            hasOwn$1(publicPropertiesMap, key) ||
            hasOwn$1(appContext.config.globalProperties, key));
    }
};
{
    PublicInstanceProxyHandlers.ownKeys = (target) => {
        warn$1(`Avoid app logic that relies on enumerating keys on a component instance. ` +
            `The keys will be empty in production mode to avoid performance overhead.`);
        return Reflect.ownKeys(target);
    };
}
const RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {
    get(target, key) {
        // fast path for unscopables when using `with` block
        if (key === Symbol.unscopables) {
            return;
        }
        return PublicInstanceProxyHandlers.get(target, key, target);
    },
    has(_, key) {
        const has = key[0] !== '_' && !isGloballyWhitelisted(key);
        if (!has && PublicInstanceProxyHandlers.has(_, key)) {
            warn$1(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);
        }
        return has;
    }
});
// In dev mode, the proxy target exposes the same properties as seen on `this`
// for easier console inspection. In prod mode it will be an empty object so
// these properties definitions can be skipped.
function createRenderContext(instance) {
    const target = {};
    // expose internal instance for proxy handlers
    Object.defineProperty(target, `_`, {
        configurable: true,
        enumerable: false,
        get: () => instance
    });
    // expose public properties
    Object.keys(publicPropertiesMap).forEach(key => {
        Object.defineProperty(target, key, {
            configurable: true,
            enumerable: false,
            get: () => publicPropertiesMap[key](instance),
            // intercepted by the proxy so no need for implementation,
            // but needed to prevent set errors
            set: NOOP
        });
    });
    // expose global properties
    const { globalProperties } = instance.appContext.config;
    Object.keys(globalProperties).forEach(key => {
        Object.defineProperty(target, key, {
            configurable: true,
            enumerable: false,
            get: () => globalProperties[key],
            set: NOOP
        });
    });
    return target;
}
// dev only
function exposePropsOnRenderContext(instance) {
    const { ctx, propsOptions: [propsOptions] } = instance;
    if (propsOptions) {
        Object.keys(propsOptions).forEach(key => {
            Object.defineProperty(ctx, key, {
                enumerable: true,
                configurable: true,
                get: () => instance.props[key],
                set: NOOP
            });
        });
    }
}
// dev only
function exposeSetupStateOnRenderContext(instance) {
    const { ctx, setupState } = instance;
    Object.keys(toRaw(setupState)).forEach(key => {
        if (key[0] === '$' || key[0] === '_') {
            warn$1(`setup() return property ${JSON.stringify(key)} should not start with "$" or "_" ` +
                `which are reserved prefixes for Vue internals.`);
            return;
        }
        Object.defineProperty(ctx, key, {
            enumerable: true,
            configurable: true,
            get: () => setupState[key],
            set: NOOP
        });
    });
}

const emptyAppContext = createAppContext();
let uid$1 = 0;
function createComponentInstance(vnode, parent, suspense) {
    const type = vnode.type;
    // inherit parent app context - or - if root, adopt from root vnode
    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
    const instance = {
        uid: uid$1++,
        vnode,
        type,
        parent,
        appContext,
        root: null,
        next: null,
        subTree: null,
        update: null,
        render: null,
        proxy: null,
        exposed: null,
        withProxy: null,
        effects: null,
        provides: parent ? parent.provides : Object.create(appContext.provides),
        accessCache: null,
        renderCache: [],
        // local resovled assets
        components: null,
        directives: null,
        // resolved props and emits options
        propsOptions: normalizePropsOptions(type, appContext),
        emitsOptions: normalizeEmitsOptions(type, appContext),
        // emit
        emit: null,
        emitted: null,
        // state
        ctx: EMPTY_OBJ,
        data: EMPTY_OBJ,
        props: EMPTY_OBJ,
        attrs: EMPTY_OBJ,
        slots: EMPTY_OBJ,
        refs: EMPTY_OBJ,
        setupState: EMPTY_OBJ,
        setupContext: null,
        // suspense related
        suspense,
        suspenseId: suspense ? suspense.pendingId : 0,
        asyncDep: null,
        asyncResolved: false,
        // lifecycle hooks
        // not using enums here because it results in computed properties
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null
    };
    {
        instance.ctx = createRenderContext(instance);
    }
    instance.root = parent ? parent.root : instance;
    instance.emit = emit.bind(null, instance);
    return instance;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
const setCurrentInstance = (instance) => {
    currentInstance = instance;
};
const isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');
function validateComponentName(name, config) {
    const appIsNativeTag = config.isNativeTag || NO;
    if (isBuiltInTag(name) || appIsNativeTag(name)) {
        warn$1('Do not use built-in or reserved HTML elements as component id: ' + name);
    }
}
function isStatefulComponent(instance) {
    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;
}
let isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false) {
    isInSSRComponentSetup = isSSR;
    const { props, children } = instance.vnode;
    const isStateful = isStatefulComponent(instance);
    initProps(instance, props, isStateful, isSSR);
    initSlots(instance, children);
    const setupResult = isStateful
        ? setupStatefulComponent(instance, isSSR)
        : undefined;
    isInSSRComponentSetup = false;
    return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
    const Component = instance.type;
    {
        if (Component.name) {
            validateComponentName(Component.name, instance.appContext.config);
        }
        if (Component.components) {
            const names = Object.keys(Component.components);
            for (let i = 0; i < names.length; i++) {
                validateComponentName(names[i], instance.appContext.config);
            }
        }
        if (Component.directives) {
            const names = Object.keys(Component.directives);
            for (let i = 0; i < names.length; i++) {
                validateDirectiveName(names[i]);
            }
        }
    }
    // 0. create render proxy property access cache
    instance.accessCache = Object.create(null);
    // 1. create public instance / render proxy
    // also mark it raw so it's never observed
    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);
    {
        exposePropsOnRenderContext(instance);
    }
    // 2. call setup()
    const { setup } = Component;
    if (setup) {
        const setupContext = (instance.setupContext =
            setup.length > 1 ? createSetupContext(instance) : null);
        currentInstance = instance;
        pauseTracking();
        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [shallowReadonly(instance.props) , setupContext]);
        resetTracking();
        currentInstance = null;
        if (isPromise(setupResult)) {
            if (isSSR) {
                // return the promise so server-renderer can wait on it
                return setupResult.then((resolvedResult) => {
                    handleSetupResult(instance, resolvedResult);
                });
            }
            else {
                // async setup returned Promise.
                // bail here and wait for re-entry.
                instance.asyncDep = setupResult;
            }
        }
        else {
            handleSetupResult(instance, setupResult);
        }
    }
    else {
        finishComponentSetup(instance);
    }
}
function handleSetupResult(instance, setupResult, isSSR) {
    if (isFunction$1(setupResult)) {
        // setup returned an inline render function
        {
            instance.render = setupResult;
        }
    }
    else if (isObject$3(setupResult)) {
        if (isVNode(setupResult)) {
            warn$1(`setup() should not return VNodes directly - ` +
                `return a render function instead.`);
        }
        // setup returned bindings.
        // assuming a render function compiled from template is present.
        {
            instance.devtoolsRawSetupState = setupResult;
        }
        instance.setupState = proxyRefs(setupResult);
        {
            exposeSetupStateOnRenderContext(instance);
        }
    }
    else if (setupResult !== undefined) {
        warn$1(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);
    }
    finishComponentSetup(instance);
}
function finishComponentSetup(instance, isSSR) {
    const Component = instance.type;
    // template / render function normalization
    if (!instance.render) {
        instance.render = (Component.render || NOOP);
        // for runtime-compiled render functions using `with` blocks, the render
        // proxy used needs a different `has` handler which is more performant and
        // also only allows a whitelist of globals to fallthrough.
        if (instance.render._rc) {
            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);
        }
    }
    // support for 2.x options
    if (__VUE_OPTIONS_API__) {
        currentInstance = instance;
        pauseTracking();
        applyOptions(instance, Component);
        resetTracking();
        currentInstance = null;
    }
    // warn missing template/render
    if (!Component.render && instance.render === NOOP) {
        /* istanbul ignore if */
        if (Component.template) {
            warn$1(`Component provided template option but ` +
                `runtime compilation is not supported in this build of Vue.` +
                (` Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`
                    ) /* should not happen */);
        }
        else {
            warn$1(`Component is missing template or render function.`);
        }
    }
}
const attrHandlers = {
    get: (target, key) => {
        {
            markAttrsAccessed();
        }
        return target[key];
    },
    set: () => {
        warn$1(`setupContext.attrs is readonly.`);
        return false;
    },
    deleteProperty: () => {
        warn$1(`setupContext.attrs is readonly.`);
        return false;
    }
};
function createSetupContext(instance) {
    const expose = exposed => {
        if (instance.exposed) {
            warn$1(`expose() should be called only once per setup().`);
        }
        instance.exposed = proxyRefs(exposed);
    };
    {
        // We use getters in dev in case libs like test-utils overwrite instance
        // properties (overwrites should not be done in prod)
        return Object.freeze({
            get props() {
                return instance.props;
            },
            get attrs() {
                return new Proxy(instance.attrs, attrHandlers);
            },
            get slots() {
                return shallowReadonly(instance.slots);
            },
            get emit() {
                return (event, ...args) => instance.emit(event, ...args);
            },
            expose
        });
    }
}
// record effects created during a component's setup() so that they can be
// stopped when the component unmounts
function recordInstanceBoundEffect(effect, instance = currentInstance) {
    if (instance) {
        (instance.effects || (instance.effects = [])).push(effect);
    }
}
const classifyRE = /(?:^|[-_])(\w)/g;
const classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');
function getComponentName(Component) {
    return isFunction$1(Component)
        ? Component.displayName || Component.name
        : Component.name;
}
/* istanbul ignore next */
function formatComponentName(instance, Component, isRoot = false) {
    let name = getComponentName(Component);
    if (!name && Component.__file) {
        const match = Component.__file.match(/([^/\\]+)\.\w+$/);
        if (match) {
            name = match[1];
        }
    }
    if (!name && instance && instance.parent) {
        // try to infer the name based on reverse resolution
        const inferFromRegistry = (registry) => {
            for (const key in registry) {
                if (registry[key] === Component) {
                    return key;
                }
            }
        };
        name =
            inferFromRegistry(instance.components ||
                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);
    }
    return name ? classify(name) : isRoot ? `App` : `Anonymous`;
}
function isClassComponent(value) {
    return isFunction$1(value) && '__vccOpts' in value;
}

function computed(getterOrOptions) {
    const c = computed$1(getterOrOptions);
    recordInstanceBoundEffect(c.effect);
    return c;
}

// Actual implementation
function h(type, propsOrChildren, children) {
    const l = arguments.length;
    if (l === 2) {
        if (isObject$3(propsOrChildren) && !isArray$1(propsOrChildren)) {
            // single vnode without props
            if (isVNode(propsOrChildren)) {
                return createVNode(type, null, [propsOrChildren]);
            }
            // props without children
            return createVNode(type, propsOrChildren);
        }
        else {
            // omit props
            return createVNode(type, null, propsOrChildren);
        }
    }
    else {
        if (l > 3) {
            children = Array.prototype.slice.call(arguments, 2);
        }
        else if (l === 3 && isVNode(children)) {
            children = [children];
        }
        return createVNode(type, propsOrChildren, children);
    }
}

function initCustomFormatter() {
    /* eslint-disable no-restricted-globals */
    if (typeof window === 'undefined') {
        return;
    }
    const vueStyle = { style: 'color:#3ba776' };
    const numberStyle = { style: 'color:#0b1bc9' };
    const stringStyle = { style: 'color:#b62e24' };
    const keywordStyle = { style: 'color:#9d288c' };
    // custom formatter for Chrome
    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html
    const formatter = {
        header(obj) {
            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup
            if (!isObject$3(obj)) {
                return null;
            }
            if (obj.__isVue) {
                return ['div', vueStyle, `VueInstance`];
            }
            else if (isRef(obj)) {
                return [
                    'div',
                    {},
                    ['span', vueStyle, genRefFlag(obj)],
                    '<',
                    formatValue(obj.value),
                    `>`
                ];
            }
            else if (isReactive(obj)) {
                return [
                    'div',
                    {},
                    ['span', vueStyle, 'Reactive'],
                    '<',
                    formatValue(obj),
                    `>${isReadonly(obj) ? ` (readonly)` : ``}`
                ];
            }
            else if (isReadonly(obj)) {
                return [
                    'div',
                    {},
                    ['span', vueStyle, 'Readonly'],
                    '<',
                    formatValue(obj),
                    '>'
                ];
            }
            return null;
        },
        hasBody(obj) {
            return obj && obj.__isVue;
        },
        body(obj) {
            if (obj && obj.__isVue) {
                return [
                    'div',
                    {},
                    ...formatInstance(obj.$)
                ];
            }
        }
    };
    function formatInstance(instance) {
        const blocks = [];
        if (instance.type.props && instance.props) {
            blocks.push(createInstanceBlock('props', toRaw(instance.props)));
        }
        if (instance.setupState !== EMPTY_OBJ) {
            blocks.push(createInstanceBlock('setup', instance.setupState));
        }
        if (instance.data !== EMPTY_OBJ) {
            blocks.push(createInstanceBlock('data', toRaw(instance.data)));
        }
        const computed = extractKeys(instance, 'computed');
        if (computed) {
            blocks.push(createInstanceBlock('computed', computed));
        }
        const injected = extractKeys(instance, 'inject');
        if (injected) {
            blocks.push(createInstanceBlock('injected', injected));
        }
        blocks.push([
            'div',
            {},
            [
                'span',
                {
                    style: keywordStyle.style + ';opacity:0.66'
                },
                '$ (internal): '
            ],
            ['object', { object: instance }]
        ]);
        return blocks;
    }
    function createInstanceBlock(type, target) {
        target = extend({}, target);
        if (!Object.keys(target).length) {
            return ['span', {}];
        }
        return [
            'div',
            { style: 'line-height:1.25em;margin-bottom:0.6em' },
            [
                'div',
                {
                    style: 'color:#476582'
                },
                type
            ],
            [
                'div',
                {
                    style: 'padding-left:1.25em'
                },
                ...Object.keys(target).map(key => {
                    return [
                        'div',
                        {},
                        ['span', keywordStyle, key + ': '],
                        formatValue(target[key], false)
                    ];
                })
            ]
        ];
    }
    function formatValue(v, asRaw = true) {
        if (typeof v === 'number') {
            return ['span', numberStyle, v];
        }
        else if (typeof v === 'string') {
            return ['span', stringStyle, JSON.stringify(v)];
        }
        else if (typeof v === 'boolean') {
            return ['span', keywordStyle, v];
        }
        else if (isObject$3(v)) {
            return ['object', { object: asRaw ? toRaw(v) : v }];
        }
        else {
            return ['span', stringStyle, String(v)];
        }
    }
    function extractKeys(instance, type) {
        const Comp = instance.type;
        if (isFunction$1(Comp)) {
            return;
        }
        const extracted = {};
        for (const key in instance.ctx) {
            if (isKeyOfType(Comp, key, type)) {
                extracted[key] = instance.ctx[key];
            }
        }
        return extracted;
    }
    function isKeyOfType(Comp, key, type) {
        const opts = Comp[type];
        if ((isArray$1(opts) && opts.includes(key)) ||
            (isObject$3(opts) && key in opts)) {
            return true;
        }
        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {
            return true;
        }
        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {
            return true;
        }
    }
    function genRefFlag(v) {
        if (v._shallow) {
            return `ShallowRef`;
        }
        if (v.effect) {
            return `ComputedRef`;
        }
        return `Ref`;
    }
    if (window.devtoolsFormatters) {
        window.devtoolsFormatters.push(formatter);
    }
    else {
        window.devtoolsFormatters = [formatter];
    }
}

/**
 * Actual implementation
 */
function renderList(source, renderItem) {
    let ret;
    if (isArray$1(source) || isString(source)) {
        ret = new Array(source.length);
        for (let i = 0, l = source.length; i < l; i++) {
            ret[i] = renderItem(source[i], i);
        }
    }
    else if (typeof source === 'number') {
        if (!Number.isInteger(source)) {
            warn$1(`The v-for range expect an integer value but got ${source}.`);
            return [];
        }
        ret = new Array(source);
        for (let i = 0; i < source; i++) {
            ret[i] = renderItem(i + 1, i);
        }
    }
    else if (isObject$3(source)) {
        if (source[Symbol.iterator]) {
            ret = Array.from(source, renderItem);
        }
        else {
            const keys = Object.keys(source);
            ret = new Array(keys.length);
            for (let i = 0, l = keys.length; i < l; i++) {
                const key = keys[i];
                ret[i] = renderItem(source[key], key, i);
            }
        }
    }
    else {
        ret = [];
    }
    return ret;
}

/**
 * For prefixing keys in v-on="obj" with "on"
 * @private
 */
function toHandlers(obj) {
    const ret = {};
    if (!isObject$3(obj)) {
        warn$1(`v-on with no argument expects an object value.`);
        return ret;
    }
    for (const key in obj) {
        ret[toHandlerKey(key)] = obj[key];
    }
    return ret;
}

/**
 * Compiler runtime helper for creating dynamic slots object
 * @private
 */
function createSlots(slots, dynamicSlots) {
    for (let i = 0; i < dynamicSlots.length; i++) {
        const slot = dynamicSlots[i];
        // array of dynamic slot generated by <template v-for="..." #[...]>
        if (isArray$1(slot)) {
            for (let j = 0; j < slot.length; j++) {
                slots[slot[j].name] = slot[j].fn;
            }
        }
        else if (slot) {
            // conditional single slot generated by <template v-if="..." #foo>
            slots[slot.name] = slot.fn;
        }
    }
    return slots;
}

// Core API ------------------------------------------------------------------
const version$1 = "3.0.7";

const svgNS = 'http://www.w3.org/2000/svg';
const doc = (typeof document !== 'undefined' ? document : null);
let tempContainer;
let tempSVGContainer;
const nodeOps = {
    insert: (child, parent, anchor) => {
        parent.insertBefore(child, anchor || null);
    },
    remove: child => {
        const parent = child.parentNode;
        if (parent) {
            parent.removeChild(child);
        }
    },
    createElement: (tag, isSVG, is) => isSVG
        ? doc.createElementNS(svgNS, tag)
        : doc.createElement(tag, is ? { is } : undefined),
    createText: text => doc.createTextNode(text),
    createComment: text => doc.createComment(text),
    setText: (node, text) => {
        node.nodeValue = text;
    },
    setElementText: (el, text) => {
        el.textContent = text;
    },
    parentNode: node => node.parentNode,
    nextSibling: node => node.nextSibling,
    querySelector: selector => doc.querySelector(selector),
    setScopeId(el, id) {
        el.setAttribute(id, '');
    },
    cloneNode(el) {
        return el.cloneNode(true);
    },
    // __UNSAFE__
    // Reason: innerHTML.
    // Static content here can only come from compiled templates.
    // As long as the user only uses trusted templates, this is safe.
    insertStaticContent(content, parent, anchor, isSVG) {
        const temp = isSVG
            ? tempSVGContainer ||
                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))
            : tempContainer || (tempContainer = doc.createElement('div'));
        temp.innerHTML = content;
        const first = temp.firstChild;
        let node = first;
        let last = node;
        while (node) {
            last = node;
            nodeOps.insert(node, parent, anchor);
            node = temp.firstChild;
        }
        return [first, last];
    }
};

// compiler should normalize class + :class bindings on the same element
// into a single binding ['staticClass', dynamic]
function patchClass(el, value, isSVG) {
    if (value == null) {
        value = '';
    }
    if (isSVG) {
        el.setAttribute('class', value);
    }
    else {
        // directly setting className should be faster than setAttribute in theory
        // if this is an element during a transition, take the temporary transition
        // classes into account.
        const transitionClasses = el._vtc;
        if (transitionClasses) {
            value = (value
                ? [value, ...transitionClasses]
                : [...transitionClasses]).join(' ');
        }
        el.className = value;
    }
}

function patchStyle(el, prev, next) {
    const style = el.style;
    if (!next) {
        el.removeAttribute('style');
    }
    else if (isString(next)) {
        if (prev !== next) {
            const current = style.display;
            style.cssText = next;
            // indicates that the `display` of the element is controlled by `v-show`,
            // so we always keep the current `display` value regardless of the `style` value,
            // thus handing over control to `v-show`.
            if ('_vod' in el) {
                style.display = current;
            }
        }
    }
    else {
        for (const key in next) {
            setStyle(style, key, next[key]);
        }
        if (prev && !isString(prev)) {
            for (const key in prev) {
                if (next[key] == null) {
                    setStyle(style, key, '');
                }
            }
        }
    }
}
const importantRE = /\s*!important$/;
function setStyle(style, name, val) {
    if (isArray$1(val)) {
        val.forEach(v => setStyle(style, name, v));
    }
    else {
        if (name.startsWith('--')) {
            // custom property definition
            style.setProperty(name, val);
        }
        else {
            const prefixed = autoPrefix(style, name);
            if (importantRE.test(val)) {
                // !important
                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');
            }
            else {
                style[prefixed] = val;
            }
        }
    }
}
const prefixes = ['Webkit', 'Moz', 'ms'];
const prefixCache = {};
function autoPrefix(style, rawName) {
    const cached = prefixCache[rawName];
    if (cached) {
        return cached;
    }
    let name = camelize(rawName);
    if (name !== 'filter' && name in style) {
        return (prefixCache[rawName] = name);
    }
    name = capitalize(name);
    for (let i = 0; i < prefixes.length; i++) {
        const prefixed = prefixes[i] + name;
        if (prefixed in style) {
            return (prefixCache[rawName] = prefixed);
        }
    }
    return rawName;
}

const xlinkNS = 'http://www.w3.org/1999/xlink';
function patchAttr(el, key, value, isSVG) {
    if (isSVG && key.startsWith('xlink:')) {
        if (value == null) {
            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));
        }
        else {
            el.setAttributeNS(xlinkNS, key, value);
        }
    }
    else {
        // note we are only checking boolean attributes that don't have a
        // corresponding dom prop of the same name here.
        const isBoolean = isSpecialBooleanAttr(key);
        if (value == null || (isBoolean && value === false)) {
            el.removeAttribute(key);
        }
        else {
            el.setAttribute(key, isBoolean ? '' : value);
        }
    }
}

// __UNSAFE__
// functions. The user is responsible for using them with only trusted content.
function patchDOMProp(el, key, value, 
// the following args are passed only due to potential innerHTML/textContent
// overriding existing VNodes, in which case the old tree must be properly
// unmounted.
prevChildren, parentComponent, parentSuspense, unmountChildren) {
    if (key === 'innerHTML' || key === 'textContent') {
        if (prevChildren) {
            unmountChildren(prevChildren, parentComponent, parentSuspense);
        }
        el[key] = value == null ? '' : value;
        return;
    }
    if (key === 'value' && el.tagName !== 'PROGRESS') {
        // store value as _value as well since
        // non-string values will be stringified.
        el._value = value;
        const newValue = value == null ? '' : value;
        if (el.value !== newValue) {
            el.value = newValue;
        }
        return;
    }
    if (value === '' || value == null) {
        const type = typeof el[key];
        if (value === '' && type === 'boolean') {
            // e.g. <select multiple> compiles to { multiple: '' }
            el[key] = true;
            return;
        }
        else if (value == null && type === 'string') {
            // e.g. <div :id="null">
            el[key] = '';
            el.removeAttribute(key);
            return;
        }
        else if (type === 'number') {
            // e.g. <img :width="null">
            el[key] = 0;
            el.removeAttribute(key);
            return;
        }
    }
    // some properties perform value validation and throw
    try {
        el[key] = value;
    }
    catch (e) {
        {
            warn$1(`Failed setting prop "${key}" on <${el.tagName.toLowerCase()}>: ` +
                `value ${value} is invalid.`, e);
        }
    }
}

// Async edge case fix requires storing an event listener's attach timestamp.
let _getNow = Date.now;
// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
if (typeof document !== 'undefined' &&
    _getNow() > document.createEvent('Event').timeStamp) {
    // if the low-res timestamp which is bigger than the event timestamp
    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listeners as well.
    _getNow = () => performance.now();
}
// To avoid the overhead of repeatedly calling performance.now(), we cache
// and use the same timestamp for all event listeners attached in the same tick.
let cachedNow = 0;
const p = Promise.resolve();
const reset = () => {
    cachedNow = 0;
};
const getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));
function addEventListener$1(el, event, handler, options) {
    el.addEventListener(event, handler, options);
}
function removeEventListener$1(el, event, handler, options) {
    el.removeEventListener(event, handler, options);
}
function patchEvent(el, rawName, prevValue, nextValue, instance = null) {
    // vei = vue event invokers
    const invokers = el._vei || (el._vei = {});
    const existingInvoker = invokers[rawName];
    if (nextValue && existingInvoker) {
        // patch
        existingInvoker.value = nextValue;
    }
    else {
        const [name, options] = parseName(rawName);
        if (nextValue) {
            // add
            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));
            addEventListener$1(el, name, invoker, options);
        }
        else if (existingInvoker) {
            // remove
            removeEventListener$1(el, name, existingInvoker, options);
            invokers[rawName] = undefined;
        }
    }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(name) {
    let options;
    if (optionsModifierRE.test(name)) {
        options = {};
        let m;
        while ((m = name.match(optionsModifierRE))) {
            name = name.slice(0, name.length - m[0].length);
            options[m[0].toLowerCase()] = true;
        }
    }
    return [hyphenate(name.slice(2)), options];
}
function createInvoker(initialValue, instance) {
    const invoker = (e) => {
        // async edge case #6566: inner click event triggers patch, event handler
        // attached to outer element during patch, and triggered again. This
        // happens because browsers fire microtask ticks between event propagation.
        // the solution is simple: we save the timestamp when a handler is attached,
        // and the handler would only fire if the event passed to it was fired
        // AFTER it was attached.
        const timeStamp = e.timeStamp || _getNow();
        if (timeStamp >= invoker.attached - 1) {
            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);
        }
    };
    invoker.value = initialValue;
    invoker.attached = getNow();
    return invoker;
}
function patchStopImmediatePropagation(e, value) {
    if (isArray$1(value)) {
        const originalStop = e.stopImmediatePropagation;
        e.stopImmediatePropagation = () => {
            originalStop.call(e);
            e._stopped = true;
        };
        return value.map(fn => (e) => !e._stopped && fn(e));
    }
    else {
        return value;
    }
}

const nativeOnRE = /^on[a-z]/;
const forcePatchProp = (_, key) => key === 'value';
const patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {
    switch (key) {
        // special
        case 'class':
            patchClass(el, nextValue, isSVG);
            break;
        case 'style':
            patchStyle(el, prevValue, nextValue);
            break;
        default:
            if (isOn(key)) {
                // ignore v-model listeners
                if (!isModelListener(key)) {
                    patchEvent(el, key, prevValue, nextValue, parentComponent);
                }
            }
            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {
                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);
            }
            else {
                // special case for <input v-model type="checkbox"> with
                // :true-value & :false-value
                // store value as dom properties since non-string values will be
                // stringified.
                if (key === 'true-value') {
                    el._trueValue = nextValue;
                }
                else if (key === 'false-value') {
                    el._falseValue = nextValue;
                }
                patchAttr(el, key, nextValue, isSVG);
            }
            break;
    }
};
function shouldSetAsProp(el, key, value, isSVG) {
    if (isSVG) {
        // most keys must be set as attribute on svg elements to work
        // ...except innerHTML
        if (key === 'innerHTML') {
            return true;
        }
        // or native onclick with function values
        if (key in el && nativeOnRE.test(key) && isFunction$1(value)) {
            return true;
        }
        return false;
    }
    // spellcheck and draggable are numerated attrs, however their
    // corresponding DOM properties are actually booleans - this leads to
    // setting it with a string "false" value leading it to be coerced to
    // `true`, so we need to always treat them as attributes.
    // Note that `contentEditable` doesn't have this problem: its DOM
    // property is also enumerated string values.
    if (key === 'spellcheck' || key === 'draggable') {
        return false;
    }
    // #1787, #2840 form property on form elements is readonly and must be set as
    // attribute.
    if (key === 'form') {
        return false;
    }
    // #1526 <input list> must be set as attribute
    if (key === 'list' && el.tagName === 'INPUT') {
        return false;
    }
    // #2766 <textarea type> must be set as attribute
    if (key === 'type' && el.tagName === 'TEXTAREA') {
        return false;
    }
    // native onclick with string value, must be set as attribute
    if (nativeOnRE.test(key) && isString(value)) {
        return false;
    }
    return key in el;
}

const TRANSITION = 'transition';
const ANIMATION = 'animation';
// DOM Transition is a higher-order-component based on the platform-agnostic
// base Transition component, with DOM-specific logic.
const Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);
Transition.displayName = 'Transition';
const DOMTransitionPropsValidators = {
    name: String,
    type: String,
    css: {
        type: Boolean,
        default: true
    },
    duration: [String, Number, Object],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String
};
const TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));
function resolveTransitionProps(rawProps) {
    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;
    const baseProps = {};
    for (const key in rawProps) {
        if (!(key in DOMTransitionPropsValidators)) {
            baseProps[key] = rawProps[key];
        }
    }
    if (!css) {
        return baseProps;
    }
    const durations = normalizeDuration(duration);
    const enterDuration = durations && durations[0];
    const leaveDuration = durations && durations[1];
    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;
    const finishEnter = (el, isAppear, done) => {
        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);
        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);
        done && done();
    };
    const finishLeave = (el, done) => {
        removeTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveActiveClass);
        done && done();
    };
    const makeEnterHook = (isAppear) => {
        return (el, done) => {
            const hook = isAppear ? onAppear : onEnter;
            const resolve = () => finishEnter(el, isAppear, done);
            hook && hook(el, resolve);
            nextFrame(() => {
                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);
                addTransitionClass(el, isAppear ? appearToClass : enterToClass);
                if (!(hook && hook.length > 1)) {
                    whenTransitionEnds(el, type, enterDuration, resolve);
                }
            });
        };
    };
    return extend(baseProps, {
        onBeforeEnter(el) {
            onBeforeEnter && onBeforeEnter(el);
            addTransitionClass(el, enterFromClass);
            addTransitionClass(el, enterActiveClass);
        },
        onBeforeAppear(el) {
            onBeforeAppear && onBeforeAppear(el);
            addTransitionClass(el, appearFromClass);
            addTransitionClass(el, appearActiveClass);
        },
        onEnter: makeEnterHook(false),
        onAppear: makeEnterHook(true),
        onLeave(el, done) {
            const resolve = () => finishLeave(el, done);
            addTransitionClass(el, leaveFromClass);
            // force reflow so *-leave-from classes immediately take effect (#2593)
            forceReflow();
            addTransitionClass(el, leaveActiveClass);
            nextFrame(() => {
                removeTransitionClass(el, leaveFromClass);
                addTransitionClass(el, leaveToClass);
                if (!(onLeave && onLeave.length > 1)) {
                    whenTransitionEnds(el, type, leaveDuration, resolve);
                }
            });
            onLeave && onLeave(el, resolve);
        },
        onEnterCancelled(el) {
            finishEnter(el, false);
            onEnterCancelled && onEnterCancelled(el);
        },
        onAppearCancelled(el) {
            finishEnter(el, true);
            onAppearCancelled && onAppearCancelled(el);
        },
        onLeaveCancelled(el) {
            finishLeave(el);
            onLeaveCancelled && onLeaveCancelled(el);
        }
    });
}
function normalizeDuration(duration) {
    if (duration == null) {
        return null;
    }
    else if (isObject$3(duration)) {
        return [NumberOf(duration.enter), NumberOf(duration.leave)];
    }
    else {
        const n = NumberOf(duration);
        return [n, n];
    }
}
function NumberOf(val) {
    const res = toNumber$1(val);
    validateDuration(res);
    return res;
}
function validateDuration(val) {
    if (typeof val !== 'number') {
        warn$1(`<transition> explicit duration is not a valid number - ` +
            `got ${JSON.stringify(val)}.`);
    }
    else if (isNaN(val)) {
        warn$1(`<transition> explicit duration is NaN - ` +
            'the duration expression might be incorrect.');
    }
}
function addTransitionClass(el, cls) {
    cls.split(/\s+/).forEach(c => c && el.classList.add(c));
    (el._vtc ||
        (el._vtc = new Set())).add(cls);
}
function removeTransitionClass(el, cls) {
    cls.split(/\s+/).forEach(c => c && el.classList.remove(c));
    const { _vtc } = el;
    if (_vtc) {
        _vtc.delete(cls);
        if (!_vtc.size) {
            el._vtc = undefined;
        }
    }
}
function nextFrame(cb) {
    requestAnimationFrame(() => {
        requestAnimationFrame(cb);
    });
}
let endId = 0;
function whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {
    const id = (el._endId = ++endId);
    const resolveIfNotStale = () => {
        if (id === el._endId) {
            resolve();
        }
    };
    if (explicitTimeout) {
        return setTimeout(resolveIfNotStale, explicitTimeout);
    }
    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);
    if (!type) {
        return resolve();
    }
    const endEvent = type + 'end';
    let ended = 0;
    const end = () => {
        el.removeEventListener(endEvent, onEnd);
        resolveIfNotStale();
    };
    const onEnd = (e) => {
        if (e.target === el && ++ended >= propCount) {
            end();
        }
    };
    setTimeout(() => {
        if (ended < propCount) {
            end();
        }
    }, timeout + 1);
    el.addEventListener(endEvent, onEnd);
}
function getTransitionInfo(el, expectedType) {
    const styles = window.getComputedStyle(el);
    // JSDOM may return undefined for transition properties
    const getStyleProperties = (key) => (styles[key] || '').split(', ');
    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');
    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');
    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    const animationDelays = getStyleProperties(ANIMATION + 'Delay');
    const animationDurations = getStyleProperties(ANIMATION + 'Duration');
    const animationTimeout = getTimeout(animationDelays, animationDurations);
    let type = null;
    let timeout = 0;
    let propCount = 0;
    /* istanbul ignore if */
    if (expectedType === TRANSITION) {
        if (transitionTimeout > 0) {
            type = TRANSITION;
            timeout = transitionTimeout;
            propCount = transitionDurations.length;
        }
    }
    else if (expectedType === ANIMATION) {
        if (animationTimeout > 0) {
            type = ANIMATION;
            timeout = animationTimeout;
            propCount = animationDurations.length;
        }
    }
    else {
        timeout = Math.max(transitionTimeout, animationTimeout);
        type =
            timeout > 0
                ? transitionTimeout > animationTimeout
                    ? TRANSITION
                    : ANIMATION
                : null;
        propCount = type
            ? type === TRANSITION
                ? transitionDurations.length
                : animationDurations.length
            : 0;
    }
    const hasTransform = type === TRANSITION &&
        /\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);
    return {
        type,
        timeout,
        propCount,
        hasTransform
    };
}
function getTimeout(delays, durations) {
    while (delays.length < durations.length) {
        delays = delays.concat(delays);
    }
    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));
}
// Old versions of Chromium (below 61.0.3163.100) formats floating pointer
// numbers in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down
// (i.e. acting as a floor function) causing unexpected behaviors
function toMs(s) {
    return Number(s.slice(0, -1).replace(',', '.')) * 1000;
}
// synchronously force layout to put elements into a certain state
function forceReflow() {
    return document.body.offsetHeight;
}

const positionMap = new WeakMap();
const newPositionMap = new WeakMap();
const TransitionGroupImpl = {
    name: 'TransitionGroup',
    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {
        tag: String,
        moveClass: String
    }),
    setup(props, { slots }) {
        const instance = getCurrentInstance();
        const state = useTransitionState();
        let prevChildren;
        let children;
        onUpdated(() => {
            // children is guaranteed to exist after initial render
            if (!prevChildren.length) {
                return;
            }
            const moveClass = props.moveClass || `${props.name || 'v'}-move`;
            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {
                return;
            }
            // we divide the work into three loops to avoid mixing DOM reads and writes
            // in each iteration - which helps prevent layout thrashing.
            prevChildren.forEach(callPendingCbs);
            prevChildren.forEach(recordPosition);
            const movedChildren = prevChildren.filter(applyTranslation);
            // force reflow to put everything in position
            forceReflow();
            movedChildren.forEach(c => {
                const el = c.el;
                const style = el.style;
                addTransitionClass(el, moveClass);
                style.transform = style.webkitTransform = style.transitionDuration = '';
                const cb = (el._moveCb = (e) => {
                    if (e && e.target !== el) {
                        return;
                    }
                    if (!e || /transform$/.test(e.propertyName)) {
                        el.removeEventListener('transitionend', cb);
                        el._moveCb = null;
                        removeTransitionClass(el, moveClass);
                    }
                });
                el.addEventListener('transitionend', cb);
            });
        });
        return () => {
            const rawProps = toRaw(props);
            const cssTransitionProps = resolveTransitionProps(rawProps);
            const tag = rawProps.tag || Fragment;
            prevChildren = children;
            children = slots.default ? getTransitionRawChildren(slots.default()) : [];
            for (let i = 0; i < children.length; i++) {
                const child = children[i];
                if (child.key != null) {
                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));
                }
                else {
                    warn$1(`<TransitionGroup> children must be keyed.`);
                }
            }
            if (prevChildren) {
                for (let i = 0; i < prevChildren.length; i++) {
                    const child = prevChildren[i];
                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));
                    positionMap.set(child, child.el.getBoundingClientRect());
                }
            }
            return createVNode(tag, null, children);
        };
    }
};
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(c) {
    const el = c.el;
    if (el._moveCb) {
        el._moveCb();
    }
    if (el._enterCb) {
        el._enterCb();
    }
}
function recordPosition(c) {
    newPositionMap.set(c, c.el.getBoundingClientRect());
}
function applyTranslation(c) {
    const oldPos = positionMap.get(c);
    const newPos = newPositionMap.get(c);
    const dx = oldPos.left - newPos.left;
    const dy = oldPos.top - newPos.top;
    if (dx || dy) {
        const s = c.el.style;
        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;
        s.transitionDuration = '0s';
        return c;
    }
}
function hasCSSTransform(el, root, moveClass) {
    // Detect whether an element with the move class applied has
    // CSS transitions. Since the element may be inside an entering
    // transition at this very moment, we make a clone of it and remove
    // all other transition classes applied to ensure only the move class
    // is applied.
    const clone = el.cloneNode();
    if (el._vtc) {
        el._vtc.forEach(cls => {
            cls.split(/\s+/).forEach(c => c && clone.classList.remove(c));
        });
    }
    moveClass.split(/\s+/).forEach(c => c && clone.classList.add(c));
    clone.style.display = 'none';
    const container = (root.nodeType === 1
        ? root
        : root.parentNode);
    container.appendChild(clone);
    const { hasTransform } = getTransitionInfo(clone);
    container.removeChild(clone);
    return hasTransform;
}

const getModelAssigner = (vnode) => {
    const fn = vnode.props['onUpdate:modelValue'];
    return isArray$1(fn) ? value => invokeArrayFns(fn, value) : fn;
};
function onCompositionStart(e) {
    e.target.composing = true;
}
function onCompositionEnd(e) {
    const target = e.target;
    if (target.composing) {
        target.composing = false;
        trigger(target, 'input');
    }
}
function trigger(el, type) {
    const e = document.createEvent('HTMLEvents');
    e.initEvent(type, true, true);
    el.dispatchEvent(e);
}
// We are exporting the v-model runtime directly as vnode hooks so that it can
// be tree-shaken in case v-model is never used.
const vModelText = {
    created(el, { modifiers: { lazy, trim, number } }, vnode) {
        el._assign = getModelAssigner(vnode);
        const castToNumber = number || el.type === 'number';
        addEventListener$1(el, lazy ? 'change' : 'input', e => {
            if (e.target.composing)
                return;
            let domValue = el.value;
            if (trim) {
                domValue = domValue.trim();
            }
            else if (castToNumber) {
                domValue = toNumber$1(domValue);
            }
            el._assign(domValue);
        });
        if (trim) {
            addEventListener$1(el, 'change', () => {
                el.value = el.value.trim();
            });
        }
        if (!lazy) {
            addEventListener$1(el, 'compositionstart', onCompositionStart);
            addEventListener$1(el, 'compositionend', onCompositionEnd);
            // Safari < 10.2 & UIWebView doesn't fire compositionend when
            // switching focus before confirming composition choice
            // this also fixes the issue where some browsers e.g. iOS Chrome
            // fires "change" instead of "input" on autocomplete.
            addEventListener$1(el, 'change', onCompositionEnd);
        }
    },
    // set value on mounted so it's after min/max for type="range"
    mounted(el, { value }) {
        el.value = value == null ? '' : value;
    },
    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {
        el._assign = getModelAssigner(vnode);
        // avoid clearing unresolved text. #2302
        if (el.composing)
            return;
        if (document.activeElement === el) {
            if (trim && el.value.trim() === value) {
                return;
            }
            if ((number || el.type === 'number') && toNumber$1(el.value) === value) {
                return;
            }
        }
        const newValue = value == null ? '' : value;
        if (el.value !== newValue) {
            el.value = newValue;
        }
    }
};
const vModelCheckbox = {
    created(el, _, vnode) {
        el._assign = getModelAssigner(vnode);
        addEventListener$1(el, 'change', () => {
            const modelValue = el._modelValue;
            const elementValue = getValue$1(el);
            const checked = el.checked;
            const assign = el._assign;
            if (isArray$1(modelValue)) {
                const index = looseIndexOf(modelValue, elementValue);
                const found = index !== -1;
                if (checked && !found) {
                    assign(modelValue.concat(elementValue));
                }
                else if (!checked && found) {
                    const filtered = [...modelValue];
                    filtered.splice(index, 1);
                    assign(filtered);
                }
            }
            else if (isSet(modelValue)) {
                const cloned = new Set(modelValue);
                if (checked) {
                    cloned.add(elementValue);
                }
                else {
                    cloned.delete(elementValue);
                }
                assign(cloned);
            }
            else {
                assign(getCheckboxValue(el, checked));
            }
        });
    },
    // set initial checked on mount to wait for true-value/false-value
    mounted: setChecked,
    beforeUpdate(el, binding, vnode) {
        el._assign = getModelAssigner(vnode);
        setChecked(el, binding, vnode);
    }
};
function setChecked(el, { value, oldValue }, vnode) {
    el._modelValue = value;
    if (isArray$1(value)) {
        el.checked = looseIndexOf(value, vnode.props.value) > -1;
    }
    else if (isSet(value)) {
        el.checked = value.has(vnode.props.value);
    }
    else if (value !== oldValue) {
        el.checked = looseEqual(value, getCheckboxValue(el, true));
    }
}
const vModelRadio = {
    created(el, { value }, vnode) {
        el.checked = looseEqual(value, vnode.props.value);
        el._assign = getModelAssigner(vnode);
        addEventListener$1(el, 'change', () => {
            el._assign(getValue$1(el));
        });
    },
    beforeUpdate(el, { value, oldValue }, vnode) {
        el._assign = getModelAssigner(vnode);
        if (value !== oldValue) {
            el.checked = looseEqual(value, vnode.props.value);
        }
    }
};
// retrieve raw value set via :value bindings
function getValue$1(el) {
    return '_value' in el ? el._value : el.value;
}
// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings
function getCheckboxValue(el, checked) {
    const key = checked ? '_trueValue' : '_falseValue';
    return key in el ? el[key] : checked;
}

const systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];
const modifierGuards = {
    stop: e => e.stopPropagation(),
    prevent: e => e.preventDefault(),
    self: e => e.target !== e.currentTarget,
    ctrl: e => !e.ctrlKey,
    shift: e => !e.shiftKey,
    alt: e => !e.altKey,
    meta: e => !e.metaKey,
    left: e => 'button' in e && e.button !== 0,
    middle: e => 'button' in e && e.button !== 1,
    right: e => 'button' in e && e.button !== 2,
    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))
};
/**
 * @private
 */
const withModifiers = (fn, modifiers) => {
    return (event, ...args) => {
        for (let i = 0; i < modifiers.length; i++) {
            const guard = modifierGuards[modifiers[i]];
            if (guard && guard(event, modifiers))
                return;
        }
        return fn(event, ...args);
    };
};
// Kept for 2.x compat.
// Note: IE11 compat for `spacebar` and `del` is removed for now.
const keyNames = {
    esc: 'escape',
    space: ' ',
    up: 'arrow-up',
    left: 'arrow-left',
    right: 'arrow-right',
    down: 'arrow-down',
    delete: 'backspace'
};
/**
 * @private
 */
const withKeys = (fn, modifiers) => {
    return (event) => {
        if (!('key' in event))
            return;
        const eventKey = hyphenate(event.key);
        if (
        // None of the provided key modifiers match the current event key
        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {
            return;
        }
        return fn(event);
    };
};

const vShow = {
    beforeMount(el, { value }, { transition }) {
        el._vod = el.style.display === 'none' ? '' : el.style.display;
        if (transition && value) {
            transition.beforeEnter(el);
        }
        else {
            setDisplay(el, value);
        }
    },
    mounted(el, { value }, { transition }) {
        if (transition && value) {
            transition.enter(el);
        }
    },
    updated(el, { value, oldValue }, { transition }) {
        if (!value === !oldValue)
            return;
        if (transition) {
            if (value) {
                transition.beforeEnter(el);
                setDisplay(el, true);
                transition.enter(el);
            }
            else {
                transition.leave(el, () => {
                    setDisplay(el, false);
                });
            }
        }
        else {
            setDisplay(el, value);
        }
    },
    beforeUnmount(el, { value }) {
        setDisplay(el, value);
    }
};
function setDisplay(el, value) {
    el.style.display = value ? el._vod : 'none';
}

const rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);
// lazy create the renderer - this makes core renderer logic tree-shakable
// in case the user only imports reactivity utilities from Vue.
let renderer;
function ensureRenderer() {
    return renderer || (renderer = createRenderer(rendererOptions));
}
// use explicit type casts here to avoid import() calls in rolled-up d.ts
const render = ((...args) => {
    ensureRenderer().render(...args);
});
const createApp = ((...args) => {
    const app = ensureRenderer().createApp(...args);
    {
        injectNativeTagCheck(app);
        injectCustomElementCheck(app);
    }
    const { mount } = app;
    app.mount = (containerOrSelector) => {
        const container = normalizeContainer(containerOrSelector);
        if (!container)
            return;
        const component = app._component;
        if (!isFunction$1(component) && !component.render && !component.template) {
            component.template = container.innerHTML;
        }
        // clear content before mounting
        container.innerHTML = '';
        const proxy = mount(container);
        if (container instanceof Element) {
            container.removeAttribute('v-cloak');
            container.setAttribute('data-v-app', '');
        }
        return proxy;
    };
    return app;
});
function injectNativeTagCheck(app) {
    // Inject `isNativeTag`
    // this is used for component name validation (dev only)
    Object.defineProperty(app.config, 'isNativeTag', {
        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),
        writable: false
    });
}
// dev only
function injectCustomElementCheck(app) {
    {
        const value = app.config.isCustomElement;
        Object.defineProperty(app.config, 'isCustomElement', {
            get() {
                return value;
            },
            set() {
                warn$1(`The \`isCustomElement\` config option is only respected when using the runtime compiler.` +
                    `If you are using the runtime-only build, \`isCustomElement\` must be passed to \`@vue/compiler-dom\` in the build setup instead` +
                    `- for example, via the \`compilerOptions\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);
            }
        });
    }
}
function normalizeContainer(container) {
    if (isString(container)) {
        const res = document.querySelector(container);
        if (!res) {
            warn$1(`Failed to mount app: mount target selector "${container}" returned null.`);
        }
        return res;
    }
    if (container instanceof window.ShadowRoot &&
        container.mode === 'closed') {
        warn$1(`mounting on a ShadowRoot with \`{mode: "closed"}\` may lead to unpredictable bugs`);
    }
    return container;
}

function initDev() {
    {
        initCustomFormatter();
    }
}

// This entry exports the runtime only, and is built as
{
    initDev();
}

/*!
  * vue-router v4.0.5
  * (c) 2021 Eduardo San Martin Morote
  * @license MIT
  */

const hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
const PolySymbol = (name) => 
// vr = vue router
hasSymbol
    ? Symbol('[vue-router]: ' + name )
    : ('[vue-router]: ' ) + name;
// rvlm = Router View Location Matched
/**
 * RouteRecord being rendered by the closest ancestor Router View. Used for
 * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View
 * Location Matched
 *
 * @internal
 */
const matchedRouteKey = /*#__PURE__*/ PolySymbol('router view location matched' );
/**
 * Allows overriding the router view depth to control which component in
 * `matched` is rendered. rvd stands for Router View Depth
 *
 * @internal
 */
const viewDepthKey = /*#__PURE__*/ PolySymbol('router view depth' );
/**
 * Allows overriding the router instance returned by `useRouter` in tests. r
 * stands for router
 *
 * @internal
 */
const routerKey = /*#__PURE__*/ PolySymbol('router' );
/**
 * Allows overriding the current route returned by `useRoute` in tests. rl
 * stands for route location
 *
 * @internal
 */
const routeLocationKey = /*#__PURE__*/ PolySymbol('route location' );
/**
 * Allows overriding the current route used by router-view. Internally this is
 * used when the `route` prop is passed.
 *
 * @internal
 */
const routerViewLocationKey = /*#__PURE__*/ PolySymbol('router view location' );

const isBrowser$1 = typeof window !== 'undefined';

function isESModule(obj) {
    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');
}
const assign = Object.assign;
function applyToParams(fn, params) {
    const newParams = {};
    for (const key in params) {
        const value = params[key];
        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);
    }
    return newParams;
}
let noop$1 = () => { };

function warn(msg) {
    // avoid using ...args as it breaks in older Edge builds
    const args = Array.from(arguments).slice(1);
    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));
}

const TRAILING_SLASH_RE = /\/$/;
const removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');
/**
 * Transforms an URI into a normalized history location
 *
 * @param parseQuery
 * @param location - URI to normalize
 * @param currentLocation - current absolute location. Allows resolving relative
 * paths. Must start with `/`. Defaults to `/`
 * @returns a normalized history location
 */
function parseURL(parseQuery, location, currentLocation = '/') {
    let path, query = {}, searchString = '', hash = '';
    // Could use URL and URLSearchParams but IE 11 doesn't support it
    const searchPos = location.indexOf('?');
    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);
    if (searchPos > -1) {
        path = location.slice(0, searchPos);
        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);
        query = parseQuery(searchString);
    }
    if (hashPos > -1) {
        path = path || location.slice(0, hashPos);
        // keep the # character
        hash = location.slice(hashPos, location.length);
    }
    // no search and no query
    path = resolveRelativePath(path != null ? path : location, currentLocation);
    // empty path means a relative query or hash `?foo=f`, `#thing`
    return {
        fullPath: path + (searchString && '?') + searchString + hash,
        path,
        query,
        hash,
    };
}
/**
 * Stringifies a URL object
 *
 * @param stringifyQuery
 * @param location
 */
function stringifyURL(stringifyQuery, location) {
    let query = location.query ? stringifyQuery(location.query) : '';
    return location.path + (query && '?') + query + (location.hash || '');
}
/**
 * Strips off the base from the beginning of a location.pathname in a non
 * case-sensitive way.
 *
 * @param pathname - location.pathname
 * @param base - base to strip off
 */
function stripBase(pathname, base) {
    // no base or base is not found at the beginning
    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))
        return pathname;
    return pathname.slice(base.length) || '/';
}
/**
 * Checks if two RouteLocation are equal. This means that both locations are
 * pointing towards the same {@link RouteRecord} and that all `params`, `query`
 * parameters and `hash` are the same
 *
 * @param a - first {@link RouteLocation}
 * @param b - second {@link RouteLocation}
 */
function isSameRouteLocation(stringifyQuery, a, b) {
    let aLastIndex = a.matched.length - 1;
    let bLastIndex = b.matched.length - 1;
    return (aLastIndex > -1 &&
        aLastIndex === bLastIndex &&
        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&
        isSameRouteLocationParams(a.params, b.params) &&
        stringifyQuery(a.query) === stringifyQuery(b.query) &&
        a.hash === b.hash);
}
/**
 * Check if two `RouteRecords` are equal. Takes into account aliases: they are
 * considered equal to the `RouteRecord` they are aliasing.
 *
 * @param a - first {@link RouteRecord}
 * @param b - second {@link RouteRecord}
 */
function isSameRouteRecord(a, b) {
    // since the original record has an undefined value for aliasOf
    // but all aliases point to the original record, this will always compare
    // the original record
    return (a.aliasOf || a) === (b.aliasOf || b);
}
function isSameRouteLocationParams(a, b) {
    if (Object.keys(a).length !== Object.keys(b).length)
        return false;
    for (let key in a) {
        if (!isSameRouteLocationParamsValue(a[key], b[key]))
            return false;
    }
    return true;
}
function isSameRouteLocationParamsValue(a, b) {
    return Array.isArray(a)
        ? isEquivalentArray(a, b)
        : Array.isArray(b)
            ? isEquivalentArray(b, a)
            : a === b;
}
/**
 * Check if two arrays are the same or if an array with one single entry is the
 * same as another primitive value. Used to check query and parameters
 *
 * @param a - array of values
 * @param b - array of values or a single value
 */
function isEquivalentArray(a, b) {
    return Array.isArray(b)
        ? a.length === b.length && a.every((value, i) => value === b[i])
        : a.length === 1 && a[0] === b;
}
/**
 * Resolves a relative path that starts with `.`.
 *
 * @param to - path location we are resolving
 * @param from - currentLocation.path, should start with `/`
 */
function resolveRelativePath(to, from) {
    if (to.startsWith('/'))
        return to;
    if (!from.startsWith('/')) {
        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve "${to}" from "${from}". It should look like "/${from}".`);
        return to;
    }
    if (!to)
        return from;
    const fromSegments = from.split('/');
    const toSegments = to.split('/');
    let position = fromSegments.length - 1;
    let toPosition;
    let segment;
    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {
        segment = toSegments[toPosition];
        // can't go below zero
        if (position === 1 || segment === '.')
            continue;
        if (segment === '..')
            position--;
        // found something that is not relative path
        else
            break;
    }
    return (fromSegments.slice(0, position).join('/') +
        '/' +
        toSegments
            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))
            .join('/'));
}

var NavigationType;
(function (NavigationType) {
    NavigationType["pop"] = "pop";
    NavigationType["push"] = "push";
})(NavigationType || (NavigationType = {}));
var NavigationDirection;
(function (NavigationDirection) {
    NavigationDirection["back"] = "back";
    NavigationDirection["forward"] = "forward";
    NavigationDirection["unknown"] = "";
})(NavigationDirection || (NavigationDirection = {}));
// Generic utils
/**
 * Normalizes a base by removing any trailing slash and reading the base tag if
 * present.
 *
 * @param base - base to normalize
 */
function normalizeBase(base) {
    if (!base) {
        if (isBrowser$1) {
            // respect <base> tag
            const baseEl = document.querySelector('base');
            base = (baseEl && baseEl.getAttribute('href')) || '/';
            // strip full URL origin
            base = base.replace(/^\w+:\/\/[^\/]+/, '');
        }
        else {
            base = '/';
        }
    }
    // ensure leading slash when it was removed by the regex above avoid leading
    // slash with hash because the file could be read from the disk like file://
    // and the leading slash would cause problems
    if (base[0] !== '/' && base[0] !== '#')
        base = '/' + base;
    // remove the trailing slash so all other method can just do `base + fullPath`
    // to build an href
    return removeTrailingSlash(base);
}
// remove any character before the hash
const BEFORE_HASH_RE = /^[^#]+#/;
function createHref(base, location) {
    return base.replace(BEFORE_HASH_RE, '#') + location;
}

function getElementPosition(el, offset) {
    const docRect = document.documentElement.getBoundingClientRect();
    const elRect = el.getBoundingClientRect();
    return {
        behavior: offset.behavior,
        left: elRect.left - docRect.left - (offset.left || 0),
        top: elRect.top - docRect.top - (offset.top || 0),
    };
}
const computeScrollPosition = () => ({
    left: window.pageXOffset,
    top: window.pageYOffset,
});
function scrollToPosition(position) {
    let scrollToOptions;
    if ('el' in position) {
        let positionEl = position.el;
        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');
        /**
         * `id`s can accept pretty much any characters, including CSS combinators
         * like `>` or `~`. It's still possible to retrieve elements using
         * `document.getElementById('~')` but it needs to be escaped when using
         * `document.querySelector('#\\~')` for it to be valid. The only
         * requirements for `id`s are them to be unique on the page and to not be
         * empty (`id=""`). Because of that, when passing an id selector, it should
         * be properly escaped for it to work with `querySelector`. We could check
         * for the id selector to be simple (no CSS combinators `+ >~`) but that
         * would make things inconsistent since they are valid characters for an
         * `id` but would need to be escaped when using `querySelector`, breaking
         * their usage and ending up in no selector returned. Selectors need to be
         * escaped:
         *
         * - `#1-thing` becomes `#\31 -thing`
         * - `#with~symbols` becomes `#with\\~symbols`
         *
         * - More information about  the topic can be found at
         *   https://mathiasbynens.be/notes/html5-id-class.
         * - Practical example: https://mathiasbynens.be/demo/html5-id
         */
        if (typeof position.el === 'string') {
            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {
                try {
                    let foundEl = document.querySelector(position.el);
                    if (isIdSelector && foundEl) {
                        warn(`The selector "${position.el}" should be passed as "el: document.querySelector('${position.el}')" because it starts with "#".`);
                        // return to avoid other warnings
                        return;
                    }
                }
                catch (err) {
                    warn(`The selector "${position.el}" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);
                    // return to avoid other warnings
                    return;
                }
            }
        }
        const el = typeof positionEl === 'string'
            ? isIdSelector
                ? document.getElementById(positionEl.slice(1))
                : document.querySelector(positionEl)
            : positionEl;
        if (!el) {
            warn(`Couldn't find element using selector "${position.el}" returned by scrollBehavior.`);
            return;
        }
        scrollToOptions = getElementPosition(el, position);
    }
    else {
        scrollToOptions = position;
    }
    if ('scrollBehavior' in document.documentElement.style)
        window.scrollTo(scrollToOptions);
    else {
        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);
    }
}
function getScrollKey(path, delta) {
    const position = history.state ? history.state.position - delta : -1;
    return position + path;
}
const scrollPositions = new Map();
function saveScrollPosition(key, scrollPosition) {
    scrollPositions.set(key, scrollPosition);
}
function getSavedScrollPosition(key) {
    const scroll = scrollPositions.get(key);
    // consume it so it's not used again
    scrollPositions.delete(key);
    return scroll;
}
// TODO: RFC about how to save scroll position
/**
 * ScrollBehavior instance used by the router to compute and restore the scroll
 * position when navigating.
 */
// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {
//   // returns a scroll position that can be saved in history
//   compute(): ScrollPositionEntry
//   // can take an extended ScrollPositionEntry
//   scroll(position: ScrollPosition): void
// }
// export const scrollHandler: ScrollHandler<ScrollPosition> = {
//   compute: computeScroll,
//   scroll: scrollToPosition,
// }

let createBaseLocation = () => location.protocol + '//' + location.host;
/**
 * Creates a normalized history location from a window.location object
 * @param location -
 */
function createCurrentLocation(base, location) {
    const { pathname, search, hash } = location;
    // allows hash based url
    const hashPos = base.indexOf('#');
    if (hashPos > -1) {
        // prepend the starting slash to hash so the url starts with /#
        let pathFromHash = hash.slice(1);
        if (pathFromHash[0] !== '/')
            pathFromHash = '/' + pathFromHash;
        return stripBase(pathFromHash, '');
    }
    const path = stripBase(pathname, base);
    return path + search + hash;
}
function useHistoryListeners(base, historyState, currentLocation, replace) {
    let listeners = [];
    let teardowns = [];
    // TODO: should it be a stack? a Dict. Check if the popstate listener
    // can trigger twice
    let pauseState = null;
    const popStateHandler = ({ state, }) => {
        const to = createCurrentLocation(base, location);
        const from = currentLocation.value;
        const fromState = historyState.value;
        let delta = 0;
        if (state) {
            currentLocation.value = to;
            historyState.value = state;
            // ignore the popstate and reset the pauseState
            if (pauseState && pauseState === from) {
                pauseState = null;
                return;
            }
            delta = fromState ? state.position - fromState.position : 0;
        }
        else {
            replace(to);
        }
        // console.log({ deltaFromCurrent })
        // Here we could also revert the navigation by calling history.go(-delta)
        // this listener will have to be adapted to not trigger again and to wait for the url
        // to be updated before triggering the listeners. Some kind of validation function would also
        // need to be passed to the listeners so the navigation can be accepted
        // call all listeners
        listeners.forEach(listener => {
            listener(currentLocation.value, from, {
                delta,
                type: NavigationType.pop,
                direction: delta
                    ? delta > 0
                        ? NavigationDirection.forward
                        : NavigationDirection.back
                    : NavigationDirection.unknown,
            });
        });
    };
    function pauseListeners() {
        pauseState = currentLocation.value;
    }
    function listen(callback) {
        // setup the listener and prepare teardown callbacks
        listeners.push(callback);
        const teardown = () => {
            const index = listeners.indexOf(callback);
            if (index > -1)
                listeners.splice(index, 1);
        };
        teardowns.push(teardown);
        return teardown;
    }
    function beforeUnloadListener() {
        const { history } = window;
        if (!history.state)
            return;
        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');
    }
    function destroy() {
        for (const teardown of teardowns)
            teardown();
        teardowns = [];
        window.removeEventListener('popstate', popStateHandler);
        window.removeEventListener('beforeunload', beforeUnloadListener);
    }
    // setup the listeners and prepare teardown callbacks
    window.addEventListener('popstate', popStateHandler);
    window.addEventListener('beforeunload', beforeUnloadListener);
    return {
        pauseListeners,
        listen,
        destroy,
    };
}
/**
 * Creates a state object
 */
function buildState(back, current, forward, replaced = false, computeScroll = false) {
    return {
        back,
        current,
        forward,
        replaced,
        position: window.history.length,
        scroll: computeScroll ? computeScrollPosition() : null,
    };
}
function useHistoryStateNavigation(base) {
    const { history, location } = window;
    // private variables
    let currentLocation = {
        value: createCurrentLocation(base, location),
    };
    let historyState = { value: history.state };
    // build current history entry as this is a fresh navigation
    if (!historyState.value) {
        changeLocation(currentLocation.value, {
            back: null,
            current: currentLocation.value,
            forward: null,
            // the length is off by one, we need to decrease it
            position: history.length - 1,
            replaced: true,
            // don't add a scroll as the user may have an anchor and we want
            // scrollBehavior to be triggered without a saved position
            scroll: null,
        }, true);
    }
    function changeLocation(to, state, replace) {
        /**
         * if a base tag is provided and we are on a normal domain, we have to
         * respect the provided `base` attribute because pushState() will use it and
         * potentially erase anything before the `#` like at
         * https://github.com/vuejs/vue-router-next/issues/685 where a base of
         * `/folder/#` but a base of `/` would erase the `/folder/` section. If
         * there is no host, the `<base>` tag makes no sense and if there isn't a
         * base tag we can just use everything after the `#`.
         */
        const hashIndex = base.indexOf('#');
        const url = hashIndex > -1
            ? (location.host && document.querySelector('base')
                ? base
                : base.slice(hashIndex)) + to
            : createBaseLocation() + base + to;
        try {
            // BROWSER QUIRK
            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds
            history[replace ? 'replaceState' : 'pushState'](state, '', url);
            historyState.value = state;
        }
        catch (err) {
            {
                warn('Error with push/replace State', err);
            }
            // Force the navigation, this also resets the call count
            location[replace ? 'replace' : 'assign'](url);
        }
    }
    function replace(to, data) {
        const state = assign({}, history.state, buildState(historyState.value.back, 
        // keep back and forward entries but override current position
        to, historyState.value.forward, true), data, { position: historyState.value.position });
        changeLocation(to, state, true);
        currentLocation.value = to;
    }
    function push(to, data) {
        // Add to current entry the information of where we are going
        // as well as saving the current position
        const currentState = assign({}, 
        // use current history state to gracefully handle a wrong call to
        // history.replaceState
        // https://github.com/vuejs/vue-router-next/issues/366
        historyState.value, history.state, {
            forward: to,
            scroll: computeScrollPosition(),
        });
        if (!history.state) {
            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\n\n` +
                `history.replaceState(history.state, '', url)\n\n` +
                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);
        }
        changeLocation(currentState.current, currentState, true);
        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);
        changeLocation(to, state, false);
        currentLocation.value = to;
    }
    return {
        location: currentLocation,
        state: historyState,
        push,
        replace,
    };
}
/**
 * Creates an HTML5 history. Most common history for single page applications.
 *
 * @param base -
 */
function createWebHistory(base) {
    base = normalizeBase(base);
    const historyNavigation = useHistoryStateNavigation(base);
    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);
    function go(delta, triggerListeners = true) {
        if (!triggerListeners)
            historyListeners.pauseListeners();
        history.go(delta);
    }
    const routerHistory = assign({
        // it's overridden right after
        location: '',
        base,
        go,
        createHref: createHref.bind(null, base),
    }, historyNavigation, historyListeners);
    Object.defineProperty(routerHistory, 'location', {
        get: () => historyNavigation.location.value,
    });
    Object.defineProperty(routerHistory, 'state', {
        get: () => historyNavigation.state.value,
    });
    return routerHistory;
}

/**
 * Creates a hash history. Useful for web applications with no host (e.g.
 * `file://`) or when configuring a server to handle any URL is not possible.
 *
 * @param base - optional base to provide. Defaults to `location.pathname +
 * location.search` If there is a `<base>` tag in the `head`, its value will be
 * ignored in favor of this parameter **but note it affects all the
 * history.pushState() calls**, meaning that if you use a `<base>` tag, it's
 * `href` value **has to match this parameter** (ignoring anything after the
 * `#`).
 *
 * @example
 * ```js
 * // at https://example.com/folder
 * createWebHashHistory() // gives a url of `https://example.com/folder#`
 * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`
 * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`
 * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`
 * // you should avoid doing this because it changes the original url and breaks copying urls
 * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`
 *
 * // at file:///usr/etc/folder/index.html
 * // for locations with no `host`, the base is ignored
 * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`
 * ```
 */
function createWebHashHistory(base) {
    // Make sure this implementation is fine in terms of encoding, specially for IE11
    // for `file://`, directly use the pathname and ignore the base
    // location.pathname contains an initial `/` even at the root: `https://example.com`
    base = location.host ? base || location.pathname + location.search : '';
    // allow the user to provide a `#` in the middle: `/base/#/app`
    if (base.indexOf('#') < 0)
        base += '#';
    if (!base.endsWith('#/') && !base.endsWith('#')) {
        warn(`A hash base must end with a "#":\n"${base}" should be "${base.replace(/#.*$/, '#')}".`);
    }
    return createWebHistory(base);
}

function isRouteLocation(route) {
    return typeof route === 'string' || (route && typeof route === 'object');
}
function isRouteName(name) {
    return typeof name === 'string' || typeof name === 'symbol';
}

/**
 * Initial route location where the router is. Can be used in navigation guards
 * to differentiate the initial navigation.
 *
 * @example
 * ```js
 * import { START_LOCATION } from 'vue-router'
 *
 * router.beforeEach((to, from) => {
 *   if (from === START_LOCATION) {
 *     // initial navigation
 *   }
 * })
 * ```
 */
const START_LOCATION_NORMALIZED = {
    path: '/',
    name: undefined,
    params: {},
    query: {},
    hash: '',
    fullPath: '/',
    matched: [],
    meta: {},
    redirectedFrom: undefined,
};

const NavigationFailureSymbol = /*#__PURE__*/ PolySymbol('navigation failure' );
/**
 * Enumeration with all possible types for navigation failures. Can be passed to
 * {@link isNavigationFailure} to check for specific failures.
 */
var NavigationFailureType;
(function (NavigationFailureType) {
    /**
     * An aborted navigation is a navigation that failed because a navigation
     * guard returned `false` or called `next(false)`
     */
    NavigationFailureType[NavigationFailureType["aborted"] = 4] = "aborted";
    /**
     * A cancelled navigation is a navigation that failed because a more recent
     * navigation finished started (not necessarily finished).
     */
    NavigationFailureType[NavigationFailureType["cancelled"] = 8] = "cancelled";
    /**
     * A duplicated navigation is a navigation that failed because it was
     * initiated while already being at the exact same location.
     */
    NavigationFailureType[NavigationFailureType["duplicated"] = 16] = "duplicated";
})(NavigationFailureType || (NavigationFailureType = {}));
// DEV only debug messages
const ErrorTypeMessages = {
    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {
        return `No match for\n ${JSON.stringify(location)}${currentLocation
            ? '\nwhile being at\n' + JSON.stringify(currentLocation)
            : ''}`;
    },
    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {
        return `Redirected from "${from.fullPath}" to "${stringifyRoute(to)}" via a navigation guard.`;
    },
    [4 /* NAVIGATION_ABORTED */]({ from, to }) {
        return `Navigation aborted from "${from.fullPath}" to "${to.fullPath}" via a navigation guard.`;
    },
    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {
        return `Navigation cancelled from "${from.fullPath}" to "${to.fullPath}" with a new navigation.`;
    },
    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {
        return `Avoided redundant navigation to current location: "${from.fullPath}".`;
    },
};
function createRouterError(type, params) {
    {
        return assign(new Error(ErrorTypeMessages[type](params)), {
            type,
            [NavigationFailureSymbol]: true,
        }, params);
    }
}
function isNavigationFailure(error, type) {
    return (error instanceof Error &&
        NavigationFailureSymbol in error &&
        (type == null || !!(error.type & type)));
}
const propertiesToLog = ['params', 'query', 'hash'];
function stringifyRoute(to) {
    if (typeof to === 'string')
        return to;
    if ('path' in to)
        return to.path;
    const location = {};
    for (const key of propertiesToLog) {
        if (key in to)
            location[key] = to[key];
    }
    return JSON.stringify(location, null, 2);
}

// default pattern for a param: non greedy everything but /
const BASE_PARAM_PATTERN = '[^/]+?';
const BASE_PATH_PARSER_OPTIONS = {
    sensitive: false,
    strict: false,
    start: true,
    end: true,
};
// Special Regex characters that must be escaped in static tokens
const REGEX_CHARS_RE = /[.+*?^${}()[\]/\\]/g;
/**
 * Creates a path parser from an array of Segments (a segment is an array of Tokens)
 *
 * @param segments - array of segments returned by tokenizePath
 * @param extraOptions - optional options for the regexp
 * @returns a PathParser
 */
function tokensToParser(segments, extraOptions) {
    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);
    // the amount of scores is the same as the length of segments except for the root segment "/"
    let score = [];
    // the regexp as a string
    let pattern = options.start ? '^' : '';
    // extracted keys
    const keys = [];
    for (const segment of segments) {
        // the root segment needs special treatment
        const segmentScores = segment.length ? [] : [90 /* Root */];
        // allow trailing slash
        if (options.strict && !segment.length)
            pattern += '/';
        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {
            const token = segment[tokenIndex];
            // resets the score if we are inside a sub segment /:a-other-:b
            let subSegmentScore = 40 /* Segment */ +
                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);
            if (token.type === 0 /* Static */) {
                // prepend the slash if we are starting a new segment
                if (!tokenIndex)
                    pattern += '/';
                pattern += token.value.replace(REGEX_CHARS_RE, '\\$&');
                subSegmentScore += 40 /* Static */;
            }
            else if (token.type === 1 /* Param */) {
                const { value, repeatable, optional, regexp } = token;
                keys.push({
                    name: value,
                    repeatable,
                    optional,
                });
                const re = regexp ? regexp : BASE_PARAM_PATTERN;
                // the user provided a custom regexp /:id(\\d+)
                if (re !== BASE_PARAM_PATTERN) {
                    subSegmentScore += 10 /* BonusCustomRegExp */;
                    // make sure the regexp is valid before using it
                    try {
                        new RegExp(`(${re})`);
                    }
                    catch (err) {
                        throw new Error(`Invalid custom RegExp for param "${value}" (${re}): ` +
                            err.message);
                    }
                }
                // when we repeat we must take care of the repeating leading slash
                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;
                // prepend the slash if we are starting a new segment
                if (!tokenIndex)
                    subPattern =
                        // avoid an optional / if there are more segments e.g. /:p?-static
                        // or /:p?-:p2
                        optional && segment.length < 2
                            ? `(?:/${subPattern})`
                            : '/' + subPattern;
                if (optional)
                    subPattern += '?';
                pattern += subPattern;
                subSegmentScore += 20 /* Dynamic */;
                if (optional)
                    subSegmentScore += -8 /* BonusOptional */;
                if (repeatable)
                    subSegmentScore += -20 /* BonusRepeatable */;
                if (re === '.*')
                    subSegmentScore += -50 /* BonusWildcard */;
            }
            segmentScores.push(subSegmentScore);
        }
        // an empty array like /home/ -> [[{home}], []]
        // if (!segment.length) pattern += '/'
        score.push(segmentScores);
    }
    // only apply the strict bonus to the last score
    if (options.strict && options.end) {
        const i = score.length - 1;
        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;
    }
    // TODO: dev only warn double trailing slash
    if (!options.strict)
        pattern += '/?';
    if (options.end)
        pattern += '$';
    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else
    else if (options.strict)
        pattern += '(?:/|$)';
    const re = new RegExp(pattern, options.sensitive ? '' : 'i');
    function parse(path) {
        const match = path.match(re);
        const params = {};
        if (!match)
            return null;
        for (let i = 1; i < match.length; i++) {
            const value = match[i] || '';
            const key = keys[i - 1];
            params[key.name] = value && key.repeatable ? value.split('/') : value;
        }
        return params;
    }
    function stringify(params) {
        let path = '';
        // for optional parameters to allow to be empty
        let avoidDuplicatedSlash = false;
        for (const segment of segments) {
            if (!avoidDuplicatedSlash || !path.endsWith('/'))
                path += '/';
            avoidDuplicatedSlash = false;
            for (const token of segment) {
                if (token.type === 0 /* Static */) {
                    path += token.value;
                }
                else if (token.type === 1 /* Param */) {
                    const { value, repeatable, optional } = token;
                    const param = value in params ? params[value] : '';
                    if (Array.isArray(param) && !repeatable)
                        throw new Error(`Provided param "${value}" is an array but it is not repeatable (* or + modifiers)`);
                    const text = Array.isArray(param) ? param.join('/') : param;
                    if (!text) {
                        if (optional) {
                            // if we have more than one optional param like /:a?-static we
                            // don't need to care about the optional param
                            if (segment.length < 2) {
                                // remove the last slash as we could be at the end
                                if (path.endsWith('/'))
                                    path = path.slice(0, -1);
                                // do not append a slash on the next iteration
                                else
                                    avoidDuplicatedSlash = true;
                            }
                        }
                        else
                            throw new Error(`Missing required param "${value}"`);
                    }
                    path += text;
                }
            }
        }
        return path;
    }
    return {
        re,
        score,
        keys,
        parse,
        stringify,
    };
}
/**
 * Compares an array of numbers as used in PathParser.score and returns a
 * number. This function can be used to `sort` an array
 * @param a - first array of numbers
 * @param b - second array of numbers
 * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b
 * should be sorted first
 */
function compareScoreArray(a, b) {
    let i = 0;
    while (i < a.length && i < b.length) {
        const diff = b[i] - a[i];
        // only keep going if diff === 0
        if (diff)
            return diff;
        i++;
    }
    // if the last subsegment was Static, the shorter segments should be sorted first
    // otherwise sort the longest segment first
    if (a.length < b.length) {
        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */
            ? -1
            : 1;
    }
    else if (a.length > b.length) {
        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */
            ? 1
            : -1;
    }
    return 0;
}
/**
 * Compare function that can be used with `sort` to sort an array of PathParser
 * @param a - first PathParser
 * @param b - second PathParser
 * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b
 */
function comparePathParserScore(a, b) {
    let i = 0;
    const aScore = a.score;
    const bScore = b.score;
    while (i < aScore.length && i < bScore.length) {
        const comp = compareScoreArray(aScore[i], bScore[i]);
        // do not return if both are equal
        if (comp)
            return comp;
        i++;
    }
    // if a and b share the same score entries but b has more, sort b first
    return bScore.length - aScore.length;
    // this is the ternary version
    // return aScore.length < bScore.length
    //   ? 1
    //   : aScore.length > bScore.length
    //   ? -1
    //   : 0
}

const ROOT_TOKEN = {
    type: 0 /* Static */,
    value: '',
};
const VALID_PARAM_RE = /[a-zA-Z0-9_]/;
// After some profiling, the cache seems to be unnecessary because tokenizePath
// (the slowest part of adding a route) is very fast
// const tokenCache = new Map<string, Token[][]>()
function tokenizePath(path) {
    if (!path)
        return [[]];
    if (path === '/')
        return [[ROOT_TOKEN]];
    if (!path.startsWith('/')) {
        throw new Error(`Route paths should start with a "/": "${path}" should be "/${path}".`
            );
    }
    // if (tokenCache.has(path)) return tokenCache.get(path)!
    function crash(message) {
        throw new Error(`ERR (${state})/"${buffer}": ${message}`);
    }
    let state = 0 /* Static */;
    let previousState = state;
    const tokens = [];
    // the segment will always be valid because we get into the initial state
    // with the leading /
    let segment;
    function finalizeSegment() {
        if (segment)
            tokens.push(segment);
        segment = [];
    }
    // index on the path
    let i = 0;
    // char at index
    let char;
    // buffer of the value read
    let buffer = '';
    // custom regexp for a param
    let customRe = '';
    function consumeBuffer() {
        if (!buffer)
            return;
        if (state === 0 /* Static */) {
            segment.push({
                type: 0 /* Static */,
                value: buffer,
            });
        }
        else if (state === 1 /* Param */ ||
            state === 2 /* ParamRegExp */ ||
            state === 3 /* ParamRegExpEnd */) {
            if (segment.length > 1 && (char === '*' || char === '+'))
                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);
            segment.push({
                type: 1 /* Param */,
                value: buffer,
                regexp: customRe,
                repeatable: char === '*' || char === '+',
                optional: char === '*' || char === '?',
            });
        }
        else {
            crash('Invalid state to consume buffer');
        }
        buffer = '';
    }
    function addCharToBuffer() {
        buffer += char;
    }
    while (i < path.length) {
        char = path[i++];
        if (char === '\\' && state !== 2 /* ParamRegExp */) {
            previousState = state;
            state = 4 /* EscapeNext */;
            continue;
        }
        switch (state) {
            case 0 /* Static */:
                if (char === '/') {
                    if (buffer) {
                        consumeBuffer();
                    }
                    finalizeSegment();
                }
                else if (char === ':') {
                    consumeBuffer();
                    state = 1 /* Param */;
                }
                else {
                    addCharToBuffer();
                }
                break;
            case 4 /* EscapeNext */:
                addCharToBuffer();
                state = previousState;
                break;
            case 1 /* Param */:
                if (char === '(') {
                    state = 2 /* ParamRegExp */;
                }
                else if (VALID_PARAM_RE.test(char)) {
                    addCharToBuffer();
                }
                else {
                    consumeBuffer();
                    state = 0 /* Static */;
                    // go back one character if we were not modifying
                    if (char !== '*' && char !== '?' && char !== '+')
                        i--;
                }
                break;
            case 2 /* ParamRegExp */:
                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)
                // it already works by escaping the closing )
                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#
                // is this really something people need since you can also write
                // /prefix_:p()_suffix
                if (char === ')') {
                    // handle the escaped )
                    if (customRe[customRe.length - 1] == '\\')
                        customRe = customRe.slice(0, -1) + char;
                    else
                        state = 3 /* ParamRegExpEnd */;
                }
                else {
                    customRe += char;
                }
                break;
            case 3 /* ParamRegExpEnd */:
                // same as finalizing a param
                consumeBuffer();
                state = 0 /* Static */;
                // go back one character if we were not modifying
                if (char !== '*' && char !== '?' && char !== '+')
                    i--;
                customRe = '';
                break;
            default:
                crash('Unknown state');
                break;
        }
    }
    if (state === 2 /* ParamRegExp */)
        crash(`Unfinished custom RegExp for param "${buffer}"`);
    consumeBuffer();
    finalizeSegment();
    // tokenCache.set(path, tokens)
    return tokens;
}

function createRouteRecordMatcher(record, parent, options) {
    const parser = tokensToParser(tokenizePath(record.path), options);
    // warn against params with the same name
    {
        const existingKeys = new Set();
        for (const key of parser.keys) {
            if (existingKeys.has(key.name))
                warn(`Found duplicated params with name "${key.name}" for path "${record.path}". Only the last one will be available on "$route.params".`);
            existingKeys.add(key.name);
        }
    }
    const matcher = assign(parser, {
        record,
        parent,
        // these needs to be populated by the parent
        children: [],
        alias: [],
    });
    if (parent) {
        // both are aliases or both are not aliases
        // we don't want to mix them because the order is used when
        // passing originalRecord in Matcher.addRoute
        if (!matcher.record.aliasOf === !parent.record.aliasOf)
            parent.children.push(matcher);
    }
    return matcher;
}

/**
 * Creates a Router Matcher.
 *
 * @internal
 * @param routes - array of initial routes
 * @param globalOptions - global route options
 */
function createRouterMatcher(routes, globalOptions) {
    // normalized ordered array of matchers
    const matchers = [];
    const matcherMap = new Map();
    globalOptions = mergeOptions$1({ strict: false, end: true, sensitive: false }, globalOptions);
    function getRecordMatcher(name) {
        return matcherMap.get(name);
    }
    function addRoute(record, parent, originalRecord) {
        // used later on to remove by name
        let isRootAdd = !originalRecord;
        let mainNormalizedRecord = normalizeRouteRecord(record);
        // we might be the child of an alias
        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;
        const options = mergeOptions$1(globalOptions, record);
        // generate an array of records to correctly handle aliases
        const normalizedRecords = [
            mainNormalizedRecord,
        ];
        if ('alias' in record) {
            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;
            for (const alias of aliases) {
                normalizedRecords.push(assign({}, mainNormalizedRecord, {
                    // this allows us to hold a copy of the `components` option
                    // so that async components cache is hold on the original record
                    components: originalRecord
                        ? originalRecord.record.components
                        : mainNormalizedRecord.components,
                    path: alias,
                    // we might be the child of an alias
                    aliasOf: originalRecord
                        ? originalRecord.record
                        : mainNormalizedRecord,
                    // the aliases are always of the same kind as the original since they
                    // are defined on the same record
                }));
            }
        }
        let matcher;
        let originalMatcher;
        for (const normalizedRecord of normalizedRecords) {
            let { path } = normalizedRecord;
            // Build up the path for nested routes if the child isn't an absolute
            // route. Only add the / delimiter if the child path isn't empty and if the
            // parent path doesn't have a trailing slash
            if (parent && path[0] !== '/') {
                let parentPath = parent.record.path;
                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';
                normalizedRecord.path =
                    parent.record.path + (path && connectingSlash + path);
            }
            if (normalizedRecord.path === '*') {
                throw new Error('Catch all routes ("*") must now be defined using a param with a custom regexp.\n' +
                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');
            }
            // create the object before hand so it can be passed to children
            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);
            if (parent && path[0] === '/')
                checkMissingParamsInAbsolutePath(matcher, parent);
            // if we are an alias we must tell the original record that we exist
            // so we can be removed
            if (originalRecord) {
                originalRecord.alias.push(matcher);
                {
                    checkSameParams(originalRecord, matcher);
                }
            }
            else {
                // otherwise, the first record is the original and others are aliases
                originalMatcher = originalMatcher || matcher;
                if (originalMatcher !== matcher)
                    originalMatcher.alias.push(matcher);
                // remove the route if named and only for the top record (avoid in nested calls)
                // this works because the original record is the first one
                if (isRootAdd && record.name && !isAliasRecord(matcher))
                    removeRoute(record.name);
            }
            if ('children' in mainNormalizedRecord) {
                let children = mainNormalizedRecord.children;
                for (let i = 0; i < children.length; i++) {
                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);
                }
            }
            // if there was no original record, then the first one was not an alias and all
            // other alias (if any) need to reference this record when adding children
            originalRecord = originalRecord || matcher;
            // TODO: add normalized records for more flexibility
            // if (parent && isAliasRecord(originalRecord)) {
            //   parent.children.push(originalRecord)
            // }
            insertMatcher(matcher);
        }
        return originalMatcher
            ? () => {
                // since other matchers are aliases, they should be removed by the original matcher
                removeRoute(originalMatcher);
            }
            : noop$1;
    }
    function removeRoute(matcherRef) {
        if (isRouteName(matcherRef)) {
            const matcher = matcherMap.get(matcherRef);
            if (matcher) {
                matcherMap.delete(matcherRef);
                matchers.splice(matchers.indexOf(matcher), 1);
                matcher.children.forEach(removeRoute);
                matcher.alias.forEach(removeRoute);
            }
        }
        else {
            let index = matchers.indexOf(matcherRef);
            if (index > -1) {
                matchers.splice(index, 1);
                if (matcherRef.record.name)
                    matcherMap.delete(matcherRef.record.name);
                matcherRef.children.forEach(removeRoute);
                matcherRef.alias.forEach(removeRoute);
            }
        }
    }
    function getRoutes() {
        return matchers;
    }
    function insertMatcher(matcher) {
        let i = 0;
        // console.log('i is', { i })
        while (i < matchers.length &&
            comparePathParserScore(matcher, matchers[i]) >= 0)
            i++;
        // console.log('END i is', { i })
        // while (i < matchers.length && matcher.score <= matchers[i].score) i++
        matchers.splice(i, 0, matcher);
        // only add the original record to the name map
        if (matcher.record.name && !isAliasRecord(matcher))
            matcherMap.set(matcher.record.name, matcher);
    }
    function resolve(location, currentLocation) {
        let matcher;
        let params = {};
        let path;
        let name;
        if ('name' in location && location.name) {
            matcher = matcherMap.get(location.name);
            if (!matcher)
                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {
                    location,
                });
            name = matcher.record.name;
            params = assign(
            // paramsFromLocation is a new object
            paramsFromLocation(currentLocation.params, 
            // only keep params that exist in the resolved location
            // TODO: only keep optional params coming from a parent record
            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);
            // throws if cannot be stringified
            path = matcher.stringify(params);
        }
        else if ('path' in location) {
            // no need to resolve the path with the matcher as it was provided
            // this also allows the user to control the encoding
            path = location.path;
            if (!path.startsWith('/')) {
                warn(`The Matcher cannot resolve relative paths but received "${path}". Unless you directly called \`matcher.resolve("${path}")\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);
            }
            matcher = matchers.find(m => m.re.test(path));
            // matcher should have a value after the loop
            if (matcher) {
                // TODO: dev warning of unused params if provided
                // we know the matcher works because we tested the regexp
                params = matcher.parse(path);
                name = matcher.record.name;
            }
            // location is a relative path
        }
        else {
            // match by name or path of current route
            matcher = currentLocation.name
                ? matcherMap.get(currentLocation.name)
                : matchers.find(m => m.re.test(currentLocation.path));
            if (!matcher)
                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {
                    location,
                    currentLocation,
                });
            name = matcher.record.name;
            // since we are navigating to the same location, we don't need to pick the
            // params like when `name` is provided
            params = assign({}, currentLocation.params, location.params);
            path = matcher.stringify(params);
        }
        const matched = [];
        let parentMatcher = matcher;
        while (parentMatcher) {
            // reversed order so parents are at the beginning
            matched.unshift(parentMatcher.record);
            parentMatcher = parentMatcher.parent;
        }
        return {
            name,
            path,
            params,
            matched,
            meta: mergeMetaFields(matched),
        };
    }
    // add initial routes
    routes.forEach(route => addRoute(route));
    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };
}
function paramsFromLocation(params, keys) {
    let newParams = {};
    for (let key of keys) {
        if (key in params)
            newParams[key] = params[key];
    }
    return newParams;
}
/**
 * Normalizes a RouteRecordRaw. Creates a copy
 *
 * @param record
 * @returns the normalized version
 */
function normalizeRouteRecord(record) {
    return {
        path: record.path,
        redirect: record.redirect,
        name: record.name,
        meta: record.meta || {},
        aliasOf: undefined,
        beforeEnter: record.beforeEnter,
        props: normalizeRecordProps(record),
        children: record.children || [],
        instances: {},
        leaveGuards: new Set(),
        updateGuards: new Set(),
        enterCallbacks: {},
        components: 'components' in record
            ? record.components || {}
            : { default: record.component },
    };
}
/**
 * Normalize the optional `props` in a record to always be an object similar to
 * components. Also accept a boolean for components.
 * @param record
 */
function normalizeRecordProps(record) {
    const propsObject = {};
    // props does not exist on redirect records but we can set false directly
    const props = record.props || false;
    if ('component' in record) {
        propsObject.default = props;
    }
    else {
        // NOTE: we could also allow a function to be applied to every component.
        // Would need user feedback for use cases
        for (let name in record.components)
            propsObject[name] = typeof props === 'boolean' ? props : props[name];
    }
    return propsObject;
}
/**
 * Checks if a record or any of its parent is an alias
 * @param record
 */
function isAliasRecord(record) {
    while (record) {
        if (record.record.aliasOf)
            return true;
        record = record.parent;
    }
    return false;
}
/**
 * Merge meta fields of an array of records
 *
 * @param matched - array of matched records
 */
function mergeMetaFields(matched) {
    return matched.reduce((meta, record) => assign(meta, record.meta), {});
}
function mergeOptions$1(defaults, partialOptions) {
    let options = {};
    for (let key in defaults) {
        options[key] =
            key in partialOptions ? partialOptions[key] : defaults[key];
    }
    return options;
}
function isSameParam(a, b) {
    return (a.name === b.name &&
        a.optional === b.optional &&
        a.repeatable === b.repeatable);
}
/**
 * Check if a path and its alias have the same required params
 *
 * @param a - original record
 * @param b - alias record
 */
function checkSameParams(a, b) {
    for (let key of a.keys) {
        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))
            return warn(`Alias "${b.record.path}" and the original record: "${a.record.path}" should have the exact same param named "${key.name}"`);
    }
    for (let key of b.keys) {
        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))
            return warn(`Alias "${b.record.path}" and the original record: "${a.record.path}" should have the exact same param named "${key.name}"`);
    }
}
function checkMissingParamsInAbsolutePath(record, parent) {
    for (let key of parent.keys) {
        if (!record.keys.find(isSameParam.bind(null, key)))
            return warn(`Absolute path "${record.record.path}" should have the exact same param named "${key.name}" as its parent "${parent.record.path}".`);
    }
}

/**
 * Encoding Rules ␣ = Space Path: ␣ " < > # ? { } Query: ␣ " < > # & = Hash: ␣ "
 * < > `
 *
 * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)
 * defines some extra characters to be encoded. Most browsers do not encode them
 * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to
 * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)
 * plus `-._~`. This extra safety should be applied to query by patching the
 * string returned by encodeURIComponent encodeURI also encodes `[\]^`. `\`
 * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\`
 * into a `/` if directly typed in. The _backtick_ (`````) should also be
 * encoded everywhere because some browsers like FF encode it when directly
 * written while others don't. Safari and IE don't encode ``"<>{}``` in hash.
 */
// const EXTRA_RESERVED_RE = /[!'()*]/g
// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)
const HASH_RE = /#/g; // %23
const AMPERSAND_RE = /&/g; // %26
const SLASH_RE = /\//g; // %2F
const EQUAL_RE = /=/g; // %3D
const IM_RE = /\?/g; // %3F
const PLUS_RE = /\+/g; // %2B
/**
 * NOTE: It's not clear to me if we should encode the + symbol in queries, it
 * seems to be less flexible than not doing so and I can't find out the legacy
 * systems requiring this for regular requests like text/html. In the standard,
 * the encoding of the plus character is only mentioned for
 * application/x-www-form-urlencoded
 * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo
 * leave the plus character as is in queries. To be more flexible, we allow the
 * plus character on the query but it can also be manually encoded by the user.
 *
 * Resources:
 * - https://url.spec.whatwg.org/#urlencoded-parsing
 * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20
 */
const ENC_BRACKET_OPEN_RE = /%5B/g; // [
const ENC_BRACKET_CLOSE_RE = /%5D/g; // ]
const ENC_CARET_RE = /%5E/g; // ^
const ENC_BACKTICK_RE = /%60/g; // `
const ENC_CURLY_OPEN_RE = /%7B/g; // {
const ENC_PIPE_RE = /%7C/g; // |
const ENC_CURLY_CLOSE_RE = /%7D/g; // }
const ENC_SPACE_RE = /%20/g; // }
/**
 * Encode characters that need to be encoded on the path, search and hash
 * sections of the URL.
 *
 * @internal
 * @param text - string to encode
 * @returns encoded string
 */
function commonEncode(text) {
    return encodeURI('' + text)
        .replace(ENC_PIPE_RE, '|')
        .replace(ENC_BRACKET_OPEN_RE, '[')
        .replace(ENC_BRACKET_CLOSE_RE, ']');
}
/**
 * Encode characters that need to be encoded on the hash section of the URL.
 *
 * @param text - string to encode
 * @returns encoded string
 */
function encodeHash(text) {
    return commonEncode(text)
        .replace(ENC_CURLY_OPEN_RE, '{')
        .replace(ENC_CURLY_CLOSE_RE, '}')
        .replace(ENC_CARET_RE, '^');
}
/**
 * Encode characters that need to be encoded query values on the query
 * section of the URL.
 *
 * @param text - string to encode
 * @returns encoded string
 */
function encodeQueryValue(text) {
    return (commonEncode(text)
        // Encode the space as +, encode the + to differentiate it from the space
        .replace(PLUS_RE, '%2B')
        .replace(ENC_SPACE_RE, '+')
        .replace(HASH_RE, '%23')
        .replace(AMPERSAND_RE, '%26')
        .replace(ENC_BACKTICK_RE, '`')
        .replace(ENC_CURLY_OPEN_RE, '{')
        .replace(ENC_CURLY_CLOSE_RE, '}')
        .replace(ENC_CARET_RE, '^'));
}
/**
 * Like `encodeQueryValue` but also encodes the `=` character.
 *
 * @param text - string to encode
 */
function encodeQueryKey(text) {
    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');
}
/**
 * Encode characters that need to be encoded on the path section of the URL.
 *
 * @param text - string to encode
 * @returns encoded string
 */
function encodePath(text) {
    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');
}
/**
 * Encode characters that need to be encoded on the path section of the URL as a
 * param. This function encodes everything {@link encodePath} does plus the
 * slash (`/`) character.
 *
 * @param text - string to encode
 * @returns encoded string
 */
function encodeParam(text) {
    return encodePath(text).replace(SLASH_RE, '%2F');
}
/**
 * Decode text using `decodeURIComponent`. Returns the original text if it
 * fails.
 *
 * @param text - string to decode
 * @returns decoded string
 */
function decode(text) {
    try {
        return decodeURIComponent('' + text);
    }
    catch (err) {
        warn(`Error decoding "${text}". Using original value`);
    }
    return '' + text;
}

/**
 * Transforms a queryString into a {@link LocationQuery} object. Accept both, a
 * version with the leading `?` and without Should work as URLSearchParams

 * @internal
 *
 * @param search - search string to parse
 * @returns a query object
 */
function parseQuery(search) {
    const query = {};
    // avoid creating an object with an empty key and empty value
    // because of split('&')
    if (search === '' || search === '?')
        return query;
    const hasLeadingIM = search[0] === '?';
    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');
    for (let i = 0; i < searchParams.length; ++i) {
        // pre decode the + into space
        const searchParam = searchParams[i].replace(PLUS_RE, ' ');
        // allow the = character
        let eqPos = searchParam.indexOf('=');
        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));
        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));
        if (key in query) {
            // an extra variable for ts types
            let currentValue = query[key];
            if (!Array.isArray(currentValue)) {
                currentValue = query[key] = [currentValue];
            }
            currentValue.push(value);
        }
        else {
            query[key] = value;
        }
    }
    return query;
}
/**
 * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it
 * doesn't prepend a `?`
 *
 * @internal
 *
 * @param query - query object to stringify
 * @returns string version of the query without the leading `?`
 */
function stringifyQuery(query) {
    let search = '';
    for (let key in query) {
        if (search.length)
            search += '&';
        const value = query[key];
        key = encodeQueryKey(key);
        if (value == null) {
            // only null adds the value
            if (value !== undefined)
                search += key;
            continue;
        }
        // keep null values
        let values = Array.isArray(value)
            ? value.map(v => v && encodeQueryValue(v))
            : [value && encodeQueryValue(value)];
        for (let i = 0; i < values.length; i++) {
            // only append & with i > 0
            search += (i ? '&' : '') + key;
            if (values[i] != null)
                search += ('=' + values[i]);
        }
    }
    return search;
}
/**
 * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting
 * numbers into strings, removing keys with an undefined value and replacing
 * undefined with null in arrays
 *
 * @param query - query object to normalize
 * @returns a normalized query object
 */
function normalizeQuery(query) {
    const normalizedQuery = {};
    for (let key in query) {
        let value = query[key];
        if (value !== undefined) {
            normalizedQuery[key] = Array.isArray(value)
                ? value.map(v => (v == null ? null : '' + v))
                : value == null
                    ? value
                    : '' + value;
        }
    }
    return normalizedQuery;
}

/**
 * Create a list of callbacks that can be reset. Used to create before and after navigation guards list
 */
function useCallbacks() {
    let handlers = [];
    function add(handler) {
        handlers.push(handler);
        return () => {
            const i = handlers.indexOf(handler);
            if (i > -1)
                handlers.splice(i, 1);
        };
    }
    function reset() {
        handlers = [];
    }
    return {
        add,
        list: () => handlers,
        reset,
    };
}
function guardToPromiseFn(guard, to, from, record, name) {
    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place
    const enterCallbackArray = record &&
        // name is defined if record is because of the function overload
        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);
    return () => new Promise((resolve, reject) => {
        const next = (valid) => {
            if (valid === false)
                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {
                    from,
                    to,
                }));
            else if (valid instanceof Error) {
                reject(valid);
            }
            else if (isRouteLocation(valid)) {
                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {
                    from: to,
                    to: valid,
                }));
            }
            else {
                if (enterCallbackArray &&
                    // since enterCallbackArray is truthy, both record and name also are
                    record.enterCallbacks[name] === enterCallbackArray &&
                    typeof valid === 'function')
                    enterCallbackArray.push(valid);
                resolve();
            }
        };
        // wrapping with Promise.resolve allows it to work with both async and sync guards
        const guardReturn = guard.call(record && record.instances[name], to, from, canOnlyBeCalledOnce(next, to, from) );
        let guardCall = Promise.resolve(guardReturn);
        if (guard.length < 3)
            guardCall = guardCall.then(next);
        if (guard.length > 2) {
            const message = `The "next" callback was never called inside of ${guard.name ? '"' + guard.name + '"' : ''}:\n${guard.toString()}\n. If you are returning a value instead of calling "next", make sure to remove the "next" parameter from your function.`;
            if (typeof guardReturn === 'object' && 'then' in guardReturn) {
                guardCall = guardCall.then(resolvedValue => {
                    // @ts-ignore: _called is added at canOnlyBeCalledOnce
                    if (!next._called) {
                        warn(message);
                        return Promise.reject(new Error('Invalid navigation guard'));
                    }
                    return resolvedValue;
                });
                // TODO: test me!
            }
            else if (guardReturn !== undefined) {
                // @ts-ignore: _called is added at canOnlyBeCalledOnce
                if (!next._called) {
                    warn(message);
                    reject(new Error('Invalid navigation guard'));
                    return;
                }
            }
        }
        guardCall.catch(err => reject(err));
    });
}
function canOnlyBeCalledOnce(next, to, from) {
    let called = 0;
    return function () {
        if (called++ === 1)
            warn(`The "next" callback was called more than once in one navigation guard when going from "${from.fullPath}" to "${to.fullPath}". It should be called exactly one time in each navigation guard. This will fail in production.`);
        // @ts-ignore: we put it in the original one because it's easier to check
        next._called = true;
        if (called === 1)
            next.apply(null, arguments);
    };
}
function extractComponentsGuards(matched, guardType, to, from) {
    const guards = [];
    for (const record of matched) {
        for (const name in record.components) {
            let rawComponent = record.components[name];
            {
                if (!rawComponent ||
                    (typeof rawComponent !== 'object' &&
                        typeof rawComponent !== 'function')) {
                    warn(`Component "${name}" in record with path "${record.path}" is not` +
                        ` a valid component. Received "${String(rawComponent)}".`);
                    // throw to ensure we stop here but warn to ensure the message isn't
                    // missed by the user
                    throw new Error('Invalid route component');
                }
                else if ('then' in rawComponent) {
                    // warn if user wrote import('/component.vue') instead of () =>
                    // import('./component.vue')
                    warn(`Component "${name}" in record with path "${record.path}" is a ` +
                        `Promise instead of a function that returns a Promise. Did you ` +
                        `write "import('./MyPage.vue')" instead of ` +
                        `"() => import('./MyPage.vue')" ? This will break in ` +
                        `production if not fixed.`);
                    let promise = rawComponent;
                    rawComponent = () => promise;
                }
                else if (rawComponent.__asyncLoader &&
                    // warn only once per component
                    !rawComponent.__warnedDefineAsync) {
                    rawComponent.__warnedDefineAsync = true;
                    warn(`Component "${name}" in record with path "${record.path}" is defined ` +
                        `using "defineAsyncComponent()". ` +
                        `Write "() => import('./MyPage.vue')" instead of ` +
                        `"defineAsyncComponent(() => import('./MyPage.vue'))".`);
                }
            }
            // skip update and leave guards if the route component is not mounted
            if (guardType !== 'beforeRouteEnter' && !record.instances[name])
                continue;
            if (isRouteComponent(rawComponent)) {
                // __vccOpts is added by vue-class-component and contain the regular options
                let options = rawComponent.__vccOpts || rawComponent;
                const guard = options[guardType];
                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));
            }
            else {
                // start requesting the chunk already
                let componentPromise = rawComponent();
                if (!('catch' in componentPromise)) {
                    warn(`Component "${name}" in record with path "${record.path}" is a function that does not return a Promise. If you were passing a functional component, make sure to add a "displayName" to the component. This will break in production if not fixed.`);
                    componentPromise = Promise.resolve(componentPromise);
                }
                else {
                    // display the error if any
                    componentPromise = componentPromise.catch(console.error);
                }
                guards.push(() => componentPromise.then(resolved => {
                    if (!resolved)
                        return Promise.reject(new Error(`Couldn't resolve component "${name}" at "${record.path}"`));
                    const resolvedComponent = isESModule(resolved)
                        ? resolved.default
                        : resolved;
                    // replace the function with the resolved component
                    record.components[name] = resolvedComponent;
                    // __vccOpts is added by vue-class-component and contain the regular options
                    let options = resolvedComponent.__vccOpts || resolvedComponent;
                    const guard = options[guardType];
                    return guard && guardToPromiseFn(guard, to, from, record, name)();
                }));
            }
        }
    }
    return guards;
}
/**
 * Allows differentiating lazy components from functional components and vue-class-component
 * @param component
 */
function isRouteComponent(component) {
    return (typeof component === 'object' ||
        'displayName' in component ||
        'props' in component ||
        '__vccOpts' in component);
}

// TODO: we could allow currentRoute as a prop to expose `isActive` and
// `isExactActive` behavior should go through an RFC
function useLink(props) {
    const router = inject(routerKey);
    const currentRoute = inject(routeLocationKey);
    const route = computed(() => router.resolve(unref(props.to)));
    const activeRecordIndex = computed(() => {
        let { matched } = route.value;
        let { length } = matched;
        const routeMatched = matched[length - 1];
        let currentMatched = currentRoute.matched;
        if (!routeMatched || !currentMatched.length)
            return -1;
        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));
        if (index > -1)
            return index;
        // possible parent record
        let parentRecordPath = getOriginalPath(matched[length - 2]);
        return (
        // we are dealing with nested routes
        length > 1 &&
            // if the parent and matched route have the same path, this link is
            // referring to the empty child. Or we currently are on a different
            // child of the same parent
            getOriginalPath(routeMatched) === parentRecordPath &&
            // avoid comparing the child with its parent
            currentMatched[currentMatched.length - 1].path !== parentRecordPath
            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))
            : index);
    });
    const isActive = computed(() => activeRecordIndex.value > -1 &&
        includesParams(currentRoute.params, route.value.params));
    const isExactActive = computed(() => activeRecordIndex.value > -1 &&
        activeRecordIndex.value === currentRoute.matched.length - 1 &&
        isSameRouteLocationParams(currentRoute.params, route.value.params));
    function navigate(e = {}) {
        if (guardEvent(e))
            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));
        return Promise.resolve();
    }
    return {
        route,
        href: computed(() => route.value.href),
        isActive,
        isExactActive,
        navigate,
    };
}
const RouterLinkImpl = /*#__PURE__*/ defineComponent({
    name: 'RouterLink',
    props: {
        to: {
            type: [String, Object],
            required: true,
        },
        replace: Boolean,
        activeClass: String,
        // inactiveClass: String,
        exactActiveClass: String,
        custom: Boolean,
        ariaCurrentValue: {
            type: String,
            default: 'page',
        },
    },
    setup(props, { slots, attrs }) {
        const link = reactive(useLink(props));
        const { options } = inject(routerKey);
        const elClass = computed(() => ({
            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,
            // [getLinkClass(
            //   props.inactiveClass,
            //   options.linkInactiveClass,
            //   'router-link-inactive'
            // )]: !link.isExactActive,
            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,
        }));
        {
            const instance = getCurrentInstance();
            watchEffect(() => {
                if (!instance)
                    return;
                instance.__vrl_route = link.route;
            });
            watchEffect(() => {
                if (!instance)
                    return;
                instance.__vrl_active = link.isActive;
                instance.__vrl_exactActive = link.isExactActive;
            });
        }
        return () => {
            const children = slots.default && slots.default(link);
            return props.custom
                ? children
                : h('a', assign({
                    'aria-current': link.isExactActive
                        ? props.ariaCurrentValue
                        : null,
                    onClick: link.navigate,
                    href: link.href,
                }, attrs, {
                    class: elClass.value,
                }), children);
        };
    },
});
// export the public type for h/tsx inference
// also to avoid inline import() in generated d.ts files
/**
 * Component to render a link that triggers a navigation on click.
 */
const RouterLink = RouterLinkImpl;
function guardEvent(e) {
    // don't redirect with control keys
    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
        return;
    // don't redirect when preventDefault called
    if (e.defaultPrevented)
        return;
    // don't redirect on right click
    if (e.button !== undefined && e.button !== 0)
        return;
    // don't redirect if `target="_blank"`
    // @ts-ignore getAttribute does exist
    if (e.currentTarget && e.currentTarget.getAttribute) {
        // @ts-ignore getAttribute exists
        const target = e.currentTarget.getAttribute('target');
        if (/\b_blank\b/i.test(target))
            return;
    }
    // this may be a Weex event which doesn't have this method
    if (e.preventDefault)
        e.preventDefault();
    return true;
}
function includesParams(outer, inner) {
    for (let key in inner) {
        let innerValue = inner[key];
        let outerValue = outer[key];
        if (typeof innerValue === 'string') {
            if (innerValue !== outerValue)
                return false;
        }
        else {
            if (!Array.isArray(outerValue) ||
                outerValue.length !== innerValue.length ||
                innerValue.some((value, i) => value !== outerValue[i]))
                return false;
        }
    }
    return true;
}
/**
 * Get the original path value of a record by following its aliasOf
 * @param record
 */
function getOriginalPath(record) {
    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';
}
/**
 * Utility class to get the active class based on defaults.
 * @param propClass
 * @param globalClass
 * @param defaultClass
 */
const getLinkClass = (propClass, globalClass, defaultClass) => propClass != null
    ? propClass
    : globalClass != null
        ? globalClass
        : defaultClass;

const RouterViewImpl = /*#__PURE__*/ defineComponent({
    name: 'RouterView',
    // #674 we manually inherit them
    inheritAttrs: false,
    props: {
        name: {
            type: String,
            default: 'default',
        },
        route: Object,
    },
    setup(props, { attrs, slots }) {
        warnDeprecatedUsage();
        const injectedRoute = inject(routerViewLocationKey);
        const routeToDisplay = computed(() => props.route || injectedRoute.value);
        const depth = inject(viewDepthKey, 0);
        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);
        provide(viewDepthKey, depth + 1);
        provide(matchedRouteKey, matchedRouteRef);
        provide(routerViewLocationKey, routeToDisplay);
        const viewRef = ref();
        // watch at the same time the component instance, the route record we are
        // rendering, and the name
        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {
            // copy reused instances
            if (to) {
                // this will update the instance for new instances as well as reused
                // instances when navigating to a new route
                to.instances[name] = instance;
                // the component instance is reused for a different route or name so
                // we copy any saved update or leave guards. With async setup, the
                // mounting component will mount before the matchedRoute changes,
                // making instance === oldInstance, so we check if guards have been
                // added before. This works because we remove guards when
                // unmounting/deactivating components
                if (from && from !== to && instance && instance === oldInstance) {
                    if (!to.leaveGuards.size) {
                        to.leaveGuards = from.leaveGuards;
                    }
                    if (!to.updateGuards.size) {
                        to.updateGuards = from.updateGuards;
                    }
                }
            }
            // trigger beforeRouteEnter next callbacks
            if (instance &&
                to &&
                // if there is no instance but to and from are the same this might be
                // the first visit
                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {
                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));
            }
        }, { flush: 'post' });
        return () => {
            const route = routeToDisplay.value;
            const matchedRoute = matchedRouteRef.value;
            const ViewComponent = matchedRoute && matchedRoute.components[props.name];
            // we need the value at the time we render because when we unmount, we
            // navigated to a different location so the value is different
            const currentName = props.name;
            if (!ViewComponent) {
                return normalizeSlot(slots.default, { Component: ViewComponent, route });
            }
            // props from route configuration
            const routePropsOption = matchedRoute.props[props.name];
            const routeProps = routePropsOption
                ? routePropsOption === true
                    ? route.params
                    : typeof routePropsOption === 'function'
                        ? routePropsOption(route)
                        : routePropsOption
                : null;
            const onVnodeUnmounted = vnode => {
                // remove the instance reference to prevent leak
                if (vnode.component.isUnmounted) {
                    matchedRoute.instances[currentName] = null;
                }
            };
            const component = h(ViewComponent, assign({}, routeProps, attrs, {
                onVnodeUnmounted,
                ref: viewRef,
            }));
            return (
            // pass the vnode to the slot as a prop.
            // h and <component :is="..."> both accept vnodes
            normalizeSlot(slots.default, { Component: component, route }) ||
                component);
        };
    },
});
function normalizeSlot(slot, data) {
    if (!slot)
        return null;
    const slotContent = slot(data);
    return slotContent.length === 1 ? slotContent[0] : slotContent;
}
// export the public type for h/tsx inference
// also to avoid inline import() in generated d.ts files
/**
 * Component to display the current route the user is at.
 */
const RouterView = RouterViewImpl;
// warn against deprecated usage with <transition> & <keep-alive>
// due to functional component being no longer eager in Vue 3
function warnDeprecatedUsage() {
    const instance = getCurrentInstance();
    const parentName = instance.parent && instance.parent.type.name;
    if (parentName &&
        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {
        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';
        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\n` +
            `Use slot props instead:\n\n` +
            `<router-view v-slot="{ Component }">\n` +
            `  <${comp}>\n` +
            `    <component :is="Component" />\n` +
            `  </${comp}>\n` +
            `</router-view>`);
    }
}

function getDevtoolsGlobalHook() {
    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;
}
function getTarget() {
    // @ts-ignore
    return typeof navigator !== 'undefined'
        ? window
        : typeof global !== 'undefined'
            ? global
            : {};
}

const HOOK_SETUP = 'devtools-plugin:setup';

function setupDevtoolsPlugin(pluginDescriptor, setupFn) {
    const hook = getDevtoolsGlobalHook();
    if (hook) {
        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);
    }
    else {
        const target = getTarget();
        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];
        list.push({
            pluginDescriptor,
            setupFn
        });
    }
}

function formatRouteLocation(routeLocation, tooltip) {
    const copy = assign({}, routeLocation, {
        // remove variables that can contain vue instances
        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),
    });
    return {
        _custom: {
            type: null,
            readOnly: true,
            display: routeLocation.fullPath,
            tooltip,
            value: copy,
        },
    };
}
function formatDisplay(display) {
    return {
        _custom: {
            display,
        },
    };
}
// to support multiple router instances
let routerId = 0;
function addDevtools(app, router, matcher) {
    // Take over router.beforeEach and afterEach
    // make sure we are not registering the devtool twice
    if (router.__hasDevtools)
        return;
    router.__hasDevtools = true;
    // increment to support multiple router instances
    const id = routerId++;
    setupDevtoolsPlugin({
        id: 'org.vuejs.router' + (id ? '.' + id : ''),
        label: 'Vue Router',
        packageName: 'vue-router',
        homepage: 'https://next.router.vuejs.org/',
        logo: 'https://vuejs.org/images/icons/favicon-96x96.png',
        componentStateTypes: ['Routing'],
        app,
    }, api => {
        // display state added by the router
        api.on.inspectComponent((payload, ctx) => {
            if (payload.instanceData) {
                payload.instanceData.state.push({
                    type: 'Routing',
                    key: '$route',
                    editable: false,
                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),
                });
            }
        });
        // mark router-link as active
        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {
            if (node.name === 'RouterLink') {
                if (componentInstance.__vrl_route) {
                    node.tags.push({
                        label: componentInstance.__vrl_route.path,
                        textColor: 0,
                        backgroundColor: ORANGE_400,
                    });
                }
                if (componentInstance.__vrl_exactActive) {
                    node.tags.push({
                        label: 'exact',
                        textColor: 0,
                        backgroundColor: LIME_500,
                    });
                }
                if (componentInstance.__vrl_active) {
                    node.tags.push({
                        label: 'active',
                        textColor: 0,
                        backgroundColor: BLUE_600,
                    });
                }
            }
        });
        watch(router.currentRoute, () => {
            // refresh active state
            refreshRoutesView();
            api.notifyComponentUpdate();
            api.sendInspectorTree(routerInspectorId);
        });
        const navigationsLayerId = 'router:navigations:' + id;
        api.addTimelineLayer({
            id: navigationsLayerId,
            label: `Router${id ? ' ' + id : ''} Navigations`,
            color: 0x40a8c4,
        });
        // const errorsLayerId = 'router:errors'
        // api.addTimelineLayer({
        //   id: errorsLayerId,
        //   label: 'Router Errors',
        //   color: 0xea5455,
        // })
        router.onError(error => {
            api.addTimelineEvent({
                layerId: navigationsLayerId,
                event: {
                    title: 'Error',
                    subtitle: 'An uncaught error happened during navigation',
                    logType: 'error',
                    time: Date.now(),
                    data: { error },
                },
            });
        });
        // attached to `meta` and used to group events
        let navigationId = 0;
        router.beforeEach((to, from) => {
            const data = {
                guard: formatDisplay('beforeEach'),
                from: formatRouteLocation(from, 'Current Location during this navigation'),
                to: formatRouteLocation(to, 'Target location'),
            };
            // Used to group navigations together, hide from devtools
            Object.defineProperty(to.meta, '__navigationId', {
                value: navigationId++,
            });
            api.addTimelineEvent({
                layerId: navigationsLayerId,
                event: {
                    time: Date.now(),
                    title: 'Start of navigation',
                    data,
                    groupId: to.meta.__navigationId,
                },
            });
        });
        router.afterEach((to, from, failure) => {
            const data = {
                guard: formatDisplay('afterEach'),
            };
            if (failure) {
                data.failure = {
                    _custom: {
                        type: Error,
                        readOnly: true,
                        display: failure ? failure.message : '',
                        tooltip: 'Navigation Failure',
                        value: failure,
                    },
                };
                data.status = formatDisplay('❌');
            }
            else {
                data.status = formatDisplay('✅');
            }
            // we set here to have the right order
            data.from = formatRouteLocation(from, 'Current Location during this navigation');
            data.to = formatRouteLocation(to, 'Target location');
            api.addTimelineEvent({
                layerId: navigationsLayerId,
                event: {
                    title: 'End of navigation',
                    time: Date.now(),
                    data,
                    logType: failure ? 'warning' : 'default',
                    groupId: to.meta.__navigationId,
                },
            });
        });
        /**
         * Inspector of Existing routes
         */
        const routerInspectorId = 'router-inspector:' + id;
        api.addInspector({
            id: routerInspectorId,
            label: 'Routes' + (id ? ' ' + id : ''),
            icon: 'book',
            treeFilterPlaceholder: 'Search routes',
        });
        function refreshRoutesView() {
            // the routes view isn't active
            if (!activeRoutesPayload)
                return;
            const payload = activeRoutesPayload;
            // children routes will appear as nested
            let routes = matcher.getRoutes().filter(route => !route.parent);
            // reset match state to false
            routes.forEach(resetMatchStateOnRouteRecord);
            // apply a match state if there is a payload
            if (payload.filter) {
                routes = routes.filter(route => 
                // save matches state based on the payload
                isRouteMatching(route, payload.filter.toLowerCase()));
            }
            // mark active routes
            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));
            payload.rootNodes = routes.map(formatRouteRecordForInspector);
        }
        let activeRoutesPayload;
        api.on.getInspectorTree(payload => {
            activeRoutesPayload = payload;
            if (payload.app === app && payload.inspectorId === routerInspectorId) {
                refreshRoutesView();
            }
        });
        /**
         * Display information about the currently selected route record
         */
        api.on.getInspectorState(payload => {
            if (payload.app === app && payload.inspectorId === routerInspectorId) {
                const routes = matcher.getRoutes();
                const route = routes.find(route => route.record.__vd_id === payload.nodeId);
                if (route) {
                    payload.state = {
                        options: formatRouteRecordMatcherForStateInspector(route),
                    };
                }
            }
        });
        api.sendInspectorTree(routerInspectorId);
        api.sendInspectorState(routerInspectorId);
    });
}
function modifierForKey(key) {
    if (key.optional) {
        return key.repeatable ? '*' : '?';
    }
    else {
        return key.repeatable ? '+' : '';
    }
}
function formatRouteRecordMatcherForStateInspector(route) {
    const { record } = route;
    const fields = [
        { editable: false, key: 'path', value: record.path },
    ];
    if (record.name != null) {
        fields.push({
            editable: false,
            key: 'name',
            value: record.name,
        });
    }
    fields.push({ editable: false, key: 'regexp', value: route.re });
    if (route.keys.length) {
        fields.push({
            editable: false,
            key: 'keys',
            value: {
                _custom: {
                    type: null,
                    readOnly: true,
                    display: route.keys
                        .map(key => `${key.name}${modifierForKey(key)}`)
                        .join(' '),
                    tooltip: 'Param keys',
                    value: route.keys,
                },
            },
        });
    }
    if (record.redirect != null) {
        fields.push({
            editable: false,
            key: 'redirect',
            value: record.redirect,
        });
    }
    if (route.alias.length) {
        fields.push({
            editable: false,
            key: 'aliases',
            value: route.alias.map(alias => alias.record.path),
        });
    }
    fields.push({
        key: 'score',
        editable: false,
        value: {
            _custom: {
                type: null,
                readOnly: true,
                display: route.score.map(score => score.join(', ')).join(' | '),
                tooltip: 'Score used to sort routes',
                value: route.score,
            },
        },
    });
    return fields;
}
/**
 * Extracted from tailwind palette
 */
const PINK_500 = 0xec4899;
const BLUE_600 = 0x2563eb;
const LIME_500 = 0x84cc16;
const CYAN_400 = 0x22d3ee;
const ORANGE_400 = 0xfb923c;
// const GRAY_100 = 0xf4f4f5
const DARK = 0x666666;
function formatRouteRecordForInspector(route) {
    const tags = [];
    const { record } = route;
    if (record.name != null) {
        tags.push({
            label: String(record.name),
            textColor: 0,
            backgroundColor: CYAN_400,
        });
    }
    if (record.aliasOf) {
        tags.push({
            label: 'alias',
            textColor: 0,
            backgroundColor: ORANGE_400,
        });
    }
    if (route.__vd_match) {
        tags.push({
            label: 'matches',
            textColor: 0,
            backgroundColor: PINK_500,
        });
    }
    if (route.__vd_exactActive) {
        tags.push({
            label: 'exact',
            textColor: 0,
            backgroundColor: LIME_500,
        });
    }
    if (route.__vd_active) {
        tags.push({
            label: 'active',
            textColor: 0,
            backgroundColor: BLUE_600,
        });
    }
    if (record.redirect) {
        tags.push({
            label: 'redirect: ' +
                (typeof record.redirect === 'string' ? record.redirect : 'Object'),
            textColor: 0xffffff,
            backgroundColor: DARK,
        });
    }
    // add an id to be able to select it. Using the `path` is not possible because
    // empty path children would collide with their parents
    let id = String(routeRecordId++);
    record.__vd_id = id;
    return {
        id,
        label: record.path,
        tags,
        children: route.children.map(formatRouteRecordForInspector),
    };
}
//  incremental id for route records and inspector state
let routeRecordId = 0;
const EXTRACT_REGEXP_RE = /^\/(.*)\/([a-z]*)$/;
function markRouteRecordActive(route, currentRoute) {
    // no route will be active if matched is empty
    // reset the matching state
    const isExactActive = currentRoute.matched.length &&
        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);
    route.__vd_exactActive = route.__vd_active = isExactActive;
    if (!isExactActive) {
        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));
    }
    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));
}
function resetMatchStateOnRouteRecord(route) {
    route.__vd_match = false;
    route.children.forEach(resetMatchStateOnRouteRecord);
}
function isRouteMatching(route, filter) {
    const found = String(route.re).match(EXTRACT_REGEXP_RE);
    route.__vd_match = false;
    if (!found || found.length < 3) {
        return false;
    }
    // use a regexp without $ at the end to match nested routes better
    const nonEndingRE = new RegExp(found[1].replace(/\$$/, ''), found[2]);
    if (nonEndingRE.test(filter)) {
        // mark children as matches
        route.children.forEach(child => isRouteMatching(child, filter));
        // exception case: `/`
        if (route.record.path !== '/' || filter === '/') {
            route.__vd_match = route.re.test(filter);
            return true;
        }
        // hide the / route
        return false;
    }
    const path = route.record.path.toLowerCase();
    const decodedPath = decode(path);
    // also allow partial matching on the path
    if (!filter.startsWith('/') &&
        (decodedPath.includes(filter) || path.includes(filter)))
        return true;
    if (decodedPath.startsWith(filter) || path.startsWith(filter))
        return true;
    if (route.record.name && String(route.record.name).includes(filter))
        return true;
    return route.children.some(child => isRouteMatching(child, filter));
}
function omit(obj, keys) {
    const ret = {};
    for (let key in obj) {
        if (!keys.includes(key)) {
            // @ts-ignore
            ret[key] = obj[key];
        }
    }
    return ret;
}

/**
 * Creates a Router instance that can be used by a Vue app.
 *
 * @param options - {@link RouterOptions}
 */
function createRouter(options) {
    const matcher = createRouterMatcher(options.routes, options);
    let parseQuery$1 = options.parseQuery || parseQuery;
    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;
    let routerHistory = options.history;
    const beforeGuards = useCallbacks();
    const beforeResolveGuards = useCallbacks();
    const afterGuards = useCallbacks();
    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);
    let pendingLocation = START_LOCATION_NORMALIZED;
    // leave the scrollRestoration if no scrollBehavior is provided
    if (isBrowser$1 && options.scrollBehavior && 'scrollRestoration' in history) {
        history.scrollRestoration = 'manual';
    }
    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);
    const encodeParams = applyToParams.bind(null, encodeParam);
    const decodeParams = applyToParams.bind(null, decode);
    function addRoute(parentOrRoute, route) {
        let parent;
        let record;
        if (isRouteName(parentOrRoute)) {
            parent = matcher.getRecordMatcher(parentOrRoute);
            record = route;
        }
        else {
            record = parentOrRoute;
        }
        return matcher.addRoute(record, parent);
    }
    function removeRoute(name) {
        let recordMatcher = matcher.getRecordMatcher(name);
        if (recordMatcher) {
            matcher.removeRoute(recordMatcher);
        }
        else {
            warn(`Cannot remove non-existent route "${String(name)}"`);
        }
    }
    function getRoutes() {
        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);
    }
    function hasRoute(name) {
        return !!matcher.getRecordMatcher(name);
    }
    function resolve(rawLocation, currentLocation) {
        // const objectLocation = routerLocationAsObject(rawLocation)
        // we create a copy to modify it later
        currentLocation = assign({}, currentLocation || currentRoute.value);
        if (typeof rawLocation === 'string') {
            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);
            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);
            let href = routerHistory.createHref(locationNormalized.fullPath);
            {
                if (href.startsWith('//'))
                    warn(`Location "${rawLocation}" resolved to "${href}". A resolved location cannot start with multiple slashes.`);
                else if (!matchedRoute.matched.length) {
                    warn(`No match found for location with path "${rawLocation}"`);
                }
            }
            // locationNormalized is always a new object
            return assign(locationNormalized, matchedRoute, {
                params: decodeParams(matchedRoute.params),
                hash: decode(locationNormalized.hash),
                redirectedFrom: undefined,
                href,
            });
        }
        let matcherLocation;
        // path could be relative in object as well
        if ('path' in rawLocation) {
            if ('params' in rawLocation &&
                !('name' in rawLocation) &&
                Object.keys(rawLocation.params).length) {
                warn(`Path "${rawLocation.path}" was passed with params but they will be ignored. Use a named route alongside params instead.`);
            }
            matcherLocation = assign({}, rawLocation, {
                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,
            });
        }
        else {
            // pass encoded values to the matcher so it can produce encoded path and fullPath
            matcherLocation = assign({}, rawLocation, {
                params: encodeParams(rawLocation.params),
            });
            // current location params are decoded, we need to encode them in case the
            // matcher merges the params
            currentLocation.params = encodeParams(currentLocation.params);
        }
        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);
        const hash = rawLocation.hash || '';
        if (hash && !hash.startsWith('#')) {
            warn(`A \`hash\` should always start with the character "#". Replace "${hash}" with "#${hash}".`);
        }
        // decoding them) the matcher might have merged current location params so
        // we need to run the decoding again
        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));
        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {
            hash: encodeHash(hash),
            path: matchedRoute.path,
        }));
        let href = routerHistory.createHref(fullPath);
        {
            if (href.startsWith('//')) {
                warn(`Location "${rawLocation}" resolved to "${href}". A resolved location cannot start with multiple slashes.`);
            }
            else if (!matchedRoute.matched.length) {
                warn(`No match found for location with path "${'path' in rawLocation ? rawLocation.path : rawLocation}"`);
            }
        }
        return assign({
            fullPath,
            // keep the hash encoded so fullPath is effectively path + encodedQuery +
            // hash
            hash,
            query: 
            // if the user is using a custom query lib like qs, we might have
            // nested objects, so we keep the query as is, meaning it can contain
            // numbers at `$route.query`, but at the point, the user will have to
            // use their own type anyway.
            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567
            stringifyQuery$1 === stringifyQuery
                ? normalizeQuery(rawLocation.query)
                : rawLocation.query,
        }, matchedRoute, {
            redirectedFrom: undefined,
            href,
        });
    }
    function locationAsObject(to) {
        return typeof to === 'string'
            ? parseURL(parseQuery$1, to, currentRoute.value.path)
            : assign({}, to);
    }
    function checkCanceledNavigation(to, from) {
        if (pendingLocation !== to) {
            return createRouterError(8 /* NAVIGATION_CANCELLED */, {
                from,
                to,
            });
        }
    }
    function push(to) {
        return pushWithRedirect(to);
    }
    function replace(to) {
        return push(assign(locationAsObject(to), { replace: true }));
    }
    function handleRedirectRecord(to) {
        const lastMatched = to.matched[to.matched.length - 1];
        if (lastMatched && lastMatched.redirect) {
            const { redirect } = lastMatched;
            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;
            if (typeof newTargetLocation === 'string') {
                newTargetLocation =
                    newTargetLocation.indexOf('?') > -1 ||
                        newTargetLocation.indexOf('#') > -1
                        ? (newTargetLocation = locationAsObject(newTargetLocation))
                        : { path: newTargetLocation };
            }
            if (!('path' in newTargetLocation) &&
                !('name' in newTargetLocation)) {
                warn(`Invalid redirect found:\n${JSON.stringify(newTargetLocation, null, 2)}\n when navigating to "${to.fullPath}". A redirect must contain a name or path. This will break in production.`);
                throw new Error('Invalid redirect');
            }
            return assign({
                query: to.query,
                hash: to.hash,
                params: to.params,
            }, newTargetLocation);
        }
    }
    function pushWithRedirect(to, redirectedFrom) {
        const targetLocation = (pendingLocation = resolve(to));
        const from = currentRoute.value;
        const data = to.state;
        const force = to.force;
        // to could be a string where `replace` is a function
        const replace = to.replace === true;
        const shouldRedirect = handleRedirectRecord(targetLocation);
        if (shouldRedirect)
            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {
                state: data,
                force,
                replace,
            }), 
            // keep original redirectedFrom if it exists
            redirectedFrom || targetLocation);
        // if it was a redirect we already called `pushWithRedirect` above
        const toLocation = targetLocation;
        toLocation.redirectedFrom = redirectedFrom;
        let failure;
        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {
            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });
            // trigger scroll to allow scrolling to the same anchor
            handleScroll(from, from, 
            // this is a push, the only way for it to be triggered from a
            // history.listen is with a redirect, which makes it become a push
            true, 
            // This cannot be the first navigation because the initial location
            // cannot be manually navigated to
            false);
        }
        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))
            .catch((error) => isNavigationFailure(error)
            ? error
            : // reject any unknown error
                triggerError(error))
            .then((failure) => {
            if (failure) {
                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {
                    if (// we are redirecting to the same location we were already at
                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&
                        // and we have done it a couple of times
                        redirectedFrom &&
                        // @ts-ignore
                        (redirectedFrom._count = redirectedFrom._count
                            ? // @ts-ignore
                                redirectedFrom._count + 1
                            : 1) > 10) {
                        warn(`Detected an infinite redirection in a navigation guard when going from "${from.fullPath}" to "${toLocation.fullPath}". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);
                        return Promise.reject(new Error('Infinite redirect in navigation guard'));
                    }
                    return pushWithRedirect(
                    // keep options
                    assign(locationAsObject(failure.to), {
                        state: data,
                        force,
                        replace,
                    }), 
                    // preserve the original redirectedFrom if any
                    redirectedFrom || toLocation);
                }
            }
            else {
                // if we fail we don't finalize the navigation
                failure = finalizeNavigation(toLocation, from, true, replace, data);
            }
            triggerAfterEach(toLocation, from, failure);
            return failure;
        });
    }
    /**
     * Helper to reject and skip all navigation guards if a new navigation happened
     * @param to
     * @param from
     */
    function checkCanceledNavigationAndReject(to, from) {
        const error = checkCanceledNavigation(to, from);
        return error ? Promise.reject(error) : Promise.resolve();
    }
    // TODO: refactor the whole before guards by internally using router.beforeEach
    function navigate(to, from) {
        let guards;
        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);
        // all components here have been resolved once because we are leaving
        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);
        // leavingRecords is already reversed
        for (const record of leavingRecords) {
            record.leaveGuards.forEach(guard => {
                guards.push(guardToPromiseFn(guard, to, from));
            });
        }
        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);
        guards.push(canceledNavigationCheck);
        // run the queue of per route beforeRouteLeave guards
        return (runGuardQueue(guards)
            .then(() => {
            // check global guards beforeEach
            guards = [];
            for (const guard of beforeGuards.list()) {
                guards.push(guardToPromiseFn(guard, to, from));
            }
            guards.push(canceledNavigationCheck);
            return runGuardQueue(guards);
        })
            .then(() => {
            // check in components beforeRouteUpdate
            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);
            for (const record of updatingRecords) {
                record.updateGuards.forEach(guard => {
                    guards.push(guardToPromiseFn(guard, to, from));
                });
            }
            guards.push(canceledNavigationCheck);
            // run the queue of per route beforeEnter guards
            return runGuardQueue(guards);
        })
            .then(() => {
            // check the route beforeEnter
            guards = [];
            for (const record of to.matched) {
                // do not trigger beforeEnter on reused views
                if (record.beforeEnter && from.matched.indexOf(record) < 0) {
                    if (Array.isArray(record.beforeEnter)) {
                        for (const beforeEnter of record.beforeEnter)
                            guards.push(guardToPromiseFn(beforeEnter, to, from));
                    }
                    else {
                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));
                    }
                }
            }
            guards.push(canceledNavigationCheck);
            // run the queue of per route beforeEnter guards
            return runGuardQueue(guards);
        })
            .then(() => {
            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>
            // clear existing enterCallbacks, these are added by extractComponentsGuards
            to.matched.forEach(record => (record.enterCallbacks = {}));
            // check in-component beforeRouteEnter
            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);
            guards.push(canceledNavigationCheck);
            // run the queue of per route beforeEnter guards
            return runGuardQueue(guards);
        })
            .then(() => {
            // check global guards beforeResolve
            guards = [];
            for (const guard of beforeResolveGuards.list()) {
                guards.push(guardToPromiseFn(guard, to, from));
            }
            guards.push(canceledNavigationCheck);
            return runGuardQueue(guards);
        })
            // catch any navigation canceled
            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)
            ? err
            : Promise.reject(err)));
    }
    function triggerAfterEach(to, from, failure) {
        // navigation is confirmed, call afterGuards
        // TODO: wrap with error handlers
        for (const guard of afterGuards.list())
            guard(to, from, failure);
    }
    /**
     * - Cleans up any navigation guards
     * - Changes the url if necessary
     * - Calls the scrollBehavior
     */
    function finalizeNavigation(toLocation, from, isPush, replace, data) {
        // a more recent navigation took place
        const error = checkCanceledNavigation(toLocation, from);
        if (error)
            return error;
        // only consider as push if it's not the first navigation
        const isFirstNavigation = from === START_LOCATION_NORMALIZED;
        const state = !isBrowser$1 ? {} : history.state;
        // change URL only if the user did a push/replace and if it's not the initial navigation because
        // it's just reflecting the url
        if (isPush) {
            // on the initial navigation, we want to reuse the scroll position from
            // history state if it exists
            if (replace || isFirstNavigation)
                routerHistory.replace(toLocation.fullPath, assign({
                    scroll: isFirstNavigation && state && state.scroll,
                }, data));
            else
                routerHistory.push(toLocation.fullPath, data);
        }
        // accept current navigation
        currentRoute.value = toLocation;
        handleScroll(toLocation, from, isPush, isFirstNavigation);
        markAsReady();
    }
    let removeHistoryListener;
    // attach listener to history to trigger navigations
    function setupListeners() {
        removeHistoryListener = routerHistory.listen((to, _from, info) => {
            // cannot be a redirect route because it was in history
            let toLocation = resolve(to);
            // due to dynamic routing, and to hash history with manual navigation
            // (manually changing the url or calling history.hash = '#/somewhere'),
            // there could be a redirect record in history
            const shouldRedirect = handleRedirectRecord(toLocation);
            if (shouldRedirect) {
                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop$1);
                return;
            }
            pendingLocation = toLocation;
            const from = currentRoute.value;
            // TODO: should be moved to web history?
            if (isBrowser$1) {
                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());
            }
            navigate(toLocation, from)
                .catch((error) => {
                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {
                    return error;
                }
                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {
                    // Here we could call if (info.delta) routerHistory.go(-info.delta,
                    // false) but this is bug prone as we have no way to wait the
                    // navigation to be finished before calling pushWithRedirect. Using
                    // a setTimeout of 16ms seems to work but there is not guarantee for
                    // it to work on every browser. So Instead we do not restore the
                    // history entry and trigger a new navigation as requested by the
                    // navigation guard.
                    // the error is already handled by router.push we just want to avoid
                    // logging the error
                    pushWithRedirect(error.to, toLocation
                    // avoid an uncaught rejection, let push call triggerError
                    ).catch(noop$1);
                    // avoid the then branch
                    return Promise.reject();
                }
                // do not restore history on unknown direction
                if (info.delta)
                    routerHistory.go(-info.delta, false);
                // unrecognized error, transfer to the global handler
                return triggerError(error);
            })
                .then((failure) => {
                failure =
                    failure ||
                        finalizeNavigation(
                        // after navigation, all matched components are resolved
                        toLocation, from, false);
                // revert the navigation
                if (failure && info.delta)
                    routerHistory.go(-info.delta, false);
                triggerAfterEach(toLocation, from, failure);
            })
                .catch(noop$1);
        });
    }
    // Initialization and Errors
    let readyHandlers = useCallbacks();
    let errorHandlers = useCallbacks();
    let ready;
    /**
     * Trigger errorHandlers added via onError and throws the error as well
     * @param error - error to throw
     * @returns the error as a rejected promise
     */
    function triggerError(error) {
        markAsReady(error);
        errorHandlers.list().forEach(handler => handler(error));
        return Promise.reject(error);
    }
    function isReady() {
        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)
            return Promise.resolve();
        return new Promise((resolve, reject) => {
            readyHandlers.add([resolve, reject]);
        });
    }
    /**
     * Mark the router as ready, resolving the promised returned by isReady(). Can
     * only be called once, otherwise does nothing.
     * @param err - optional error
     */
    function markAsReady(err) {
        if (ready)
            return;
        ready = true;
        setupListeners();
        readyHandlers
            .list()
            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));
        readyHandlers.reset();
    }
    // Scroll behavior
    function handleScroll(to, from, isPush, isFirstNavigation) {
        const { scrollBehavior } = options;
        if (!isBrowser$1 || !scrollBehavior)
            return Promise.resolve();
        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||
            ((isFirstNavigation || !isPush) &&
                history.state &&
                history.state.scroll) ||
            null;
        return nextTick()
            .then(() => scrollBehavior(to, from, scrollPosition))
            .then(position => position && scrollToPosition(position))
            .catch(triggerError);
    }
    const go = (delta) => routerHistory.go(delta);
    let started;
    const installedApps = new Set();
    const router = {
        currentRoute,
        addRoute,
        removeRoute,
        hasRoute,
        getRoutes,
        resolve,
        options,
        push,
        replace,
        go,
        back: () => go(-1),
        forward: () => go(1),
        beforeEach: beforeGuards.add,
        beforeResolve: beforeResolveGuards.add,
        afterEach: afterGuards.add,
        onError: errorHandlers.add,
        isReady,
        install(app) {
            const router = this;
            app.component('RouterLink', RouterLink);
            app.component('RouterView', RouterView);
            app.config.globalProperties.$router = router;
            Object.defineProperty(app.config.globalProperties, '$route', {
                get: () => unref(currentRoute),
            });
            // this initial navigation is only necessary on client, on server it doesn't
            // make sense because it will create an extra unnecessary navigation and could
            // lead to problems
            if (isBrowser$1 &&
                // used for the initial navigation client side to avoid pushing
                // multiple times when the router is used in multiple apps
                !started &&
                currentRoute.value === START_LOCATION_NORMALIZED) {
                // see above
                started = true;
                push(routerHistory.location).catch(err => {
                    warn('Unexpected error when starting the router:', err);
                });
            }
            const reactiveRoute = {};
            for (let key in START_LOCATION_NORMALIZED) {
                // @ts-ignore: the key matches
                reactiveRoute[key] = computed(() => currentRoute.value[key]);
            }
            app.provide(routerKey, router);
            app.provide(routeLocationKey, reactive(reactiveRoute));
            app.provide(routerViewLocationKey, currentRoute);
            let unmountApp = app.unmount;
            installedApps.add(app);
            app.unmount = function () {
                installedApps.delete(app);
                if (installedApps.size < 1) {
                    removeHistoryListener();
                    currentRoute.value = START_LOCATION_NORMALIZED;
                    started = false;
                    ready = false;
                }
                unmountApp();
            };
            {
                addDevtools(app, router, matcher);
            }
        },
    };
    return router;
}
function runGuardQueue(guards) {
    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());
}
function extractChangingRecords(to, from) {
    const leavingRecords = [];
    const updatingRecords = [];
    const enteringRecords = [];
    const len = Math.max(from.matched.length, to.matched.length);
    for (let i = 0; i < len; i++) {
        const recordFrom = from.matched[i];
        if (recordFrom) {
            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))
                updatingRecords.push(recordFrom);
            else
                leavingRecords.push(recordFrom);
        }
        const recordTo = to.matched[i];
        if (recordTo) {
            // the type doesn't matter because we are comparing per reference
            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {
                enteringRecords.push(recordTo);
            }
        }
    }
    return [leavingRecords, updatingRecords, enteringRecords];
}
/**
 * Returns the current route location. Equivalent to using `$route` inside
 * templates.
 */
function useRoute() {
    return inject(routeLocationKey);
}

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$1 = function(d, b) {
    extendStatics$1 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$1(d, b);
};

function __extends$1(d, b) {
    extendStatics$1(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$1 = function() {
    __assign$1 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$1.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var genericMessage = "Invariant Violation";
var _a$3 = Object.setPrototypeOf, setPrototypeOf = _a$3 === void 0 ? function (obj, proto) {
    obj.__proto__ = proto;
    return obj;
} : _a$3;
var InvariantError = /** @class */ (function (_super) {
    __extends(InvariantError, _super);
    function InvariantError(message) {
        if (message === void 0) { message = genericMessage; }
        var _this = _super.call(this, typeof message === "number"
            ? genericMessage + ": " + message + " (see https://github.com/apollographql/invariant-packages)"
            : message) || this;
        _this.framesToPop = 1;
        _this.name = genericMessage;
        setPrototypeOf(_this, InvariantError.prototype);
        return _this;
    }
    return InvariantError;
}(Error));
function invariant$1(condition, message) {
    if (!condition) {
        throw new InvariantError(message);
    }
}
var verbosityLevels = ["log", "warn", "error", "silent"];
var verbosityLevel = verbosityLevels.indexOf("log");
function wrapConsoleMethod(method) {
    return function () {
        if (verbosityLevels.indexOf(method) >= verbosityLevel) {
            return console[method].apply(console, arguments);
        }
    };
}
(function (invariant) {
    invariant.log = wrapConsoleMethod("log");
    invariant.warn = wrapConsoleMethod("warn");
    invariant.error = wrapConsoleMethod("error");
})(invariant$1 || (invariant$1 = {}));
function setVerbosity(level) {
    var old = verbosityLevels[verbosityLevel];
    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));
    return old;
}
// Code that uses ts-invariant with rollup-plugin-invariant may want to
// import this process stub to avoid errors evaluating "development".
// However, because most ESM-to-CJS compilers will rewrite the process import
// as tsInvariant.process, which prevents proper replacement by minifiers, we
// also export processStub, so you can import { invariant, processStub } from
// "ts-invariant" and assign processStub to a local variable named process.
(typeof process === "object" &&
    typeof process.env === "object") ? process : { env: {} };

function _typeof$2(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$2(obj); }

/**
 * Return true if `value` is object-like. A value is object-like if it's not
 * `null` and has a `typeof` result of "object".
 */
function isObjectLike$1(value) {
  return _typeof$2(value) == 'object' && value !== null;
}

// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator

var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';

/**
 * Represents a location in a Source.
 */

/**
 * Takes a Source and a UTF-8 character offset, and returns the corresponding
 * line and column as a SourceLocation.
 */
function getLocation(source, position) {
  var lineRegexp = /\r\n|[\n\r]/g;
  var line = 1;
  var column = position + 1;
  var match;

  while ((match = lineRegexp.exec(source.body)) && match.index < position) {
    line += 1;
    column = position + 1 - (match.index + match[0].length);
  }

  return {
    line: line,
    column: column
  };
}

/**
 * Render a helpful description of the location in the GraphQL Source document.
 */

function printLocation(location) {
  return printSourceLocation(location.source, getLocation(location.source, location.start));
}
/**
 * Render a helpful description of the location in the GraphQL Source document.
 */

function printSourceLocation(source, sourceLocation) {
  var firstLineColumnOffset = source.locationOffset.column - 1;
  var body = whitespace$1(firstLineColumnOffset) + source.body;
  var lineIndex = sourceLocation.line - 1;
  var lineOffset = source.locationOffset.line - 1;
  var lineNum = sourceLocation.line + lineOffset;
  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;
  var columnNum = sourceLocation.column + columnOffset;
  var locationStr = "".concat(source.name, ":").concat(lineNum, ":").concat(columnNum, "\n");
  var lines = body.split(/\r\n|[\n\r]/g);
  var locationLine = lines[lineIndex]; // Special case for minified documents

  if (locationLine.length > 120) {
    var subLineIndex = Math.floor(columnNum / 80);
    var subLineColumnNum = columnNum % 80;
    var subLines = [];

    for (var i = 0; i < locationLine.length; i += 80) {
      subLines.push(locationLine.slice(i, i + 80));
    }

    return locationStr + printPrefixedLines([["".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {
      return ['', subLine];
    }), [[' ', whitespace$1(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));
  }

  return locationStr + printPrefixedLines([// Lines specified like this: ["prefix", "string"],
  ["".concat(lineNum - 1), lines[lineIndex - 1]], ["".concat(lineNum), locationLine], ['', whitespace$1(columnNum - 1) + '^'], ["".concat(lineNum + 1), lines[lineIndex + 1]]]);
}

function printPrefixedLines(lines) {
  var existingLines = lines.filter(function (_ref) {
    _ref[0];
        var line = _ref[1];
    return line !== undefined;
  });
  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {
    var prefix = _ref2[0];
    return prefix.length;
  }));
  return existingLines.map(function (_ref3) {
    var prefix = _ref3[0],
        line = _ref3[1];
    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');
  }).join('\n');
}

function whitespace$1(len) {
  return Array(len + 1).join(' ');
}

function leftPad(len, str) {
  return whitespace$1(len - str.length) + str;
}

function _typeof$1(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$1(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf$1(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf$1(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$1(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof$1(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper$1(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper$1 = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction$1(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct$1(Class, arguments, _getPrototypeOf$1(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf$1(Wrapper, Class); }; return _wrapNativeSuper$1(Class); }

function _construct$1(Parent, args, Class) { if (_isNativeReflectConstruct$1()) { _construct$1 = Reflect.construct; } else { _construct$1 = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf$1(instance, Class.prototype); return instance; }; } return _construct$1.apply(null, arguments); }

function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction$1(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf$1(o, p) { _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$1(o, p); }

function _getPrototypeOf$1(o) { _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$1(o); }
/**
 * A GraphQLError describes an Error found during the parse, validate, or
 * execute phases of performing a GraphQL operation. In addition to a message
 * and stack trace, it also includes information about the locations in a
 * GraphQL document and/or execution result that correspond to the Error.
 */

var GraphQLError = /*#__PURE__*/function (_Error) {
  _inherits(GraphQLError, _Error);

  var _super = _createSuper(GraphQLError);

  /**
   * A message describing the Error for debugging purposes.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   *
   * Note: should be treated as readonly, despite invariant usage.
   */

  /**
   * An array of { line, column } locations within the source GraphQL document
   * which correspond to this error.
   *
   * Errors during validation often contain multiple locations, for example to
   * point out two things with the same name. Errors during execution include a
   * single location, the field which produced the error.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */

  /**
   * An array describing the JSON-path into the execution response which
   * corresponds to this error. Only included for errors during execution.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */

  /**
   * An array of GraphQL AST Nodes corresponding to this error.
   */

  /**
   * The source GraphQL document for the first location of this error.
   *
   * Note that if this Error represents more than one node, the source may not
   * represent nodes after the first node.
   */

  /**
   * An array of character offsets within the source GraphQL document
   * which correspond to this error.
   */

  /**
   * The original error thrown from a field resolver during execution.
   */

  /**
   * Extension fields to add to the formatted error.
   */
  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {
    var _locations2, _source2, _positions2, _extensions2;

    var _this;

    _classCallCheck(this, GraphQLError);

    _this = _super.call(this, message); // Compute list of blame nodes.

    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.


    var _source = source;

    if (!_source && _nodes) {
      var _nodes$0$loc;

      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;
    }

    var _positions = positions;

    if (!_positions && _nodes) {
      _positions = _nodes.reduce(function (list, node) {
        if (node.loc) {
          list.push(node.loc.start);
        }

        return list;
      }, []);
    }

    if (_positions && _positions.length === 0) {
      _positions = undefined;
    }

    var _locations;

    if (positions && source) {
      _locations = positions.map(function (pos) {
        return getLocation(source, pos);
      });
    } else if (_nodes) {
      _locations = _nodes.reduce(function (list, node) {
        if (node.loc) {
          list.push(getLocation(node.loc.source, node.loc.start));
        }

        return list;
      }, []);
    }

    var _extensions = extensions;

    if (_extensions == null && originalError != null) {
      var originalExtensions = originalError.extensions;

      if (isObjectLike$1(originalExtensions)) {
        _extensions = originalExtensions;
      }
    }

    Object.defineProperties(_assertThisInitialized(_this), {
      name: {
        value: 'GraphQLError'
      },
      message: {
        value: message,
        // By being enumerable, JSON.stringify will include `message` in the
        // resulting output. This ensures that the simplest possible GraphQL
        // service adheres to the spec.
        enumerable: true,
        writable: true
      },
      locations: {
        // Coercing falsy values to undefined ensures they will not be included
        // in JSON.stringify() when not provided.
        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,
        // By being enumerable, JSON.stringify will include `locations` in the
        // resulting output. This ensures that the simplest possible GraphQL
        // service adheres to the spec.
        enumerable: _locations != null
      },
      path: {
        // Coercing falsy values to undefined ensures they will not be included
        // in JSON.stringify() when not provided.
        value: path !== null && path !== void 0 ? path : undefined,
        // By being enumerable, JSON.stringify will include `path` in the
        // resulting output. This ensures that the simplest possible GraphQL
        // service adheres to the spec.
        enumerable: path != null
      },
      nodes: {
        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined
      },
      source: {
        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined
      },
      positions: {
        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined
      },
      originalError: {
        value: originalError
      },
      extensions: {
        // Coercing falsy values to undefined ensures they will not be included
        // in JSON.stringify() when not provided.
        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,
        // By being enumerable, JSON.stringify will include `path` in the
        // resulting output. This ensures that the simplest possible GraphQL
        // service adheres to the spec.
        enumerable: _extensions != null
      }
    }); // Include (non-enumerable) stack trace.

    if (originalError !== null && originalError !== void 0 && originalError.stack) {
      Object.defineProperty(_assertThisInitialized(_this), 'stack', {
        value: originalError.stack,
        writable: true,
        configurable: true
      });
      return _possibleConstructorReturn(_this);
    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')


    if (Error.captureStackTrace) {
      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);
    } else {
      Object.defineProperty(_assertThisInitialized(_this), 'stack', {
        value: Error().stack,
        writable: true,
        configurable: true
      });
    }

    return _this;
  }

  _createClass$1(GraphQLError, [{
    key: "toString",
    value: function toString() {
      return printError(this);
    } // FIXME: workaround to not break chai comparisons, should be remove in v16
    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet

  }, {
    key: SYMBOL_TO_STRING_TAG,
    get: function get() {
      return 'Object';
    }
  }]);

  return GraphQLError;
}( /*#__PURE__*/_wrapNativeSuper$1(Error));
/**
 * Prints a GraphQLError to a string, representing useful location information
 * about the error's position in the source.
 */

function printError(error) {
  var output = error.message;

  if (error.nodes) {
    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {
      var node = _error$nodes2[_i2];

      if (node.loc) {
        output += '\n\n' + printLocation(node.loc);
      }
    }
  } else if (error.source && error.locations) {
    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {
      var location = _error$locations2[_i4];
      output += '\n\n' + printSourceLocation(error.source, location);
    }
  }

  return output;
}

/**
 * Produces a GraphQLError representing a syntax error, containing useful
 * descriptive information about the syntax error's position in the source.
 */

function syntaxError(source, position, description) {
  return new GraphQLError("Syntax Error: ".concat(description), undefined, source, [position]);
}

/**
 * The set of allowed kind values for AST nodes.
 */
var Kind = Object.freeze({
  // Name
  NAME: 'Name',
  // Document
  DOCUMENT: 'Document',
  OPERATION_DEFINITION: 'OperationDefinition',
  VARIABLE_DEFINITION: 'VariableDefinition',
  SELECTION_SET: 'SelectionSet',
  FIELD: 'Field',
  ARGUMENT: 'Argument',
  // Fragments
  FRAGMENT_SPREAD: 'FragmentSpread',
  INLINE_FRAGMENT: 'InlineFragment',
  FRAGMENT_DEFINITION: 'FragmentDefinition',
  // Values
  VARIABLE: 'Variable',
  INT: 'IntValue',
  FLOAT: 'FloatValue',
  STRING: 'StringValue',
  BOOLEAN: 'BooleanValue',
  NULL: 'NullValue',
  ENUM: 'EnumValue',
  LIST: 'ListValue',
  OBJECT: 'ObjectValue',
  OBJECT_FIELD: 'ObjectField',
  // Directives
  DIRECTIVE: 'Directive',
  // Types
  NAMED_TYPE: 'NamedType',
  LIST_TYPE: 'ListType',
  NON_NULL_TYPE: 'NonNullType',
  // Type System Definitions
  SCHEMA_DEFINITION: 'SchemaDefinition',
  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',
  // Type Definitions
  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',
  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',
  FIELD_DEFINITION: 'FieldDefinition',
  INPUT_VALUE_DEFINITION: 'InputValueDefinition',
  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',
  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',
  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',
  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',
  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',
  // Directive Definitions
  DIRECTIVE_DEFINITION: 'DirectiveDefinition',
  // Type System Extensions
  SCHEMA_EXTENSION: 'SchemaExtension',
  // Type Extensions
  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',
  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',
  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',
  UNION_TYPE_EXTENSION: 'UnionTypeExtension',
  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',
  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'
});
/**
 * The enum type representing the possible kind values of AST nodes.
 */

function invariant(condition, message) {
  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')

  if (!booleanCondition) {
    throw new Error(message != null ? message : 'Unexpected invariant triggered.');
  }
}

// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')
var nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;

/**
 * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`
 */

function defineInspect(classObject) {
  var fn = classObject.prototype.toJSON;
  typeof fn === 'function' || invariant(0);
  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')

  if (nodejsCustomInspectSymbol) {
    classObject.prototype[nodejsCustomInspectSymbol] = fn;
  }
}

/**
 * Contains a range of UTF-8 character offsets and token references that
 * identify the region of the source from which the AST derived.
 */
var Location = /*#__PURE__*/function () {
  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The Token at which this Node begins.
   */

  /**
   * The Token at which this Node ends.
   */

  /**
   * The Source document the AST represents.
   */
  function Location(startToken, endToken, source) {
    this.start = startToken.start;
    this.end = endToken.end;
    this.startToken = startToken;
    this.endToken = endToken;
    this.source = source;
  }

  var _proto = Location.prototype;

  _proto.toJSON = function toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  };

  return Location;
}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.

defineInspect(Location);
/**
 * Represents a range of characters represented by a lexical token
 * within a Source.
 */

var Token = /*#__PURE__*/function () {
  /**
   * The kind of Token.
   */

  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The 1-indexed line number on which this Token appears.
   */

  /**
   * The 1-indexed column number at which this Token begins.
   */

  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   */

  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  function Token(kind, start, end, line, column, prev, value) {
    this.kind = kind;
    this.start = start;
    this.end = end;
    this.line = line;
    this.column = column;
    this.value = value;
    this.prev = prev;
    this.next = null;
  }

  var _proto2 = Token.prototype;

  _proto2.toJSON = function toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  };

  return Token;
}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.

defineInspect(Token);
/**
 * @internal
 */

function isNode(maybeNode) {
  return maybeNode != null && typeof maybeNode.kind === 'string';
}
/**
 * The list of all possible AST node types.
 */

/**
 * An exported enum describing the different kinds of tokens that the
 * lexer emits.
 */
var TokenKind = Object.freeze({
  SOF: '<SOF>',
  EOF: '<EOF>',
  BANG: '!',
  DOLLAR: '$',
  AMP: '&',
  PAREN_L: '(',
  PAREN_R: ')',
  SPREAD: '...',
  COLON: ':',
  EQUALS: '=',
  AT: '@',
  BRACKET_L: '[',
  BRACKET_R: ']',
  BRACE_L: '{',
  PIPE: '|',
  BRACE_R: '}',
  NAME: 'Name',
  INT: 'Int',
  FLOAT: 'Float',
  STRING: 'String',
  BLOCK_STRING: 'BlockString',
  COMMENT: 'Comment'
});
/**
 * The enum type representing the token kinds values.
 */

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
var MAX_ARRAY_LENGTH = 10;
var MAX_RECURSIVE_DEPTH = 2;
/**
 * Used to print values in error messages.
 */

function inspect(value) {
  return formatValue(value, []);
}

function formatValue(value, seenValues) {
  switch (_typeof(value)) {
    case 'string':
      return JSON.stringify(value);

    case 'function':
      return value.name ? "[function ".concat(value.name, "]") : '[function]';

    case 'object':
      if (value === null) {
        return 'null';
      }

      return formatObjectValue(value, seenValues);

    default:
      return String(value);
  }
}

function formatObjectValue(value, previouslySeenValues) {
  if (previouslySeenValues.indexOf(value) !== -1) {
    return '[Circular]';
  }

  var seenValues = [].concat(previouslySeenValues, [value]);
  var customInspectFn = getCustomFn(value);

  if (customInspectFn !== undefined) {
    var customValue = customInspectFn.call(value); // check for infinite recursion

    if (customValue !== value) {
      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);
    }
  } else if (Array.isArray(value)) {
    return formatArray(value, seenValues);
  }

  return formatObject(value, seenValues);
}

function formatObject(object, seenValues) {
  var keys = Object.keys(object);

  if (keys.length === 0) {
    return '{}';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[' + getObjectTag(object) + ']';
  }

  var properties = keys.map(function (key) {
    var value = formatValue(object[key], seenValues);
    return key + ': ' + value;
  });
  return '{ ' + properties.join(', ') + ' }';
}

function formatArray(array, seenValues) {
  if (array.length === 0) {
    return '[]';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[Array]';
  }

  var len = Math.min(MAX_ARRAY_LENGTH, array.length);
  var remaining = array.length - len;
  var items = [];

  for (var i = 0; i < len; ++i) {
    items.push(formatValue(array[i], seenValues));
  }

  if (remaining === 1) {
    items.push('... 1 more item');
  } else if (remaining > 1) {
    items.push("... ".concat(remaining, " more items"));
  }

  return '[' + items.join(', ') + ']';
}

function getCustomFn(object) {
  var customInspectFn = object[String(nodejsCustomInspectSymbol)];

  if (typeof customInspectFn === 'function') {
    return customInspectFn;
  }

  if (typeof object.inspect === 'function') {
    return object.inspect;
  }
}

function getObjectTag(object) {
  var tag = Object.prototype.toString.call(object).replace(/^\[object /, '').replace(/]$/, '');

  if (tag === 'Object' && typeof object.constructor === 'function') {
    var name = object.constructor.name;

    if (typeof name === 'string' && name !== '') {
      return name;
    }
  }

  return tag;
}

function devAssert(condition, message) {
  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')

  if (!booleanCondition) {
    throw new Error(message);
  }
}

/**
 * A replacement for instanceof which includes an error warning when multi-realm
 * constructors are detected.
 */
// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production
// See: https://webpack.js.org/guides/production/
var instanceOf = // eslint-disable-next-line no-shadow
function instanceOf(value, constructor) {
  if (value instanceof constructor) {
    return true;
  }

  if (value) {
    var valueClass = value.constructor;
    var className = constructor.name;

    if (className && valueClass && valueClass.name === className) {
      throw new Error("Cannot use ".concat(className, " \"").concat(value, "\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results."));
    }
  }

  return false;
};

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are
 * optional, but they are useful for clients who store GraphQL documents in source files.
 * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might
 * be useful for `name` to be `"Foo.graphql"` and location to be `{ line: 40, column: 1 }`.
 * The `line` and `column` properties in `locationOffset` are 1-indexed.
 */
var Source = /*#__PURE__*/function () {
  function Source(body) {
    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';
    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
      line: 1,
      column: 1
    };
    typeof body === 'string' || devAssert(0, "Body must be a string. Received: ".concat(inspect(body), "."));
    this.body = body;
    this.name = name;
    this.locationOffset = locationOffset;
    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');
    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');
  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet


  _createClass(Source, [{
    key: SYMBOL_TO_STRING_TAG,
    get: function get() {
      return 'Source';
    }
  }]);

  return Source;
}();
/**
 * Test if the given value is a Source object.
 *
 * @internal
 */

// eslint-disable-next-line no-redeclare
function isSource(source) {
  return instanceOf(source, Source);
}

/**
 * The set of allowed directive location values.
 */
var DirectiveLocation = Object.freeze({
  // Request Definitions
  QUERY: 'QUERY',
  MUTATION: 'MUTATION',
  SUBSCRIPTION: 'SUBSCRIPTION',
  FIELD: 'FIELD',
  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',
  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',
  INLINE_FRAGMENT: 'INLINE_FRAGMENT',
  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',
  // Type System Definitions
  SCHEMA: 'SCHEMA',
  SCALAR: 'SCALAR',
  OBJECT: 'OBJECT',
  FIELD_DEFINITION: 'FIELD_DEFINITION',
  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',
  INTERFACE: 'INTERFACE',
  UNION: 'UNION',
  ENUM: 'ENUM',
  ENUM_VALUE: 'ENUM_VALUE',
  INPUT_OBJECT: 'INPUT_OBJECT',
  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'
});
/**
 * The enum type representing the directive location values.
 */

/**
 * Produces the value of a block string from its parsed raw value, similar to
 * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.
 *
 * This implements the GraphQL spec's BlockStringValue() static algorithm.
 *
 * @internal
 */
function dedentBlockStringValue(rawString) {
  // Expand a block string's raw value into independent lines.
  var lines = rawString.split(/\r\n|[\n\r]/g); // Remove common indentation from all lines but first.

  var commonIndent = getBlockStringIndentation(rawString);

  if (commonIndent !== 0) {
    for (var i = 1; i < lines.length; i++) {
      lines[i] = lines[i].slice(commonIndent);
    }
  } // Remove leading and trailing blank lines.


  var startLine = 0;

  while (startLine < lines.length && isBlank(lines[startLine])) {
    ++startLine;
  }

  var endLine = lines.length;

  while (endLine > startLine && isBlank(lines[endLine - 1])) {
    --endLine;
  } // Return a string of the lines joined with U+000A.


  return lines.slice(startLine, endLine).join('\n');
}

function isBlank(str) {
  for (var i = 0; i < str.length; ++i) {
    if (str[i] !== ' ' && str[i] !== '\t') {
      return false;
    }
  }

  return true;
}
/**
 * @internal
 */


function getBlockStringIndentation(value) {
  var _commonIndent;

  var isFirstLine = true;
  var isEmptyLine = true;
  var indent = 0;
  var commonIndent = null;

  for (var i = 0; i < value.length; ++i) {
    switch (value.charCodeAt(i)) {
      case 13:
        //  \r
        if (value.charCodeAt(i + 1) === 10) {
          ++i; // skip \r\n as one symbol
        }

      // falls through

      case 10:
        //  \n
        isFirstLine = false;
        isEmptyLine = true;
        indent = 0;
        break;

      case 9: //   \t

      case 32:
        //  <space>
        ++indent;
        break;

      default:
        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {
          commonIndent = indent;
        }

        isEmptyLine = false;
    }
  }

  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;
}
/**
 * Print a block string in the indented block form by adding a leading and
 * trailing blank line. However, if a block string starts with whitespace and is
 * a single-line, adding a leading blank line would strip that whitespace.
 *
 * @internal
 */

function printBlockString(value) {
  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var isSingleLine = value.indexOf('\n') === -1;
  var hasLeadingSpace = value[0] === ' ' || value[0] === '\t';
  var hasTrailingQuote = value[value.length - 1] === '"';
  var hasTrailingSlash = value[value.length - 1] === '\\';
  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;
  var result = ''; // Format a multi-line block quote to account for leading space.

  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {
    result += '\n' + indentation;
  }

  result += indentation ? value.replace(/\n/g, '\n' + indentation) : value;

  if (printAsMultipleLines) {
    result += '\n';
  }

  return '"""' + result.replace(/"""/g, '\\"""') + '"""';
}

/**
 * Given a Source object, creates a Lexer for that source.
 * A Lexer is a stateful stream generator in that every time
 * it is advanced, it returns the next token in the Source. Assuming the
 * source lexes, the final Token emitted by the lexer will be of kind
 * EOF, after which the lexer will repeatedly return the same EOF token
 * whenever called.
 */

var Lexer = /*#__PURE__*/function () {
  /**
   * The previously focused non-ignored token.
   */

  /**
   * The currently focused non-ignored token.
   */

  /**
   * The (1-indexed) line containing the current token.
   */

  /**
   * The character offset at which the current line begins.
   */
  function Lexer(source) {
    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);
    this.source = source;
    this.lastToken = startOfFileToken;
    this.token = startOfFileToken;
    this.line = 1;
    this.lineStart = 0;
  }
  /**
   * Advances the token stream to the next non-ignored token.
   */


  var _proto = Lexer.prototype;

  _proto.advance = function advance() {
    this.lastToken = this.token;
    var token = this.token = this.lookahead();
    return token;
  }
  /**
   * Looks ahead and returns the next non-ignored token, but does not change
   * the state of Lexer.
   */
  ;

  _proto.lookahead = function lookahead() {
    var token = this.token;

    if (token.kind !== TokenKind.EOF) {
      do {
        var _token$next;

        // Note: next is only mutable during parsing, so we cast to allow this.
        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);
      } while (token.kind === TokenKind.COMMENT);
    }

    return token;
  };

  return Lexer;
}();
/**
 * @internal
 */

function isPunctuatorTokenKind(kind) {
  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;
}

function printCharCode(code) {
  return (// NaN/undefined represents access beyond the end of the file.
    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.
    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.
    "\"\\u".concat(('00' + code.toString(16).toUpperCase()).slice(-4), "\"")
  );
}
/**
 * Gets the next token from the source starting at the given position.
 *
 * This skips over whitespace until it finds the next lexable token, then lexes
 * punctuators immediately or calls the appropriate helper function for more
 * complicated tokens.
 */


function readToken(lexer, prev) {
  var source = lexer.source;
  var body = source.body;
  var bodyLength = body.length;
  var pos = prev.end;

  while (pos < bodyLength) {
    var code = body.charCodeAt(pos);
    var _line = lexer.line;

    var _col = 1 + pos - lexer.lineStart; // SourceCharacter


    switch (code) {
      case 0xfeff: // <BOM>

      case 9: //   \t

      case 32: //  <space>

      case 44:
        //  ,
        ++pos;
        continue;

      case 10:
        //  \n
        ++pos;
        ++lexer.line;
        lexer.lineStart = pos;
        continue;

      case 13:
        //  \r
        if (body.charCodeAt(pos + 1) === 10) {
          pos += 2;
        } else {
          ++pos;
        }

        ++lexer.line;
        lexer.lineStart = pos;
        continue;

      case 33:
        //  !
        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);

      case 35:
        //  #
        return readComment(source, pos, _line, _col, prev);

      case 36:
        //  $
        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);

      case 38:
        //  &
        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);

      case 40:
        //  (
        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);

      case 41:
        //  )
        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);

      case 46:
        //  .
        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {
          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);
        }

        break;

      case 58:
        //  :
        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);

      case 61:
        //  =
        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);

      case 64:
        //  @
        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);

      case 91:
        //  [
        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);

      case 93:
        //  ]
        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);

      case 123:
        // {
        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);

      case 124:
        // |
        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);

      case 125:
        // }
        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);

      case 34:
        //  "
        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {
          return readBlockString(source, pos, _line, _col, prev, lexer);
        }

        return readString(source, pos, _line, _col, prev);

      case 45: //  -

      case 48: //  0

      case 49: //  1

      case 50: //  2

      case 51: //  3

      case 52: //  4

      case 53: //  5

      case 54: //  6

      case 55: //  7

      case 56: //  8

      case 57:
        //  9
        return readNumber(source, pos, code, _line, _col, prev);

      case 65: //  A

      case 66: //  B

      case 67: //  C

      case 68: //  D

      case 69: //  E

      case 70: //  F

      case 71: //  G

      case 72: //  H

      case 73: //  I

      case 74: //  J

      case 75: //  K

      case 76: //  L

      case 77: //  M

      case 78: //  N

      case 79: //  O

      case 80: //  P

      case 81: //  Q

      case 82: //  R

      case 83: //  S

      case 84: //  T

      case 85: //  U

      case 86: //  V

      case 87: //  W

      case 88: //  X

      case 89: //  Y

      case 90: //  Z

      case 95: //  _

      case 97: //  a

      case 98: //  b

      case 99: //  c

      case 100: // d

      case 101: // e

      case 102: // f

      case 103: // g

      case 104: // h

      case 105: // i

      case 106: // j

      case 107: // k

      case 108: // l

      case 109: // m

      case 110: // n

      case 111: // o

      case 112: // p

      case 113: // q

      case 114: // r

      case 115: // s

      case 116: // t

      case 117: // u

      case 118: // v

      case 119: // w

      case 120: // x

      case 121: // y

      case 122:
        // z
        return readName(source, pos, _line, _col, prev);
    }

    throw syntaxError(source, pos, unexpectedCharacterMessage(code));
  }

  var line = lexer.line;
  var col = 1 + pos - lexer.lineStart;
  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);
}
/**
 * Report a message that an unexpected character was encountered.
 */


function unexpectedCharacterMessage(code) {
  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {
    return "Cannot contain the invalid character ".concat(printCharCode(code), ".");
  }

  if (code === 39) {
    // '
    return 'Unexpected single quote character (\'), did you mean to use a double quote (")?';
  }

  return "Cannot parse the unexpected character ".concat(printCharCode(code), ".");
}
/**
 * Reads a comment token from the source file.
 *
 * #[\u0009\u0020-\uFFFF]*
 */


function readComment(source, start, line, col, prev) {
  var body = source.body;
  var code;
  var position = start;

  do {
    code = body.charCodeAt(++position);
  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator
  code > 0x001f || code === 0x0009));

  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));
}
/**
 * Reads a number token from the source file, either a float
 * or an int depending on whether a decimal point appears.
 *
 * Int:   -?(0|[1-9][0-9]*)
 * Float: -?(0|[1-9][0-9]*)(\.[0-9]+)?((E|e)(+|-)?[0-9]+)?
 */


function readNumber(source, start, firstCode, line, col, prev) {
  var body = source.body;
  var code = firstCode;
  var position = start;
  var isFloat = false;

  if (code === 45) {
    // -
    code = body.charCodeAt(++position);
  }

  if (code === 48) {
    // 0
    code = body.charCodeAt(++position);

    if (code >= 48 && code <= 57) {
      throw syntaxError(source, position, "Invalid number, unexpected digit after 0: ".concat(printCharCode(code), "."));
    }
  } else {
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }

  if (code === 46) {
    // .
    isFloat = true;
    code = body.charCodeAt(++position);
    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  }

  if (code === 69 || code === 101) {
    // E e
    isFloat = true;
    code = body.charCodeAt(++position);

    if (code === 43 || code === 45) {
      // + -
      code = body.charCodeAt(++position);
    }

    position = readDigits(source, position, code);
    code = body.charCodeAt(position);
  } // Numbers cannot be followed by . or NameStart


  if (code === 46 || isNameStart(code)) {
    throw syntaxError(source, position, "Invalid number, expected digit but got: ".concat(printCharCode(code), "."));
  }

  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));
}
/**
 * Returns the new position in the source after reading digits.
 */


function readDigits(source, start, firstCode) {
  var body = source.body;
  var position = start;
  var code = firstCode;

  if (code >= 48 && code <= 57) {
    // 0 - 9
    do {
      code = body.charCodeAt(++position);
    } while (code >= 48 && code <= 57); // 0 - 9


    return position;
  }

  throw syntaxError(source, position, "Invalid number, expected digit but got: ".concat(printCharCode(code), "."));
}
/**
 * Reads a string token from the source file.
 *
 * "([^"\\\u000A\u000D]|(\\(u[0-9a-fA-F]{4}|["\\/bfnrt])))*"
 */


function readString(source, start, line, col, prev) {
  var body = source.body;
  var position = start + 1;
  var chunkStart = position;
  var code = 0;
  var value = '';

  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator
  code !== 0x000a && code !== 0x000d) {
    // Closing Quote (")
    if (code === 34) {
      value += body.slice(chunkStart, position);
      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);
    } // SourceCharacter


    if (code < 0x0020 && code !== 0x0009) {
      throw syntaxError(source, position, "Invalid character within String: ".concat(printCharCode(code), "."));
    }

    ++position;

    if (code === 92) {
      // \
      value += body.slice(chunkStart, position - 1);
      code = body.charCodeAt(position);

      switch (code) {
        case 34:
          value += '"';
          break;

        case 47:
          value += '/';
          break;

        case 92:
          value += '\\';
          break;

        case 98:
          value += '\b';
          break;

        case 102:
          value += '\f';
          break;

        case 110:
          value += '\n';
          break;

        case 114:
          value += '\r';
          break;

        case 116:
          value += '\t';
          break;

        case 117:
          {
            // uXXXX
            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));

            if (charCode < 0) {
              var invalidSequence = body.slice(position + 1, position + 5);
              throw syntaxError(source, position, "Invalid character escape sequence: \\u".concat(invalidSequence, "."));
            }

            value += String.fromCharCode(charCode);
            position += 4;
            break;
          }

        default:
          throw syntaxError(source, position, "Invalid character escape sequence: \\".concat(String.fromCharCode(code), "."));
      }

      ++position;
      chunkStart = position;
    }
  }

  throw syntaxError(source, position, 'Unterminated string.');
}
/**
 * Reads a block string token from the source file.
 *
 * """("?"?(\\"""|\\(?!=""")|[^"\\]))*"""
 */


function readBlockString(source, start, line, col, prev, lexer) {
  var body = source.body;
  var position = start + 3;
  var chunkStart = position;
  var code = 0;
  var rawValue = '';

  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {
    // Closing Triple-Quote (""")
    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {
      rawValue += body.slice(chunkStart, position);
      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));
    } // SourceCharacter


    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {
      throw syntaxError(source, position, "Invalid character within String: ".concat(printCharCode(code), "."));
    }

    if (code === 10) {
      // new line
      ++position;
      ++lexer.line;
      lexer.lineStart = position;
    } else if (code === 13) {
      // carriage return
      if (body.charCodeAt(position + 1) === 10) {
        position += 2;
      } else {
        ++position;
      }

      ++lexer.line;
      lexer.lineStart = position;
    } else if ( // Escape Triple-Quote (\""")
    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {
      rawValue += body.slice(chunkStart, position) + '"""';
      position += 4;
      chunkStart = position;
    } else {
      ++position;
    }
  }

  throw syntaxError(source, position, 'Unterminated string.');
}
/**
 * Converts four hexadecimal chars to the integer that the
 * string represents. For example, uniCharCode('0','0','0','f')
 * will return 15, and uniCharCode('0','0','f','f') returns 255.
 *
 * Returns a negative number on error, if a char was invalid.
 *
 * This is implemented by noting that char2hex() returns -1 on error,
 * which means the result of ORing the char2hex() will also be negative.
 */


function uniCharCode(a, b, c, d) {
  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);
}
/**
 * Converts a hex character to its integer value.
 * '0' becomes 0, '9' becomes 9
 * 'A' becomes 10, 'F' becomes 15
 * 'a' becomes 10, 'f' becomes 15
 *
 * Returns -1 on error.
 */


function char2hex(a) {
  return a >= 48 && a <= 57 ? a - 48 // 0-9
  : a >= 65 && a <= 70 ? a - 55 // A-F
  : a >= 97 && a <= 102 ? a - 87 // a-f
  : -1;
}
/**
 * Reads an alphanumeric + underscore name from the source.
 *
 * [_A-Za-z][_0-9A-Za-z]*
 */


function readName(source, start, line, col, prev) {
  var body = source.body;
  var bodyLength = body.length;
  var position = start + 1;
  var code = 0;

  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _
  code >= 48 && code <= 57 || // 0-9
  code >= 65 && code <= 90 || // A-Z
  code >= 97 && code <= 122) // a-z
  ) {
    ++position;
  }

  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));
} // _ A-Z a-z


function isNameStart(code) {
  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;
}

/**
 * Configuration options to control parser behavior
 */

/**
 * Given a GraphQL source, parses it into a Document.
 * Throws GraphQLError if a syntax error is encountered.
 */
function parse(source, options) {
  var parser = new Parser(source, options);
  return parser.parseDocument();
}
/**
 * This class is exported only to assist people in implementing their own parsers
 * without duplicating too much code and should be used only as last resort for cases
 * such as experimental syntax or if certain features could not be contributed upstream.
 *
 * It is still part of the internal API and is versioned, so any changes to it are never
 * considered breaking changes. If you still need to support multiple versions of the
 * library, please use the `versionInfo` variable for version detection.
 *
 * @internal
 */

var Parser = /*#__PURE__*/function () {
  function Parser(source, options) {
    var sourceObj = isSource(source) ? source : new Source(source);
    this._lexer = new Lexer(sourceObj);
    this._options = options;
  }
  /**
   * Converts a name lex token into a name parse node.
   */


  var _proto = Parser.prototype;

  _proto.parseName = function parseName() {
    var token = this.expectToken(TokenKind.NAME);
    return {
      kind: Kind.NAME,
      value: token.value,
      loc: this.loc(token)
    };
  } // Implements the parsing rules in the Document section.

  /**
   * Document : Definition+
   */
  ;

  _proto.parseDocument = function parseDocument() {
    var start = this._lexer.token;
    return {
      kind: Kind.DOCUMENT,
      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),
      loc: this.loc(start)
    };
  }
  /**
   * Definition :
   *   - ExecutableDefinition
   *   - TypeSystemDefinition
   *   - TypeSystemExtension
   *
   * ExecutableDefinition :
   *   - OperationDefinition
   *   - FragmentDefinition
   */
  ;

  _proto.parseDefinition = function parseDefinition() {
    if (this.peek(TokenKind.NAME)) {
      switch (this._lexer.token.value) {
        case 'query':
        case 'mutation':
        case 'subscription':
          return this.parseOperationDefinition();

        case 'fragment':
          return this.parseFragmentDefinition();

        case 'schema':
        case 'scalar':
        case 'type':
        case 'interface':
        case 'union':
        case 'enum':
        case 'input':
        case 'directive':
          return this.parseTypeSystemDefinition();

        case 'extend':
          return this.parseTypeSystemExtension();
      }
    } else if (this.peek(TokenKind.BRACE_L)) {
      return this.parseOperationDefinition();
    } else if (this.peekDescription()) {
      return this.parseTypeSystemDefinition();
    }

    throw this.unexpected();
  } // Implements the parsing rules in the Operations section.

  /**
   * OperationDefinition :
   *  - SelectionSet
   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
   */
  ;

  _proto.parseOperationDefinition = function parseOperationDefinition() {
    var start = this._lexer.token;

    if (this.peek(TokenKind.BRACE_L)) {
      return {
        kind: Kind.OPERATION_DEFINITION,
        operation: 'query',
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet(),
        loc: this.loc(start)
      };
    }

    var operation = this.parseOperationType();
    var name;

    if (this.peek(TokenKind.NAME)) {
      name = this.parseName();
    }

    return {
      kind: Kind.OPERATION_DEFINITION,
      operation: operation,
      name: name,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  }
  /**
   * OperationType : one of query mutation subscription
   */
  ;

  _proto.parseOperationType = function parseOperationType() {
    var operationToken = this.expectToken(TokenKind.NAME);

    switch (operationToken.value) {
      case 'query':
        return 'query';

      case 'mutation':
        return 'mutation';

      case 'subscription':
        return 'subscription';
    }

    throw this.unexpected(operationToken);
  }
  /**
   * VariableDefinitions : ( VariableDefinition+ )
   */
  ;

  _proto.parseVariableDefinitions = function parseVariableDefinitions() {
    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);
  }
  /**
   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
   */
  ;

  _proto.parseVariableDefinition = function parseVariableDefinition() {
    var start = this._lexer.token;
    return {
      kind: Kind.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,
      directives: this.parseDirectives(true),
      loc: this.loc(start)
    };
  }
  /**
   * Variable : $ Name
   */
  ;

  _proto.parseVariable = function parseVariable() {
    var start = this._lexer.token;
    this.expectToken(TokenKind.DOLLAR);
    return {
      kind: Kind.VARIABLE,
      name: this.parseName(),
      loc: this.loc(start)
    };
  }
  /**
   * SelectionSet : { Selection+ }
   */
  ;

  _proto.parseSelectionSet = function parseSelectionSet() {
    var start = this._lexer.token;
    return {
      kind: Kind.SELECTION_SET,
      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),
      loc: this.loc(start)
    };
  }
  /**
   * Selection :
   *   - Field
   *   - FragmentSpread
   *   - InlineFragment
   */
  ;

  _proto.parseSelection = function parseSelection() {
    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();
  }
  /**
   * Field : Alias? Name Arguments? Directives? SelectionSet?
   *
   * Alias : Name :
   */
  ;

  _proto.parseField = function parseField() {
    var start = this._lexer.token;
    var nameOrAlias = this.parseName();
    var alias;
    var name;

    if (this.expectOptionalToken(TokenKind.COLON)) {
      alias = nameOrAlias;
      name = this.parseName();
    } else {
      name = nameOrAlias;
    }

    return {
      kind: Kind.FIELD,
      alias: alias,
      name: name,
      arguments: this.parseArguments(false),
      directives: this.parseDirectives(false),
      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,
      loc: this.loc(start)
    };
  }
  /**
   * Arguments[Const] : ( Argument[?Const]+ )
   */
  ;

  _proto.parseArguments = function parseArguments(isConst) {
    var item = isConst ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);
  }
  /**
   * Argument[Const] : Name : Value[?Const]
   */
  ;

  _proto.parseArgument = function parseArgument() {
    var start = this._lexer.token;
    var name = this.parseName();
    this.expectToken(TokenKind.COLON);
    return {
      kind: Kind.ARGUMENT,
      name: name,
      value: this.parseValueLiteral(false),
      loc: this.loc(start)
    };
  };

  _proto.parseConstArgument = function parseConstArgument() {
    var start = this._lexer.token;
    return {
      kind: Kind.ARGUMENT,
      name: this.parseName(),
      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Fragments section.

  /**
   * Corresponds to both FragmentSpread and InlineFragment in the spec.
   *
   * FragmentSpread : ... FragmentName Directives?
   *
   * InlineFragment : ... TypeCondition? Directives? SelectionSet
   */
  ;

  _proto.parseFragment = function parseFragment() {
    var start = this._lexer.token;
    this.expectToken(TokenKind.SPREAD);
    var hasTypeCondition = this.expectOptionalKeyword('on');

    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {
      return {
        kind: Kind.FRAGMENT_SPREAD,
        name: this.parseFragmentName(),
        directives: this.parseDirectives(false),
        loc: this.loc(start)
      };
    }

    return {
      kind: Kind.INLINE_FRAGMENT,
      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  }
  /**
   * FragmentDefinition :
   *   - fragment FragmentName on TypeCondition Directives? SelectionSet
   *
   * TypeCondition : NamedType
   */
  ;

  _proto.parseFragmentDefinition = function parseFragmentDefinition() {
    var _this$_options;

    var start = this._lexer.token;
    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes
    // the grammar of FragmentDefinition:
    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet

    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {
      return {
        kind: Kind.FRAGMENT_DEFINITION,
        name: this.parseFragmentName(),
        variableDefinitions: this.parseVariableDefinitions(),
        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),
        directives: this.parseDirectives(false),
        selectionSet: this.parseSelectionSet(),
        loc: this.loc(start)
      };
    }

    return {
      kind: Kind.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
      loc: this.loc(start)
    };
  }
  /**
   * FragmentName : Name but not `on`
   */
  ;

  _proto.parseFragmentName = function parseFragmentName() {
    if (this._lexer.token.value === 'on') {
      throw this.unexpected();
    }

    return this.parseName();
  } // Implements the parsing rules in the Values section.

  /**
   * Value[Const] :
   *   - [~Const] Variable
   *   - IntValue
   *   - FloatValue
   *   - StringValue
   *   - BooleanValue
   *   - NullValue
   *   - EnumValue
   *   - ListValue[?Const]
   *   - ObjectValue[?Const]
   *
   * BooleanValue : one of `true` `false`
   *
   * NullValue : `null`
   *
   * EnumValue : Name but not `true`, `false` or `null`
   */
  ;

  _proto.parseValueLiteral = function parseValueLiteral(isConst) {
    var token = this._lexer.token;

    switch (token.kind) {
      case TokenKind.BRACKET_L:
        return this.parseList(isConst);

      case TokenKind.BRACE_L:
        return this.parseObject(isConst);

      case TokenKind.INT:
        this._lexer.advance();

        return {
          kind: Kind.INT,
          value: token.value,
          loc: this.loc(token)
        };

      case TokenKind.FLOAT:
        this._lexer.advance();

        return {
          kind: Kind.FLOAT,
          value: token.value,
          loc: this.loc(token)
        };

      case TokenKind.STRING:
      case TokenKind.BLOCK_STRING:
        return this.parseStringLiteral();

      case TokenKind.NAME:
        this._lexer.advance();

        switch (token.value) {
          case 'true':
            return {
              kind: Kind.BOOLEAN,
              value: true,
              loc: this.loc(token)
            };

          case 'false':
            return {
              kind: Kind.BOOLEAN,
              value: false,
              loc: this.loc(token)
            };

          case 'null':
            return {
              kind: Kind.NULL,
              loc: this.loc(token)
            };

          default:
            return {
              kind: Kind.ENUM,
              value: token.value,
              loc: this.loc(token)
            };
        }

      case TokenKind.DOLLAR:
        if (!isConst) {
          return this.parseVariable();
        }

        break;
    }

    throw this.unexpected();
  };

  _proto.parseStringLiteral = function parseStringLiteral() {
    var token = this._lexer.token;

    this._lexer.advance();

    return {
      kind: Kind.STRING,
      value: token.value,
      block: token.kind === TokenKind.BLOCK_STRING,
      loc: this.loc(token)
    };
  }
  /**
   * ListValue[Const] :
   *   - [ ]
   *   - [ Value[?Const]+ ]
   */
  ;

  _proto.parseList = function parseList(isConst) {
    var _this = this;

    var start = this._lexer.token;

    var item = function item() {
      return _this.parseValueLiteral(isConst);
    };

    return {
      kind: Kind.LIST,
      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),
      loc: this.loc(start)
    };
  }
  /**
   * ObjectValue[Const] :
   *   - { }
   *   - { ObjectField[?Const]+ }
   */
  ;

  _proto.parseObject = function parseObject(isConst) {
    var _this2 = this;

    var start = this._lexer.token;

    var item = function item() {
      return _this2.parseObjectField(isConst);
    };

    return {
      kind: Kind.OBJECT,
      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),
      loc: this.loc(start)
    };
  }
  /**
   * ObjectField[Const] : Name : Value[?Const]
   */
  ;

  _proto.parseObjectField = function parseObjectField(isConst) {
    var start = this._lexer.token;
    var name = this.parseName();
    this.expectToken(TokenKind.COLON);
    return {
      kind: Kind.OBJECT_FIELD,
      name: name,
      value: this.parseValueLiteral(isConst),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Directives section.

  /**
   * Directives[Const] : Directive[?Const]+
   */
  ;

  _proto.parseDirectives = function parseDirectives(isConst) {
    var directives = [];

    while (this.peek(TokenKind.AT)) {
      directives.push(this.parseDirective(isConst));
    }

    return directives;
  }
  /**
   * Directive[Const] : @ Name Arguments[?Const]?
   */
  ;

  _proto.parseDirective = function parseDirective(isConst) {
    var start = this._lexer.token;
    this.expectToken(TokenKind.AT);
    return {
      kind: Kind.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(isConst),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Types section.

  /**
   * Type :
   *   - NamedType
   *   - ListType
   *   - NonNullType
   */
  ;

  _proto.parseTypeReference = function parseTypeReference() {
    var start = this._lexer.token;
    var type;

    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {
      type = this.parseTypeReference();
      this.expectToken(TokenKind.BRACKET_R);
      type = {
        kind: Kind.LIST_TYPE,
        type: type,
        loc: this.loc(start)
      };
    } else {
      type = this.parseNamedType();
    }

    if (this.expectOptionalToken(TokenKind.BANG)) {
      return {
        kind: Kind.NON_NULL_TYPE,
        type: type,
        loc: this.loc(start)
      };
    }

    return type;
  }
  /**
   * NamedType : Name
   */
  ;

  _proto.parseNamedType = function parseNamedType() {
    var start = this._lexer.token;
    return {
      kind: Kind.NAMED_TYPE,
      name: this.parseName(),
      loc: this.loc(start)
    };
  } // Implements the parsing rules in the Type Definition section.

  /**
   * TypeSystemDefinition :
   *   - SchemaDefinition
   *   - TypeDefinition
   *   - DirectiveDefinition
   *
   * TypeDefinition :
   *   - ScalarTypeDefinition
   *   - ObjectTypeDefinition
   *   - InterfaceTypeDefinition
   *   - UnionTypeDefinition
   *   - EnumTypeDefinition
   *   - InputObjectTypeDefinition
   */
  ;

  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {
    // Many definitions begin with a description and require a lookahead.
    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;

    if (keywordToken.kind === TokenKind.NAME) {
      switch (keywordToken.value) {
        case 'schema':
          return this.parseSchemaDefinition();

        case 'scalar':
          return this.parseScalarTypeDefinition();

        case 'type':
          return this.parseObjectTypeDefinition();

        case 'interface':
          return this.parseInterfaceTypeDefinition();

        case 'union':
          return this.parseUnionTypeDefinition();

        case 'enum':
          return this.parseEnumTypeDefinition();

        case 'input':
          return this.parseInputObjectTypeDefinition();

        case 'directive':
          return this.parseDirectiveDefinition();
      }
    }

    throw this.unexpected(keywordToken);
  };

  _proto.peekDescription = function peekDescription() {
    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);
  }
  /**
   * Description : StringValue
   */
  ;

  _proto.parseDescription = function parseDescription() {
    if (this.peekDescription()) {
      return this.parseStringLiteral();
    }
  }
  /**
   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
   */
  ;

  _proto.parseSchemaDefinition = function parseSchemaDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('schema');
    var directives = this.parseDirectives(true);
    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);
    return {
      kind: Kind.SCHEMA_DEFINITION,
      description: description,
      directives: directives,
      operationTypes: operationTypes,
      loc: this.loc(start)
    };
  }
  /**
   * OperationTypeDefinition : OperationType : NamedType
   */
  ;

  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {
    var start = this._lexer.token;
    var operation = this.parseOperationType();
    this.expectToken(TokenKind.COLON);
    var type = this.parseNamedType();
    return {
      kind: Kind.OPERATION_TYPE_DEFINITION,
      operation: operation,
      type: type,
      loc: this.loc(start)
    };
  }
  /**
   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
   */
  ;

  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('scalar');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.SCALAR_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * ObjectTypeDefinition :
   *   Description?
   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
   */
  ;

  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('type');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    return {
      kind: Kind.OBJECT_TYPE_DEFINITION,
      description: description,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * ImplementsInterfaces :
   *   - implements `&`? NamedType
   *   - ImplementsInterfaces & NamedType
   */
  ;

  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {
    var _this$_options2;

    if (!this.expectOptionalKeyword('implements')) {
      return [];
    }

    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {
      var types = []; // Optional leading ampersand

      this.expectOptionalToken(TokenKind.AMP);

      do {
        types.push(this.parseNamedType());
      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));

      return types;
    }

    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);
  }
  /**
   * FieldsDefinition : { FieldDefinition+ }
   */
  ;

  _proto.parseFieldsDefinition = function parseFieldsDefinition() {
    var _this$_options3;

    // Legacy support for the SDL?
    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {
      this._lexer.advance();

      this._lexer.advance();

      return [];
    }

    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);
  }
  /**
   * FieldDefinition :
   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
   */
  ;

  _proto.parseFieldDefinition = function parseFieldDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    var args = this.parseArgumentDefs();
    this.expectToken(TokenKind.COLON);
    var type = this.parseTypeReference();
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.FIELD_DEFINITION,
      description: description,
      name: name,
      arguments: args,
      type: type,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * ArgumentsDefinition : ( InputValueDefinition+ )
   */
  ;

  _proto.parseArgumentDefs = function parseArgumentDefs() {
    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);
  }
  /**
   * InputValueDefinition :
   *   - Description? Name : Type DefaultValue? Directives[Const]?
   */
  ;

  _proto.parseInputValueDef = function parseInputValueDef() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    this.expectToken(TokenKind.COLON);
    var type = this.parseTypeReference();
    var defaultValue;

    if (this.expectOptionalToken(TokenKind.EQUALS)) {
      defaultValue = this.parseValueLiteral(true);
    }

    var directives = this.parseDirectives(true);
    return {
      kind: Kind.INPUT_VALUE_DEFINITION,
      description: description,
      name: name,
      type: type,
      defaultValue: defaultValue,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * InterfaceTypeDefinition :
   *   - Description? interface Name Directives[Const]? FieldsDefinition?
   */
  ;

  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('interface');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();
    return {
      kind: Kind.INTERFACE_TYPE_DEFINITION,
      description: description,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * UnionTypeDefinition :
   *   - Description? union Name Directives[Const]? UnionMemberTypes?
   */
  ;

  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('union');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var types = this.parseUnionMemberTypes();
    return {
      kind: Kind.UNION_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      types: types,
      loc: this.loc(start)
    };
  }
  /**
   * UnionMemberTypes :
   *   - = `|`? NamedType
   *   - UnionMemberTypes | NamedType
   */
  ;

  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {
    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];
  }
  /**
   * EnumTypeDefinition :
   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
   */
  ;

  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('enum');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var values = this.parseEnumValuesDefinition();
    return {
      kind: Kind.ENUM_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      values: values,
      loc: this.loc(start)
    };
  }
  /**
   * EnumValuesDefinition : { EnumValueDefinition+ }
   */
  ;

  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {
    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);
  }
  /**
   * EnumValueDefinition : Description? EnumValue Directives[Const]?
   *
   * EnumValue : Name
   */
  ;

  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    return {
      kind: Kind.ENUM_VALUE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * InputObjectTypeDefinition :
   *   - Description? input Name Directives[Const]? InputFieldsDefinition?
   */
  ;

  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('input');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var fields = this.parseInputFieldsDefinition();
    return {
      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,
      description: description,
      name: name,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * InputFieldsDefinition : { InputValueDefinition+ }
   */
  ;

  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {
    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);
  }
  /**
   * TypeSystemExtension :
   *   - SchemaExtension
   *   - TypeExtension
   *
   * TypeExtension :
   *   - ScalarTypeExtension
   *   - ObjectTypeExtension
   *   - InterfaceTypeExtension
   *   - UnionTypeExtension
   *   - EnumTypeExtension
   *   - InputObjectTypeDefinition
   */
  ;

  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {
    var keywordToken = this._lexer.lookahead();

    if (keywordToken.kind === TokenKind.NAME) {
      switch (keywordToken.value) {
        case 'schema':
          return this.parseSchemaExtension();

        case 'scalar':
          return this.parseScalarTypeExtension();

        case 'type':
          return this.parseObjectTypeExtension();

        case 'interface':
          return this.parseInterfaceTypeExtension();

        case 'union':
          return this.parseUnionTypeExtension();

        case 'enum':
          return this.parseEnumTypeExtension();

        case 'input':
          return this.parseInputObjectTypeExtension();
      }
    }

    throw this.unexpected(keywordToken);
  }
  /**
   * SchemaExtension :
   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
   *  - extend schema Directives[Const]
   */
  ;

  _proto.parseSchemaExtension = function parseSchemaExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('schema');
    var directives = this.parseDirectives(true);
    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);

    if (directives.length === 0 && operationTypes.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.SCHEMA_EXTENSION,
      directives: directives,
      operationTypes: operationTypes,
      loc: this.loc(start)
    };
  }
  /**
   * ScalarTypeExtension :
   *   - extend scalar Name Directives[Const]
   */
  ;

  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('scalar');
    var name = this.parseName();
    var directives = this.parseDirectives(true);

    if (directives.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.SCALAR_TYPE_EXTENSION,
      name: name,
      directives: directives,
      loc: this.loc(start)
    };
  }
  /**
   * ObjectTypeExtension :
   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend type Name ImplementsInterfaces? Directives[Const]
   *  - extend type Name ImplementsInterfaces
   */
  ;

  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('type');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();

    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.OBJECT_TYPE_EXTENSION,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * InterfaceTypeExtension :
   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend interface Name ImplementsInterfaces? Directives[Const]
   *  - extend interface Name ImplementsInterfaces
   */
  ;

  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('interface');
    var name = this.parseName();
    var interfaces = this.parseImplementsInterfaces();
    var directives = this.parseDirectives(true);
    var fields = this.parseFieldsDefinition();

    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.INTERFACE_TYPE_EXTENSION,
      name: name,
      interfaces: interfaces,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * UnionTypeExtension :
   *   - extend union Name Directives[Const]? UnionMemberTypes
   *   - extend union Name Directives[Const]
   */
  ;

  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('union');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var types = this.parseUnionMemberTypes();

    if (directives.length === 0 && types.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.UNION_TYPE_EXTENSION,
      name: name,
      directives: directives,
      types: types,
      loc: this.loc(start)
    };
  }
  /**
   * EnumTypeExtension :
   *   - extend enum Name Directives[Const]? EnumValuesDefinition
   *   - extend enum Name Directives[Const]
   */
  ;

  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('enum');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var values = this.parseEnumValuesDefinition();

    if (directives.length === 0 && values.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.ENUM_TYPE_EXTENSION,
      name: name,
      directives: directives,
      values: values,
      loc: this.loc(start)
    };
  }
  /**
   * InputObjectTypeExtension :
   *   - extend input Name Directives[Const]? InputFieldsDefinition
   *   - extend input Name Directives[Const]
   */
  ;

  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {
    var start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('input');
    var name = this.parseName();
    var directives = this.parseDirectives(true);
    var fields = this.parseInputFieldsDefinition();

    if (directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return {
      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,
      name: name,
      directives: directives,
      fields: fields,
      loc: this.loc(start)
    };
  }
  /**
   * DirectiveDefinition :
   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
   */
  ;

  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {
    var start = this._lexer.token;
    var description = this.parseDescription();
    this.expectKeyword('directive');
    this.expectToken(TokenKind.AT);
    var name = this.parseName();
    var args = this.parseArgumentDefs();
    var repeatable = this.expectOptionalKeyword('repeatable');
    this.expectKeyword('on');
    var locations = this.parseDirectiveLocations();
    return {
      kind: Kind.DIRECTIVE_DEFINITION,
      description: description,
      name: name,
      arguments: args,
      repeatable: repeatable,
      locations: locations,
      loc: this.loc(start)
    };
  }
  /**
   * DirectiveLocations :
   *   - `|`? DirectiveLocation
   *   - DirectiveLocations | DirectiveLocation
   */
  ;

  _proto.parseDirectiveLocations = function parseDirectiveLocations() {
    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);
  }
  /*
   * DirectiveLocation :
   *   - ExecutableDirectiveLocation
   *   - TypeSystemDirectiveLocation
   *
   * ExecutableDirectiveLocation : one of
   *   `QUERY`
   *   `MUTATION`
   *   `SUBSCRIPTION`
   *   `FIELD`
   *   `FRAGMENT_DEFINITION`
   *   `FRAGMENT_SPREAD`
   *   `INLINE_FRAGMENT`
   *
   * TypeSystemDirectiveLocation : one of
   *   `SCHEMA`
   *   `SCALAR`
   *   `OBJECT`
   *   `FIELD_DEFINITION`
   *   `ARGUMENT_DEFINITION`
   *   `INTERFACE`
   *   `UNION`
   *   `ENUM`
   *   `ENUM_VALUE`
   *   `INPUT_OBJECT`
   *   `INPUT_FIELD_DEFINITION`
   */
  ;

  _proto.parseDirectiveLocation = function parseDirectiveLocation() {
    var start = this._lexer.token;
    var name = this.parseName();

    if (DirectiveLocation[name.value] !== undefined) {
      return name;
    }

    throw this.unexpected(start);
  } // Core parsing utility functions

  /**
   * Returns a location object, used to identify the place in the source that created a given parsed object.
   */
  ;

  _proto.loc = function loc(startToken) {
    var _this$_options4;

    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {
      return new Location(startToken, this._lexer.lastToken, this._lexer.source);
    }
  }
  /**
   * Determines if the next token is of a given kind
   */
  ;

  _proto.peek = function peek(kind) {
    return this._lexer.token.kind === kind;
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  ;

  _proto.expectToken = function expectToken(kind) {
    var token = this._lexer.token;

    if (token.kind === kind) {
      this._lexer.advance();

      return token;
    }

    throw syntaxError(this._lexer.source, token.start, "Expected ".concat(getTokenKindDesc(kind), ", found ").concat(getTokenDesc(token), "."));
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and return undefined.
   */
  ;

  _proto.expectOptionalToken = function expectOptionalToken(kind) {
    var token = this._lexer.token;

    if (token.kind === kind) {
      this._lexer.advance();

      return token;
    }

    return undefined;
  }
  /**
   * If the next token is a given keyword, advance the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  ;

  _proto.expectKeyword = function expectKeyword(value) {
    var token = this._lexer.token;

    if (token.kind === TokenKind.NAME && token.value === value) {
      this._lexer.advance();
    } else {
      throw syntaxError(this._lexer.source, token.start, "Expected \"".concat(value, "\", found ").concat(getTokenDesc(token), "."));
    }
  }
  /**
   * If the next token is a given keyword, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  ;

  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {
    var token = this._lexer.token;

    if (token.kind === TokenKind.NAME && token.value === value) {
      this._lexer.advance();

      return true;
    }

    return false;
  }
  /**
   * Helper function for creating an error when an unexpected lexed token is encountered.
   */
  ;

  _proto.unexpected = function unexpected(atToken) {
    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;
    return syntaxError(this._lexer.source, token.start, "Unexpected ".concat(getTokenDesc(token), "."));
  }
  /**
   * Returns a possibly empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  ;

  _proto.any = function any(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    var nodes = [];

    while (!this.expectOptionalToken(closeKind)) {
      nodes.push(parseFn.call(this));
    }

    return nodes;
  }
  /**
   * Returns a list of parse nodes, determined by the parseFn.
   * It can be empty only if open token is missing otherwise it will always return non-empty list
   * that begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  ;

  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {
    if (this.expectOptionalToken(openKind)) {
      var nodes = [];

      do {
        nodes.push(parseFn.call(this));
      } while (!this.expectOptionalToken(closeKind));

      return nodes;
    }

    return [];
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  ;

  _proto.many = function many(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    var nodes = [];

    do {
      nodes.push(parseFn.call(this));
    } while (!this.expectOptionalToken(closeKind));

    return nodes;
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
   * Advances the parser to the next lex token after last item in the list.
   */
  ;

  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {
    this.expectOptionalToken(delimiterKind);
    var nodes = [];

    do {
      nodes.push(parseFn.call(this));
    } while (this.expectOptionalToken(delimiterKind));

    return nodes;
  };

  return Parser;
}();
/**
 * A helper function to describe a token as a string for debugging.
 */

function getTokenDesc(token) {
  var value = token.value;
  return getTokenKindDesc(token.kind) + (value != null ? " \"".concat(value, "\"") : '');
}
/**
 * A helper function to describe a token kind as a string for debugging.
 */


function getTokenKindDesc(kind) {
  return isPunctuatorTokenKind(kind) ? "\"".concat(kind, "\"") : kind;
}

/**
 * A visitor is provided to visit, it contains the collection of
 * relevant functions to be called during the visitor's traversal.
 */

var QueryDocumentKeys = {
  Name: [],
  Document: ['definitions'],
  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],
  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],
  Variable: ['name'],
  SelectionSet: ['selections'],
  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],
  Argument: ['name', 'value'],
  FragmentSpread: ['name', 'directives'],
  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],
  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed
  // or removed in the future.
  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ['values'],
  ObjectValue: ['fields'],
  ObjectField: ['name', 'value'],
  Directive: ['name', 'arguments'],
  NamedType: ['name'],
  ListType: ['type'],
  NonNullType: ['type'],
  SchemaDefinition: ['description', 'directives', 'operationTypes'],
  OperationTypeDefinition: ['type'],
  ScalarTypeDefinition: ['description', 'name', 'directives'],
  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],
  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],
  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],
  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],
  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],
  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],
  EnumValueDefinition: ['description', 'name', 'directives'],
  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],
  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],
  SchemaExtension: ['directives', 'operationTypes'],
  ScalarTypeExtension: ['name', 'directives'],
  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  UnionTypeExtension: ['name', 'directives', 'types'],
  EnumTypeExtension: ['name', 'directives', 'values'],
  InputObjectTypeExtension: ['name', 'directives', 'fields']
};
var BREAK = Object.freeze({});
/**
 * visit() will walk through an AST using a depth-first traversal, calling
 * the visitor's enter function at each node in the traversal, and calling the
 * leave function after visiting that node and all of its child nodes.
 *
 * By returning different values from the enter and leave functions, the
 * behavior of the visitor can be altered, including skipping over a sub-tree of
 * the AST (by returning false), editing the AST by returning a value or null
 * to remove the value, or to stop the whole traversal by returning BREAK.
 *
 * When using visit() to edit an AST, the original AST will not be modified, and
 * a new version of the AST with the changes applied will be returned from the
 * visit function.
 *
 *     const editedAST = visit(ast, {
 *       enter(node, key, parent, path, ancestors) {
 *         // @return
 *         //   undefined: no action
 *         //   false: skip visiting this node
 *         //   visitor.BREAK: stop visiting altogether
 *         //   null: delete this node
 *         //   any value: replace this node with the returned value
 *       },
 *       leave(node, key, parent, path, ancestors) {
 *         // @return
 *         //   undefined: no action
 *         //   false: no action
 *         //   visitor.BREAK: stop visiting altogether
 *         //   null: delete this node
 *         //   any value: replace this node with the returned value
 *       }
 *     });
 *
 * Alternatively to providing enter() and leave() functions, a visitor can
 * instead provide functions named the same as the kinds of AST nodes, or
 * enter/leave visitors at a named key, leading to four permutations of the
 * visitor API:
 *
 * 1) Named visitors triggered when entering a node of a specific kind.
 *
 *     visit(ast, {
 *       Kind(node) {
 *         // enter the "Kind" node
 *       }
 *     })
 *
 * 2) Named visitors that trigger upon entering and leaving a node of
 *    a specific kind.
 *
 *     visit(ast, {
 *       Kind: {
 *         enter(node) {
 *           // enter the "Kind" node
 *         }
 *         leave(node) {
 *           // leave the "Kind" node
 *         }
 *       }
 *     })
 *
 * 3) Generic visitors that trigger upon entering and leaving any node.
 *
 *     visit(ast, {
 *       enter(node) {
 *         // enter any node
 *       },
 *       leave(node) {
 *         // leave any node
 *       }
 *     })
 *
 * 4) Parallel visitors for entering and leaving nodes of a specific kind.
 *
 *     visit(ast, {
 *       enter: {
 *         Kind(node) {
 *           // enter the "Kind" node
 *         }
 *       },
 *       leave: {
 *         Kind(node) {
 *           // leave the "Kind" node
 *         }
 *       }
 *     })
 */

function visit(root, visitor) {
  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;

  /* eslint-disable no-undef-init */
  var stack = undefined;
  var inArray = Array.isArray(root);
  var keys = [root];
  var index = -1;
  var edits = [];
  var node = undefined;
  var key = undefined;
  var parent = undefined;
  var path = [];
  var ancestors = [];
  var newRoot = root;
  /* eslint-enable no-undef-init */

  do {
    index++;
    var isLeaving = index === keys.length;
    var isEdited = isLeaving && edits.length !== 0;

    if (isLeaving) {
      key = ancestors.length === 0 ? undefined : path[path.length - 1];
      node = parent;
      parent = ancestors.pop();

      if (isEdited) {
        if (inArray) {
          node = node.slice();
        } else {
          var clone = {};

          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {
            var k = _Object$keys2[_i2];
            clone[k] = node[k];
          }

          node = clone;
        }

        var editOffset = 0;

        for (var ii = 0; ii < edits.length; ii++) {
          var editKey = edits[ii][0];
          var editValue = edits[ii][1];

          if (inArray) {
            editKey -= editOffset;
          }

          if (inArray && editValue === null) {
            node.splice(editKey, 1);
            editOffset++;
          } else {
            node[editKey] = editValue;
          }
        }
      }

      index = stack.index;
      keys = stack.keys;
      edits = stack.edits;
      inArray = stack.inArray;
      stack = stack.prev;
    } else {
      key = parent ? inArray ? index : keys[index] : undefined;
      node = parent ? parent[key] : newRoot;

      if (node === null || node === undefined) {
        continue;
      }

      if (parent) {
        path.push(key);
      }
    }

    var result = void 0;

    if (!Array.isArray(node)) {
      if (!isNode(node)) {
        throw new Error("Invalid AST Node: ".concat(inspect(node), "."));
      }

      var visitFn = getVisitFn(visitor, node.kind, isLeaving);

      if (visitFn) {
        result = visitFn.call(visitor, node, key, parent, path, ancestors);

        if (result === BREAK) {
          break;
        }

        if (result === false) {
          if (!isLeaving) {
            path.pop();
            continue;
          }
        } else if (result !== undefined) {
          edits.push([key, result]);

          if (!isLeaving) {
            if (isNode(result)) {
              node = result;
            } else {
              path.pop();
              continue;
            }
          }
        }
      }
    }

    if (result === undefined && isEdited) {
      edits.push([key, node]);
    }

    if (isLeaving) {
      path.pop();
    } else {
      var _visitorKeys$node$kin;

      stack = {
        inArray: inArray,
        index: index,
        keys: keys,
        edits: edits,
        prev: stack
      };
      inArray = Array.isArray(node);
      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];
      index = -1;
      edits = [];

      if (parent) {
        ancestors.push(parent);
      }

      parent = node;
    }
  } while (stack !== undefined);

  if (edits.length !== 0) {
    newRoot = edits[edits.length - 1][1];
  }

  return newRoot;
}
/**
 * Given a visitor instance, if it is leaving or not, and a node kind, return
 * the function the visitor runtime should call.
 */

function getVisitFn(visitor, kind, isLeaving) {
  var kindVisitor = visitor[kind];

  if (kindVisitor) {
    if (!isLeaving && typeof kindVisitor === 'function') {
      // { Kind() {} }
      return kindVisitor;
    }

    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;

    if (typeof kindSpecificVisitor === 'function') {
      // { Kind: { enter() {}, leave() {} } }
      return kindSpecificVisitor;
    }
  } else {
    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;

    if (specificVisitor) {
      if (typeof specificVisitor === 'function') {
        // { enter() {}, leave() {} }
        return specificVisitor;
      }

      var specificKindVisitor = specificVisitor[kind];

      if (typeof specificKindVisitor === 'function') {
        // { enter: { Kind() {} }, leave: { Kind() {} } }
        return specificKindVisitor;
      }
    }
  }
}

/**
 * Converts an AST into a string, using one set of reasonable
 * formatting rules.
 */

function print(ast) {
  return visit(ast, {
    leave: printDocASTReducer
  });
}
var MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future

var printDocASTReducer = {
  Name: function Name(node) {
    return node.value;
  },
  Variable: function Variable(node) {
    return '$' + node.name;
  },
  // Document
  Document: function Document(node) {
    return join(node.definitions, '\n\n') + '\n';
  },
  OperationDefinition: function OperationDefinition(node) {
    var op = node.operation;
    var name = node.name;
    var varDefs = wrap$1('(', join(node.variableDefinitions, ', '), ')');
    var directives = join(node.directives, ' ');
    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use
    // the query short form.

    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');
  },
  VariableDefinition: function VariableDefinition(_ref) {
    var variable = _ref.variable,
        type = _ref.type,
        defaultValue = _ref.defaultValue,
        directives = _ref.directives;
    return variable + ': ' + type + wrap$1(' = ', defaultValue) + wrap$1(' ', join(directives, ' '));
  },
  SelectionSet: function SelectionSet(_ref2) {
    var selections = _ref2.selections;
    return block(selections);
  },
  Field: function Field(_ref3) {
    var alias = _ref3.alias,
        name = _ref3.name,
        args = _ref3.arguments,
        directives = _ref3.directives,
        selectionSet = _ref3.selectionSet;
    var prefix = wrap$1('', alias, ': ') + name;
    var argsLine = prefix + wrap$1('(', join(args, ', '), ')');

    if (argsLine.length > MAX_LINE_LENGTH) {
      argsLine = prefix + wrap$1('(\n', indent(join(args, '\n')), '\n)');
    }

    return join([argsLine, join(directives, ' '), selectionSet], ' ');
  },
  Argument: function Argument(_ref4) {
    var name = _ref4.name,
        value = _ref4.value;
    return name + ': ' + value;
  },
  // Fragments
  FragmentSpread: function FragmentSpread(_ref5) {
    var name = _ref5.name,
        directives = _ref5.directives;
    return '...' + name + wrap$1(' ', join(directives, ' '));
  },
  InlineFragment: function InlineFragment(_ref6) {
    var typeCondition = _ref6.typeCondition,
        directives = _ref6.directives,
        selectionSet = _ref6.selectionSet;
    return join(['...', wrap$1('on ', typeCondition), join(directives, ' '), selectionSet], ' ');
  },
  FragmentDefinition: function FragmentDefinition(_ref7) {
    var name = _ref7.name,
        typeCondition = _ref7.typeCondition,
        variableDefinitions = _ref7.variableDefinitions,
        directives = _ref7.directives,
        selectionSet = _ref7.selectionSet;
    return (// Note: fragment variable definitions are experimental and may be changed
      // or removed in the future.
      "fragment ".concat(name).concat(wrap$1('(', join(variableDefinitions, ', '), ')'), " ") + "on ".concat(typeCondition, " ").concat(wrap$1('', join(directives, ' '), ' ')) + selectionSet
    );
  },
  // Value
  IntValue: function IntValue(_ref8) {
    var value = _ref8.value;
    return value;
  },
  FloatValue: function FloatValue(_ref9) {
    var value = _ref9.value;
    return value;
  },
  StringValue: function StringValue(_ref10, key) {
    var value = _ref10.value,
        isBlockString = _ref10.block;
    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);
  },
  BooleanValue: function BooleanValue(_ref11) {
    var value = _ref11.value;
    return value ? 'true' : 'false';
  },
  NullValue: function NullValue() {
    return 'null';
  },
  EnumValue: function EnumValue(_ref12) {
    var value = _ref12.value;
    return value;
  },
  ListValue: function ListValue(_ref13) {
    var values = _ref13.values;
    return '[' + join(values, ', ') + ']';
  },
  ObjectValue: function ObjectValue(_ref14) {
    var fields = _ref14.fields;
    return '{' + join(fields, ', ') + '}';
  },
  ObjectField: function ObjectField(_ref15) {
    var name = _ref15.name,
        value = _ref15.value;
    return name + ': ' + value;
  },
  // Directive
  Directive: function Directive(_ref16) {
    var name = _ref16.name,
        args = _ref16.arguments;
    return '@' + name + wrap$1('(', join(args, ', '), ')');
  },
  // Type
  NamedType: function NamedType(_ref17) {
    var name = _ref17.name;
    return name;
  },
  ListType: function ListType(_ref18) {
    var type = _ref18.type;
    return '[' + type + ']';
  },
  NonNullType: function NonNullType(_ref19) {
    var type = _ref19.type;
    return type + '!';
  },
  // Type System Definitions
  SchemaDefinition: addDescription(function (_ref20) {
    var directives = _ref20.directives,
        operationTypes = _ref20.operationTypes;
    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');
  }),
  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {
    var operation = _ref21.operation,
        type = _ref21.type;
    return operation + ': ' + type;
  },
  ScalarTypeDefinition: addDescription(function (_ref22) {
    var name = _ref22.name,
        directives = _ref22.directives;
    return join(['scalar', name, join(directives, ' ')], ' ');
  }),
  ObjectTypeDefinition: addDescription(function (_ref23) {
    var name = _ref23.name,
        interfaces = _ref23.interfaces,
        directives = _ref23.directives,
        fields = _ref23.fields;
    return join(['type', name, wrap$1('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  }),
  FieldDefinition: addDescription(function (_ref24) {
    var name = _ref24.name,
        args = _ref24.arguments,
        type = _ref24.type,
        directives = _ref24.directives;
    return name + (hasMultilineItems(args) ? wrap$1('(\n', indent(join(args, '\n')), '\n)') : wrap$1('(', join(args, ', '), ')')) + ': ' + type + wrap$1(' ', join(directives, ' '));
  }),
  InputValueDefinition: addDescription(function (_ref25) {
    var name = _ref25.name,
        type = _ref25.type,
        defaultValue = _ref25.defaultValue,
        directives = _ref25.directives;
    return join([name + ': ' + type, wrap$1('= ', defaultValue), join(directives, ' ')], ' ');
  }),
  InterfaceTypeDefinition: addDescription(function (_ref26) {
    var name = _ref26.name,
        interfaces = _ref26.interfaces,
        directives = _ref26.directives,
        fields = _ref26.fields;
    return join(['interface', name, wrap$1('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  }),
  UnionTypeDefinition: addDescription(function (_ref27) {
    var name = _ref27.name,
        directives = _ref27.directives,
        types = _ref27.types;
    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');
  }),
  EnumTypeDefinition: addDescription(function (_ref28) {
    var name = _ref28.name,
        directives = _ref28.directives,
        values = _ref28.values;
    return join(['enum', name, join(directives, ' '), block(values)], ' ');
  }),
  EnumValueDefinition: addDescription(function (_ref29) {
    var name = _ref29.name,
        directives = _ref29.directives;
    return join([name, join(directives, ' ')], ' ');
  }),
  InputObjectTypeDefinition: addDescription(function (_ref30) {
    var name = _ref30.name,
        directives = _ref30.directives,
        fields = _ref30.fields;
    return join(['input', name, join(directives, ' '), block(fields)], ' ');
  }),
  DirectiveDefinition: addDescription(function (_ref31) {
    var name = _ref31.name,
        args = _ref31.arguments,
        repeatable = _ref31.repeatable,
        locations = _ref31.locations;
    return 'directive @' + name + (hasMultilineItems(args) ? wrap$1('(\n', indent(join(args, '\n')), '\n)') : wrap$1('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');
  }),
  SchemaExtension: function SchemaExtension(_ref32) {
    var directives = _ref32.directives,
        operationTypes = _ref32.operationTypes;
    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');
  },
  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {
    var name = _ref33.name,
        directives = _ref33.directives;
    return join(['extend scalar', name, join(directives, ' ')], ' ');
  },
  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {
    var name = _ref34.name,
        interfaces = _ref34.interfaces,
        directives = _ref34.directives,
        fields = _ref34.fields;
    return join(['extend type', name, wrap$1('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  },
  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {
    var name = _ref35.name,
        interfaces = _ref35.interfaces,
        directives = _ref35.directives,
        fields = _ref35.fields;
    return join(['extend interface', name, wrap$1('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
  },
  UnionTypeExtension: function UnionTypeExtension(_ref36) {
    var name = _ref36.name,
        directives = _ref36.directives,
        types = _ref36.types;
    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');
  },
  EnumTypeExtension: function EnumTypeExtension(_ref37) {
    var name = _ref37.name,
        directives = _ref37.directives,
        values = _ref37.values;
    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');
  },
  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {
    var name = _ref38.name,
        directives = _ref38.directives,
        fields = _ref38.fields;
    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');
  }
};

function addDescription(cb) {
  return function (node) {
    return join([node.description, cb(node)], '\n');
  };
}
/**
 * Given maybeArray, print an empty string if it is null or empty, otherwise
 * print all items together separated by separator if provided
 */


function join(maybeArray) {
  var _maybeArray$filter$jo;

  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {
    return x;
  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';
}
/**
 * Given array, print each item on its own line, wrapped in an
 * indented "{ }" block.
 */


function block(array) {
  return wrap$1('{\n', indent(join(array, '\n')), '\n}');
}
/**
 * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.
 */


function wrap$1(start, maybeString) {
  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';
}

function indent(str) {
  return wrap$1('  ', str.replace(/\n/g, '\n  '));
}

function isMultiline(str) {
  return str.indexOf('\n') !== -1;
}

function hasMultilineItems(maybeArray) {
  return maybeArray != null && maybeArray.some(isMultiline);
}

function shouldInclude(_a, variables) {
    var directives = _a.directives;
    if (!directives || !directives.length) {
        return true;
    }
    return getInclusionDirectives(directives).every(function (_a) {
        var directive = _a.directive, ifArgument = _a.ifArgument;
        var evaledValue = false;
        if (ifArgument.value.kind === 'Variable') {
            evaledValue = variables && variables[ifArgument.value.name.value];
            invariant$1(evaledValue !== void 0, "Invalid variable referenced in @" + directive.name.value + " directive.");
        }
        else {
            evaledValue = ifArgument.value.value;
        }
        return directive.name.value === 'skip' ? !evaledValue : evaledValue;
    });
}
function getDirectiveNames(root) {
    var names = [];
    visit(root, {
        Directive: function (node) {
            names.push(node.name.value);
        },
    });
    return names;
}
function hasDirectives(names, root) {
    return getDirectiveNames(root).some(function (name) { return names.indexOf(name) > -1; });
}
function hasClientExports(document) {
    return (document &&
        hasDirectives(['client'], document) &&
        hasDirectives(['export'], document));
}
function isInclusionDirective(_a) {
    var value = _a.name.value;
    return value === 'skip' || value === 'include';
}
function getInclusionDirectives(directives) {
    var result = [];
    if (directives && directives.length) {
        directives.forEach(function (directive) {
            if (!isInclusionDirective(directive))
                return;
            var directiveArguments = directive.arguments;
            var directiveName = directive.name.value;
            invariant$1(directiveArguments && directiveArguments.length === 1, "Incorrect number of arguments for the @" + directiveName + " directive.");
            var ifArgument = directiveArguments[0];
            invariant$1(ifArgument.name && ifArgument.name.value === 'if', "Invalid argument for the @" + directiveName + " directive.");
            var ifValue = ifArgument.value;
            invariant$1(ifValue &&
                (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), "Argument for the @" + directiveName + " directive must be a variable or a boolean value.");
            result.push({ directive: directive, ifArgument: ifArgument });
        });
    }
    return result;
}

function getFragmentQueryDocument(document, fragmentName) {
    var actualFragmentName = fragmentName;
    var fragments = [];
    document.definitions.forEach(function (definition) {
        if (definition.kind === 'OperationDefinition') {
            throw new InvariantError("Found a " + definition.operation + " operation" + (definition.name ? " named '" + definition.name.value + "'" : '') + ". " +
                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');
        }
        if (definition.kind === 'FragmentDefinition') {
            fragments.push(definition);
        }
    });
    if (typeof actualFragmentName === 'undefined') {
        invariant$1(fragments.length === 1, "Found " + fragments.length + " fragments. `fragmentName` must be provided when there is not exactly 1 fragment.");
        actualFragmentName = fragments[0].name.value;
    }
    var query = __assign$1(__assign$1({}, document), { definitions: __spreadArrays([
            {
                kind: 'OperationDefinition',
                operation: 'query',
                selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                        {
                            kind: 'FragmentSpread',
                            name: {
                                kind: 'Name',
                                value: actualFragmentName,
                            },
                        },
                    ],
                },
            }
        ], document.definitions) });
    return query;
}
function createFragmentMap(fragments) {
    if (fragments === void 0) { fragments = []; }
    var symTable = {};
    fragments.forEach(function (fragment) {
        symTable[fragment.name.value] = fragment;
    });
    return symTable;
}
function getFragmentFromSelection(selection, fragmentMap) {
    switch (selection.kind) {
        case 'InlineFragment':
            return selection;
        case 'FragmentSpread': {
            var fragment = fragmentMap && fragmentMap[selection.name.value];
            invariant$1(fragment, "No fragment named " + selection.name.value + ".");
            return fragment;
        }
        default:
            return null;
    }
}

var fastJsonStableStringify = function (data, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (node) {
        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        if (node === undefined) return;
        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';
        if (typeof node !== 'object') return JSON.stringify(node);

        var i, out;
        if (Array.isArray(node)) {
            out = '[';
            for (i = 0; i < node.length; i++) {
                if (i) out += ',';
                out += stringify(node[i]) || 'null';
            }
            return out + ']';
        }

        if (node === null) return 'null';

        if (seen.indexOf(node) !== -1) {
            if (cycles) return JSON.stringify('__cycle__');
            throw new TypeError('Converting circular structure to JSON');
        }

        var seenIndex = seen.push(node) - 1;
        var keys = Object.keys(node).sort(cmp && cmp(node));
        out = '';
        for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            var value = stringify(node[key]);

            if (!value) continue;
            if (out) out += ',';
            out += JSON.stringify(key) + ':' + value;
        }
        seen.splice(seenIndex, 1);
        return '{' + out + '}';
    })(data);
};

function makeReference(id) {
    return { __ref: String(id) };
}
function isReference(obj) {
    return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');
}
function isStringValue(value) {
    return value.kind === 'StringValue';
}
function isBooleanValue(value) {
    return value.kind === 'BooleanValue';
}
function isIntValue(value) {
    return value.kind === 'IntValue';
}
function isFloatValue(value) {
    return value.kind === 'FloatValue';
}
function isVariable(value) {
    return value.kind === 'Variable';
}
function isObjectValue(value) {
    return value.kind === 'ObjectValue';
}
function isListValue(value) {
    return value.kind === 'ListValue';
}
function isEnumValue(value) {
    return value.kind === 'EnumValue';
}
function isNullValue(value) {
    return value.kind === 'NullValue';
}
function valueToObjectRepresentation(argObj, name, value, variables) {
    if (isIntValue(value) || isFloatValue(value)) {
        argObj[name.value] = Number(value.value);
    }
    else if (isBooleanValue(value) || isStringValue(value)) {
        argObj[name.value] = value.value;
    }
    else if (isObjectValue(value)) {
        var nestedArgObj_1 = {};
        value.fields.map(function (obj) {
            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);
        });
        argObj[name.value] = nestedArgObj_1;
    }
    else if (isVariable(value)) {
        var variableValue = (variables || {})[value.name.value];
        argObj[name.value] = variableValue;
    }
    else if (isListValue(value)) {
        argObj[name.value] = value.values.map(function (listValue) {
            var nestedArgArrayObj = {};
            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);
            return nestedArgArrayObj[name.value];
        });
    }
    else if (isEnumValue(value)) {
        argObj[name.value] = value.value;
    }
    else if (isNullValue(value)) {
        argObj[name.value] = null;
    }
    else {
        throw new InvariantError("The inline argument \"" + name.value + "\" of kind \"" + value.kind + "\"" +
            'is not supported. Use variables instead of inline arguments to ' +
            'overcome this limitation.');
    }
}
function storeKeyNameFromField(field, variables) {
    var directivesObj = null;
    if (field.directives) {
        directivesObj = {};
        field.directives.forEach(function (directive) {
            directivesObj[directive.name.value] = {};
            if (directive.arguments) {
                directive.arguments.forEach(function (_a) {
                    var name = _a.name, value = _a.value;
                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);
                });
            }
        });
    }
    var argObj = null;
    if (field.arguments && field.arguments.length) {
        argObj = {};
        field.arguments.forEach(function (_a) {
            var name = _a.name, value = _a.value;
            return valueToObjectRepresentation(argObj, name, value, variables);
        });
    }
    return getStoreKeyName(field.name.value, argObj, directivesObj);
}
var KNOWN_DIRECTIVES = [
    'connection',
    'include',
    'skip',
    'client',
    'rest',
    'export',
];
function getStoreKeyName(fieldName, args, directives) {
    if (args &&
        directives &&
        directives['connection'] &&
        directives['connection']['key']) {
        if (directives['connection']['filter'] &&
            directives['connection']['filter'].length > 0) {
            var filterKeys = directives['connection']['filter']
                ? directives['connection']['filter']
                : [];
            filterKeys.sort();
            var filteredArgs_1 = {};
            filterKeys.forEach(function (key) {
                filteredArgs_1[key] = args[key];
            });
            return directives['connection']['key'] + "(" + JSON.stringify(filteredArgs_1) + ")";
        }
        else {
            return directives['connection']['key'];
        }
    }
    var completeFieldName = fieldName;
    if (args) {
        var stringifiedArgs = fastJsonStableStringify(args);
        completeFieldName += "(" + stringifiedArgs + ")";
    }
    if (directives) {
        Object.keys(directives).forEach(function (key) {
            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)
                return;
            if (directives[key] && Object.keys(directives[key]).length) {
                completeFieldName += "@" + key + "(" + JSON.stringify(directives[key]) + ")";
            }
            else {
                completeFieldName += "@" + key;
            }
        });
    }
    return completeFieldName;
}
function argumentsObjectFromField(field, variables) {
    if (field.arguments && field.arguments.length) {
        var argObj_1 = {};
        field.arguments.forEach(function (_a) {
            var name = _a.name, value = _a.value;
            return valueToObjectRepresentation(argObj_1, name, value, variables);
        });
        return argObj_1;
    }
    return null;
}
function resultKeyNameFromField(field) {
    return field.alias ? field.alias.value : field.name.value;
}
function getTypenameFromResult(result, selectionSet, fragmentMap) {
    if (typeof result.__typename === 'string') {
        return result.__typename;
    }
    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {
        var selection = _a[_i];
        if (isField(selection)) {
            if (selection.name.value === '__typename') {
                return result[resultKeyNameFromField(selection)];
            }
        }
        else {
            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);
            if (typeof typename === 'string') {
                return typename;
            }
        }
    }
}
function isField(selection) {
    return selection.kind === 'Field';
}
function isInlineFragment(selection) {
    return selection.kind === 'InlineFragment';
}

function checkDocument(doc) {
    invariant$1(doc && doc.kind === 'Document', "Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql");
    var operations = doc.definitions
        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })
        .map(function (definition) {
        if (definition.kind !== 'OperationDefinition') {
            throw new InvariantError("Schema type definitions not allowed in queries. Found: \"" + definition.kind + "\"");
        }
        return definition;
    });
    invariant$1(operations.length <= 1, "Ambiguous GraphQL document: contains " + operations.length + " operations");
    return doc;
}
function getOperationDefinition(doc) {
    checkDocument(doc);
    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];
}
function getOperationName(doc) {
    return (doc.definitions
        .filter(function (definition) {
        return definition.kind === 'OperationDefinition' && definition.name;
    })
        .map(function (x) { return x.name.value; })[0] || null);
}
function getFragmentDefinitions(doc) {
    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });
}
function getQueryDefinition(doc) {
    var queryDef = getOperationDefinition(doc);
    invariant$1(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');
    return queryDef;
}
function getFragmentDefinition(doc) {
    invariant$1(doc.kind === 'Document', "Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql");
    invariant$1(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');
    var fragmentDef = doc.definitions[0];
    invariant$1(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');
    return fragmentDef;
}
function getMainDefinition(queryDoc) {
    checkDocument(queryDoc);
    var fragmentDefinition;
    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {
        var definition = _a[_i];
        if (definition.kind === 'OperationDefinition') {
            var operation = definition.operation;
            if (operation === 'query' ||
                operation === 'mutation' ||
                operation === 'subscription') {
                return definition;
            }
        }
        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {
            fragmentDefinition = definition;
        }
    }
    if (fragmentDefinition) {
        return fragmentDefinition;
    }
    throw new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');
}
function getDefaultValues(definition) {
    var defaultValues = Object.create(null);
    var defs = definition && definition.variableDefinitions;
    if (defs && defs.length) {
        defs.forEach(function (def) {
            if (def.defaultValue) {
                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);
            }
        });
    }
    return defaultValues;
}

function filterInPlace(array, test, context) {
    var target = 0;
    array.forEach(function (elem, i) {
        if (test.call(this, elem, i, array)) {
            array[target++] = elem;
        }
    }, context);
    array.length = target;
    return array;
}

var TYPENAME_FIELD = {
    kind: 'Field',
    name: {
        kind: 'Name',
        value: '__typename',
    },
};
function isEmpty(op, fragments) {
    return op.selectionSet.selections.every(function (selection) {
        return selection.kind === 'FragmentSpread' &&
            isEmpty(fragments[selection.name.value], fragments);
    });
}
function nullIfDocIsEmpty(doc) {
    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))
        ? null
        : doc;
}
function getDirectiveMatcher(directives) {
    return function directiveMatcher(directive) {
        return directives.some(function (dir) {
            return (dir.name && dir.name === directive.name.value) ||
                (dir.test && dir.test(directive));
        });
    };
}
function removeDirectivesFromDocument(directives, doc) {
    var variablesInUse = Object.create(null);
    var variablesToRemove = [];
    var fragmentSpreadsInUse = Object.create(null);
    var fragmentSpreadsToRemove = [];
    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {
        Variable: {
            enter: function (node, _key, parent) {
                if (parent.kind !== 'VariableDefinition') {
                    variablesInUse[node.name.value] = true;
                }
            },
        },
        Field: {
            enter: function (node) {
                if (directives && node.directives) {
                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });
                    if (shouldRemoveField &&
                        node.directives &&
                        node.directives.some(getDirectiveMatcher(directives))) {
                        if (node.arguments) {
                            node.arguments.forEach(function (arg) {
                                if (arg.value.kind === 'Variable') {
                                    variablesToRemove.push({
                                        name: arg.value.name.value,
                                    });
                                }
                            });
                        }
                        if (node.selectionSet) {
                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {
                                fragmentSpreadsToRemove.push({
                                    name: frag.name.value,
                                });
                            });
                        }
                        return null;
                    }
                }
            },
        },
        FragmentSpread: {
            enter: function (node) {
                fragmentSpreadsInUse[node.name.value] = true;
            },
        },
        Directive: {
            enter: function (node) {
                if (getDirectiveMatcher(directives)(node)) {
                    return null;
                }
            },
        },
    }));
    if (modifiedDoc &&
        filterInPlace(variablesToRemove, function (v) { return !!v.name && !variablesInUse[v.name]; }).length) {
        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);
    }
    if (modifiedDoc &&
        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !!fs.name && !fragmentSpreadsInUse[fs.name]; })
            .length) {
        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);
    }
    return modifiedDoc;
}
function addTypenameToDocument(doc) {
    return visit(checkDocument(doc), {
        SelectionSet: {
            enter: function (node, _key, parent) {
                if (parent &&
                    parent.kind === 'OperationDefinition') {
                    return;
                }
                var selections = node.selections;
                if (!selections) {
                    return;
                }
                var skip = selections.some(function (selection) {
                    return (isField(selection) &&
                        (selection.name.value === '__typename' ||
                            selection.name.value.lastIndexOf('__', 0) === 0));
                });
                if (skip) {
                    return;
                }
                var field = parent;
                if (isField(field) &&
                    field.directives &&
                    field.directives.some(function (d) { return d.name.value === 'export'; })) {
                    return;
                }
                return __assign$1(__assign$1({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });
            },
        },
    });
}
addTypenameToDocument.added = function (field) {
    return field === TYPENAME_FIELD;
};
var connectionRemoveConfig = {
    test: function (directive) {
        var willRemove = directive.name.value === 'connection';
        if (willRemove) {
            if (!directive.arguments ||
                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {
                invariant$1.warn('Removing an @connection directive even though it does not have a key. ' +
                    'You may want to use the key parameter to specify a store key.');
            }
        }
        return willRemove;
    },
};
function removeConnectionDirectiveFromDocument(doc) {
    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));
}
function getArgumentMatcher(config) {
    return function argumentMatcher(argument) {
        return config.some(function (aConfig) {
            return argument.value &&
                argument.value.kind === 'Variable' &&
                argument.value.name &&
                (aConfig.name === argument.value.name.value ||
                    (aConfig.test && aConfig.test(argument)));
        });
    };
}
function removeArgumentsFromDocument(config, doc) {
    var argMatcher = getArgumentMatcher(config);
    return nullIfDocIsEmpty(visit(doc, {
        OperationDefinition: {
            enter: function (node) {
                return __assign$1(__assign$1({}, node), { variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(function (varDef) {
                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });
                    }) : [] });
            },
        },
        Field: {
            enter: function (node) {
                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });
                if (shouldRemoveField) {
                    var argMatchCount_1 = 0;
                    if (node.arguments) {
                        node.arguments.forEach(function (arg) {
                            if (argMatcher(arg)) {
                                argMatchCount_1 += 1;
                            }
                        });
                    }
                    if (argMatchCount_1 === 1) {
                        return null;
                    }
                }
            },
        },
        Argument: {
            enter: function (node) {
                if (argMatcher(node)) {
                    return null;
                }
            },
        },
    }));
}
function removeFragmentSpreadFromDocument(config, doc) {
    function enter(node) {
        if (config.some(function (def) { return def.name === node.name.value; })) {
            return null;
        }
    }
    return nullIfDocIsEmpty(visit(doc, {
        FragmentSpread: { enter: enter },
        FragmentDefinition: { enter: enter },
    }));
}
function getAllFragmentSpreadsFromSelectionSet(selectionSet) {
    var allFragments = [];
    selectionSet.selections.forEach(function (selection) {
        if ((isField(selection) || isInlineFragment(selection)) &&
            selection.selectionSet) {
            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });
        }
        else if (selection.kind === 'FragmentSpread') {
            allFragments.push(selection);
        }
    });
    return allFragments;
}
function buildQueryFromSelectionSet(document) {
    var definition = getMainDefinition(document);
    var definitionOperation = definition.operation;
    if (definitionOperation === 'query') {
        return document;
    }
    var modifiedDoc = visit(document, {
        OperationDefinition: {
            enter: function (node) {
                return __assign$1(__assign$1({}, node), { operation: 'query' });
            },
        },
    });
    return modifiedDoc;
}
function removeClientSetsFromDocument(document) {
    checkDocument(document);
    var modifiedDoc = removeDirectivesFromDocument([
        {
            test: function (directive) { return directive.name.value === 'client'; },
            remove: true,
        },
    ], document);
    if (modifiedDoc) {
        modifiedDoc = visit(modifiedDoc, {
            FragmentDefinition: {
                enter: function (node) {
                    if (node.selectionSet) {
                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {
                            return isField(selection) && selection.name.value === '__typename';
                        });
                        if (isTypenameOnly) {
                            return null;
                        }
                    }
                },
            },
        });
    }
    return modifiedDoc;
}

var hasOwnProperty$c = Object.prototype.hasOwnProperty;
function mergeDeep() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    return mergeDeepArray(sources);
}
function mergeDeepArray(sources) {
    var target = sources[0] || {};
    var count = sources.length;
    if (count > 1) {
        var merger = new DeepMerger();
        for (var i = 1; i < count; ++i) {
            target = merger.merge(target, sources[i]);
        }
    }
    return target;
}
function isObject$2(obj) {
    return obj !== null && typeof obj === 'object';
}
var defaultReconciler = function (target, source, property) {
    return this.merge(target[property], source[property]);
};
var DeepMerger = (function () {
    function DeepMerger(reconciler) {
        if (reconciler === void 0) { reconciler = defaultReconciler; }
        this.reconciler = reconciler;
        this.isObject = isObject$2;
        this.pastCopies = new Set();
    }
    DeepMerger.prototype.merge = function (target, source) {
        var _this = this;
        var context = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            context[_i - 2] = arguments[_i];
        }
        if (isObject$2(source) && isObject$2(target)) {
            Object.keys(source).forEach(function (sourceKey) {
                if (hasOwnProperty$c.call(target, sourceKey)) {
                    var targetValue = target[sourceKey];
                    if (source[sourceKey] !== targetValue) {
                        var result = _this.reconciler.apply(_this, __spreadArrays([target, source, sourceKey], context));
                        if (result !== targetValue) {
                            target = _this.shallowCopyForMerge(target);
                            target[sourceKey] = result;
                        }
                    }
                }
                else {
                    target = _this.shallowCopyForMerge(target);
                    target[sourceKey] = source[sourceKey];
                }
            });
            return target;
        }
        return source;
    };
    DeepMerger.prototype.shallowCopyForMerge = function (value) {
        if (isObject$2(value) && !this.pastCopies.has(value)) {
            if (Array.isArray(value)) {
                value = value.slice(0);
            }
            else {
                value = __assign$1({ __proto__: Object.getPrototypeOf(value) }, value);
            }
            this.pastCopies.add(value);
        }
        return value;
    };
    return DeepMerger;
}());

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn) {
  var module = { exports: {} };
	return fn(module, module.exports), module.exports;
}

var Observable_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Observable = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// === Symbol Support ===
var hasSymbols = function () {
  return typeof Symbol === 'function';
};

var hasSymbol = function (name) {
  return hasSymbols() && Boolean(Symbol[name]);
};

var getSymbol = function (name) {
  return hasSymbol(name) ? Symbol[name] : '@@' + name;
};

if (hasSymbols() && !hasSymbol('observable')) {
  Symbol.observable = Symbol('observable');
}

var SymbolIterator = getSymbol('iterator');
var SymbolObservable = getSymbol('observable');
var SymbolSpecies = getSymbol('species'); // === Abstract Operations ===

function getMethod(obj, key) {
  var value = obj[key];
  if (value == null) return undefined;
  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');
  return value;
}

function getSpecies(obj) {
  var ctor = obj.constructor;

  if (ctor !== undefined) {
    ctor = ctor[SymbolSpecies];

    if (ctor === null) {
      ctor = undefined;
    }
  }

  return ctor !== undefined ? ctor : Observable;
}

function isObservable(x) {
  return x instanceof Observable; // SPEC: Brand check
}

function hostReportError(e) {
  if (hostReportError.log) {
    hostReportError.log(e);
  } else {
    setTimeout(function () {
      throw e;
    });
  }
}

function enqueue(fn) {
  Promise.resolve().then(function () {
    try {
      fn();
    } catch (e) {
      hostReportError(e);
    }
  });
}

function cleanupSubscription(subscription) {
  var cleanup = subscription._cleanup;
  if (cleanup === undefined) return;
  subscription._cleanup = undefined;

  if (!cleanup) {
    return;
  }

  try {
    if (typeof cleanup === 'function') {
      cleanup();
    } else {
      var unsubscribe = getMethod(cleanup, 'unsubscribe');

      if (unsubscribe) {
        unsubscribe.call(cleanup);
      }
    }
  } catch (e) {
    hostReportError(e);
  }
}

function closeSubscription(subscription) {
  subscription._observer = undefined;
  subscription._queue = undefined;
  subscription._state = 'closed';
}

function flushSubscription(subscription) {
  var queue = subscription._queue;

  if (!queue) {
    return;
  }

  subscription._queue = undefined;
  subscription._state = 'ready';

  for (var i = 0; i < queue.length; ++i) {
    notifySubscription(subscription, queue[i].type, queue[i].value);
    if (subscription._state === 'closed') break;
  }
}

function notifySubscription(subscription, type, value) {
  subscription._state = 'running';
  var observer = subscription._observer;

  try {
    var m = getMethod(observer, type);

    switch (type) {
      case 'next':
        if (m) m.call(observer, value);
        break;

      case 'error':
        closeSubscription(subscription);
        if (m) m.call(observer, value);else throw value;
        break;

      case 'complete':
        closeSubscription(subscription);
        if (m) m.call(observer);
        break;
    }
  } catch (e) {
    hostReportError(e);
  }

  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';
}

function onNotify(subscription, type, value) {
  if (subscription._state === 'closed') return;

  if (subscription._state === 'buffering') {
    subscription._queue.push({
      type: type,
      value: value
    });

    return;
  }

  if (subscription._state !== 'ready') {
    subscription._state = 'buffering';
    subscription._queue = [{
      type: type,
      value: value
    }];
    enqueue(function () {
      return flushSubscription(subscription);
    });
    return;
  }

  notifySubscription(subscription, type, value);
}

var Subscription =
/*#__PURE__*/
function () {
  function Subscription(observer, subscriber) {
    _classCallCheck(this, Subscription);

    // ASSERT: observer is an object
    // ASSERT: subscriber is callable
    this._cleanup = undefined;
    this._observer = observer;
    this._queue = undefined;
    this._state = 'initializing';
    var subscriptionObserver = new SubscriptionObserver(this);

    try {
      this._cleanup = subscriber.call(undefined, subscriptionObserver);
    } catch (e) {
      subscriptionObserver.error(e);
    }

    if (this._state === 'initializing') this._state = 'ready';
  }

  _createClass(Subscription, [{
    key: "unsubscribe",
    value: function unsubscribe() {
      if (this._state !== 'closed') {
        closeSubscription(this);
        cleanupSubscription(this);
      }
    }
  }, {
    key: "closed",
    get: function () {
      return this._state === 'closed';
    }
  }]);

  return Subscription;
}();

var SubscriptionObserver =
/*#__PURE__*/
function () {
  function SubscriptionObserver(subscription) {
    _classCallCheck(this, SubscriptionObserver);

    this._subscription = subscription;
  }

  _createClass(SubscriptionObserver, [{
    key: "next",
    value: function next(value) {
      onNotify(this._subscription, 'next', value);
    }
  }, {
    key: "error",
    value: function error(value) {
      onNotify(this._subscription, 'error', value);
    }
  }, {
    key: "complete",
    value: function complete() {
      onNotify(this._subscription, 'complete');
    }
  }, {
    key: "closed",
    get: function () {
      return this._subscription._state === 'closed';
    }
  }]);

  return SubscriptionObserver;
}();

var Observable =
/*#__PURE__*/
function () {
  function Observable(subscriber) {
    _classCallCheck(this, Observable);

    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');
    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');
    this._subscriber = subscriber;
  }

  _createClass(Observable, [{
    key: "subscribe",
    value: function subscribe(observer) {
      if (typeof observer !== 'object' || observer === null) {
        observer = {
          next: observer,
          error: arguments[1],
          complete: arguments[2]
        };
      }

      return new Subscription(observer, this._subscriber);
    }
  }, {
    key: "forEach",
    value: function forEach(fn) {
      var _this = this;

      return new Promise(function (resolve, reject) {
        if (typeof fn !== 'function') {
          reject(new TypeError(fn + ' is not a function'));
          return;
        }

        function done() {
          subscription.unsubscribe();
          resolve();
        }

        var subscription = _this.subscribe({
          next: function (value) {
            try {
              fn(value, done);
            } catch (e) {
              reject(e);
              subscription.unsubscribe();
            }
          },
          error: reject,
          complete: resolve
        });
      });
    }
  }, {
    key: "map",
    value: function map(fn) {
      var _this2 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      return new C(function (observer) {
        return _this2.subscribe({
          next: function (value) {
            try {
              value = fn(value);
            } catch (e) {
              return observer.error(e);
            }

            observer.next(value);
          },
          error: function (e) {
            observer.error(e);
          },
          complete: function () {
            observer.complete();
          }
        });
      });
    }
  }, {
    key: "filter",
    value: function filter(fn) {
      var _this3 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      return new C(function (observer) {
        return _this3.subscribe({
          next: function (value) {
            try {
              if (!fn(value)) return;
            } catch (e) {
              return observer.error(e);
            }

            observer.next(value);
          },
          error: function (e) {
            observer.error(e);
          },
          complete: function () {
            observer.complete();
          }
        });
      });
    }
  }, {
    key: "reduce",
    value: function reduce(fn) {
      var _this4 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      var hasSeed = arguments.length > 1;
      var hasValue = false;
      var seed = arguments[1];
      var acc = seed;
      return new C(function (observer) {
        return _this4.subscribe({
          next: function (value) {
            var first = !hasValue;
            hasValue = true;

            if (!first || hasSeed) {
              try {
                acc = fn(acc, value);
              } catch (e) {
                return observer.error(e);
              }
            } else {
              acc = value;
            }
          },
          error: function (e) {
            observer.error(e);
          },
          complete: function () {
            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));
            observer.next(acc);
            observer.complete();
          }
        });
      });
    }
  }, {
    key: "concat",
    value: function concat() {
      var _this5 = this;

      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {
        sources[_key] = arguments[_key];
      }

      var C = getSpecies(this);
      return new C(function (observer) {
        var subscription;
        var index = 0;

        function startNext(next) {
          subscription = next.subscribe({
            next: function (v) {
              observer.next(v);
            },
            error: function (e) {
              observer.error(e);
            },
            complete: function () {
              if (index === sources.length) {
                subscription = undefined;
                observer.complete();
              } else {
                startNext(C.from(sources[index++]));
              }
            }
          });
        }

        startNext(_this5);
        return function () {
          if (subscription) {
            subscription.unsubscribe();
            subscription = undefined;
          }
        };
      });
    }
  }, {
    key: "flatMap",
    value: function flatMap(fn) {
      var _this6 = this;

      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');
      var C = getSpecies(this);
      return new C(function (observer) {
        var subscriptions = [];

        var outer = _this6.subscribe({
          next: function (value) {
            if (fn) {
              try {
                value = fn(value);
              } catch (e) {
                return observer.error(e);
              }
            }

            var inner = C.from(value).subscribe({
              next: function (value) {
                observer.next(value);
              },
              error: function (e) {
                observer.error(e);
              },
              complete: function () {
                var i = subscriptions.indexOf(inner);
                if (i >= 0) subscriptions.splice(i, 1);
                completeIfDone();
              }
            });
            subscriptions.push(inner);
          },
          error: function (e) {
            observer.error(e);
          },
          complete: function () {
            completeIfDone();
          }
        });

        function completeIfDone() {
          if (outer.closed && subscriptions.length === 0) observer.complete();
        }

        return function () {
          subscriptions.forEach(function (s) {
            return s.unsubscribe();
          });
          outer.unsubscribe();
        };
      });
    }
  }, {
    key: SymbolObservable,
    value: function () {
      return this;
    }
  }], [{
    key: "from",
    value: function from(x) {
      var C = typeof this === 'function' ? this : Observable;
      if (x == null) throw new TypeError(x + ' is not an object');
      var method = getMethod(x, SymbolObservable);

      if (method) {
        var observable = method.call(x);
        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');
        if (isObservable(observable) && observable.constructor === C) return observable;
        return new C(function (observer) {
          return observable.subscribe(observer);
        });
      }

      if (hasSymbol('iterator')) {
        method = getMethod(x, SymbolIterator);

        if (method) {
          return new C(function (observer) {
            enqueue(function () {
              if (observer.closed) return;
              var _iteratorNormalCompletion = true;
              var _didIteratorError = false;
              var _iteratorError = undefined;

              try {
                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var _item = _step.value;
                  observer.next(_item);
                  if (observer.closed) return;
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }

              observer.complete();
            });
          });
        }
      }

      if (Array.isArray(x)) {
        return new C(function (observer) {
          enqueue(function () {
            if (observer.closed) return;

            for (var i = 0; i < x.length; ++i) {
              observer.next(x[i]);
              if (observer.closed) return;
            }

            observer.complete();
          });
        });
      }

      throw new TypeError(x + ' is not observable');
    }
  }, {
    key: "of",
    value: function of() {
      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        items[_key2] = arguments[_key2];
      }

      var C = typeof this === 'function' ? this : Observable;
      return new C(function (observer) {
        enqueue(function () {
          if (observer.closed) return;

          for (var i = 0; i < items.length; ++i) {
            observer.next(items[i]);
            if (observer.closed) return;
          }

          observer.complete();
        });
      });
    }
  }, {
    key: SymbolSpecies,
    get: function () {
      return this;
    }
  }]);

  return Observable;
}();

exports.Observable = Observable;

if (hasSymbols()) {
  Object.defineProperty(Observable, Symbol('extensions'), {
    value: {
      symbol: SymbolObservable,
      hostReportError: hostReportError
    },
    configurable: true
  });
}
});

var zenObservable = Observable_1.Observable;

function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {

			// This just needs to be something that won't trample other user's Symbol.for use
			// It also will guide people to the source of their issues, if this is problematic.
			// META: It's a resource locator!
			result = Symbol.for('https://github.com/benlesh/symbol-observable');
			try {
				Symbol.observable = result;
			} catch (err) {
				// Do nothing. In some environments, users have frozen `Symbol` for security reasons,
				// if it is frozen assigning to it will throw. In this case, we don't care, because
				// they will need to use the returned value from the ponyfill.
			}
		}
	} else {
		result = '@@observable';
	}

	return result;
}

/* global window */

var root$1;

if (typeof self !== 'undefined') {
  root$1 = self;
} else if (typeof window !== 'undefined') {
  root$1 = window;
} else if (typeof global !== 'undefined') {
  root$1 = global;
} else if (typeof module !== 'undefined') {
  root$1 = module;
} else {
  root$1 = Function('return this')();
}

symbolObservablePonyfill(root$1);

var prototype = zenObservable.prototype;
var fakeObsSymbol = '@@observable';
if (!prototype[fakeObsSymbol]) {
    prototype[fakeObsSymbol] = function () { return this; };
}

var toString$1 = Object.prototype.toString;
function cloneDeep(value) {
    return cloneDeepHelper(value);
}
function cloneDeepHelper(val, seen) {
    switch (toString$1.call(val)) {
        case "[object Array]": {
            seen = seen || new Map;
            if (seen.has(val))
                return seen.get(val);
            var copy_1 = val.slice(0);
            seen.set(val, copy_1);
            copy_1.forEach(function (child, i) {
                copy_1[i] = cloneDeepHelper(child, seen);
            });
            return copy_1;
        }
        case "[object Object]": {
            seen = seen || new Map;
            if (seen.has(val))
                return seen.get(val);
            var copy_2 = Object.create(Object.getPrototypeOf(val));
            seen.set(val, copy_2);
            Object.keys(val).forEach(function (key) {
                copy_2[key] = cloneDeepHelper(val[key], seen);
            });
            return copy_2;
        }
        default:
            return val;
    }
}

function getEnv() {
    if (typeof process !== 'undefined' && "development") {
        return "development";
    }
    return 'development';
}
function isEnv(env) {
    return getEnv() === env;
}
function isDevelopment() {
    return isEnv('development') === true;
}
function isTest() {
    return isEnv('test') === true;
}

function isObject$1(value) {
    return value !== null && typeof value === "object";
}
function deepFreeze(value) {
    var workSet = new Set([value]);
    workSet.forEach(function (obj) {
        if (isObject$1(obj)) {
            if (!Object.isFrozen(obj))
                Object.freeze(obj);
            Object.getOwnPropertyNames(obj).forEach(function (name) {
                if (isObject$1(obj[name]))
                    workSet.add(obj[name]);
            });
        }
    });
    return value;
}
function maybeDeepFreeze(obj) {
    if ((isDevelopment() || isTest())) {
        deepFreeze(obj);
    }
    return obj;
}

function iterateObserversSafely(observers, method, argument) {
    var observersWithMethod = [];
    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });
    observersWithMethod.forEach(function (obs) { return obs[method](argument); });
}

function asyncMap$1(observable, mapFn, catchFn) {
    return new zenObservable(function (observer) {
        var next = observer.next, error = observer.error, complete = observer.complete;
        var activeCallbackCount = 0;
        var completed = false;
        var promiseQueue = {
            then: function (callback) {
                return new Promise(function (resolve) { return resolve(callback()); });
            },
        };
        function makeCallback(examiner, delegate) {
            if (examiner) {
                return function (arg) {
                    ++activeCallbackCount;
                    var both = function () { return examiner(arg); };
                    promiseQueue = promiseQueue.then(both, both).then(function (result) {
                        --activeCallbackCount;
                        next && next.call(observer, result);
                        if (completed) {
                            handler.complete();
                        }
                    }, function (error) {
                        --activeCallbackCount;
                        throw error;
                    }).catch(function (caught) {
                        error && error.call(observer, caught);
                    });
                };
            }
            else {
                return function (arg) { return delegate && delegate.call(observer, arg); };
            }
        }
        var handler = {
            next: makeCallback(mapFn, next),
            error: makeCallback(catchFn, error),
            complete: function () {
                completed = true;
                if (!activeCallbackCount) {
                    complete && complete.call(observer);
                }
            },
        };
        var sub = observable.subscribe(handler);
        return function () { return sub.unsubscribe(); };
    });
}

function fixObservableSubclass(subclass) {
    function set(key) {
        Object.defineProperty(subclass, key, { value: zenObservable });
    }
    if (typeof Symbol === "function" && Symbol.species) {
        set(Symbol.species);
    }
    set("@@species");
    return subclass;
}

function isPromiseLike(value) {
    return value && typeof value.then === "function";
}
var Concast = (function (_super) {
    __extends$1(Concast, _super);
    function Concast(sources) {
        var _this = _super.call(this, function (observer) {
            _this.addObserver(observer);
            return function () { return _this.removeObserver(observer); };
        }) || this;
        _this.observers = new Set();
        _this.addCount = 0;
        _this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
        _this.handlers = {
            next: function (result) {
                if (_this.sub !== null) {
                    _this.latest = ["next", result];
                    iterateObserversSafely(_this.observers, "next", result);
                }
            },
            error: function (error) {
                var sub = _this.sub;
                if (sub !== null) {
                    if (sub)
                        Promise.resolve().then(function () { return sub.unsubscribe(); });
                    _this.sub = null;
                    _this.latest = ["error", error];
                    _this.reject(error);
                    iterateObserversSafely(_this.observers, "error", error);
                }
            },
            complete: function () {
                if (_this.sub !== null) {
                    var value = _this.sources.shift();
                    if (!value) {
                        _this.sub = null;
                        if (_this.latest &&
                            _this.latest[0] === "next") {
                            _this.resolve(_this.latest[1]);
                        }
                        else {
                            _this.resolve();
                        }
                        iterateObserversSafely(_this.observers, "complete");
                    }
                    else if (isPromiseLike(value)) {
                        value.then(function (obs) { return _this.sub = obs.subscribe(_this.handlers); });
                    }
                    else {
                        _this.sub = value.subscribe(_this.handlers);
                    }
                }
            },
        };
        _this.cancel = function (reason) {
            _this.reject(reason);
            _this.sources = [];
            _this.handlers.complete();
        };
        _this.promise.catch(function (_) { });
        if (typeof sources === "function") {
            sources = [new zenObservable(sources)];
        }
        if (isPromiseLike(sources)) {
            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);
        }
        else {
            _this.start(sources);
        }
        return _this;
    }
    Concast.prototype.start = function (sources) {
        if (this.sub !== void 0)
            return;
        this.sources = Array.from(sources);
        this.handlers.complete();
    };
    Concast.prototype.deliverLastMessage = function (observer) {
        if (this.latest) {
            var nextOrError = this.latest[0];
            var method = observer[nextOrError];
            if (method) {
                method.call(observer, this.latest[1]);
            }
            if (this.sub === null &&
                nextOrError === "next" &&
                observer.complete) {
                observer.complete();
            }
        }
    };
    Concast.prototype.addObserver = function (observer) {
        if (!this.observers.has(observer)) {
            this.deliverLastMessage(observer);
            this.observers.add(observer);
            ++this.addCount;
        }
    };
    Concast.prototype.removeObserver = function (observer, quietly) {
        if (this.observers.delete(observer) &&
            --this.addCount < 1 &&
            !quietly) {
            this.handlers.error(new Error("Observable cancelled prematurely"));
        }
    };
    Concast.prototype.cleanup = function (callback) {
        var _this = this;
        var called = false;
        var once = function () {
            if (!called) {
                called = true;
                _this.observers.delete(observer);
                callback();
            }
        };
        var observer = {
            next: once,
            error: once,
            complete: once,
        };
        var count = this.addCount;
        this.addObserver(observer);
        this.addCount = count;
    };
    return Concast;
}(zenObservable));
fixObservableSubclass(Concast);

function isNonEmptyArray(value) {
    return Array.isArray(value) && value.length > 0;
}

function graphQLResultHasError(result) {
    return (result.errors && result.errors.length > 0) || false;
}

var canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&
    navigator.product === 'ReactNative');

function compact() {
    var objects = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        objects[_i] = arguments[_i];
    }
    var result = Object.create(null);
    objects.forEach(function (obj) {
        if (!obj)
            return;
        Object.keys(obj).forEach(function (key) {
            var value = obj[key];
            if (value !== void 0) {
                result[key] = value;
            }
        });
    });
    return result;
}

function fromError(errorValue) {
    return new zenObservable(function (observer) {
        observer.error(errorValue);
    });
}

var throwServerError = function (response, result, message) {
    var error = new Error(message);
    error.name = 'ServerError';
    error.response = response;
    error.statusCode = response.status;
    error.result = result;
    throw error;
};

function validateOperation(operation) {
    var OPERATION_FIELDS = [
        'query',
        'operationName',
        'variables',
        'extensions',
        'context',
    ];
    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {
        var key = _a[_i];
        if (OPERATION_FIELDS.indexOf(key) < 0) {
            throw new InvariantError("illegal argument: " + key);
        }
    }
    return operation;
}

function createOperation(starting, operation) {
    var context = __assign$1({}, starting);
    var setContext = function (next) {
        if (typeof next === 'function') {
            context = __assign$1(__assign$1({}, context), next(context));
        }
        else {
            context = __assign$1(__assign$1({}, context), next);
        }
    };
    var getContext = function () { return (__assign$1({}, context)); };
    Object.defineProperty(operation, 'setContext', {
        enumerable: false,
        value: setContext,
    });
    Object.defineProperty(operation, 'getContext', {
        enumerable: false,
        value: getContext,
    });
    return operation;
}

function transformOperation(operation) {
    var transformedOperation = {
        variables: operation.variables || {},
        extensions: operation.extensions || {},
        operationName: operation.operationName,
        query: operation.query,
    };
    if (!transformedOperation.operationName) {
        transformedOperation.operationName =
            typeof transformedOperation.query !== 'string'
                ? getOperationName(transformedOperation.query) || undefined
                : '';
    }
    return transformedOperation;
}

function passthrough(op, forward) {
    return (forward ? forward(op) : zenObservable.of());
}
function toLink(handler) {
    return typeof handler === 'function' ? new ApolloLink(handler) : handler;
}
function isTerminating(link) {
    return link.request.length <= 1;
}
var LinkError = (function (_super) {
    __extends$1(LinkError, _super);
    function LinkError(message, link) {
        var _this = _super.call(this, message) || this;
        _this.link = link;
        return _this;
    }
    return LinkError;
}(Error));
var ApolloLink = (function () {
    function ApolloLink(request) {
        if (request)
            this.request = request;
    }
    ApolloLink.empty = function () {
        return new ApolloLink(function () { return zenObservable.of(); });
    };
    ApolloLink.from = function (links) {
        if (links.length === 0)
            return ApolloLink.empty();
        return links.map(toLink).reduce(function (x, y) { return x.concat(y); });
    };
    ApolloLink.split = function (test, left, right) {
        var leftLink = toLink(left);
        var rightLink = toLink(right || new ApolloLink(passthrough));
        if (isTerminating(leftLink) && isTerminating(rightLink)) {
            return new ApolloLink(function (operation) {
                return test(operation)
                    ? leftLink.request(operation) || zenObservable.of()
                    : rightLink.request(operation) || zenObservable.of();
            });
        }
        else {
            return new ApolloLink(function (operation, forward) {
                return test(operation)
                    ? leftLink.request(operation, forward) || zenObservable.of()
                    : rightLink.request(operation, forward) || zenObservable.of();
            });
        }
    };
    ApolloLink.execute = function (link, operation) {
        return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || zenObservable.of());
    };
    ApolloLink.concat = function (first, second) {
        var firstLink = toLink(first);
        if (isTerminating(firstLink)) {
            invariant$1.warn(new LinkError("You are calling concat on a terminating link, which will have no effect", firstLink));
            return firstLink;
        }
        var nextLink = toLink(second);
        if (isTerminating(nextLink)) {
            return new ApolloLink(function (operation) {
                return firstLink.request(operation, function (op) { return nextLink.request(op) || zenObservable.of(); }) || zenObservable.of();
            });
        }
        else {
            return new ApolloLink(function (operation, forward) {
                return (firstLink.request(operation, function (op) {
                    return nextLink.request(op, forward) || zenObservable.of();
                }) || zenObservable.of());
            });
        }
    };
    ApolloLink.prototype.split = function (test, left, right) {
        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));
    };
    ApolloLink.prototype.concat = function (next) {
        return ApolloLink.concat(this, next);
    };
    ApolloLink.prototype.request = function (operation, forward) {
        throw new InvariantError('request is not implemented');
    };
    ApolloLink.prototype.onError = function (error, observer) {
        if (observer && observer.error) {
            observer.error(error);
            return false;
        }
        throw error;
    };
    ApolloLink.prototype.setOnError = function (fn) {
        this.onError = fn;
        return this;
    };
    return ApolloLink;
}());

var execute = ApolloLink.execute;

var version = '3.3.13';

var hasOwnProperty$b = Object.prototype.hasOwnProperty;
function parseAndCheckHttpResponse(operations) {
    return function (response) { return response
        .text()
        .then(function (bodyText) {
        try {
            return JSON.parse(bodyText);
        }
        catch (err) {
            var parseError = err;
            parseError.name = 'ServerParseError';
            parseError.response = response;
            parseError.statusCode = response.status;
            parseError.bodyText = bodyText;
            throw parseError;
        }
    })
        .then(function (result) {
        if (response.status >= 300) {
            throwServerError(response, result, "Response not successful: Received status code " + response.status);
        }
        if (!Array.isArray(result) &&
            !hasOwnProperty$b.call(result, 'data') &&
            !hasOwnProperty$b.call(result, 'errors')) {
            throwServerError(response, result, "Server response was missing for query '" + (Array.isArray(operations)
                ? operations.map(function (op) { return op.operationName; })
                : operations.operationName) + "'.");
        }
        return result;
    }); };
}

var serializeFetchParameter = function (p, label) {
    var serialized;
    try {
        serialized = JSON.stringify(p);
    }
    catch (e) {
        var parseError = new InvariantError("Network request failed. " + label + " is not serializable: " + e.message);
        parseError.parseError = e;
        throw parseError;
    }
    return serialized;
};

var defaultHttpOptions = {
    includeQuery: true,
    includeExtensions: false,
};
var defaultHeaders = {
    accept: '*/*',
    'content-type': 'application/json',
};
var defaultOptions = {
    method: 'POST',
};
var fallbackHttpConfig = {
    http: defaultHttpOptions,
    headers: defaultHeaders,
    options: defaultOptions,
};
var selectHttpOptionsAndBody = function (operation, fallbackConfig) {
    var configs = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        configs[_i - 2] = arguments[_i];
    }
    var options = __assign$1(__assign$1({}, fallbackConfig.options), { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });
    var http = fallbackConfig.http || {};
    configs.forEach(function (config) {
        options = __assign$1(__assign$1(__assign$1({}, options), config.options), { headers: __assign$1(__assign$1({}, options.headers), config.headers) });
        if (config.credentials)
            options.credentials = config.credentials;
        http = __assign$1(__assign$1({}, http), config.http);
    });
    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;
    var body = { operationName: operationName, variables: variables };
    if (http.includeExtensions)
        body.extensions = extensions;
    if (http.includeQuery)
        body.query = print(query);
    return {
        options: options,
        body: body,
    };
};

var checkFetcher = function (fetcher) {
    if (!fetcher && typeof fetch === 'undefined') {
        throw new InvariantError("\n\"fetch\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    ");
    }
};

var createSignalIfSupported = function () {
    if (typeof AbortController === 'undefined')
        return { controller: false, signal: false };
    var controller = new AbortController();
    var signal = controller.signal;
    return { controller: controller, signal: signal };
};

var selectURI = function (operation, fallbackURI) {
    var context = operation.getContext();
    var contextURI = context.uri;
    if (contextURI) {
        return contextURI;
    }
    else if (typeof fallbackURI === 'function') {
        return fallbackURI(operation);
    }
    else {
        return fallbackURI || '/graphql';
    }
};

function rewriteURIForGET(chosenURI, body) {
    var queryParams = [];
    var addQueryParam = function (key, value) {
        queryParams.push(key + "=" + encodeURIComponent(value));
    };
    if ('query' in body) {
        addQueryParam('query', body.query);
    }
    if (body.operationName) {
        addQueryParam('operationName', body.operationName);
    }
    if (body.variables) {
        var serializedVariables = void 0;
        try {
            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');
        }
        catch (parseError) {
            return { parseError: parseError };
        }
        addQueryParam('variables', serializedVariables);
    }
    if (body.extensions) {
        var serializedExtensions = void 0;
        try {
            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');
        }
        catch (parseError) {
            return { parseError: parseError };
        }
        addQueryParam('extensions', serializedExtensions);
    }
    var fragment = '', preFragment = chosenURI;
    var fragmentStart = chosenURI.indexOf('#');
    if (fragmentStart !== -1) {
        fragment = chosenURI.substr(fragmentStart);
        preFragment = chosenURI.substr(0, fragmentStart);
    }
    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';
    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;
    return { newURI: newURI };
}

var createHttpLink = function (linkOptions) {
    if (linkOptions === void 0) { linkOptions = {}; }
    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, _b = linkOptions.includeUnusedVariables, includeUnusedVariables = _b === void 0 ? false : _b, requestOptions = __rest(linkOptions, ["uri", "fetch", "includeExtensions", "useGETForQueries", "includeUnusedVariables"]);
    checkFetcher(fetcher);
    if (!fetcher) {
        fetcher = fetch;
    }
    var linkConfig = {
        http: { includeExtensions: includeExtensions },
        options: requestOptions.fetchOptions,
        credentials: requestOptions.credentials,
        headers: requestOptions.headers,
    };
    return new ApolloLink(function (operation) {
        var chosenURI = selectURI(operation, uri);
        var context = operation.getContext();
        var clientAwarenessHeaders = {};
        if (context.clientAwareness) {
            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;
            if (name_1) {
                clientAwarenessHeaders['apollographql-client-name'] = name_1;
            }
            if (version) {
                clientAwarenessHeaders['apollographql-client-version'] = version;
            }
        }
        var contextHeaders = __assign$1(__assign$1({}, clientAwarenessHeaders), context.headers);
        var contextConfig = {
            http: context.http,
            options: context.fetchOptions,
            credentials: context.credentials,
            headers: contextHeaders,
        };
        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;
        if (body.variables && !includeUnusedVariables) {
            var unusedNames_1 = new Set(Object.keys(body.variables));
            visit(operation.query, {
                Variable: function (node, _key, parent) {
                    if (parent && parent.kind !== 'VariableDefinition') {
                        unusedNames_1.delete(node.name.value);
                    }
                },
            });
            if (unusedNames_1.size) {
                body.variables = __assign$1({}, body.variables);
                unusedNames_1.forEach(function (name) {
                    delete body.variables[name];
                });
            }
        }
        var controller;
        if (!options.signal) {
            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;
            controller = _controller;
            if (controller)
                options.signal = signal;
        }
        var definitionIsMutation = function (d) {
            return d.kind === 'OperationDefinition' && d.operation === 'mutation';
        };
        if (useGETForQueries &&
            !operation.query.definitions.some(definitionIsMutation)) {
            options.method = 'GET';
        }
        if (options.method === 'GET') {
            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;
            if (parseError) {
                return fromError(parseError);
            }
            chosenURI = newURI;
        }
        else {
            try {
                options.body = serializeFetchParameter(body, 'Payload');
            }
            catch (parseError) {
                return fromError(parseError);
            }
        }
        return new zenObservable(function (observer) {
            fetcher(chosenURI, options)
                .then(function (response) {
                operation.setContext({ response: response });
                return response;
            })
                .then(parseAndCheckHttpResponse(operation))
                .then(function (result) {
                observer.next(result);
                observer.complete();
                return result;
            })
                .catch(function (err) {
                if (err.name === 'AbortError')
                    return;
                if (err.result && err.result.errors && err.result.data) {
                    observer.next(err.result);
                }
                observer.error(err);
            });
            return function () {
                if (controller)
                    controller.abort();
            };
        });
    });
};

var HttpLink = (function (_super) {
    __extends$1(HttpLink, _super);
    function HttpLink(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, createHttpLink(options).request) || this;
        _this.options = options;
        return _this;
    }
    return HttpLink;
}(ApolloLink));

var _a$2 = Object.prototype, toString = _a$2.toString, hasOwnProperty$a = _a$2.hasOwnProperty;
var fnToStr = Function.prototype.toString;
var previousComparisons = new Map();
/**
 * Performs a deep equality check on two JavaScript values, tolerating cycles.
 */
function equal(a, b) {
    try {
        return check(a, b);
    }
    finally {
        previousComparisons.clear();
    }
}
function check(a, b) {
    // If the two values are strictly equal, our job is easy.
    if (a === b) {
        return true;
    }
    // Object.prototype.toString returns a representation of the runtime type of
    // the given value that is considerably more precise than typeof.
    var aTag = toString.call(a);
    var bTag = toString.call(b);
    // If the runtime types of a and b are different, they could maybe be equal
    // under some interpretation of equality, but for simplicity and performance
    // we just return false instead.
    if (aTag !== bTag) {
        return false;
    }
    switch (aTag) {
        case '[object Array]':
            // Arrays are a lot like other objects, but we can cheaply compare their
            // lengths as a short-cut before comparing their elements.
            if (a.length !== b.length)
                return false;
        // Fall through to object case...
        case '[object Object]': {
            if (previouslyCompared(a, b))
                return true;
            var aKeys = definedKeys(a);
            var bKeys = definedKeys(b);
            // If `a` and `b` have a different number of enumerable keys, they
            // must be different.
            var keyCount = aKeys.length;
            if (keyCount !== bKeys.length)
                return false;
            // Now make sure they have the same keys.
            for (var k = 0; k < keyCount; ++k) {
                if (!hasOwnProperty$a.call(b, aKeys[k])) {
                    return false;
                }
            }
            // Finally, check deep equality of all child properties.
            for (var k = 0; k < keyCount; ++k) {
                var key = aKeys[k];
                if (!check(a[key], b[key])) {
                    return false;
                }
            }
            return true;
        }
        case '[object Error]':
            return a.name === b.name && a.message === b.message;
        case '[object Number]':
            // Handle NaN, which is !== itself.
            if (a !== a)
                return b !== b;
        // Fall through to shared +a === +b case...
        case '[object Boolean]':
        case '[object Date]':
            return +a === +b;
        case '[object RegExp]':
        case '[object String]':
            return a == "" + b;
        case '[object Map]':
        case '[object Set]': {
            if (a.size !== b.size)
                return false;
            if (previouslyCompared(a, b))
                return true;
            var aIterator = a.entries();
            var isMap = aTag === '[object Map]';
            while (true) {
                var info = aIterator.next();
                if (info.done)
                    break;
                // If a instanceof Set, aValue === aKey.
                var _a = info.value, aKey = _a[0], aValue = _a[1];
                // So this works the same way for both Set and Map.
                if (!b.has(aKey)) {
                    return false;
                }
                // However, we care about deep equality of values only when dealing
                // with Map structures.
                if (isMap && !check(aValue, b.get(aKey))) {
                    return false;
                }
            }
            return true;
        }
        case '[object AsyncFunction]':
        case '[object GeneratorFunction]':
        case '[object AsyncGeneratorFunction]':
        case '[object Function]': {
            var aCode = fnToStr.call(a);
            if (aCode !== fnToStr.call(b)) {
                return false;
            }
            // We consider non-native functions equal if they have the same code
            // (native functions require === because their code is censored).
            // Note that this behavior is not entirely sound, since !== function
            // objects with the same code can behave differently depending on
            // their closure scope. However, any function can behave differently
            // depending on the values of its input arguments (including this)
            // and its calling context (including its closure scope), even
            // though the function object is === to itself; and it is entirely
            // possible for functions that are not === to behave exactly the
            // same under all conceivable circumstances. Because none of these
            // factors are statically decidable in JavaScript, JS function
            // equality is not well-defined. This ambiguity allows us to
            // consider the best possible heuristic among various imperfect
            // options, and equating non-native functions that have the same
            // code has enormous practical benefits, such as when comparing
            // functions that are repeatedly passed as fresh function
            // expressions within objects that are otherwise deeply equal. Since
            // any function created from the same syntactic expression (in the
            // same code location) will always stringify to the same code
            // according to fnToStr.call, we can reasonably expect these
            // repeatedly passed function expressions to have the same code, and
            // thus behave "the same" (with all the caveats mentioned above),
            // even though the runtime function objects are !== to one another.
            return !endsWith(aCode, nativeCodeSuffix);
        }
    }
    // Otherwise the values are not equal.
    return false;
}
function definedKeys(obj) {
    // Remember that the second argument to Array.prototype.filter will be
    // used as `this` within the callback function.
    return Object.keys(obj).filter(isDefinedKey, obj);
}
function isDefinedKey(key) {
    return this[key] !== void 0;
}
var nativeCodeSuffix = "{ [native code] }";
function endsWith(full, suffix) {
    var fromIndex = full.length - suffix.length;
    return fromIndex >= 0 &&
        full.indexOf(suffix, fromIndex) === fromIndex;
}
function previouslyCompared(a, b) {
    // Though cyclic references can make an object graph appear infinite from the
    // perspective of a depth-first traversal, the graph still contains a finite
    // number of distinct object references. We use the previousComparisons cache
    // to avoid comparing the same pair of object references more than once, which
    // guarantees termination (even if we end up comparing every object in one
    // graph to every object in the other graph, which is extremely unlikely),
    // while still allowing weird isomorphic structures (like rings with different
    // lengths) a chance to pass the equality test.
    var bSet = previousComparisons.get(a);
    if (bSet) {
        // Return true here because we can be sure false will be returned somewhere
        // else if the objects are not equivalent.
        if (bSet.has(b))
            return true;
    }
    else {
        previousComparisons.set(a, bSet = new Set);
    }
    bSet.add(b);
    return false;
}

function isApolloError(err) {
    return err.hasOwnProperty('graphQLErrors');
}
var generateErrorMessage = function (err) {
    var message = '';
    if (isNonEmptyArray(err.graphQLErrors)) {
        err.graphQLErrors.forEach(function (graphQLError) {
            var errorMessage = graphQLError
                ? graphQLError.message
                : 'Error message not found.';
            message += errorMessage + "\n";
        });
    }
    if (err.networkError) {
        message += err.networkError.message + "\n";
    }
    message = message.replace(/\n$/, '');
    return message;
};
var ApolloError = (function (_super) {
    __extends$1(ApolloError, _super);
    function ApolloError(_a) {
        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;
        var _this = _super.call(this, errorMessage) || this;
        _this.graphQLErrors = graphQLErrors || [];
        _this.networkError = networkError || null;
        _this.message = errorMessage || generateErrorMessage(_this);
        _this.extraInfo = extraInfo;
        _this.__proto__ = ApolloError.prototype;
        return _this;
    }
    return ApolloError;
}(Error));

var NetworkStatus;
(function (NetworkStatus) {
    NetworkStatus[NetworkStatus["loading"] = 1] = "loading";
    NetworkStatus[NetworkStatus["setVariables"] = 2] = "setVariables";
    NetworkStatus[NetworkStatus["fetchMore"] = 3] = "fetchMore";
    NetworkStatus[NetworkStatus["refetch"] = 4] = "refetch";
    NetworkStatus[NetworkStatus["poll"] = 6] = "poll";
    NetworkStatus[NetworkStatus["ready"] = 7] = "ready";
    NetworkStatus[NetworkStatus["error"] = 8] = "error";
})(NetworkStatus || (NetworkStatus = {}));
function isNetworkRequestInFlight(networkStatus) {
    return networkStatus ? networkStatus < 7 : false;
}

var Reobserver = (function () {
    function Reobserver(observer, options, fetch, shouldFetch) {
        this.observer = observer;
        this.options = options;
        this.fetch = fetch;
        this.shouldFetch = shouldFetch;
    }
    Reobserver.prototype.reobserve = function (newOptions, newNetworkStatus) {
        if (newOptions) {
            this.updateOptions(newOptions);
        }
        else {
            this.updatePolling();
        }
        var concast = this.fetch(this.options, newNetworkStatus);
        if (this.concast) {
            this.concast.removeObserver(this.observer, true);
        }
        concast.addObserver(this.observer);
        return (this.concast = concast).promise;
    };
    Reobserver.prototype.updateOptions = function (newOptions) {
        Object.assign(this.options, compact(newOptions));
        this.updatePolling();
        return this;
    };
    Reobserver.prototype.stop = function () {
        if (this.concast) {
            this.concast.removeObserver(this.observer);
            delete this.concast;
        }
        if (this.pollingInfo) {
            clearTimeout(this.pollingInfo.timeout);
            this.options.pollInterval = 0;
            this.updatePolling();
        }
    };
    Reobserver.prototype.updatePolling = function () {
        var _this = this;
        var _a = this, pollingInfo = _a.pollingInfo, pollInterval = _a.options.pollInterval;
        if (!pollInterval) {
            if (pollingInfo) {
                clearTimeout(pollingInfo.timeout);
                delete this.pollingInfo;
            }
            return;
        }
        if (pollingInfo &&
            pollingInfo.interval === pollInterval) {
            return;
        }
        invariant$1(pollInterval, 'Attempted to start a polling query without a polling interval.');
        if (this.shouldFetch === false) {
            return;
        }
        var info = pollingInfo || (this.pollingInfo = {});
        info.interval = pollInterval;
        var maybeFetch = function () {
            if (_this.pollingInfo) {
                if (_this.shouldFetch && _this.shouldFetch()) {
                    _this.reobserve({
                        fetchPolicy: "network-only",
                        nextFetchPolicy: _this.options.fetchPolicy || "cache-first",
                    }, NetworkStatus.poll).then(poll, poll);
                }
                else {
                    poll();
                }
            }
        };
        var poll = function () {
            var info = _this.pollingInfo;
            if (info) {
                clearTimeout(info.timeout);
                info.timeout = setTimeout(maybeFetch, info.interval);
            }
        };
        poll();
    };
    return Reobserver;
}());

var warnedAboutUpdateQuery = false;
var ObservableQuery = (function (_super) {
    __extends$1(ObservableQuery, _super);
    function ObservableQuery(_a) {
        var queryManager = _a.queryManager, queryInfo = _a.queryInfo, options = _a.options;
        var _this = _super.call(this, function (observer) {
            return _this.onSubscribe(observer);
        }) || this;
        _this.observers = new Set();
        _this.subscriptions = new Set();
        _this.observer = {
            next: function (result) {
                if (_this.lastError || _this.isDifferentFromLastResult(result)) {
                    _this.updateLastResult(result);
                    iterateObserversSafely(_this.observers, 'next', result);
                }
            },
            error: function (error) {
                _this.updateLastResult(__assign$1(__assign$1({}, _this.lastResult), { error: error, errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));
                iterateObserversSafely(_this.observers, 'error', _this.lastError = error);
            },
        };
        _this.isTornDown = false;
        _this.options = options;
        _this.queryId = queryManager.generateQueryId();
        var opDef = getOperationDefinition(options.query);
        _this.queryName = opDef && opDef.name && opDef.name.value;
        _this.queryManager = queryManager;
        _this.queryInfo = queryInfo;
        return _this;
    }
    Object.defineProperty(ObservableQuery.prototype, "variables", {
        get: function () {
            return this.options.variables;
        },
        enumerable: false,
        configurable: true
    });
    ObservableQuery.prototype.result = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var observer = {
                next: function (result) {
                    resolve(result);
                    _this.observers.delete(observer);
                    if (!_this.observers.size) {
                        _this.queryManager.removeQuery(_this.queryId);
                    }
                    setTimeout(function () {
                        subscription.unsubscribe();
                    }, 0);
                },
                error: reject,
            };
            var subscription = _this.subscribe(observer);
        });
    };
    ObservableQuery.prototype.getCurrentResult = function (saveAsLastResult) {
        if (saveAsLastResult === void 0) { saveAsLastResult = true; }
        var lastResult = this.lastResult;
        var networkStatus = this.queryInfo.networkStatus ||
            (lastResult && lastResult.networkStatus) ||
            NetworkStatus.ready;
        var result = __assign$1(__assign$1({}, lastResult), { loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus });
        if (this.isTornDown) {
            return result;
        }
        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? 'cache-first' : _a;
        if (fetchPolicy === 'no-cache' ||
            fetchPolicy === 'network-only') {
            delete result.partial;
        }
        else if (!result.data ||
            !this.queryManager.transform(this.options.query).hasForcedResolvers) {
            var diff = this.queryInfo.getDiff();
            result.data = (diff.complete ||
                this.options.returnPartialData) ? diff.result : void 0;
            if (diff.complete) {
                if (result.networkStatus === NetworkStatus.loading &&
                    (fetchPolicy === 'cache-first' ||
                        fetchPolicy === 'cache-only')) {
                    result.networkStatus = NetworkStatus.ready;
                    result.loading = false;
                }
                delete result.partial;
            }
            else {
                result.partial = true;
            }
        }
        if (saveAsLastResult) {
            this.updateLastResult(result);
        }
        return result;
    };
    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {
        return !equal(this.lastResultSnapshot, newResult);
    };
    ObservableQuery.prototype.getLastResult = function () {
        return this.lastResult;
    };
    ObservableQuery.prototype.getLastError = function () {
        return this.lastError;
    };
    ObservableQuery.prototype.resetLastResults = function () {
        delete this.lastResult;
        delete this.lastResultSnapshot;
        delete this.lastError;
        this.isTornDown = false;
    };
    ObservableQuery.prototype.resetQueryStoreErrors = function () {
        this.queryManager.resetErrors(this.queryId);
    };
    ObservableQuery.prototype.refetch = function (variables) {
        var reobserveOptions = {
            pollInterval: 0,
        };
        var fetchPolicy = this.options.fetchPolicy;
        if (fetchPolicy !== 'no-cache' &&
            fetchPolicy !== 'cache-and-network') {
            reobserveOptions.fetchPolicy = 'network-only';
            reobserveOptions.nextFetchPolicy = fetchPolicy || "cache-first";
        }
        if (variables && !equal(this.options.variables, variables)) {
            reobserveOptions.variables = this.options.variables = __assign$1(__assign$1({}, this.options.variables), variables);
        }
        return this.newReobserver(false).reobserve(reobserveOptions, NetworkStatus.refetch);
    };
    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {
        var _this = this;
        var combinedOptions = __assign$1(__assign$1({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign$1(__assign$1(__assign$1({}, this.options), fetchMoreOptions), { variables: __assign$1(__assign$1({}, this.options.variables), fetchMoreOptions.variables) }))), { fetchPolicy: "no-cache" });
        var qid = this.queryManager.generateQueryId();
        if (combinedOptions.notifyOnNetworkStatusChange) {
            this.queryInfo.networkStatus = NetworkStatus.fetchMore;
            this.observe();
        }
        return this.queryManager.fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore).then(function (fetchMoreResult) {
            var data = fetchMoreResult.data;
            var updateQuery = fetchMoreOptions.updateQuery;
            if (updateQuery) {
                if (!warnedAboutUpdateQuery) {
                    invariant$1.warn("The updateQuery callback for fetchMore is deprecated, and will be removed\nin the next major version of Apollo Client.\n\nPlease convert updateQuery functions to field policies with appropriate\nread and merge functions, or use/adapt a helper function (such as\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\n@apollo/client/utilities.\n\nThe field policy system handles pagination more effectively than a\nhand-written updateQuery function, and you only need to define the policy\nonce, rather than every time you call fetchMore.");
                    warnedAboutUpdateQuery = true;
                }
                _this.updateQuery(function (previous) { return updateQuery(previous, {
                    fetchMoreResult: data,
                    variables: combinedOptions.variables,
                }); });
            }
            else {
                _this.queryManager.cache.writeQuery({
                    query: combinedOptions.query,
                    variables: combinedOptions.variables,
                    data: data,
                });
            }
            return fetchMoreResult;
        }).finally(function () {
            _this.queryManager.stopQuery(qid);
            _this.reobserve();
        });
    };
    ObservableQuery.prototype.subscribeToMore = function (options) {
        var _this = this;
        var subscription = this.queryManager
            .startGraphQLSubscription({
            query: options.document,
            variables: options.variables,
            context: options.context,
        })
            .subscribe({
            next: function (subscriptionData) {
                var updateQuery = options.updateQuery;
                if (updateQuery) {
                    _this.updateQuery(function (previous, _a) {
                        var variables = _a.variables;
                        return updateQuery(previous, {
                            subscriptionData: subscriptionData,
                            variables: variables,
                        });
                    });
                }
            },
            error: function (err) {
                if (options.onError) {
                    options.onError(err);
                    return;
                }
                invariant$1.error('Unhandled GraphQL subscription error', err);
            },
        });
        this.subscriptions.add(subscription);
        return function () {
            if (_this.subscriptions.delete(subscription)) {
                subscription.unsubscribe();
            }
        };
    };
    ObservableQuery.prototype.setOptions = function (newOptions) {
        return this.reobserve(newOptions);
    };
    ObservableQuery.prototype.setVariables = function (variables) {
        if (equal(this.variables, variables)) {
            return this.observers.size
                ? this.result()
                : Promise.resolve();
        }
        this.options.variables = variables;
        if (!this.observers.size) {
            return Promise.resolve();
        }
        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? 'cache-first' : _a;
        var reobserveOptions = {
            fetchPolicy: fetchPolicy,
            variables: variables,
        };
        if (fetchPolicy !== 'cache-first' &&
            fetchPolicy !== 'no-cache' &&
            fetchPolicy !== 'network-only') {
            reobserveOptions.fetchPolicy = 'cache-and-network';
            reobserveOptions.nextFetchPolicy = fetchPolicy;
        }
        return this.reobserve(reobserveOptions, NetworkStatus.setVariables);
    };
    ObservableQuery.prototype.updateQuery = function (mapFn) {
        var _a;
        var queryManager = this.queryManager;
        var result = queryManager.cache.diff({
            query: this.options.query,
            variables: this.variables,
            previousResult: (_a = this.lastResult) === null || _a === void 0 ? void 0 : _a.data,
            returnPartialData: true,
            optimistic: false,
        }).result;
        var newResult = mapFn(result, {
            variables: this.variables,
        });
        if (newResult) {
            queryManager.cache.writeQuery({
                query: this.options.query,
                data: newResult,
                variables: this.variables,
            });
            queryManager.broadcastQueries();
        }
    };
    ObservableQuery.prototype.startPolling = function (pollInterval) {
        this.getReobserver().updateOptions({ pollInterval: pollInterval });
    };
    ObservableQuery.prototype.stopPolling = function () {
        if (this.reobserver) {
            this.reobserver.updateOptions({ pollInterval: 0 });
        }
    };
    ObservableQuery.prototype.updateLastResult = function (newResult) {
        var previousResult = this.lastResult;
        this.lastResult = newResult;
        this.lastResultSnapshot = this.queryManager.assumeImmutableResults
            ? newResult
            : cloneDeep(newResult);
        if (!isNonEmptyArray(newResult.errors)) {
            delete this.lastError;
        }
        return previousResult;
    };
    ObservableQuery.prototype.onSubscribe = function (observer) {
        var _this = this;
        if (observer === this.observer) {
            return function () { };
        }
        try {
            var subObserver = observer._subscription._observer;
            if (subObserver && !subObserver.error) {
                subObserver.error = defaultSubscriptionObserverErrorCallback;
            }
        }
        catch (_a) { }
        var first = !this.observers.size;
        this.observers.add(observer);
        if (this.lastError) {
            observer.error && observer.error(this.lastError);
        }
        else if (this.lastResult) {
            observer.next && observer.next(this.lastResult);
        }
        if (first) {
            this.reobserve().catch(function (_) {
            });
        }
        return function () {
            if (_this.observers.delete(observer) && !_this.observers.size) {
                _this.tearDownQuery();
            }
        };
    };
    ObservableQuery.prototype.getReobserver = function () {
        return this.reobserver || (this.reobserver = this.newReobserver(true));
    };
    ObservableQuery.prototype.newReobserver = function (shareOptions) {
        var _this = this;
        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;
        queryManager.setObservableQuery(this);
        return new Reobserver(this.observer, shareOptions ? this.options : __assign$1({}, this.options), function (currentOptions, newNetworkStatus) {
            queryManager.setObservableQuery(_this);
            return queryManager.fetchQueryObservable(queryId, currentOptions, newNetworkStatus);
        }, !queryManager.ssrMode && (function () { return !isNetworkRequestInFlight(_this.queryInfo.networkStatus); }));
    };
    ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {
        this.isTornDown = false;
        return this.getReobserver().reobserve(newOptions, newNetworkStatus);
    };
    ObservableQuery.prototype.observe = function () {
        this.observer.next(this.getCurrentResult(false));
    };
    ObservableQuery.prototype.hasObservers = function () {
        return this.observers.size > 0;
    };
    ObservableQuery.prototype.tearDownQuery = function () {
        if (this.isTornDown)
            return;
        if (this.reobserver) {
            this.reobserver.stop();
            delete this.reobserver;
        }
        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });
        this.subscriptions.clear();
        this.queryManager.stopQuery(this.queryId);
        this.observers.clear();
        this.isTornDown = true;
    };
    return ObservableQuery;
}(zenObservable));
fixObservableSubclass(ObservableQuery);
function defaultSubscriptionObserverErrorCallback(error) {
    invariant$1.error('Unhandled error', error.message, error.stack);
}

// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds
// object keys weakly, yet can also hold non-object keys, unlike the
// native `WeakMap`.
// If no makeData function is supplied, the looked-up data will be an empty,
// null-prototype Object.
var defaultMakeData = function () { return Object.create(null); };
// Useful for processing arguments objects as well as arrays.
var _a$1 = Array.prototype, forEach = _a$1.forEach, slice = _a$1.slice;
var Trie = /** @class */ (function () {
    function Trie(weakness, makeData) {
        if (weakness === void 0) { weakness = true; }
        if (makeData === void 0) { makeData = defaultMakeData; }
        this.weakness = weakness;
        this.makeData = makeData;
    }
    Trie.prototype.lookup = function () {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i] = arguments[_i];
        }
        return this.lookupArray(array);
    };
    Trie.prototype.lookupArray = function (array) {
        var node = this;
        forEach.call(array, function (key) { return node = node.getChildTrie(key); });
        return node.data || (node.data = this.makeData(slice.call(array)));
    };
    Trie.prototype.getChildTrie = function (key) {
        var map = this.weakness && isObjRef(key)
            ? this.weak || (this.weak = new WeakMap())
            : this.strong || (this.strong = new Map());
        var child = map.get(key);
        if (!child)
            map.set(key, child = new Trie(this.weakness, this.makeData));
        return child;
    };
    return Trie;
}());
function isObjRef(value) {
    switch (typeof value) {
        case "object":
            if (value === null)
                break;
        // Fall through to return true...
        case "function":
            return true;
    }
    return false;
}

// This currentContext variable will only be used if the makeSlotClass
// function is called, which happens only if this is the first copy of the
// @wry/context package to be imported.
var currentContext$1 = null;
// This unique internal object is used to denote the absence of a value
// for a given Slot, and is never exposed to outside code.
var MISSING_VALUE$1 = {};
var idCounter$1 = 1;
// Although we can't do anything about the cost of duplicated code from
// accidentally bundling multiple copies of the @wry/context package, we can
// avoid creating the Slot class more than once using makeSlotClass.
var makeSlotClass$1 = function () { return /** @class */ (function () {
    function Slot() {
        // If you have a Slot object, you can find out its slot.id, but you cannot
        // guess the slot.id of a Slot you don't have access to, thanks to the
        // randomized suffix.
        this.id = [
            "slot",
            idCounter$1++,
            Date.now(),
            Math.random().toString(36).slice(2),
        ].join(":");
    }
    Slot.prototype.hasValue = function () {
        for (var context_1 = currentContext$1; context_1; context_1 = context_1.parent) {
            // We use the Slot object iself as a key to its value, which means the
            // value cannot be obtained without a reference to the Slot object.
            if (this.id in context_1.slots) {
                var value = context_1.slots[this.id];
                if (value === MISSING_VALUE$1)
                    break;
                if (context_1 !== currentContext$1) {
                    // Cache the value in currentContext.slots so the next lookup will
                    // be faster. This caching is safe because the tree of contexts and
                    // the values of the slots are logically immutable.
                    currentContext$1.slots[this.id] = value;
                }
                return true;
            }
        }
        if (currentContext$1) {
            // If a value was not found for this Slot, it's never going to be found
            // no matter how many times we look it up, so we might as well cache
            // the absence of the value, too.
            currentContext$1.slots[this.id] = MISSING_VALUE$1;
        }
        return false;
    };
    Slot.prototype.getValue = function () {
        if (this.hasValue()) {
            return currentContext$1.slots[this.id];
        }
    };
    Slot.prototype.withValue = function (value, callback, 
    // Given the prevalence of arrow functions, specifying arguments is likely
    // to be much more common than specifying `this`, hence this ordering:
    args, thisArg) {
        var _a;
        var slots = (_a = {
                __proto__: null
            },
            _a[this.id] = value,
            _a);
        var parent = currentContext$1;
        currentContext$1 = { parent: parent, slots: slots };
        try {
            // Function.prototype.apply allows the arguments array argument to be
            // omitted or undefined, so args! is fine here.
            return callback.apply(thisArg, args);
        }
        finally {
            currentContext$1 = parent;
        }
    };
    // Capture the current context and wrap a callback function so that it
    // reestablishes the captured context when called.
    Slot.bind = function (callback) {
        var context = currentContext$1;
        return function () {
            var saved = currentContext$1;
            try {
                currentContext$1 = context;
                return callback.apply(this, arguments);
            }
            finally {
                currentContext$1 = saved;
            }
        };
    };
    // Immediately run a callback function without any captured context.
    Slot.noContext = function (callback, 
    // Given the prevalence of arrow functions, specifying arguments is likely
    // to be much more common than specifying `this`, hence this ordering:
    args, thisArg) {
        if (currentContext$1) {
            var saved = currentContext$1;
            try {
                currentContext$1 = null;
                // Function.prototype.apply allows the arguments array argument to be
                // omitted or undefined, so args! is fine here.
                return callback.apply(thisArg, args);
            }
            finally {
                currentContext$1 = saved;
            }
        }
        else {
            return callback.apply(thisArg, args);
        }
    };
    return Slot;
}()); };
// We store a single global implementation of the Slot class as a permanent
// non-enumerable symbol property of the Array constructor. This obfuscation
// does nothing to prevent access to the Slot class, but at least it ensures
// the implementation (i.e. currentContext) cannot be tampered with, and all
// copies of the @wry/context package (hopefully just one) will share the
// same Slot implementation. Since the first copy of the @wry/context package
// to be imported wins, this technique imposes a very high cost for any
// future breaking changes to the Slot class.
var globalKey$1 = "@wry/context:Slot";
var host$1 = Array;
var Slot$1 = host$1[globalKey$1] || function () {
    var Slot = makeSlotClass$1();
    try {
        Object.defineProperty(host$1, globalKey$1, {
            value: host$1[globalKey$1] = Slot,
            enumerable: false,
            writable: false,
            configurable: false,
        });
    }
    finally {
        return Slot;
    }
}();

Slot$1.bind; Slot$1.noContext;

function defaultDispose() { }
var Cache = /** @class */ (function () {
    function Cache(max, dispose) {
        if (max === void 0) { max = Infinity; }
        if (dispose === void 0) { dispose = defaultDispose; }
        this.max = max;
        this.dispose = dispose;
        this.map = new Map();
        this.newest = null;
        this.oldest = null;
    }
    Cache.prototype.has = function (key) {
        return this.map.has(key);
    };
    Cache.prototype.get = function (key) {
        var node = this.getNode(key);
        return node && node.value;
    };
    Cache.prototype.getNode = function (key) {
        var node = this.map.get(key);
        if (node && node !== this.newest) {
            var older = node.older, newer = node.newer;
            if (newer) {
                newer.older = older;
            }
            if (older) {
                older.newer = newer;
            }
            node.older = this.newest;
            node.older.newer = node;
            node.newer = null;
            this.newest = node;
            if (node === this.oldest) {
                this.oldest = newer;
            }
        }
        return node;
    };
    Cache.prototype.set = function (key, value) {
        var node = this.getNode(key);
        if (node) {
            return node.value = value;
        }
        node = {
            key: key,
            value: value,
            newer: null,
            older: this.newest
        };
        if (this.newest) {
            this.newest.newer = node;
        }
        this.newest = node;
        this.oldest = this.oldest || node;
        this.map.set(key, node);
        return node.value;
    };
    Cache.prototype.clean = function () {
        while (this.oldest && this.map.size > this.max) {
            this.delete(this.oldest.key);
        }
    };
    Cache.prototype.delete = function (key) {
        var node = this.map.get(key);
        if (node) {
            if (node === this.newest) {
                this.newest = node.older;
            }
            if (node === this.oldest) {
                this.oldest = node.newer;
            }
            if (node.newer) {
                node.newer.older = node.older;
            }
            if (node.older) {
                node.older.newer = node.newer;
            }
            this.map.delete(key);
            this.dispose(node.value, key);
            return true;
        }
        return false;
    };
    return Cache;
}());

var parentEntrySlot = new Slot$1();

function maybeUnsubscribe(entryOrDep) {
    var unsubscribe = entryOrDep.unsubscribe;
    if (typeof unsubscribe === "function") {
        entryOrDep.unsubscribe = void 0;
        unsubscribe();
    }
}

var emptySetPool = [];
var POOL_TARGET_SIZE = 100;
// Since this package might be used browsers, we should avoid using the
// Node built-in assert module.
function assert(condition, optionalMessage) {
    if (!condition) {
        throw new Error(optionalMessage || "assertion failure");
    }
}
function valueIs(a, b) {
    var len = a.length;
    return (
    // Unknown values are not equal to each other.
    len > 0 &&
        // Both values must be ordinary (or both exceptional) to be equal.
        len === b.length &&
        // The underlying value or exception must be the same.
        a[len - 1] === b[len - 1]);
}
function valueGet(value) {
    switch (value.length) {
        case 0: throw new Error("unknown value");
        case 1: return value[0];
        case 2: throw value[1];
    }
}
function valueCopy(value) {
    return value.slice(0);
}
var Entry = /** @class */ (function () {
    function Entry(fn) {
        this.fn = fn;
        this.parents = new Set();
        this.childValues = new Map();
        // When this Entry has children that are dirty, this property becomes
        // a Set containing other Entry objects, borrowed from emptySetPool.
        // When the set becomes empty, it gets recycled back to emptySetPool.
        this.dirtyChildren = null;
        this.dirty = true;
        this.recomputing = false;
        this.value = [];
        this.deps = null;
        ++Entry.count;
    }
    Entry.prototype.peek = function () {
        if (this.value.length === 1 && !mightBeDirty(this)) {
            return this.value[0];
        }
    };
    // This is the most important method of the Entry API, because it
    // determines whether the cached this.value can be returned immediately,
    // or must be recomputed. The overall performance of the caching system
    // depends on the truth of the following observations: (1) this.dirty is
    // usually false, (2) this.dirtyChildren is usually null/empty, and thus
    // (3) valueGet(this.value) is usually returned without recomputation.
    Entry.prototype.recompute = function (args) {
        assert(!this.recomputing, "already recomputing");
        rememberParent(this);
        return mightBeDirty(this)
            ? reallyRecompute(this, args)
            : valueGet(this.value);
    };
    Entry.prototype.setDirty = function () {
        if (this.dirty)
            return;
        this.dirty = true;
        this.value.length = 0;
        reportDirty(this);
        forgetChildren(this);
        // We can go ahead and unsubscribe here, since any further dirty
        // notifications we receive will be redundant, and unsubscribing may
        // free up some resources, e.g. file watchers.
        maybeUnsubscribe(this);
    };
    Entry.prototype.dispose = function () {
        var _this = this;
        forgetChildren(this);
        maybeUnsubscribe(this);
        // Because this entry has been kicked out of the cache (in index.js),
        // we've lost the ability to find out if/when this entry becomes dirty,
        // whether that happens through a subscription, because of a direct call
        // to entry.setDirty(), or because one of its children becomes dirty.
        // Because of this loss of future information, we have to assume the
        // worst (that this entry might have become dirty very soon), so we must
        // immediately mark this entry's parents as dirty. Normally we could
        // just call entry.setDirty() rather than calling parent.setDirty() for
        // each parent, but that would leave this entry in parent.childValues
        // and parent.dirtyChildren, which would prevent the child from being
        // truly forgotten.
        this.parents.forEach(function (parent) {
            parent.setDirty();
            forgetChild(parent, _this);
        });
    };
    Entry.prototype.dependOn = function (dep) {
        dep.add(this);
        if (!this.deps) {
            this.deps = emptySetPool.pop() || new Set();
        }
        this.deps.add(dep);
    };
    Entry.prototype.forgetDeps = function () {
        var _this = this;
        if (this.deps) {
            this.deps.forEach(function (dep) { return dep.delete(_this); });
            this.deps.clear();
            emptySetPool.push(this.deps);
            this.deps = null;
        }
    };
    Entry.count = 0;
    return Entry;
}());
function rememberParent(child) {
    var parent = parentEntrySlot.getValue();
    if (parent) {
        child.parents.add(parent);
        if (!parent.childValues.has(child)) {
            parent.childValues.set(child, []);
        }
        if (mightBeDirty(child)) {
            reportDirtyChild(parent, child);
        }
        else {
            reportCleanChild(parent, child);
        }
        return parent;
    }
}
function reallyRecompute(entry, args) {
    forgetChildren(entry);
    // Set entry as the parent entry while calling recomputeNewValue(entry).
    parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);
    if (maybeSubscribe(entry, args)) {
        // If we successfully recomputed entry.value and did not fail to
        // (re)subscribe, then this Entry is no longer explicitly dirty.
        setClean(entry);
    }
    return valueGet(entry.value);
}
function recomputeNewValue(entry, args) {
    entry.recomputing = true;
    // Set entry.value as unknown.
    entry.value.length = 0;
    try {
        // If entry.fn succeeds, entry.value will become a normal Value.
        entry.value[0] = entry.fn.apply(null, args);
    }
    catch (e) {
        // If entry.fn throws, entry.value will become exceptional.
        entry.value[1] = e;
    }
    // Either way, this line is always reached.
    entry.recomputing = false;
}
function mightBeDirty(entry) {
    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);
}
function setClean(entry) {
    entry.dirty = false;
    if (mightBeDirty(entry)) {
        // This Entry may still have dirty children, in which case we can't
        // let our parents know we're clean just yet.
        return;
    }
    reportClean(entry);
}
function reportDirty(child) {
    child.parents.forEach(function (parent) { return reportDirtyChild(parent, child); });
}
function reportClean(child) {
    child.parents.forEach(function (parent) { return reportCleanChild(parent, child); });
}
// Let a parent Entry know that one of its children may be dirty.
function reportDirtyChild(parent, child) {
    // Must have called rememberParent(child) before calling
    // reportDirtyChild(parent, child).
    assert(parent.childValues.has(child));
    assert(mightBeDirty(child));
    if (!parent.dirtyChildren) {
        parent.dirtyChildren = emptySetPool.pop() || new Set;
    }
    else if (parent.dirtyChildren.has(child)) {
        // If we already know this child is dirty, then we must have already
        // informed our own parents that we are dirty, so we can terminate
        // the recursion early.
        return;
    }
    parent.dirtyChildren.add(child);
    reportDirty(parent);
}
// Let a parent Entry know that one of its children is no longer dirty.
function reportCleanChild(parent, child) {
    // Must have called rememberChild(child) before calling
    // reportCleanChild(parent, child).
    assert(parent.childValues.has(child));
    assert(!mightBeDirty(child));
    var childValue = parent.childValues.get(child);
    if (childValue.length === 0) {
        parent.childValues.set(child, valueCopy(child.value));
    }
    else if (!valueIs(childValue, child.value)) {
        parent.setDirty();
    }
    removeDirtyChild(parent, child);
    if (mightBeDirty(parent)) {
        return;
    }
    reportClean(parent);
}
function removeDirtyChild(parent, child) {
    var dc = parent.dirtyChildren;
    if (dc) {
        dc.delete(child);
        if (dc.size === 0) {
            if (emptySetPool.length < POOL_TARGET_SIZE) {
                emptySetPool.push(dc);
            }
            parent.dirtyChildren = null;
        }
    }
}
// Removes all children from this entry and returns an array of the
// removed children.
function forgetChildren(parent) {
    if (parent.childValues.size > 0) {
        parent.childValues.forEach(function (_value, child) {
            forgetChild(parent, child);
        });
    }
    // Remove this parent Entry from any sets to which it was added by the
    // addToSet method.
    parent.forgetDeps();
    // After we forget all our children, this.dirtyChildren must be empty
    // and therefore must have been reset to null.
    assert(parent.dirtyChildren === null);
}
function forgetChild(parent, child) {
    child.parents.delete(parent);
    parent.childValues.delete(child);
    removeDirtyChild(parent, child);
}
function maybeSubscribe(entry, args) {
    if (typeof entry.subscribe === "function") {
        try {
            maybeUnsubscribe(entry); // Prevent double subscriptions.
            entry.unsubscribe = entry.subscribe.apply(null, args);
        }
        catch (e) {
            // If this Entry has a subscribe function and it threw an exception
            // (or an unsubscribe function it previously returned now throws),
            // return false to indicate that we were not able to subscribe (or
            // unsubscribe), and this Entry should remain dirty.
            entry.setDirty();
            return false;
        }
    }
    // Returning true indicates either that there was no entry.subscribe
    // function or that it succeeded.
    return true;
}

function dep(options) {
    var depsByKey = new Map();
    var subscribe = options && options.subscribe;
    function depend(key) {
        var parent = parentEntrySlot.getValue();
        if (parent) {
            var dep_1 = depsByKey.get(key);
            if (!dep_1) {
                depsByKey.set(key, dep_1 = new Set);
            }
            parent.dependOn(dep_1);
            if (typeof subscribe === "function") {
                maybeUnsubscribe(dep_1);
                dep_1.unsubscribe = subscribe(key);
            }
        }
    }
    depend.dirty = function dirty(key) {
        var dep = depsByKey.get(key);
        if (dep) {
            dep.forEach(function (entry) { return entry.setDirty(); });
            depsByKey.delete(key);
            maybeUnsubscribe(dep);
        }
    };
    return depend;
}

// The defaultMakeCacheKey function is remarkably powerful, because it gives
// a unique object for any shallow-identical list of arguments. If you need
// to implement a custom makeCacheKey function, you may find it helpful to
// delegate the final work to defaultMakeCacheKey, which is why we export it
// here. However, you may want to avoid defaultMakeCacheKey if your runtime
// does not support WeakMap, or you have the ability to return a string key.
// In those cases, just write your own custom makeCacheKey functions.
var keyTrie = new Trie(typeof WeakMap === "function");
function defaultMakeCacheKey() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return keyTrie.lookupArray(args);
}
var caches = new Set();
function wrap(originalFunction, options) {
    if (options === void 0) { options = Object.create(null); }
    var cache = new Cache(options.max || Math.pow(2, 16), function (entry) { return entry.dispose(); });
    var keyArgs = options.keyArgs;
    var makeCacheKey = options.makeCacheKey || defaultMakeCacheKey;
    function optimistic() {
        var key = makeCacheKey.apply(null, keyArgs ? keyArgs.apply(null, arguments) : arguments);
        if (key === void 0) {
            return originalFunction.apply(null, arguments);
        }
        var entry = cache.get(key);
        if (!entry) {
            cache.set(key, entry = new Entry(originalFunction));
            entry.subscribe = options.subscribe;
        }
        var value = entry.recompute(Array.prototype.slice.call(arguments));
        // Move this entry to the front of the least-recently used queue,
        // since we just finished computing its value.
        cache.set(key, entry);
        caches.add(cache);
        // Clean up any excess entries in the cache, but only if there is no
        // active parent entry, meaning we're not in the middle of a larger
        // computation that might be flummoxed by the cleaning.
        if (!parentEntrySlot.hasValue()) {
            caches.forEach(function (cache) { return cache.clean(); });
            caches.clear();
        }
        return value;
    }
    function lookup() {
        var key = makeCacheKey.apply(null, arguments);
        if (key !== void 0) {
            return cache.get(key);
        }
    }
    optimistic.dirty = function () {
        var entry = lookup.apply(null, arguments);
        if (entry) {
            entry.setDirty();
        }
    };
    optimistic.peek = function () {
        var entry = lookup.apply(null, arguments);
        if (entry) {
            return entry.peek();
        }
    };
    optimistic.forget = function () {
        var key = makeCacheKey.apply(null, arguments);
        return key !== void 0 && cache.delete(key);
    };
    return optimistic;
}

var ApolloCache = (function () {
    function ApolloCache() {
        this.getFragmentDoc = wrap(getFragmentQueryDocument);
    }
    ApolloCache.prototype.recordOptimisticTransaction = function (transaction, optimisticId) {
        this.performTransaction(transaction, optimisticId);
    };
    ApolloCache.prototype.transformDocument = function (document) {
        return document;
    };
    ApolloCache.prototype.identify = function (object) {
        return;
    };
    ApolloCache.prototype.gc = function () {
        return [];
    };
    ApolloCache.prototype.modify = function (options) {
        return false;
    };
    ApolloCache.prototype.transformForLink = function (document) {
        return document;
    };
    ApolloCache.prototype.readQuery = function (options, optimistic) {
        if (optimistic === void 0) { optimistic = !!options.optimistic; }
        return this.read({
            rootId: options.id || 'ROOT_QUERY',
            query: options.query,
            variables: options.variables,
            returnPartialData: options.returnPartialData,
            optimistic: optimistic,
        });
    };
    ApolloCache.prototype.readFragment = function (options, optimistic) {
        if (optimistic === void 0) { optimistic = !!options.optimistic; }
        return this.read({
            query: this.getFragmentDoc(options.fragment, options.fragmentName),
            variables: options.variables,
            rootId: options.id,
            returnPartialData: options.returnPartialData,
            optimistic: optimistic,
        });
    };
    ApolloCache.prototype.writeQuery = function (options) {
        return this.write({
            dataId: options.id || 'ROOT_QUERY',
            result: options.data,
            query: options.query,
            variables: options.variables,
            broadcast: options.broadcast,
        });
    };
    ApolloCache.prototype.writeFragment = function (options) {
        return this.write({
            dataId: options.id,
            result: options.data,
            variables: options.variables,
            query: this.getFragmentDoc(options.fragment, options.fragmentName),
            broadcast: options.broadcast,
        });
    };
    return ApolloCache;
}());

var MissingFieldError = (function () {
    function MissingFieldError(message, path, query, clientOnly, variables) {
        this.message = message;
        this.path = path;
        this.query = query;
        this.clientOnly = clientOnly;
        this.variables = variables;
    }
    return MissingFieldError;
}());

var hasOwn = Object.prototype.hasOwnProperty;
function getTypenameFromStoreObject(store, objectOrReference) {
    return isReference(objectOrReference)
        ? store.get(objectOrReference.__ref, "__typename")
        : objectOrReference && objectOrReference.__typename;
}
var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;
function fieldNameFromStoreName(storeFieldName) {
    var match = storeFieldName.match(TypeOrFieldNameRegExp);
    return match ? match[0] : storeFieldName;
}
function selectionSetMatchesResult(selectionSet, result, variables) {
    if (result && typeof result === "object") {
        return Array.isArray(result)
            ? result.every(function (item) { return selectionSetMatchesResult(selectionSet, item, variables); })
            : selectionSet.selections.every(function (field) {
                if (isField(field) && shouldInclude(field, variables)) {
                    var key = resultKeyNameFromField(field);
                    return hasOwn.call(result, key) &&
                        (!field.selectionSet ||
                            selectionSetMatchesResult(field.selectionSet, result[key], variables));
                }
                return true;
            });
    }
    return false;
}
function storeValueIsStoreObject(value) {
    return value !== null &&
        typeof value === "object" &&
        !isReference(value) &&
        !Array.isArray(value);
}
function makeProcessedFieldsMerger() {
    return new DeepMerger;
}

var DELETE = Object.create(null);
var delModifier = function () { return DELETE; };
var INVALIDATE = Object.create(null);
var EntityStore = (function () {
    function EntityStore(policies, group) {
        var _this = this;
        this.policies = policies;
        this.group = group;
        this.data = Object.create(null);
        this.rootIds = Object.create(null);
        this.refs = Object.create(null);
        this.getFieldValue = function (objectOrReference, storeFieldName) { return maybeDeepFreeze(isReference(objectOrReference)
            ? _this.get(objectOrReference.__ref, storeFieldName)
            : objectOrReference && objectOrReference[storeFieldName]); };
        this.canRead = function (objOrRef) {
            return isReference(objOrRef)
                ? _this.has(objOrRef.__ref)
                : typeof objOrRef === "object";
        };
        this.toReference = function (objOrIdOrRef, mergeIntoStore) {
            if (typeof objOrIdOrRef === "string") {
                return makeReference(objOrIdOrRef);
            }
            if (isReference(objOrIdOrRef)) {
                return objOrIdOrRef;
            }
            var id = _this.policies.identify(objOrIdOrRef)[0];
            if (id) {
                var ref = makeReference(id);
                if (mergeIntoStore) {
                    _this.merge(id, objOrIdOrRef);
                }
                return ref;
            }
        };
    }
    EntityStore.prototype.toObject = function () {
        return __assign$1({}, this.data);
    };
    EntityStore.prototype.has = function (dataId) {
        return this.lookup(dataId, true) !== void 0;
    };
    EntityStore.prototype.get = function (dataId, fieldName) {
        this.group.depend(dataId, fieldName);
        if (hasOwn.call(this.data, dataId)) {
            var storeObject = this.data[dataId];
            if (storeObject && hasOwn.call(storeObject, fieldName)) {
                return storeObject[fieldName];
            }
        }
        if (fieldName === "__typename" &&
            hasOwn.call(this.policies.rootTypenamesById, dataId)) {
            return this.policies.rootTypenamesById[dataId];
        }
        if (this instanceof Layer) {
            return this.parent.get(dataId, fieldName);
        }
    };
    EntityStore.prototype.lookup = function (dataId, dependOnExistence) {
        if (dependOnExistence)
            this.group.depend(dataId, "__exists");
        if (hasOwn.call(this.data, dataId)) {
            return this.data[dataId];
        }
        if (this instanceof Layer) {
            return this.parent.lookup(dataId, dependOnExistence);
        }
        if (this.policies.rootTypenamesById[dataId]) {
            return Object.create(null);
        }
    };
    EntityStore.prototype.merge = function (dataId, incoming) {
        var _this = this;
        var existing = this.lookup(dataId);
        var merged = new DeepMerger(storeObjectReconciler).merge(existing, incoming);
        this.data[dataId] = merged;
        if (merged !== existing) {
            delete this.refs[dataId];
            if (this.group.caching) {
                var fieldsToDirty_1 = Object.create(null);
                if (!existing)
                    fieldsToDirty_1.__exists = 1;
                Object.keys(incoming).forEach(function (storeFieldName) {
                    if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {
                        fieldsToDirty_1[storeFieldName] = 1;
                        var fieldName = fieldNameFromStoreName(storeFieldName);
                        if (fieldName !== storeFieldName &&
                            !_this.policies.hasKeyArgs(merged.__typename, fieldName)) {
                            fieldsToDirty_1[fieldName] = 1;
                        }
                        if (merged[storeFieldName] === void 0 && !(_this instanceof Layer)) {
                            delete merged[storeFieldName];
                        }
                    }
                });
                Object.keys(fieldsToDirty_1).forEach(function (fieldName) { return _this.group.dirty(dataId, fieldName); });
            }
        }
    };
    EntityStore.prototype.modify = function (dataId, fields) {
        var _this = this;
        var storeObject = this.lookup(dataId);
        if (storeObject) {
            var changedFields_1 = Object.create(null);
            var needToMerge_1 = false;
            var allDeleted_1 = true;
            var sharedDetails_1 = {
                DELETE: DELETE,
                INVALIDATE: INVALIDATE,
                isReference: isReference,
                toReference: this.toReference,
                canRead: this.canRead,
                readField: function (fieldNameOrOptions, from) { return _this.policies.readField(typeof fieldNameOrOptions === "string" ? {
                    fieldName: fieldNameOrOptions,
                    from: from || makeReference(dataId),
                } : fieldNameOrOptions, { store: _this }); },
            };
            Object.keys(storeObject).forEach(function (storeFieldName) {
                var fieldName = fieldNameFromStoreName(storeFieldName);
                var fieldValue = storeObject[storeFieldName];
                if (fieldValue === void 0)
                    return;
                var modify = typeof fields === "function"
                    ? fields
                    : fields[storeFieldName] || fields[fieldName];
                if (modify) {
                    var newValue = modify === delModifier ? DELETE :
                        modify(maybeDeepFreeze(fieldValue), __assign$1(__assign$1({}, sharedDetails_1), { fieldName: fieldName,
                            storeFieldName: storeFieldName, storage: _this.getStorage(dataId, storeFieldName) }));
                    if (newValue === INVALIDATE) {
                        _this.group.dirty(dataId, storeFieldName);
                    }
                    else {
                        if (newValue === DELETE)
                            newValue = void 0;
                        if (newValue !== fieldValue) {
                            changedFields_1[storeFieldName] = newValue;
                            needToMerge_1 = true;
                            fieldValue = newValue;
                        }
                    }
                }
                if (fieldValue !== void 0) {
                    allDeleted_1 = false;
                }
            });
            if (needToMerge_1) {
                this.merge(dataId, changedFields_1);
                if (allDeleted_1) {
                    if (this instanceof Layer) {
                        this.data[dataId] = void 0;
                    }
                    else {
                        delete this.data[dataId];
                    }
                    this.group.dirty(dataId, "__exists");
                }
                return true;
            }
        }
        return false;
    };
    EntityStore.prototype.delete = function (dataId, fieldName, args) {
        var _a;
        var storeObject = this.lookup(dataId);
        if (storeObject) {
            var typename = this.getFieldValue(storeObject, "__typename");
            var storeFieldName = fieldName && args
                ? this.policies.getStoreFieldName({ typename: typename, fieldName: fieldName, args: args })
                : fieldName;
            return this.modify(dataId, storeFieldName ? (_a = {},
                _a[storeFieldName] = delModifier,
                _a) : delModifier);
        }
        return false;
    };
    EntityStore.prototype.evict = function (options) {
        var evicted = false;
        if (options.id) {
            if (hasOwn.call(this.data, options.id)) {
                evicted = this.delete(options.id, options.fieldName, options.args);
            }
            if (this instanceof Layer) {
                evicted = this.parent.evict(options) || evicted;
            }
            if (options.fieldName || evicted) {
                this.group.dirty(options.id, options.fieldName || "__exists");
            }
        }
        return evicted;
    };
    EntityStore.prototype.clear = function () {
        this.replace(null);
    };
    EntityStore.prototype.extract = function () {
        var _this = this;
        var obj = this.toObject();
        var extraRootIds = [];
        this.getRootIdSet().forEach(function (id) {
            if (!hasOwn.call(_this.policies.rootTypenamesById, id)) {
                extraRootIds.push(id);
            }
        });
        if (extraRootIds.length) {
            obj.__META = { extraRootIds: extraRootIds.sort() };
        }
        return obj;
    };
    EntityStore.prototype.replace = function (newData) {
        var _this = this;
        Object.keys(this.data).forEach(function (dataId) {
            if (!(newData && hasOwn.call(newData, dataId))) {
                _this.delete(dataId);
            }
        });
        if (newData) {
            var __META = newData.__META, rest_1 = __rest(newData, ["__META"]);
            Object.keys(rest_1).forEach(function (dataId) {
                _this.merge(dataId, rest_1[dataId]);
            });
            if (__META) {
                __META.extraRootIds.forEach(this.retain, this);
            }
        }
    };
    EntityStore.prototype.retain = function (rootId) {
        return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;
    };
    EntityStore.prototype.release = function (rootId) {
        if (this.rootIds[rootId] > 0) {
            var count = --this.rootIds[rootId];
            if (!count)
                delete this.rootIds[rootId];
            return count;
        }
        return 0;
    };
    EntityStore.prototype.getRootIdSet = function (ids) {
        if (ids === void 0) { ids = new Set(); }
        Object.keys(this.rootIds).forEach(ids.add, ids);
        if (this instanceof Layer) {
            this.parent.getRootIdSet(ids);
        }
        else {
            Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);
        }
        return ids;
    };
    EntityStore.prototype.gc = function () {
        var _this = this;
        var ids = this.getRootIdSet();
        var snapshot = this.toObject();
        ids.forEach(function (id) {
            if (hasOwn.call(snapshot, id)) {
                Object.keys(_this.findChildRefIds(id)).forEach(ids.add, ids);
                delete snapshot[id];
            }
        });
        var idsToRemove = Object.keys(snapshot);
        if (idsToRemove.length) {
            var root_1 = this;
            while (root_1 instanceof Layer)
                root_1 = root_1.parent;
            idsToRemove.forEach(function (id) { return root_1.delete(id); });
        }
        return idsToRemove;
    };
    EntityStore.prototype.findChildRefIds = function (dataId) {
        if (!hasOwn.call(this.refs, dataId)) {
            var found_1 = this.refs[dataId] = Object.create(null);
            var workSet_1 = new Set([this.data[dataId]]);
            var canTraverse_1 = function (obj) { return obj !== null && typeof obj === 'object'; };
            workSet_1.forEach(function (obj) {
                if (isReference(obj)) {
                    found_1[obj.__ref] = true;
                }
                else if (canTraverse_1(obj)) {
                    Object.values(obj)
                        .filter(canTraverse_1)
                        .forEach(workSet_1.add, workSet_1);
                }
            });
        }
        return this.refs[dataId];
    };
    EntityStore.prototype.makeCacheKey = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this.group.keyMaker.lookupArray(args);
    };
    return EntityStore;
}());
var CacheGroup = (function () {
    function CacheGroup(caching) {
        this.caching = caching;
        this.d = null;
        this.keyMaker = new Trie(canUseWeakMap);
        this.d = caching ? dep() : null;
    }
    CacheGroup.prototype.depend = function (dataId, storeFieldName) {
        if (this.d) {
            this.d(makeDepKey(dataId, storeFieldName));
            var fieldName = fieldNameFromStoreName(storeFieldName);
            if (fieldName !== storeFieldName) {
                this.d(makeDepKey(dataId, fieldName));
            }
        }
    };
    CacheGroup.prototype.dirty = function (dataId, storeFieldName) {
        if (this.d) {
            this.d.dirty(makeDepKey(dataId, storeFieldName));
        }
    };
    return CacheGroup;
}());
function makeDepKey(dataId, storeFieldName) {
    return storeFieldName + '#' + dataId;
}
(function (EntityStore) {
    var Root = (function (_super) {
        __extends$1(Root, _super);
        function Root(_a) {
            var policies = _a.policies, _b = _a.resultCaching, resultCaching = _b === void 0 ? true : _b, seed = _a.seed;
            var _this = _super.call(this, policies, new CacheGroup(resultCaching)) || this;
            _this.storageTrie = new Trie(canUseWeakMap);
            _this.sharedLayerGroup = new CacheGroup(resultCaching);
            if (seed)
                _this.replace(seed);
            return _this;
        }
        Root.prototype.addLayer = function (layerId, replay) {
            return new Layer(layerId, this, replay, this.sharedLayerGroup);
        };
        Root.prototype.removeLayer = function () {
            return this;
        };
        Root.prototype.getStorage = function () {
            return this.storageTrie.lookupArray(arguments);
        };
        return Root;
    }(EntityStore));
    EntityStore.Root = Root;
})(EntityStore || (EntityStore = {}));
var Layer = (function (_super) {
    __extends$1(Layer, _super);
    function Layer(id, parent, replay, group) {
        var _this = _super.call(this, parent.policies, group) || this;
        _this.id = id;
        _this.parent = parent;
        _this.replay = replay;
        _this.group = group;
        replay(_this);
        return _this;
    }
    Layer.prototype.addLayer = function (layerId, replay) {
        return new Layer(layerId, this, replay, this.group);
    };
    Layer.prototype.removeLayer = function (layerId) {
        var _this = this;
        var parent = this.parent.removeLayer(layerId);
        if (layerId === this.id) {
            if (this.group.caching) {
                Object.keys(this.data).forEach(function (dataId) {
                    if (_this.data[dataId] !== parent.lookup(dataId)) {
                        _this.delete(dataId);
                    }
                });
            }
            return parent;
        }
        if (parent === this.parent)
            return this;
        return parent.addLayer(this.id, this.replay);
    };
    Layer.prototype.toObject = function () {
        return __assign$1(__assign$1({}, this.parent.toObject()), this.data);
    };
    Layer.prototype.findChildRefIds = function (dataId) {
        var fromParent = this.parent.findChildRefIds(dataId);
        return hasOwn.call(this.data, dataId) ? __assign$1(__assign$1({}, fromParent), _super.prototype.findChildRefIds.call(this, dataId)) : fromParent;
    };
    Layer.prototype.getStorage = function () {
        var p = this.parent;
        while (p.parent)
            p = p.parent;
        return p.getStorage.apply(p, arguments);
    };
    return Layer;
}(EntityStore));
function storeObjectReconciler(existingObject, incomingObject, property) {
    var existingValue = existingObject[property];
    var incomingValue = incomingObject[property];
    return equal(existingValue, incomingValue) ? existingValue : incomingValue;
}
function supportsResultCaching(store) {
    return !!(store instanceof EntityStore && store.group.caching);
}

function missingFromInvariant(err, context) {
    return new MissingFieldError(err.message, context.path.slice(), context.query, context.clientOnly, context.variables);
}
var StoreReader = (function () {
    function StoreReader(config) {
        var _this = this;
        this.config = config;
        this.executeSelectionSet = wrap(function (options) { return _this.execSelectionSetImpl(options); }, {
            keyArgs: function (options) {
                return [
                    options.selectionSet,
                    options.objectOrReference,
                    options.context,
                ];
            },
            makeCacheKey: function (selectionSet, parent, context) {
                if (supportsResultCaching(context.store)) {
                    return context.store.makeCacheKey(selectionSet, isReference(parent) ? parent.__ref : parent, context.varString);
                }
            }
        });
        this.knownResults = new WeakMap();
        this.executeSubSelectedArray = wrap(function (options) {
            return _this.execSubSelectedArrayImpl(options);
        }, {
            makeCacheKey: function (_a) {
                var field = _a.field, array = _a.array, context = _a.context;
                if (supportsResultCaching(context.store)) {
                    return context.store.makeCacheKey(field, array, context.varString);
                }
            }
        });
        this.config = __assign$1({ addTypename: true }, config);
    }
    StoreReader.prototype.diffQueryAgainstStore = function (_a) {
        var store = _a.store, query = _a.query, _b = _a.rootId, rootId = _b === void 0 ? 'ROOT_QUERY' : _b, variables = _a.variables, _c = _a.returnPartialData, returnPartialData = _c === void 0 ? true : _c;
        var policies = this.config.cache.policies;
        variables = __assign$1(__assign$1({}, getDefaultValues(getQueryDefinition(query))), variables);
        var execResult = this.executeSelectionSet({
            selectionSet: getMainDefinition(query).selectionSet,
            objectOrReference: makeReference(rootId),
            context: {
                store: store,
                query: query,
                policies: policies,
                variables: variables,
                varString: JSON.stringify(variables),
                fragmentMap: createFragmentMap(getFragmentDefinitions(query)),
                path: [],
                clientOnly: false,
            },
        });
        var hasMissingFields = execResult.missing && execResult.missing.length > 0;
        if (hasMissingFields && !returnPartialData) {
            throw execResult.missing[0];
        }
        return {
            result: execResult.result,
            missing: execResult.missing,
            complete: !hasMissingFields,
        };
    };
    StoreReader.prototype.isFresh = function (result, parent, selectionSet, context) {
        if (supportsResultCaching(context.store) &&
            this.knownResults.get(result) === selectionSet) {
            var latest = this.executeSelectionSet.peek(selectionSet, parent, context);
            if (latest && result === latest.result) {
                return true;
            }
        }
        return false;
    };
    StoreReader.prototype.execSelectionSetImpl = function (_a) {
        var _this = this;
        var selectionSet = _a.selectionSet, objectOrReference = _a.objectOrReference, context = _a.context;
        if (isReference(objectOrReference) &&
            !context.policies.rootTypenamesById[objectOrReference.__ref] &&
            !context.store.has(objectOrReference.__ref)) {
            return {
                result: {},
                missing: [missingFromInvariant(new InvariantError("Dangling reference to missing " + objectOrReference.__ref + " object"), context)],
            };
        }
        var variables = context.variables, policies = context.policies, store = context.store;
        var objectsToMerge = [];
        var finalResult = { result: null };
        var typename = store.getFieldValue(objectOrReference, "__typename");
        if (this.config.addTypename &&
            typeof typename === "string" &&
            !policies.rootIdsByTypename[typename]) {
            objectsToMerge.push({ __typename: typename });
        }
        function getMissing() {
            return finalResult.missing || (finalResult.missing = []);
        }
        function handleMissing(result) {
            var _a;
            if (result.missing)
                (_a = getMissing()).push.apply(_a, result.missing);
            return result.result;
        }
        var workSet = new Set(selectionSet.selections);
        workSet.forEach(function (selection) {
            var _a;
            if (!shouldInclude(selection, variables))
                return;
            if (isField(selection)) {
                var fieldValue = policies.readField({
                    fieldName: selection.name.value,
                    field: selection,
                    variables: context.variables,
                    from: objectOrReference,
                }, context);
                var resultName = resultKeyNameFromField(selection);
                context.path.push(resultName);
                var wasClientOnly = context.clientOnly;
                context.clientOnly = wasClientOnly || !!(selection.directives &&
                    selection.directives.some(function (d) { return d.name.value === "client"; }));
                if (fieldValue === void 0) {
                    if (!addTypenameToDocument.added(selection)) {
                        getMissing().push(missingFromInvariant(new InvariantError("Can't find field '" + selection.name.value + "' on " + (isReference(objectOrReference)
                            ? objectOrReference.__ref + " object"
                            : "object " + JSON.stringify(objectOrReference, null, 2))), context));
                    }
                }
                else if (Array.isArray(fieldValue)) {
                    fieldValue = handleMissing(_this.executeSubSelectedArray({
                        field: selection,
                        array: fieldValue,
                        context: context,
                    }));
                }
                else if (!selection.selectionSet) {
                    {
                        assertSelectionSetForIdValue(context.store, selection, fieldValue);
                        maybeDeepFreeze(fieldValue);
                    }
                }
                else if (fieldValue != null) {
                    fieldValue = handleMissing(_this.executeSelectionSet({
                        selectionSet: selection.selectionSet,
                        objectOrReference: fieldValue,
                        context: context,
                    }));
                }
                if (fieldValue !== void 0) {
                    objectsToMerge.push((_a = {}, _a[resultName] = fieldValue, _a));
                }
                context.clientOnly = wasClientOnly;
                invariant$1(context.path.pop() === resultName);
            }
            else {
                var fragment = getFragmentFromSelection(selection, context.fragmentMap);
                if (fragment && policies.fragmentMatches(fragment, typename)) {
                    fragment.selectionSet.selections.forEach(workSet.add, workSet);
                }
            }
        });
        finalResult.result = mergeDeepArray(objectsToMerge);
        {
            Object.freeze(finalResult.result);
        }
        this.knownResults.set(finalResult.result, selectionSet);
        return finalResult;
    };
    StoreReader.prototype.execSubSelectedArrayImpl = function (_a) {
        var _this = this;
        var field = _a.field, array = _a.array, context = _a.context;
        var missing;
        function handleMissing(childResult, i) {
            if (childResult.missing) {
                missing = missing || [];
                missing.push.apply(missing, childResult.missing);
            }
            invariant$1(context.path.pop() === i);
            return childResult.result;
        }
        if (field.selectionSet) {
            array = array.filter(context.store.canRead);
        }
        array = array.map(function (item, i) {
            if (item === null) {
                return null;
            }
            context.path.push(i);
            if (Array.isArray(item)) {
                return handleMissing(_this.executeSubSelectedArray({
                    field: field,
                    array: item,
                    context: context,
                }), i);
            }
            if (field.selectionSet) {
                return handleMissing(_this.executeSelectionSet({
                    selectionSet: field.selectionSet,
                    objectOrReference: item,
                    context: context,
                }), i);
            }
            {
                assertSelectionSetForIdValue(context.store, field, item);
            }
            invariant$1(context.path.pop() === i);
            return item;
        });
        {
            Object.freeze(array);
        }
        return { result: array, missing: missing };
    };
    return StoreReader;
}());
function assertSelectionSetForIdValue(store, field, fieldValue) {
    if (!field.selectionSet) {
        var workSet_1 = new Set([fieldValue]);
        workSet_1.forEach(function (value) {
            if (value && typeof value === "object") {
                invariant$1(!isReference(value), "Missing selection set for object of type " + getTypenameFromStoreObject(store, value) + " returned for query field " + field.name.value);
                Object.values(value).forEach(workSet_1.add, workSet_1);
            }
        });
    }
}

var StoreWriter = (function () {
    function StoreWriter(cache, reader) {
        this.cache = cache;
        this.reader = reader;
    }
    StoreWriter.prototype.writeToStore = function (_a) {
        var query = _a.query, result = _a.result, dataId = _a.dataId, store = _a.store, variables = _a.variables;
        var operationDefinition = getOperationDefinition(query);
        var merger = makeProcessedFieldsMerger();
        variables = __assign$1(__assign$1({}, getDefaultValues(operationDefinition)), variables);
        var ref = this.processSelectionSet({
            result: result || Object.create(null),
            dataId: dataId,
            selectionSet: operationDefinition.selectionSet,
            mergeTree: { map: new Map },
            context: {
                store: store,
                written: Object.create(null),
                merge: function (existing, incoming) {
                    return merger.merge(existing, incoming);
                },
                variables: variables,
                varString: JSON.stringify(variables),
                fragmentMap: createFragmentMap(getFragmentDefinitions(query)),
            },
        });
        if (!isReference(ref)) {
            throw new InvariantError("Could not identify object " + JSON.stringify(result));
        }
        store.retain(ref.__ref);
        return ref;
    };
    StoreWriter.prototype.processSelectionSet = function (_a) {
        var _this = this;
        var dataId = _a.dataId, result = _a.result, selectionSet = _a.selectionSet, context = _a.context, mergeTree = _a.mergeTree;
        var policies = this.cache.policies;
        var _b = policies.identify(result, selectionSet, context.fragmentMap), id = _b[0], keyObject = _b[1];
        dataId = dataId || id;
        if ("string" === typeof dataId) {
            var sets = context.written[dataId] || (context.written[dataId] = []);
            var ref = makeReference(dataId);
            if (sets.indexOf(selectionSet) >= 0)
                return ref;
            sets.push(selectionSet);
            if (this.reader && this.reader.isFresh(result, ref, selectionSet, context)) {
                return ref;
            }
        }
        var incomingFields = Object.create(null);
        if (keyObject) {
            incomingFields = context.merge(incomingFields, keyObject);
        }
        var typename = (dataId && policies.rootTypenamesById[dataId]) ||
            getTypenameFromResult(result, selectionSet, context.fragmentMap) ||
            (dataId && context.store.get(dataId, "__typename"));
        if ("string" === typeof typename) {
            incomingFields.__typename = typename;
        }
        var workSet = new Set(selectionSet.selections);
        workSet.forEach(function (selection) {
            var _a;
            if (!shouldInclude(selection, context.variables))
                return;
            if (isField(selection)) {
                var resultFieldKey = resultKeyNameFromField(selection);
                var value = result[resultFieldKey];
                if (typeof value !== 'undefined') {
                    var storeFieldName = policies.getStoreFieldName({
                        typename: typename,
                        fieldName: selection.name.value,
                        field: selection,
                        variables: context.variables,
                    });
                    var childTree = getChildMergeTree(mergeTree, storeFieldName);
                    var incomingValue = _this.processFieldValue(value, selection, context, childTree);
                    var childTypename = selection.selectionSet
                        && context.store.getFieldValue(incomingValue, "__typename")
                        || void 0;
                    var merge = policies.getMergeFunction(typename, selection.name.value, childTypename);
                    if (merge) {
                        childTree.info = {
                            field: selection,
                            typename: typename,
                            merge: merge,
                        };
                    }
                    else {
                        maybeRecycleChildMergeTree(mergeTree, storeFieldName);
                    }
                    incomingFields = context.merge(incomingFields, (_a = {},
                        _a[storeFieldName] = incomingValue,
                        _a));
                }
                else if (policies.usingPossibleTypes &&
                    !hasDirectives(["defer", "client"], selection)) {
                    throw new InvariantError("Missing field '" + resultFieldKey + "' in " + JSON.stringify(result, null, 2).substring(0, 100));
                }
            }
            else {
                var fragment = getFragmentFromSelection(selection, context.fragmentMap);
                if (fragment &&
                    policies.fragmentMatches(fragment, typename, result, context.variables)) {
                    fragment.selectionSet.selections.forEach(workSet.add, workSet);
                }
            }
        });
        if ("string" === typeof dataId) {
            var entityRef_1 = makeReference(dataId);
            if (mergeTree.map.size) {
                incomingFields = this.applyMerges(mergeTree, entityRef_1, incomingFields, context);
            }
            {
                var hasSelectionSet_1 = function (storeFieldName) {
                    return fieldsWithSelectionSets_1.has(fieldNameFromStoreName(storeFieldName));
                };
                var fieldsWithSelectionSets_1 = new Set();
                workSet.forEach(function (selection) {
                    if (isField(selection) && selection.selectionSet) {
                        fieldsWithSelectionSets_1.add(selection.name.value);
                    }
                });
                var hasMergeFunction_1 = function (storeFieldName) {
                    var childTree = mergeTree.map.get(storeFieldName);
                    return Boolean(childTree && childTree.info && childTree.info.merge);
                };
                Object.keys(incomingFields).forEach(function (storeFieldName) {
                    if (hasSelectionSet_1(storeFieldName) &&
                        !hasMergeFunction_1(storeFieldName)) {
                        warnAboutDataLoss(entityRef_1, incomingFields, storeFieldName, context.store);
                    }
                });
            }
            context.store.merge(dataId, incomingFields);
            return entityRef_1;
        }
        return incomingFields;
    };
    StoreWriter.prototype.processFieldValue = function (value, field, context, mergeTree) {
        var _this = this;
        if (!field.selectionSet || value === null) {
            return cloneDeep(value);
        }
        if (Array.isArray(value)) {
            return value.map(function (item, i) {
                var value = _this.processFieldValue(item, field, context, getChildMergeTree(mergeTree, i));
                maybeRecycleChildMergeTree(mergeTree, i);
                return value;
            });
        }
        return this.processSelectionSet({
            result: value,
            selectionSet: field.selectionSet,
            context: context,
            mergeTree: mergeTree,
        });
    };
    StoreWriter.prototype.applyMerges = function (mergeTree, existing, incoming, context, getStorageArgs) {
        var _a;
        var _this = this;
        if (mergeTree.map.size && !isReference(incoming)) {
            var e_1 = (!Array.isArray(incoming) &&
                (isReference(existing) || storeValueIsStoreObject(existing))) ? existing : void 0;
            var i_1 = incoming;
            if (e_1 && !getStorageArgs) {
                getStorageArgs = [isReference(e_1) ? e_1.__ref : e_1];
            }
            var changedFields_1;
            var getValue_1 = function (from, name) {
                return Array.isArray(from)
                    ? (typeof name === "number" ? from[name] : void 0)
                    : context.store.getFieldValue(from, String(name));
            };
            mergeTree.map.forEach(function (childTree, storeFieldName) {
                if (getStorageArgs) {
                    getStorageArgs.push(storeFieldName);
                }
                var eVal = getValue_1(e_1, storeFieldName);
                var iVal = getValue_1(i_1, storeFieldName);
                var aVal = _this.applyMerges(childTree, eVal, iVal, context, getStorageArgs);
                if (aVal !== iVal) {
                    changedFields_1 = changedFields_1 || new Map;
                    changedFields_1.set(storeFieldName, aVal);
                }
                if (getStorageArgs) {
                    invariant$1(getStorageArgs.pop() === storeFieldName);
                }
            });
            if (changedFields_1) {
                incoming = (Array.isArray(i_1) ? i_1.slice(0) : __assign$1({}, i_1));
                changedFields_1.forEach(function (value, name) {
                    incoming[name] = value;
                });
            }
        }
        if (mergeTree.info) {
            return this.cache.policies.runMergeFunction(existing, incoming, mergeTree.info, context, getStorageArgs && (_a = context.store).getStorage.apply(_a, getStorageArgs));
        }
        return incoming;
    };
    return StoreWriter;
}());
var emptyMergeTreePool = [];
function getChildMergeTree(_a, name) {
    var map = _a.map;
    if (!map.has(name)) {
        map.set(name, emptyMergeTreePool.pop() || { map: new Map });
    }
    return map.get(name);
}
function maybeRecycleChildMergeTree(_a, name) {
    var map = _a.map;
    var childTree = map.get(name);
    if (childTree &&
        !childTree.info &&
        !childTree.map.size) {
        emptyMergeTreePool.push(childTree);
        map.delete(name);
    }
}
var warnings = new Set();
function warnAboutDataLoss(existingRef, incomingObj, storeFieldName, store) {
    var getChild = function (objOrRef) {
        var child = store.getFieldValue(objOrRef, storeFieldName);
        return typeof child === "object" && child;
    };
    var existing = getChild(existingRef);
    if (!existing)
        return;
    var incoming = getChild(incomingObj);
    if (!incoming)
        return;
    if (isReference(existing))
        return;
    if (equal(existing, incoming))
        return;
    if (Object.keys(existing).every(function (key) { return store.getFieldValue(incoming, key) !== void 0; })) {
        return;
    }
    var parentType = store.getFieldValue(existingRef, "__typename") ||
        store.getFieldValue(incomingObj, "__typename");
    var fieldName = fieldNameFromStoreName(storeFieldName);
    var typeDotName = parentType + "." + fieldName;
    if (warnings.has(typeDotName))
        return;
    warnings.add(typeDotName);
    var childTypenames = [];
    if (!Array.isArray(existing) &&
        !Array.isArray(incoming)) {
        [existing, incoming].forEach(function (child) {
            var typename = store.getFieldValue(child, "__typename");
            if (typeof typename === "string" &&
                !childTypenames.includes(typename)) {
                childTypenames.push(typename);
            }
        });
    }
    invariant$1.warn("Cache data may be lost when replacing the " + fieldName + " field of a " + parentType + " object.\n\nTo address this problem (which is not a bug in Apollo Client), " + (childTypenames.length
        ? "either ensure all objects of type " +
            childTypenames.join(" and ") + " have an ID or a custom merge function, or "
        : "") + "define a custom merge function for the " + typeDotName + " field, so InMemoryCache can safely merge these objects:\n\n  existing: " + JSON.stringify(existing).slice(0, 1000) + "\n  incoming: " + JSON.stringify(incoming).slice(0, 1000) + "\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n");
}

// This currentContext variable will only be used if the makeSlotClass
// function is called, which happens only if this is the first copy of the
// @wry/context package to be imported.
var currentContext = null;
// This unique internal object is used to denote the absence of a value
// for a given Slot, and is never exposed to outside code.
var MISSING_VALUE = {};
var idCounter = 1;
// Although we can't do anything about the cost of duplicated code from
// accidentally bundling multiple copies of the @wry/context package, we can
// avoid creating the Slot class more than once using makeSlotClass.
var makeSlotClass = function () { return /** @class */ (function () {
    function Slot() {
        // If you have a Slot object, you can find out its slot.id, but you cannot
        // guess the slot.id of a Slot you don't have access to, thanks to the
        // randomized suffix.
        this.id = [
            "slot",
            idCounter++,
            Date.now(),
            Math.random().toString(36).slice(2),
        ].join(":");
    }
    Slot.prototype.hasValue = function () {
        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {
            // We use the Slot object iself as a key to its value, which means the
            // value cannot be obtained without a reference to the Slot object.
            if (this.id in context_1.slots) {
                var value = context_1.slots[this.id];
                if (value === MISSING_VALUE)
                    break;
                if (context_1 !== currentContext) {
                    // Cache the value in currentContext.slots so the next lookup will
                    // be faster. This caching is safe because the tree of contexts and
                    // the values of the slots are logically immutable.
                    currentContext.slots[this.id] = value;
                }
                return true;
            }
        }
        if (currentContext) {
            // If a value was not found for this Slot, it's never going to be found
            // no matter how many times we look it up, so we might as well cache
            // the absence of the value, too.
            currentContext.slots[this.id] = MISSING_VALUE;
        }
        return false;
    };
    Slot.prototype.getValue = function () {
        if (this.hasValue()) {
            return currentContext.slots[this.id];
        }
    };
    Slot.prototype.withValue = function (value, callback, 
    // Given the prevalence of arrow functions, specifying arguments is likely
    // to be much more common than specifying `this`, hence this ordering:
    args, thisArg) {
        var _a;
        var slots = (_a = {
                __proto__: null
            },
            _a[this.id] = value,
            _a);
        var parent = currentContext;
        currentContext = { parent: parent, slots: slots };
        try {
            // Function.prototype.apply allows the arguments array argument to be
            // omitted or undefined, so args! is fine here.
            return callback.apply(thisArg, args);
        }
        finally {
            currentContext = parent;
        }
    };
    // Capture the current context and wrap a callback function so that it
    // reestablishes the captured context when called.
    Slot.bind = function (callback) {
        var context = currentContext;
        return function () {
            var saved = currentContext;
            try {
                currentContext = context;
                return callback.apply(this, arguments);
            }
            finally {
                currentContext = saved;
            }
        };
    };
    // Immediately run a callback function without any captured context.
    Slot.noContext = function (callback, 
    // Given the prevalence of arrow functions, specifying arguments is likely
    // to be much more common than specifying `this`, hence this ordering:
    args, thisArg) {
        if (currentContext) {
            var saved = currentContext;
            try {
                currentContext = null;
                // Function.prototype.apply allows the arguments array argument to be
                // omitted or undefined, so args! is fine here.
                return callback.apply(thisArg, args);
            }
            finally {
                currentContext = saved;
            }
        }
        else {
            return callback.apply(thisArg, args);
        }
    };
    return Slot;
}()); };
// We store a single global implementation of the Slot class as a permanent
// non-enumerable symbol property of the Array constructor. This obfuscation
// does nothing to prevent access to the Slot class, but at least it ensures
// the implementation (i.e. currentContext) cannot be tampered with, and all
// copies of the @wry/context package (hopefully just one) will share the
// same Slot implementation. Since the first copy of the @wry/context package
// to be imported wins, this technique imposes a very high cost for any
// future breaking changes to the Slot class.
var globalKey = "@wry/context:Slot";
var host = Array;
var Slot = host[globalKey] || function () {
    var Slot = makeSlotClass();
    try {
        Object.defineProperty(host, globalKey, {
            value: host[globalKey] = Slot,
            enumerable: false,
            writable: false,
            configurable: false,
        });
    }
    finally {
        return Slot;
    }
}();

Slot.bind; Slot.noContext;

var cacheSlot = new Slot();
function consumeAndIterate(set, callback) {
    if (set.size) {
        var items_1 = [];
        set.forEach(function (item) { return items_1.push(item); });
        set.clear();
        items_1.forEach(callback);
    }
}
var cacheInfoMap = new WeakMap();
function getCacheInfo(cache) {
    var info = cacheInfoMap.get(cache);
    if (!info) {
        cacheInfoMap.set(cache, info = {
            vars: new Set,
            dep: dep(),
        });
    }
    return info;
}
function forgetCache(cache) {
    getCacheInfo(cache).vars.forEach(function (rv) { return rv.forgetCache(cache); });
}
function recallCache(cache) {
    getCacheInfo(cache).vars.forEach(function (rv) { return rv.attachCache(cache); });
}
function makeVar(value) {
    var caches = new Set();
    var listeners = new Set();
    var rv = function (newValue) {
        if (arguments.length > 0) {
            if (value !== newValue) {
                value = newValue;
                caches.forEach(function (cache) {
                    getCacheInfo(cache).dep.dirty(rv);
                    broadcast(cache);
                });
                consumeAndIterate(listeners, function (listener) { return listener(value); });
            }
        }
        else {
            var cache = cacheSlot.getValue();
            if (cache) {
                attach(cache);
                getCacheInfo(cache).dep(rv);
            }
        }
        return value;
    };
    rv.onNextChange = function (listener) {
        listeners.add(listener);
        return function () {
            listeners.delete(listener);
        };
    };
    var attach = rv.attachCache = function (cache) {
        caches.add(cache);
        getCacheInfo(cache).vars.add(rv);
        return rv;
    };
    rv.forgetCache = function (cache) { return caches.delete(cache); };
    return rv;
}
function broadcast(cache) {
    if (cache.broadcastWatches) {
        cache.broadcastWatches();
    }
}

function argsFromFieldSpecifier(spec) {
    return spec.args !== void 0 ? spec.args :
        spec.field ? argumentsObjectFromField(spec.field, spec.variables) : null;
}
var defaultDataIdFromObject = function (_a, context) {
    var __typename = _a.__typename, id = _a.id, _id = _a._id;
    if (typeof __typename === "string") {
        if (context) {
            context.keyObject =
                id !== void 0 ? { id: id } :
                    _id !== void 0 ? { _id: _id } :
                        void 0;
        }
        if (id === void 0)
            id = _id;
        if (id !== void 0) {
            return __typename + ":" + ((typeof id === "number" ||
                typeof id === "string") ? id : JSON.stringify(id));
        }
    }
};
var nullKeyFieldsFn = function () { return void 0; };
var simpleKeyArgsFn = function (_args, context) { return context.fieldName; };
var mergeTrueFn = function (existing, incoming, _a) {
    var mergeObjects = _a.mergeObjects;
    return mergeObjects(existing, incoming);
};
var mergeFalseFn = function (_, incoming) { return incoming; };
var Policies = (function () {
    function Policies(config) {
        this.config = config;
        this.typePolicies = Object.create(null);
        this.toBeAdded = Object.create(null);
        this.supertypeMap = new Map();
        this.fuzzySubtypes = new Map();
        this.rootIdsByTypename = Object.create(null);
        this.rootTypenamesById = Object.create(null);
        this.usingPossibleTypes = false;
        this.config = __assign$1({ dataIdFromObject: defaultDataIdFromObject }, config);
        this.cache = this.config.cache;
        this.setRootTypename("Query");
        this.setRootTypename("Mutation");
        this.setRootTypename("Subscription");
        if (config.possibleTypes) {
            this.addPossibleTypes(config.possibleTypes);
        }
        if (config.typePolicies) {
            this.addTypePolicies(config.typePolicies);
        }
    }
    Policies.prototype.identify = function (object, selectionSet, fragmentMap) {
        var typename = selectionSet && fragmentMap
            ? getTypenameFromResult(object, selectionSet, fragmentMap)
            : object.__typename;
        if (typename === this.rootTypenamesById.ROOT_QUERY) {
            return ["ROOT_QUERY"];
        }
        var context = {
            typename: typename,
            selectionSet: selectionSet,
            fragmentMap: fragmentMap,
        };
        var id;
        var policy = typename && this.getTypePolicy(typename);
        var keyFn = policy && policy.keyFn || this.config.dataIdFromObject;
        while (keyFn) {
            var specifierOrId = keyFn(object, context);
            if (Array.isArray(specifierOrId)) {
                keyFn = keyFieldsFnFromSpecifier(specifierOrId);
            }
            else {
                id = specifierOrId;
                break;
            }
        }
        id = id && String(id);
        return context.keyObject ? [id, context.keyObject] : [id];
    };
    Policies.prototype.addTypePolicies = function (typePolicies) {
        var _this = this;
        Object.keys(typePolicies).forEach(function (typename) {
            var _a = typePolicies[typename], queryType = _a.queryType, mutationType = _a.mutationType, subscriptionType = _a.subscriptionType, incoming = __rest(_a, ["queryType", "mutationType", "subscriptionType"]);
            if (queryType)
                _this.setRootTypename("Query", typename);
            if (mutationType)
                _this.setRootTypename("Mutation", typename);
            if (subscriptionType)
                _this.setRootTypename("Subscription", typename);
            if (hasOwn.call(_this.toBeAdded, typename)) {
                _this.toBeAdded[typename].push(incoming);
            }
            else {
                _this.toBeAdded[typename] = [incoming];
            }
        });
    };
    Policies.prototype.updateTypePolicy = function (typename, incoming) {
        var _this = this;
        var existing = this.getTypePolicy(typename);
        var keyFields = incoming.keyFields, fields = incoming.fields;
        function setMerge(existing, merge) {
            existing.merge =
                typeof merge === "function" ? merge :
                    merge === true ? mergeTrueFn :
                        merge === false ? mergeFalseFn :
                            existing.merge;
        }
        setMerge(existing, incoming.merge);
        existing.keyFn =
            keyFields === false ? nullKeyFieldsFn :
                Array.isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) :
                    typeof keyFields === "function" ? keyFields :
                        existing.keyFn;
        if (fields) {
            Object.keys(fields).forEach(function (fieldName) {
                var existing = _this.getFieldPolicy(typename, fieldName, true);
                var incoming = fields[fieldName];
                if (typeof incoming === "function") {
                    existing.read = incoming;
                }
                else {
                    var keyArgs = incoming.keyArgs, read = incoming.read, merge = incoming.merge;
                    existing.keyFn =
                        keyArgs === false ? simpleKeyArgsFn :
                            Array.isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) :
                                typeof keyArgs === "function" ? keyArgs :
                                    existing.keyFn;
                    if (typeof read === "function") {
                        existing.read = read;
                    }
                    setMerge(existing, merge);
                }
                if (existing.read && existing.merge) {
                    existing.keyFn = existing.keyFn || simpleKeyArgsFn;
                }
            });
        }
    };
    Policies.prototype.setRootTypename = function (which, typename) {
        if (typename === void 0) { typename = which; }
        var rootId = "ROOT_" + which.toUpperCase();
        var old = this.rootTypenamesById[rootId];
        if (typename !== old) {
            invariant$1(!old || old === which, "Cannot change root " + which + " __typename more than once");
            if (old)
                delete this.rootIdsByTypename[old];
            this.rootIdsByTypename[typename] = rootId;
            this.rootTypenamesById[rootId] = typename;
        }
    };
    Policies.prototype.addPossibleTypes = function (possibleTypes) {
        var _this = this;
        this.usingPossibleTypes = true;
        Object.keys(possibleTypes).forEach(function (supertype) {
            _this.getSupertypeSet(supertype, true);
            possibleTypes[supertype].forEach(function (subtype) {
                _this.getSupertypeSet(subtype, true).add(supertype);
                var match = subtype.match(TypeOrFieldNameRegExp);
                if (!match || match[0] !== subtype) {
                    _this.fuzzySubtypes.set(subtype, new RegExp(subtype));
                }
            });
        });
    };
    Policies.prototype.getTypePolicy = function (typename) {
        var _this = this;
        if (!hasOwn.call(this.typePolicies, typename)) {
            var policy_1 = this.typePolicies[typename] = Object.create(null);
            policy_1.fields = Object.create(null);
            var supertypes = this.supertypeMap.get(typename);
            if (supertypes && supertypes.size) {
                supertypes.forEach(function (supertype) {
                    var _a = _this.getTypePolicy(supertype), fields = _a.fields, rest = __rest(_a, ["fields"]);
                    Object.assign(policy_1, rest);
                    Object.assign(policy_1.fields, fields);
                });
            }
        }
        var inbox = this.toBeAdded[typename];
        if (inbox && inbox.length) {
            this.updateTypePolicy(typename, compact.apply(void 0, inbox.splice(0)));
        }
        return this.typePolicies[typename];
    };
    Policies.prototype.getFieldPolicy = function (typename, fieldName, createIfMissing) {
        if (typename) {
            var fieldPolicies = this.getTypePolicy(typename).fields;
            return fieldPolicies[fieldName] || (createIfMissing && (fieldPolicies[fieldName] = Object.create(null)));
        }
    };
    Policies.prototype.getSupertypeSet = function (subtype, createIfMissing) {
        var supertypeSet = this.supertypeMap.get(subtype);
        if (!supertypeSet && createIfMissing) {
            this.supertypeMap.set(subtype, supertypeSet = new Set());
        }
        return supertypeSet;
    };
    Policies.prototype.fragmentMatches = function (fragment, typename, result, variables) {
        var _this = this;
        if (!fragment.typeCondition)
            return true;
        if (!typename)
            return false;
        var supertype = fragment.typeCondition.name.value;
        if (typename === supertype)
            return true;
        if (this.usingPossibleTypes &&
            this.supertypeMap.has(supertype)) {
            var typenameSupertypeSet = this.getSupertypeSet(typename, true);
            var workQueue_1 = [typenameSupertypeSet];
            var maybeEnqueue_1 = function (subtype) {
                var supertypeSet = _this.getSupertypeSet(subtype, false);
                if (supertypeSet &&
                    supertypeSet.size &&
                    workQueue_1.indexOf(supertypeSet) < 0) {
                    workQueue_1.push(supertypeSet);
                }
            };
            var needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);
            var checkingFuzzySubtypes = false;
            for (var i = 0; i < workQueue_1.length; ++i) {
                var supertypeSet = workQueue_1[i];
                if (supertypeSet.has(supertype)) {
                    if (!typenameSupertypeSet.has(supertype)) {
                        if (checkingFuzzySubtypes) {
                            invariant$1.warn("Inferring subtype " + typename + " of supertype " + supertype);
                        }
                        typenameSupertypeSet.add(supertype);
                    }
                    return true;
                }
                supertypeSet.forEach(maybeEnqueue_1);
                if (needToCheckFuzzySubtypes &&
                    i === workQueue_1.length - 1 &&
                    selectionSetMatchesResult(fragment.selectionSet, result, variables)) {
                    needToCheckFuzzySubtypes = false;
                    checkingFuzzySubtypes = true;
                    this.fuzzySubtypes.forEach(function (regExp, fuzzyString) {
                        var match = typename.match(regExp);
                        if (match && match[0] === typename) {
                            maybeEnqueue_1(fuzzyString);
                        }
                    });
                }
            }
        }
        return false;
    };
    Policies.prototype.hasKeyArgs = function (typename, fieldName) {
        var policy = this.getFieldPolicy(typename, fieldName, false);
        return !!(policy && policy.keyFn);
    };
    Policies.prototype.getStoreFieldName = function (fieldSpec) {
        var typename = fieldSpec.typename, fieldName = fieldSpec.fieldName;
        var policy = this.getFieldPolicy(typename, fieldName, false);
        var storeFieldName;
        var keyFn = policy && policy.keyFn;
        if (keyFn && typename) {
            var context = {
                typename: typename,
                fieldName: fieldName,
                field: fieldSpec.field || null,
                variables: fieldSpec.variables,
            };
            var args = argsFromFieldSpecifier(fieldSpec);
            while (keyFn) {
                var specifierOrString = keyFn(args, context);
                if (Array.isArray(specifierOrString)) {
                    keyFn = keyArgsFnFromSpecifier(specifierOrString);
                }
                else {
                    storeFieldName = specifierOrString || fieldName;
                    break;
                }
            }
        }
        if (storeFieldName === void 0) {
            storeFieldName = fieldSpec.field
                ? storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)
                : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));
        }
        return fieldName === fieldNameFromStoreName(storeFieldName)
            ? storeFieldName
            : fieldName + ":" + storeFieldName;
    };
    Policies.prototype.readField = function (options, context) {
        var objectOrReference = options.from;
        if (!objectOrReference)
            return;
        var nameOrField = options.field || options.fieldName;
        if (!nameOrField)
            return;
        if (options.typename === void 0) {
            var typename = context.store.getFieldValue(objectOrReference, "__typename");
            if (typename)
                options.typename = typename;
        }
        var storeFieldName = this.getStoreFieldName(options);
        var fieldName = fieldNameFromStoreName(storeFieldName);
        var existing = context.store.getFieldValue(objectOrReference, storeFieldName);
        var policy = this.getFieldPolicy(options.typename, fieldName, false);
        var read = policy && policy.read;
        if (read) {
            var readOptions = makeFieldFunctionOptions(this, objectOrReference, options, context, context.store.getStorage(isReference(objectOrReference)
                ? objectOrReference.__ref
                : objectOrReference, storeFieldName));
            return cacheSlot.withValue(this.cache, read, [existing, readOptions]);
        }
        return existing;
    };
    Policies.prototype.getMergeFunction = function (parentTypename, fieldName, childTypename) {
        var policy = this.getFieldPolicy(parentTypename, fieldName, false);
        var merge = policy && policy.merge;
        if (!merge && childTypename) {
            policy = this.getTypePolicy(childTypename);
            merge = policy && policy.merge;
        }
        return merge;
    };
    Policies.prototype.runMergeFunction = function (existing, incoming, _a, context, storage) {
        var field = _a.field, typename = _a.typename, merge = _a.merge;
        if (merge === mergeTrueFn) {
            return makeMergeObjectsFunction(context.store.getFieldValue)(existing, incoming);
        }
        if (merge === mergeFalseFn) {
            return incoming;
        }
        return merge(existing, incoming, makeFieldFunctionOptions(this, void 0, { typename: typename, fieldName: field.name.value, field: field, variables: context.variables }, context, storage || Object.create(null)));
    };
    return Policies;
}());
function makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, context, storage) {
    var storeFieldName = policies.getStoreFieldName(fieldSpec);
    var fieldName = fieldNameFromStoreName(storeFieldName);
    var variables = fieldSpec.variables || context.variables;
    var _a = context.store, getFieldValue = _a.getFieldValue, toReference = _a.toReference, canRead = _a.canRead;
    return {
        args: argsFromFieldSpecifier(fieldSpec),
        field: fieldSpec.field || null,
        fieldName: fieldName,
        storeFieldName: storeFieldName,
        variables: variables,
        isReference: isReference,
        toReference: toReference,
        storage: storage,
        cache: policies.cache,
        canRead: canRead,
        readField: function (fieldNameOrOptions, from) {
            var options = typeof fieldNameOrOptions === "string" ? {
                fieldName: fieldNameOrOptions,
                from: from,
            } : __assign$1({}, fieldNameOrOptions);
            if (void 0 === options.from) {
                options.from = objectOrReference;
            }
            if (void 0 === options.variables) {
                options.variables = variables;
            }
            return policies.readField(options, context);
        },
        mergeObjects: makeMergeObjectsFunction(getFieldValue),
    };
}
function makeMergeObjectsFunction(getFieldValue) {
    return function mergeObjects(existing, incoming) {
        if (Array.isArray(existing) || Array.isArray(incoming)) {
            throw new InvariantError("Cannot automatically merge arrays");
        }
        if (existing && typeof existing === "object" &&
            incoming && typeof incoming === "object") {
            var eType = getFieldValue(existing, "__typename");
            var iType = getFieldValue(incoming, "__typename");
            var typesDiffer = eType && iType && eType !== iType;
            if (typesDiffer ||
                !storeValueIsStoreObject(existing) ||
                !storeValueIsStoreObject(incoming)) {
                return incoming;
            }
            return __assign$1(__assign$1({}, existing), incoming);
        }
        return incoming;
    };
}
function keyArgsFnFromSpecifier(specifier) {
    return function (args, context) {
        return args ? context.fieldName + ":" + JSON.stringify(computeKeyObject(args, specifier, false)) : context.fieldName;
    };
}
function keyFieldsFnFromSpecifier(specifier) {
    var trie = new Trie(canUseWeakMap);
    return function (object, context) {
        var aliasMap;
        if (context.selectionSet && context.fragmentMap) {
            var info = trie.lookupArray([
                context.selectionSet,
                context.fragmentMap,
            ]);
            aliasMap = info.aliasMap || (info.aliasMap = makeAliasMap(context.selectionSet, context.fragmentMap));
        }
        var keyObject = context.keyObject =
            computeKeyObject(object, specifier, true, aliasMap);
        return context.typename + ":" + JSON.stringify(keyObject);
    };
}
function makeAliasMap(selectionSet, fragmentMap) {
    var map = Object.create(null);
    var workQueue = new Set([selectionSet]);
    workQueue.forEach(function (selectionSet) {
        selectionSet.selections.forEach(function (selection) {
            if (isField(selection)) {
                if (selection.alias) {
                    var responseKey = selection.alias.value;
                    var storeKey = selection.name.value;
                    if (storeKey !== responseKey) {
                        var aliases = map.aliases || (map.aliases = Object.create(null));
                        aliases[storeKey] = responseKey;
                    }
                }
                if (selection.selectionSet) {
                    var subsets = map.subsets || (map.subsets = Object.create(null));
                    subsets[selection.name.value] =
                        makeAliasMap(selection.selectionSet, fragmentMap);
                }
            }
            else {
                var fragment = getFragmentFromSelection(selection, fragmentMap);
                if (fragment) {
                    workQueue.add(fragment.selectionSet);
                }
            }
        });
    });
    return map;
}
function computeKeyObject(response, specifier, strict, aliasMap) {
    var keyObj = Object.create(null);
    var prevKey;
    specifier.forEach(function (s) {
        if (Array.isArray(s)) {
            if (typeof prevKey === "string") {
                var subsets = aliasMap && aliasMap.subsets;
                var subset = subsets && subsets[prevKey];
                keyObj[prevKey] = computeKeyObject(response[prevKey], s, strict, subset);
            }
        }
        else {
            var aliases = aliasMap && aliasMap.aliases;
            var responseName = aliases && aliases[s] || s;
            if (hasOwn.call(response, responseName)) {
                keyObj[prevKey = s] = response[responseName];
            }
            else {
                invariant$1(!strict, "Missing field '" + responseName + "' while computing key fields");
                prevKey = void 0;
            }
        }
    });
    return keyObj;
}

var defaultConfig = {
    dataIdFromObject: defaultDataIdFromObject,
    addTypename: true,
    resultCaching: true,
    typePolicies: {},
};
var InMemoryCache = (function (_super) {
    __extends$1(InMemoryCache, _super);
    function InMemoryCache(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this) || this;
        _this.watches = new Set();
        _this.typenameDocumentCache = new Map();
        _this.makeVar = makeVar;
        _this.txCount = 0;
        _this.maybeBroadcastWatch = wrap(function (c, fromOptimisticTransaction) {
            return _this.broadcastWatch.call(_this, c, !!fromOptimisticTransaction);
        }, {
            makeCacheKey: function (c) {
                var store = c.optimistic ? _this.optimisticData : _this.data;
                if (supportsResultCaching(store)) {
                    var optimistic = c.optimistic, rootId = c.rootId, variables = c.variables;
                    return store.makeCacheKey(c.query, c.callback, JSON.stringify({ optimistic: optimistic, rootId: rootId, variables: variables }));
                }
            }
        });
        _this.watchDep = dep();
        _this.config = __assign$1(__assign$1({}, defaultConfig), config);
        _this.addTypename = !!_this.config.addTypename;
        _this.policies = new Policies({
            cache: _this,
            dataIdFromObject: _this.config.dataIdFromObject,
            possibleTypes: _this.config.possibleTypes,
            typePolicies: _this.config.typePolicies,
        });
        _this.data = new EntityStore.Root({
            policies: _this.policies,
            resultCaching: _this.config.resultCaching,
        });
        _this.optimisticData = _this.data;
        _this.storeWriter = new StoreWriter(_this, _this.storeReader = new StoreReader({
            cache: _this,
            addTypename: _this.addTypename,
        }));
        return _this;
    }
    InMemoryCache.prototype.restore = function (data) {
        if (data)
            this.data.replace(data);
        return this;
    };
    InMemoryCache.prototype.extract = function (optimistic) {
        if (optimistic === void 0) { optimistic = false; }
        return (optimistic ? this.optimisticData : this.data).extract();
    };
    InMemoryCache.prototype.read = function (options) {
        var _a = options.returnPartialData, returnPartialData = _a === void 0 ? false : _a;
        try {
            return this.storeReader.diffQueryAgainstStore({
                store: options.optimistic ? this.optimisticData : this.data,
                query: options.query,
                variables: options.variables,
                rootId: options.rootId,
                config: this.config,
                returnPartialData: returnPartialData,
            }).result || null;
        }
        catch (e) {
            if (e instanceof MissingFieldError) {
                return null;
            }
            throw e;
        }
    };
    InMemoryCache.prototype.write = function (options) {
        try {
            ++this.txCount;
            return this.storeWriter.writeToStore({
                store: this.data,
                query: options.query,
                result: options.result,
                dataId: options.dataId,
                variables: options.variables,
            });
        }
        finally {
            if (!--this.txCount && options.broadcast !== false) {
                this.broadcastWatches();
            }
        }
    };
    InMemoryCache.prototype.modify = function (options) {
        if (hasOwn.call(options, "id") && !options.id) {
            return false;
        }
        var store = options.optimistic
            ? this.optimisticData
            : this.data;
        try {
            ++this.txCount;
            return store.modify(options.id || "ROOT_QUERY", options.fields);
        }
        finally {
            if (!--this.txCount && options.broadcast !== false) {
                this.broadcastWatches();
            }
        }
    };
    InMemoryCache.prototype.diff = function (options) {
        return this.storeReader.diffQueryAgainstStore({
            store: options.optimistic ? this.optimisticData : this.data,
            rootId: options.id || "ROOT_QUERY",
            query: options.query,
            variables: options.variables,
            returnPartialData: options.returnPartialData,
            config: this.config,
        });
    };
    InMemoryCache.prototype.watch = function (watch) {
        var _this = this;
        if (!this.watches.size) {
            recallCache(this);
        }
        this.watches.add(watch);
        if (watch.immediate) {
            this.maybeBroadcastWatch(watch);
        }
        return function () {
            if (_this.watches.delete(watch) && !_this.watches.size) {
                forgetCache(_this);
            }
            _this.watchDep.dirty(watch);
            _this.maybeBroadcastWatch.forget(watch);
        };
    };
    InMemoryCache.prototype.gc = function () {
        return this.optimisticData.gc();
    };
    InMemoryCache.prototype.retain = function (rootId, optimistic) {
        return (optimistic ? this.optimisticData : this.data).retain(rootId);
    };
    InMemoryCache.prototype.release = function (rootId, optimistic) {
        return (optimistic ? this.optimisticData : this.data).release(rootId);
    };
    InMemoryCache.prototype.identify = function (object) {
        return isReference(object) ? object.__ref :
            this.policies.identify(object)[0];
    };
    InMemoryCache.prototype.evict = function (options) {
        if (!options.id) {
            if (hasOwn.call(options, "id")) {
                return false;
            }
            options = __assign$1(__assign$1({}, options), { id: "ROOT_QUERY" });
        }
        try {
            ++this.txCount;
            return this.optimisticData.evict(options);
        }
        finally {
            if (!--this.txCount && options.broadcast !== false) {
                this.broadcastWatches();
            }
        }
    };
    InMemoryCache.prototype.reset = function () {
        this.data.clear();
        this.optimisticData = this.data;
        this.broadcastWatches();
        return Promise.resolve();
    };
    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {
        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);
        if (newOptimisticData !== this.optimisticData) {
            this.optimisticData = newOptimisticData;
            this.broadcastWatches();
        }
    };
    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {
        var _this = this;
        var perform = function (layer) {
            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;
            ++_this.txCount;
            if (layer) {
                _this.data = _this.optimisticData = layer;
            }
            try {
                transaction(_this);
            }
            finally {
                --_this.txCount;
                _this.data = data;
                _this.optimisticData = optimisticData;
            }
        };
        var fromOptimisticTransaction = false;
        if (typeof optimisticId === 'string') {
            this.optimisticData = this.optimisticData.addLayer(optimisticId, perform);
            fromOptimisticTransaction = true;
        }
        else if (optimisticId === null) {
            perform(this.data);
        }
        else {
            perform();
        }
        this.broadcastWatches(fromOptimisticTransaction);
    };
    InMemoryCache.prototype.transformDocument = function (document) {
        if (this.addTypename) {
            var result = this.typenameDocumentCache.get(document);
            if (!result) {
                result = addTypenameToDocument(document);
                this.typenameDocumentCache.set(document, result);
                this.typenameDocumentCache.set(result, result);
            }
            return result;
        }
        return document;
    };
    InMemoryCache.prototype.broadcastWatches = function (fromOptimisticTransaction) {
        var _this = this;
        if (!this.txCount) {
            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c, fromOptimisticTransaction); });
        }
    };
    InMemoryCache.prototype.broadcastWatch = function (c, fromOptimisticTransaction) {
        this.watchDep.dirty(c);
        this.watchDep(c);
        var diff = this.diff({
            query: c.query,
            variables: c.variables,
            optimistic: c.optimistic,
        });
        if (c.optimistic && fromOptimisticTransaction) {
            diff.fromOptimisticTransaction = true;
        }
        c.callback(diff);
    };
    return InMemoryCache;
}(ApolloCache));

var LocalState = (function () {
    function LocalState(_a) {
        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;
        this.cache = cache;
        if (client) {
            this.client = client;
        }
        if (resolvers) {
            this.addResolvers(resolvers);
        }
        if (fragmentMatcher) {
            this.setFragmentMatcher(fragmentMatcher);
        }
    }
    LocalState.prototype.addResolvers = function (resolvers) {
        var _this = this;
        this.resolvers = this.resolvers || {};
        if (Array.isArray(resolvers)) {
            resolvers.forEach(function (resolverGroup) {
                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);
            });
        }
        else {
            this.resolvers = mergeDeep(this.resolvers, resolvers);
        }
    };
    LocalState.prototype.setResolvers = function (resolvers) {
        this.resolvers = {};
        this.addResolvers(resolvers);
    };
    LocalState.prototype.getResolvers = function () {
        return this.resolvers || {};
    };
    LocalState.prototype.runResolvers = function (_a) {
        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_c) {
                if (document) {
                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign$1(__assign$1({}, remoteResult), { data: localResult.result })); })];
                }
                return [2, remoteResult];
            });
        });
    };
    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {
        this.fragmentMatcher = fragmentMatcher;
    };
    LocalState.prototype.getFragmentMatcher = function () {
        return this.fragmentMatcher;
    };
    LocalState.prototype.clientQuery = function (document) {
        if (hasDirectives(['client'], document)) {
            if (this.resolvers) {
                return document;
            }
        }
        return null;
    };
    LocalState.prototype.serverQuery = function (document) {
        return removeClientSetsFromDocument(document);
    };
    LocalState.prototype.prepareContext = function (context) {
        var cache = this.cache;
        return __assign$1(__assign$1({}, context), { cache: cache,
            getCacheKey: function (obj) {
                return cache.identify(obj);
            } });
    };
    LocalState.prototype.addExportedVariables = function (document, variables, context) {
        if (variables === void 0) { variables = {}; }
        if (context === void 0) { context = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (document) {
                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign$1(__assign$1({}, variables), data.exportedVariables)); })];
                }
                return [2, __assign$1({}, variables)];
            });
        });
    };
    LocalState.prototype.shouldForceResolvers = function (document) {
        var forceResolvers = false;
        visit(document, {
            Directive: {
                enter: function (node) {
                    if (node.name.value === 'client' && node.arguments) {
                        forceResolvers = node.arguments.some(function (arg) {
                            return arg.name.value === 'always' &&
                                arg.value.kind === 'BooleanValue' &&
                                arg.value.value === true;
                        });
                        if (forceResolvers) {
                            return BREAK;
                        }
                    }
                },
            },
        });
        return forceResolvers;
    };
    LocalState.prototype.buildRootValueFromCache = function (document, variables) {
        return this.cache.diff({
            query: buildQueryFromSelectionSet(document),
            variables: variables,
            returnPartialData: true,
            optimistic: false,
        }).result;
    };
    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {
        if (context === void 0) { context = {}; }
        if (variables === void 0) { variables = {}; }
        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }
        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }
        return __awaiter(this, void 0, void 0, function () {
            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;
            return __generator(this, function (_b) {
                mainDefinition = getMainDefinition(document);
                fragments = getFragmentDefinitions(document);
                fragmentMap = createFragmentMap(fragments);
                definitionOperation = mainDefinition
                    .operation;
                defaultOperationType = definitionOperation
                    ? definitionOperation.charAt(0).toUpperCase() +
                        definitionOperation.slice(1)
                    : 'Query';
                _a = this, cache = _a.cache, client = _a.client;
                execContext = {
                    fragmentMap: fragmentMap,
                    context: __assign$1(__assign$1({}, context), { cache: cache,
                        client: client }),
                    variables: variables,
                    fragmentMatcher: fragmentMatcher,
                    defaultOperationType: defaultOperationType,
                    exportedVariables: {},
                    onlyRunForcedResolvers: onlyRunForcedResolvers,
                };
                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({
                        result: result,
                        exportedVariables: execContext.exportedVariables,
                    }); })];
            });
        });
    };
    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {
        return __awaiter(this, void 0, void 0, function () {
            var fragmentMap, context, variables, resultsToMerge, execute;
            var _this = this;
            return __generator(this, function (_a) {
                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;
                resultsToMerge = [rootValue];
                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {
                    var fragment, typeCondition;
                    return __generator(this, function (_a) {
                        if (!shouldInclude(selection, variables)) {
                            return [2];
                        }
                        if (isField(selection)) {
                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {
                                    var _a;
                                    if (typeof fieldResult !== 'undefined') {
                                        resultsToMerge.push((_a = {},
                                            _a[resultKeyNameFromField(selection)] = fieldResult,
                                            _a));
                                    }
                                })];
                        }
                        if (isInlineFragment(selection)) {
                            fragment = selection;
                        }
                        else {
                            fragment = fragmentMap[selection.name.value];
                            invariant$1(fragment, "No fragment named " + selection.name.value);
                        }
                        if (fragment && fragment.typeCondition) {
                            typeCondition = fragment.typeCondition.name.value;
                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {
                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {
                                        resultsToMerge.push(fragmentResult);
                                    })];
                            }
                        }
                        return [2];
                    });
                }); };
                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {
                        return mergeDeepArray(resultsToMerge);
                    })];
            });
        });
    };
    LocalState.prototype.resolveField = function (field, rootValue, execContext) {
        return __awaiter(this, void 0, void 0, function () {
            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;
            var _this = this;
            return __generator(this, function (_a) {
                variables = execContext.variables;
                fieldName = field.name.value;
                aliasedFieldName = resultKeyNameFromField(field);
                aliasUsed = fieldName !== aliasedFieldName;
                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];
                resultPromise = Promise.resolve(defaultResult);
                if (!execContext.onlyRunForcedResolvers ||
                    this.shouldForceResolvers(field)) {
                    resolverType = rootValue.__typename || execContext.defaultOperationType;
                    resolverMap = this.resolvers && this.resolvers[resolverType];
                    if (resolverMap) {
                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];
                        if (resolve) {
                            resultPromise = Promise.resolve(cacheSlot.withValue(this.cache, resolve, [
                                rootValue,
                                argumentsObjectFromField(field, variables),
                                execContext.context,
                                { field: field, fragmentMap: execContext.fragmentMap },
                            ]));
                        }
                    }
                }
                return [2, resultPromise.then(function (result) {
                        if (result === void 0) { result = defaultResult; }
                        if (field.directives) {
                            field.directives.forEach(function (directive) {
                                if (directive.name.value === 'export' && directive.arguments) {
                                    directive.arguments.forEach(function (arg) {
                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {
                                            execContext.exportedVariables[arg.value.value] = result;
                                        }
                                    });
                                }
                            });
                        }
                        if (!field.selectionSet) {
                            return result;
                        }
                        if (result == null) {
                            return result;
                        }
                        if (Array.isArray(result)) {
                            return _this.resolveSubSelectedArray(field, result, execContext);
                        }
                        if (field.selectionSet) {
                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);
                        }
                    })];
            });
        });
    };
    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {
        var _this = this;
        return Promise.all(result.map(function (item) {
            if (item === null) {
                return null;
            }
            if (Array.isArray(item)) {
                return _this.resolveSubSelectedArray(field, item, execContext);
            }
            if (field.selectionSet) {
                return _this.resolveSelectionSet(field.selectionSet, item, execContext);
            }
        }));
    };
    return LocalState;
}());

var destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();
function wrapDestructiveCacheMethod(cache, methodName) {
    var original = cache[methodName];
    if (typeof original === "function") {
        cache[methodName] = function () {
            destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);
            return original.apply(this, arguments);
        };
    }
}
function cancelNotifyTimeout(info) {
    if (info["notifyTimeout"]) {
        clearTimeout(info["notifyTimeout"]);
        info["notifyTimeout"] = void 0;
    }
}
var QueryInfo = (function () {
    function QueryInfo(cache) {
        this.cache = cache;
        this.listeners = new Set();
        this.document = null;
        this.lastRequestId = 1;
        this.subscriptions = new Set();
        this.stopped = false;
        this.dirty = false;
        this.diff = null;
        this.observableQuery = null;
        if (!destructiveMethodCounts.has(cache)) {
            destructiveMethodCounts.set(cache, 0);
            wrapDestructiveCacheMethod(cache, "evict");
            wrapDestructiveCacheMethod(cache, "modify");
            wrapDestructiveCacheMethod(cache, "reset");
        }
    }
    QueryInfo.prototype.init = function (query) {
        var networkStatus = query.networkStatus || NetworkStatus.loading;
        if (this.variables &&
            this.networkStatus !== NetworkStatus.loading &&
            !equal(this.variables, query.variables)) {
            networkStatus = NetworkStatus.setVariables;
        }
        if (!equal(query.variables, this.variables)) {
            this.diff = null;
        }
        Object.assign(this, {
            document: query.document,
            variables: query.variables,
            networkError: null,
            graphQLErrors: this.graphQLErrors || [],
            networkStatus: networkStatus,
        });
        if (query.observableQuery) {
            this.setObservableQuery(query.observableQuery);
        }
        if (query.lastRequestId) {
            this.lastRequestId = query.lastRequestId;
        }
        return this;
    };
    QueryInfo.prototype.reset = function () {
        cancelNotifyTimeout(this);
        this.diff = null;
        this.dirty = false;
    };
    QueryInfo.prototype.getDiff = function (variables) {
        if (variables === void 0) { variables = this.variables; }
        if (this.diff && equal(variables, this.variables)) {
            return this.diff;
        }
        this.updateWatch(this.variables = variables);
        return this.diff = this.cache.diff({
            query: this.document,
            variables: variables,
            returnPartialData: true,
            optimistic: true,
        });
    };
    QueryInfo.prototype.setDiff = function (diff) {
        var _this = this;
        var oldDiff = this.diff;
        this.diff = diff;
        if (!this.dirty &&
            (diff && diff.result) !== (oldDiff && oldDiff.result)) {
            this.dirty = true;
            if (!this.notifyTimeout) {
                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);
            }
        }
    };
    QueryInfo.prototype.setObservableQuery = function (oq) {
        var _this = this;
        if (oq === this.observableQuery)
            return;
        if (this.oqListener) {
            this.listeners.delete(this.oqListener);
        }
        this.observableQuery = oq;
        if (oq) {
            oq["queryInfo"] = this;
            this.listeners.add(this.oqListener = function () {
                if (_this.getDiff().fromOptimisticTransaction) {
                    oq["observe"]();
                }
                else {
                    oq.reobserve();
                }
            });
        }
        else {
            delete this.oqListener;
        }
    };
    QueryInfo.prototype.notify = function () {
        var _this = this;
        cancelNotifyTimeout(this);
        if (this.shouldNotify()) {
            this.listeners.forEach(function (listener) { return listener(_this); });
        }
        this.dirty = false;
    };
    QueryInfo.prototype.shouldNotify = function () {
        if (!this.dirty || !this.listeners.size) {
            return false;
        }
        if (isNetworkRequestInFlight(this.networkStatus) &&
            this.observableQuery) {
            var fetchPolicy = this.observableQuery.options.fetchPolicy;
            if (fetchPolicy !== "cache-only" &&
                fetchPolicy !== "cache-and-network") {
                return false;
            }
        }
        return true;
    };
    QueryInfo.prototype.stop = function () {
        if (!this.stopped) {
            this.stopped = true;
            this.cancel();
            delete this.cancel;
            this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });
            var oq = this.observableQuery;
            if (oq)
                oq.stopPolling();
        }
    };
    QueryInfo.prototype.cancel = function () { };
    QueryInfo.prototype.updateWatch = function (variables) {
        var _this = this;
        if (variables === void 0) { variables = this.variables; }
        var oq = this.observableQuery;
        if (oq && oq.options.fetchPolicy === "no-cache") {
            return;
        }
        if (!this.lastWatch ||
            this.lastWatch.query !== this.document ||
            !equal(variables, this.lastWatch.variables)) {
            this.cancel();
            this.cancel = this.cache.watch(this.lastWatch = {
                query: this.document,
                variables: variables,
                optimistic: true,
                callback: function (diff) { return _this.setDiff(diff); },
            });
        }
    };
    QueryInfo.prototype.shouldWrite = function (result, variables) {
        var lastWrite = this.lastWrite;
        return !(lastWrite &&
            lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&
            equal(variables, lastWrite.variables) &&
            equal(result.data, lastWrite.result.data));
    };
    QueryInfo.prototype.markResult = function (result, options, allowCacheWrite) {
        var _this = this;
        this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];
        this.reset();
        if (options.fetchPolicy === 'no-cache') {
            this.diff = { result: result.data, complete: true };
        }
        else if (!this.stopped && allowCacheWrite) {
            if (shouldWriteResult(result, options.errorPolicy)) {
                this.cache.performTransaction(function (cache) {
                    if (_this.shouldWrite(result, options.variables)) {
                        cache.writeQuery({
                            query: _this.document,
                            data: result.data,
                            variables: options.variables,
                        });
                        _this.lastWrite = {
                            result: result,
                            variables: options.variables,
                            dmCount: destructiveMethodCounts.get(_this.cache),
                        };
                    }
                    else {
                        if (_this.diff && _this.diff.complete) {
                            result.data = _this.diff.result;
                            return;
                        }
                    }
                    var diff = cache.diff({
                        query: _this.document,
                        variables: options.variables,
                        returnPartialData: true,
                        optimistic: true,
                    });
                    if (!_this.stopped) {
                        _this.updateWatch(options.variables);
                    }
                    _this.diff = diff;
                    if (diff.complete) {
                        result.data = diff.result;
                    }
                });
            }
            else {
                this.lastWrite = void 0;
            }
        }
    };
    QueryInfo.prototype.markReady = function () {
        this.networkError = null;
        return this.networkStatus = NetworkStatus.ready;
    };
    QueryInfo.prototype.markError = function (error) {
        this.networkStatus = NetworkStatus.error;
        this.lastWrite = void 0;
        this.reset();
        if (error.graphQLErrors) {
            this.graphQLErrors = error.graphQLErrors;
        }
        if (error.networkError) {
            this.networkError = error.networkError;
        }
        return error;
    };
    return QueryInfo;
}());
function shouldWriteResult(result, errorPolicy) {
    if (errorPolicy === void 0) { errorPolicy = "none"; }
    var ignoreErrors = errorPolicy === "ignore" ||
        errorPolicy === "all";
    var writeWithErrors = !graphQLResultHasError(result);
    if (!writeWithErrors && ignoreErrors && result.data) {
        writeWithErrors = true;
    }
    return writeWithErrors;
}

var hasOwnProperty$9 = Object.prototype.hasOwnProperty;
var QueryManager = (function () {
    function QueryManager(_a) {
        var cache = _a.cache, link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a.onBroadcast, _c = _a.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;
        this.clientAwareness = {};
        this.queries = new Map();
        this.fetchCancelFns = new Map();
        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();
        this.queryIdCounter = 1;
        this.requestIdCounter = 1;
        this.mutationIdCounter = 1;
        this.inFlightLinkObservables = new Map();
        this.cache = cache;
        this.link = link;
        this.queryDeduplication = queryDeduplication;
        this.clientAwareness = clientAwareness;
        this.localState = localState || new LocalState({ cache: cache });
        this.ssrMode = ssrMode;
        this.assumeImmutableResults = !!assumeImmutableResults;
        if ((this.onBroadcast = onBroadcast)) {
            this.mutationStore = Object.create(null);
        }
    }
    QueryManager.prototype.stop = function () {
        var _this = this;
        this.queries.forEach(function (_info, queryId) {
            _this.stopQueryNoBroadcast(queryId);
        });
        this.cancelPendingFetches(new InvariantError('QueryManager stopped while query was in flight'));
    };
    QueryManager.prototype.cancelPendingFetches = function (error) {
        this.fetchCancelFns.forEach(function (cancel) { return cancel(error); });
        this.fetchCancelFns.clear();
    };
    QueryManager.prototype.mutate = function (_a) {
        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueries = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;
        return __awaiter(this, void 0, void 0, function () {
            var mutationId, mutationStoreValue, self;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        invariant$1(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');
                        invariant$1(!fetchPolicy || fetchPolicy === 'no-cache', "Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.");
                        mutationId = this.generateMutationId();
                        mutation = this.transform(mutation).document;
                        variables = this.getVariables(mutation, variables);
                        if (!this.transform(mutation).hasClientExports) return [3, 2];
                        return [4, this.localState.addExportedVariables(mutation, variables, context)];
                    case 1:
                        variables = _f.sent();
                        _f.label = 2;
                    case 2:
                        mutationStoreValue = this.mutationStore &&
                            (this.mutationStore[mutationId] = {
                                mutation: mutation,
                                variables: variables,
                                loading: true,
                                error: null,
                            });
                        if (optimisticResponse) {
                            this.markMutationOptimistic(optimisticResponse, {
                                mutationId: mutationId,
                                document: mutation,
                                variables: variables,
                                errorPolicy: errorPolicy,
                                updateQueries: updateQueries,
                                update: updateWithProxyFn,
                            });
                        }
                        this.broadcastQueries();
                        self = this;
                        return [2, new Promise(function (resolve, reject) {
                                var storeResult;
                                var error;
                                self.getObservableFromLink(mutation, __assign$1(__assign$1({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({
                                    next: function (result) {
                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {
                                            error = new ApolloError({
                                                graphQLErrors: result.errors,
                                            });
                                            return;
                                        }
                                        if (mutationStoreValue) {
                                            mutationStoreValue.loading = false;
                                            mutationStoreValue.error = null;
                                        }
                                        if (fetchPolicy !== 'no-cache') {
                                            try {
                                                self.markMutationResult({
                                                    mutationId: mutationId,
                                                    result: result,
                                                    document: mutation,
                                                    variables: variables,
                                                    errorPolicy: errorPolicy,
                                                    updateQueries: updateQueries,
                                                    update: updateWithProxyFn,
                                                });
                                            }
                                            catch (e) {
                                                error = new ApolloError({
                                                    networkError: e,
                                                });
                                                return;
                                            }
                                        }
                                        storeResult = result;
                                    },
                                    error: function (err) {
                                        if (mutationStoreValue) {
                                            mutationStoreValue.loading = false;
                                            mutationStoreValue.error = err;
                                        }
                                        if (optimisticResponse) {
                                            self.cache.removeOptimistic(mutationId);
                                        }
                                        self.broadcastQueries();
                                        reject(new ApolloError({
                                            networkError: err,
                                        }));
                                    },
                                    complete: function () {
                                        if (error && mutationStoreValue) {
                                            mutationStoreValue.loading = false;
                                            mutationStoreValue.error = error;
                                        }
                                        if (optimisticResponse) {
                                            self.cache.removeOptimistic(mutationId);
                                        }
                                        self.broadcastQueries();
                                        if (error) {
                                            reject(error);
                                            return;
                                        }
                                        if (typeof refetchQueries === 'function') {
                                            refetchQueries = refetchQueries(storeResult);
                                        }
                                        var refetchQueryPromises = [];
                                        if (isNonEmptyArray(refetchQueries)) {
                                            refetchQueries.forEach(function (refetchQuery) {
                                                if (typeof refetchQuery === 'string') {
                                                    self.queries.forEach(function (_a) {
                                                        var observableQuery = _a.observableQuery;
                                                        if (observableQuery &&
                                                            observableQuery.hasObservers() &&
                                                            observableQuery.queryName === refetchQuery) {
                                                            refetchQueryPromises.push(observableQuery.refetch());
                                                        }
                                                    });
                                                }
                                                else {
                                                    var queryOptions = {
                                                        query: refetchQuery.query,
                                                        variables: refetchQuery.variables,
                                                        fetchPolicy: 'network-only',
                                                    };
                                                    if (refetchQuery.context) {
                                                        queryOptions.context = refetchQuery.context;
                                                    }
                                                    refetchQueryPromises.push(self.query(queryOptions));
                                                }
                                            });
                                        }
                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {
                                            if (errorPolicy === 'ignore' &&
                                                storeResult &&
                                                graphQLResultHasError(storeResult)) {
                                                delete storeResult.errors;
                                            }
                                            resolve(storeResult);
                                        }, reject);
                                    },
                                });
                            })];
                }
            });
        });
    };
    QueryManager.prototype.markMutationResult = function (mutation, cache) {
        var _this = this;
        if (cache === void 0) { cache = this.cache; }
        if (shouldWriteResult(mutation.result, mutation.errorPolicy)) {
            var cacheWrites_1 = [{
                    result: mutation.result.data,
                    dataId: 'ROOT_MUTATION',
                    query: mutation.document,
                    variables: mutation.variables,
                }];
            var updateQueries_1 = mutation.updateQueries;
            if (updateQueries_1) {
                this.queries.forEach(function (_a, queryId) {
                    var observableQuery = _a.observableQuery;
                    var queryName = observableQuery && observableQuery.queryName;
                    if (!queryName || !hasOwnProperty$9.call(updateQueries_1, queryName)) {
                        return;
                    }
                    var updater = updateQueries_1[queryName];
                    var _b = _this.queries.get(queryId), document = _b.document, variables = _b.variables;
                    var _c = cache.diff({
                        query: document,
                        variables: variables,
                        returnPartialData: true,
                        optimistic: false,
                    }), currentQueryResult = _c.result, complete = _c.complete;
                    if (complete && currentQueryResult) {
                        var nextQueryResult = updater(currentQueryResult, {
                            mutationResult: mutation.result,
                            queryName: document && getOperationName(document) || void 0,
                            queryVariables: variables,
                        });
                        if (nextQueryResult) {
                            cacheWrites_1.push({
                                result: nextQueryResult,
                                dataId: 'ROOT_QUERY',
                                query: document,
                                variables: variables,
                            });
                        }
                    }
                });
            }
            cache.performTransaction(function (c) {
                cacheWrites_1.forEach(function (write) { return c.write(write); });
                var update = mutation.update;
                if (update) {
                    update(c, mutation.result);
                }
            }, null);
        }
    };
    QueryManager.prototype.markMutationOptimistic = function (optimisticResponse, mutation) {
        var _this = this;
        var data = typeof optimisticResponse === "function"
            ? optimisticResponse(mutation.variables)
            : optimisticResponse;
        return this.cache.recordOptimisticTransaction(function (cache) {
            try {
                _this.markMutationResult(__assign$1(__assign$1({}, mutation), { result: { data: data } }), cache);
            }
            catch (error) {
                invariant$1.error(error);
            }
        }, mutation.mutationId);
    };
    QueryManager.prototype.fetchQuery = function (queryId, options, networkStatus) {
        return this.fetchQueryObservable(queryId, options, networkStatus).promise;
    };
    QueryManager.prototype.getQueryStore = function () {
        var store = Object.create(null);
        this.queries.forEach(function (info, queryId) {
            store[queryId] = {
                variables: info.variables,
                networkStatus: info.networkStatus,
                networkError: info.networkError,
                graphQLErrors: info.graphQLErrors,
            };
        });
        return store;
    };
    QueryManager.prototype.resetErrors = function (queryId) {
        var queryInfo = this.queries.get(queryId);
        if (queryInfo) {
            queryInfo.networkError = undefined;
            queryInfo.graphQLErrors = [];
        }
    };
    QueryManager.prototype.transform = function (document) {
        var transformCache = this.transformCache;
        if (!transformCache.has(document)) {
            var transformed = this.cache.transformDocument(document);
            var forLink = removeConnectionDirectiveFromDocument(this.cache.transformForLink(transformed));
            var clientQuery = this.localState.clientQuery(transformed);
            var serverQuery = forLink && this.localState.serverQuery(forLink);
            var cacheEntry_1 = {
                document: transformed,
                hasClientExports: hasClientExports(transformed),
                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),
                clientQuery: clientQuery,
                serverQuery: serverQuery,
                defaultVars: getDefaultValues(getOperationDefinition(transformed)),
            };
            var add = function (doc) {
                if (doc && !transformCache.has(doc)) {
                    transformCache.set(doc, cacheEntry_1);
                }
            };
            add(document);
            add(transformed);
            add(clientQuery);
            add(serverQuery);
        }
        return transformCache.get(document);
    };
    QueryManager.prototype.getVariables = function (document, variables) {
        return __assign$1(__assign$1({}, this.transform(document).defaultVars), variables);
    };
    QueryManager.prototype.watchQuery = function (options) {
        options = __assign$1(__assign$1({}, options), { variables: this.getVariables(options.query, options.variables) });
        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {
            options.notifyOnNetworkStatusChange = false;
        }
        var queryInfo = new QueryInfo(this.cache);
        var observable = new ObservableQuery({
            queryManager: this,
            queryInfo: queryInfo,
            options: options,
        });
        this.queries.set(observable.queryId, queryInfo);
        queryInfo.init({
            document: options.query,
            observableQuery: observable,
            variables: options.variables,
        });
        return observable;
    };
    QueryManager.prototype.query = function (options) {
        var _this = this;
        invariant$1(options.query, 'query option is required. You must specify your GraphQL document ' +
            'in the query option.');
        invariant$1(options.query.kind === 'Document', 'You must wrap the query string in a "gql" tag.');
        invariant$1(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');
        invariant$1(!options.pollInterval, 'pollInterval option only supported on watchQuery.');
        var queryId = this.generateQueryId();
        return this.fetchQuery(queryId, options).finally(function () { return _this.stopQuery(queryId); });
    };
    QueryManager.prototype.generateQueryId = function () {
        return String(this.queryIdCounter++);
    };
    QueryManager.prototype.generateRequestId = function () {
        return this.requestIdCounter++;
    };
    QueryManager.prototype.generateMutationId = function () {
        return String(this.mutationIdCounter++);
    };
    QueryManager.prototype.stopQueryInStore = function (queryId) {
        this.stopQueryInStoreNoBroadcast(queryId);
        this.broadcastQueries();
    };
    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {
        var queryInfo = this.queries.get(queryId);
        if (queryInfo)
            queryInfo.stop();
    };
    QueryManager.prototype.clearStore = function () {
        this.cancelPendingFetches(new InvariantError('Store reset while query was in flight (not completed in link chain)'));
        this.queries.forEach(function (queryInfo) {
            if (queryInfo.observableQuery) {
                queryInfo.networkStatus = NetworkStatus.loading;
            }
            else {
                queryInfo.stop();
            }
        });
        if (this.mutationStore) {
            this.mutationStore = Object.create(null);
        }
        return this.cache.reset();
    };
    QueryManager.prototype.resetStore = function () {
        var _this = this;
        return this.clearStore().then(function () {
            return _this.reFetchObservableQueries();
        });
    };
    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {
        var _this = this;
        if (includeStandby === void 0) { includeStandby = false; }
        var observableQueryPromises = [];
        this.queries.forEach(function (_a, queryId) {
            var observableQuery = _a.observableQuery;
            if (observableQuery && observableQuery.hasObservers()) {
                var fetchPolicy = observableQuery.options.fetchPolicy;
                observableQuery.resetLastResults();
                if (fetchPolicy !== 'cache-only' &&
                    (includeStandby || fetchPolicy !== 'standby')) {
                    observableQueryPromises.push(observableQuery.refetch());
                }
                _this.getQuery(queryId).setDiff(null);
            }
        });
        this.broadcastQueries();
        return Promise.all(observableQueryPromises);
    };
    QueryManager.prototype.setObservableQuery = function (observableQuery) {
        this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);
    };
    QueryManager.prototype.startGraphQLSubscription = function (_a) {
        var _this = this;
        var query = _a.query, fetchPolicy = _a.fetchPolicy, errorPolicy = _a.errorPolicy, variables = _a.variables, _b = _a.context, context = _b === void 0 ? {} : _b;
        query = this.transform(query).document;
        variables = this.getVariables(query, variables);
        var makeObservable = function (variables) {
            return _this.getObservableFromLink(query, context, variables, false).map(function (result) {
                if (fetchPolicy !== 'no-cache') {
                    if (shouldWriteResult(result, errorPolicy)) {
                        _this.cache.write({
                            query: query,
                            result: result.data,
                            dataId: 'ROOT_SUBSCRIPTION',
                            variables: variables,
                        });
                    }
                    _this.broadcastQueries();
                }
                if (graphQLResultHasError(result)) {
                    throw new ApolloError({
                        graphQLErrors: result.errors,
                    });
                }
                return result;
            });
        };
        if (this.transform(query).hasClientExports) {
            var observablePromise_1 = this.localState.addExportedVariables(query, variables, context).then(makeObservable);
            return new zenObservable(function (observer) {
                var sub = null;
                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);
                return function () { return sub && sub.unsubscribe(); };
            });
        }
        return makeObservable(variables);
    };
    QueryManager.prototype.stopQuery = function (queryId) {
        this.stopQueryNoBroadcast(queryId);
        this.broadcastQueries();
    };
    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {
        this.stopQueryInStoreNoBroadcast(queryId);
        this.removeQuery(queryId);
    };
    QueryManager.prototype.removeQuery = function (queryId) {
        this.fetchCancelFns.delete(queryId);
        this.getQuery(queryId).stop();
        this.queries.delete(queryId);
    };
    QueryManager.prototype.broadcastQueries = function () {
        if (this.onBroadcast)
            this.onBroadcast();
        this.queries.forEach(function (info) { return info.notify(); });
    };
    QueryManager.prototype.getLocalState = function () {
        return this.localState;
    };
    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {
        var _this = this;
        var _a;
        if (deduplication === void 0) { deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication; }
        var observable;
        var serverQuery = this.transform(query).serverQuery;
        if (serverQuery) {
            var _b = this, inFlightLinkObservables_1 = _b.inFlightLinkObservables, link = _b.link;
            var operation = {
                query: serverQuery,
                variables: variables,
                operationName: getOperationName(serverQuery) || void 0,
                context: this.prepareContext(__assign$1(__assign$1({}, context), { forceFetch: !deduplication })),
            };
            context = operation.context;
            if (deduplication) {
                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();
                inFlightLinkObservables_1.set(serverQuery, byVariables_1);
                var varJson_1 = JSON.stringify(variables);
                observable = byVariables_1.get(varJson_1);
                if (!observable) {
                    var concast = new Concast([
                        execute(link, operation)
                    ]);
                    byVariables_1.set(varJson_1, observable = concast);
                    concast.cleanup(function () {
                        if (byVariables_1.delete(varJson_1) &&
                            byVariables_1.size < 1) {
                            inFlightLinkObservables_1.delete(serverQuery);
                        }
                    });
                }
            }
            else {
                observable = new Concast([
                    execute(link, operation)
                ]);
            }
        }
        else {
            observable = new Concast([
                zenObservable.of({ data: {} })
            ]);
            context = this.prepareContext(context);
        }
        var clientQuery = this.transform(query).clientQuery;
        if (clientQuery) {
            observable = asyncMap$1(observable, function (result) {
                return _this.localState.runResolvers({
                    document: clientQuery,
                    remoteResult: result,
                    context: context,
                    variables: variables,
                });
            });
        }
        return observable;
    };
    QueryManager.prototype.getResultsFromLink = function (queryInfo, allowCacheWrite, options) {
        var lastRequestId = queryInfo.lastRequestId;
        return asyncMap$1(this.getObservableFromLink(queryInfo.document, options.context, options.variables), function (result) {
            var hasErrors = isNonEmptyArray(result.errors);
            if (lastRequestId >= queryInfo.lastRequestId) {
                if (hasErrors && options.errorPolicy === "none") {
                    throw queryInfo.markError(new ApolloError({
                        graphQLErrors: result.errors,
                    }));
                }
                queryInfo.markResult(result, options, allowCacheWrite);
                queryInfo.markReady();
            }
            var aqr = {
                data: result.data,
                loading: false,
                networkStatus: queryInfo.networkStatus || NetworkStatus.ready,
            };
            if (hasErrors && options.errorPolicy !== "ignore") {
                aqr.errors = result.errors;
            }
            return aqr;
        }, function (networkError) {
            var error = isApolloError(networkError)
                ? networkError
                : new ApolloError({ networkError: networkError });
            if (lastRequestId >= queryInfo.lastRequestId) {
                queryInfo.markError(error);
            }
            throw error;
        });
    };
    QueryManager.prototype.fetchQueryObservable = function (queryId, options, networkStatus) {
        var _this = this;
        if (networkStatus === void 0) { networkStatus = NetworkStatus.loading; }
        var query = this.transform(options.query).document;
        var variables = this.getVariables(query, options.variables);
        var queryInfo = this.getQuery(queryId);
        var oldNetworkStatus = queryInfo.networkStatus;
        var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? "cache-first" : _a, _b = options.errorPolicy, errorPolicy = _b === void 0 ? "none" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;
        var mightUseNetwork = fetchPolicy === "cache-first" ||
            fetchPolicy === "cache-and-network" ||
            fetchPolicy === "network-only" ||
            fetchPolicy === "no-cache";
        if (mightUseNetwork &&
            notifyOnNetworkStatusChange &&
            typeof oldNetworkStatus === "number" &&
            oldNetworkStatus !== networkStatus &&
            isNetworkRequestInFlight(networkStatus)) {
            if (fetchPolicy !== "cache-first") {
                fetchPolicy = "cache-and-network";
            }
            returnPartialData = true;
        }
        var normalized = Object.assign({}, options, {
            query: query,
            variables: variables,
            fetchPolicy: fetchPolicy,
            errorPolicy: errorPolicy,
            returnPartialData: returnPartialData,
            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,
            context: context,
        });
        var fromVariables = function (variables) {
            normalized.variables = variables;
            return _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);
        };
        this.fetchCancelFns.set(queryId, function (reason) {
            Promise.resolve().then(function () { return concast.cancel(reason); });
        });
        var concast = new Concast(this.transform(normalized.query).hasClientExports
            ? this.localState.addExportedVariables(normalized.query, normalized.variables, normalized.context).then(fromVariables)
            : fromVariables(normalized.variables));
        concast.cleanup(function () {
            _this.fetchCancelFns.delete(queryId);
            var nextFetchPolicy = options.nextFetchPolicy;
            if (nextFetchPolicy) {
                options.nextFetchPolicy = void 0;
                options.fetchPolicy = typeof nextFetchPolicy === "function"
                    ? nextFetchPolicy.call(options, options.fetchPolicy || "cache-first")
                    : nextFetchPolicy;
            }
        });
        return concast;
    };
    QueryManager.prototype.fetchQueryByPolicy = function (queryInfo, options, networkStatus) {
        var _this = this;
        var query = options.query, variables = options.variables, fetchPolicy = options.fetchPolicy, errorPolicy = options.errorPolicy, returnPartialData = options.returnPartialData, context = options.context;
        queryInfo.init({
            document: query,
            variables: variables,
            lastRequestId: this.generateRequestId(),
            networkStatus: networkStatus,
        });
        var readCache = function () { return queryInfo.getDiff(variables); };
        var resultsFromCache = function (diff, networkStatus) {
            if (networkStatus === void 0) { networkStatus = queryInfo.networkStatus || NetworkStatus.loading; }
            var data = diff.result;
            if (isNonEmptyArray(diff.missing) &&
                !equal(data, {}) &&
                !returnPartialData) {
                invariant$1.warn("Missing cache result fields: " + diff.missing.map(function (m) { return m.path.join('.'); }).join(', '), diff.missing);
            }
            var fromData = function (data) { return zenObservable.of(__assign$1({ data: data, loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus }, (diff.complete ? null : { partial: true }))); };
            if (_this.transform(query).hasForcedResolvers) {
                return _this.localState.runResolvers({
                    document: query,
                    remoteResult: { data: data },
                    context: context,
                    variables: variables,
                    onlyRunForcedResolvers: true,
                }).then(function (resolved) { return fromData(resolved.data); });
            }
            return fromData(data);
        };
        var resultsFromLink = function (allowCacheWrite) {
            return _this.getResultsFromLink(queryInfo, allowCacheWrite, {
                variables: variables,
                context: context,
                fetchPolicy: fetchPolicy,
                errorPolicy: errorPolicy,
            });
        };
        switch (fetchPolicy) {
            default:
            case "cache-first": {
                var diff = readCache();
                if (diff.complete) {
                    return [
                        resultsFromCache(diff, queryInfo.markReady()),
                    ];
                }
                if (returnPartialData) {
                    return [
                        resultsFromCache(diff),
                        resultsFromLink(true),
                    ];
                }
                return [
                    resultsFromLink(true),
                ];
            }
            case "cache-and-network": {
                var diff = readCache();
                if (diff.complete || returnPartialData) {
                    return [
                        resultsFromCache(diff),
                        resultsFromLink(true),
                    ];
                }
                return [
                    resultsFromLink(true),
                ];
            }
            case "cache-only":
                return [
                    resultsFromCache(readCache(), queryInfo.markReady()),
                ];
            case "network-only":
                return [resultsFromLink(true)];
            case "no-cache":
                return [resultsFromLink(false)];
            case "standby":
                return [];
        }
    };
    QueryManager.prototype.getQuery = function (queryId) {
        if (queryId && !this.queries.has(queryId)) {
            this.queries.set(queryId, new QueryInfo(this.cache));
        }
        return this.queries.get(queryId);
    };
    QueryManager.prototype.prepareContext = function (context) {
        if (context === void 0) { context = {}; }
        var newContext = this.localState.prepareContext(context);
        return __assign$1(__assign$1({}, newContext), { clientAwareness: this.clientAwareness });
    };
    return QueryManager;
}());

var hasSuggestedDevtools = false;
function mergeOptions(defaults, options) {
    return compact(defaults, options, options.variables && {
        variables: __assign$1(__assign$1({}, defaults.variables), options.variables),
    });
}
var ApolloClient = (function () {
    function ApolloClient(options) {
        var _this = this;
        this.defaultOptions = {};
        this.resetStoreCallbacks = [];
        this.clearStoreCallbacks = [];
        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, _c = options.connectToDevTools, connectToDevTools = _c === void 0 ? typeof window === 'object' &&
            !window.__APOLLO_CLIENT__ &&
            "development" !== 'production' : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? false : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;
        var link = options.link;
        if (!link) {
            link = uri
                ? new HttpLink({ uri: uri, credentials: credentials, headers: headers })
                : ApolloLink.empty();
        }
        if (!cache) {
            throw new InvariantError("To initialize Apollo Client, you must specify a 'cache' property " +
                "in the options object. \n" +
                "For more information, please visit: https://go.apollo.dev/c/docs");
        }
        this.link = link;
        this.cache = cache;
        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;
        this.queryDeduplication = queryDeduplication;
        this.defaultOptions = defaultOptions || {};
        this.typeDefs = typeDefs;
        if (ssrForceFetchDelay) {
            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);
        }
        this.watchQuery = this.watchQuery.bind(this);
        this.query = this.query.bind(this);
        this.mutate = this.mutate.bind(this);
        this.resetStore = this.resetStore.bind(this);
        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);
        if (connectToDevTools && typeof window === 'object') {
            window.__APOLLO_CLIENT__ = this;
        }
        if (!hasSuggestedDevtools && "development" !== 'production') {
            hasSuggestedDevtools = true;
            if (typeof window !== 'undefined' &&
                window.document &&
                window.top === window.self &&
                !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {
                var nav = window.navigator;
                var ua = nav && nav.userAgent;
                var url = void 0;
                if (typeof ua === "string") {
                    if (ua.indexOf("Chrome/") > -1) {
                        url = "https://chrome.google.com/webstore/detail/" +
                            "apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm";
                    }
                    else if (ua.indexOf("Firefox/") > -1) {
                        url = "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/";
                    }
                }
                if (url) {
                    invariant$1.log("Download the Apollo DevTools for a better development " +
                        "experience: " + url);
                }
            }
        }
        this.version = version;
        this.localState = new LocalState({
            cache: cache,
            client: this,
            resolvers: resolvers,
            fragmentMatcher: fragmentMatcher,
        });
        this.queryManager = new QueryManager({
            cache: this.cache,
            link: this.link,
            queryDeduplication: queryDeduplication,
            ssrMode: ssrMode,
            clientAwareness: {
                name: clientAwarenessName,
                version: clientAwarenessVersion,
            },
            localState: this.localState,
            assumeImmutableResults: assumeImmutableResults,
            onBroadcast: connectToDevTools ? function () {
                if (_this.devToolsHookCb) {
                    _this.devToolsHookCb({
                        action: {},
                        state: {
                            queries: _this.queryManager.getQueryStore(),
                            mutations: _this.queryManager.mutationStore || {},
                        },
                        dataWithOptimisticResults: _this.cache.extract(true),
                    });
                }
            } : void 0,
        });
    }
    ApolloClient.prototype.stop = function () {
        this.queryManager.stop();
    };
    ApolloClient.prototype.watchQuery = function (options) {
        if (this.defaultOptions.watchQuery) {
            options = mergeOptions(this.defaultOptions.watchQuery, options);
        }
        if (this.disableNetworkFetches &&
            (options.fetchPolicy === 'network-only' ||
                options.fetchPolicy === 'cache-and-network')) {
            options = __assign$1(__assign$1({}, options), { fetchPolicy: 'cache-first' });
        }
        return this.queryManager.watchQuery(options);
    };
    ApolloClient.prototype.query = function (options) {
        if (this.defaultOptions.query) {
            options = mergeOptions(this.defaultOptions.query, options);
        }
        invariant$1(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +
            'client.query can only return a single result. Please use client.watchQuery ' +
            'to receive multiple results from the cache and the network, or consider ' +
            'using a different fetchPolicy, such as cache-first or network-only.');
        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {
            options = __assign$1(__assign$1({}, options), { fetchPolicy: 'cache-first' });
        }
        return this.queryManager.query(options);
    };
    ApolloClient.prototype.mutate = function (options) {
        if (this.defaultOptions.mutate) {
            options = mergeOptions(this.defaultOptions.mutate, options);
        }
        return this.queryManager.mutate(options);
    };
    ApolloClient.prototype.subscribe = function (options) {
        return this.queryManager.startGraphQLSubscription(options);
    };
    ApolloClient.prototype.readQuery = function (options, optimistic) {
        if (optimistic === void 0) { optimistic = false; }
        return this.cache.readQuery(options, optimistic);
    };
    ApolloClient.prototype.readFragment = function (options, optimistic) {
        if (optimistic === void 0) { optimistic = false; }
        return this.cache.readFragment(options, optimistic);
    };
    ApolloClient.prototype.writeQuery = function (options) {
        this.cache.writeQuery(options);
        this.queryManager.broadcastQueries();
    };
    ApolloClient.prototype.writeFragment = function (options) {
        this.cache.writeFragment(options);
        this.queryManager.broadcastQueries();
    };
    ApolloClient.prototype.__actionHookForDevTools = function (cb) {
        this.devToolsHookCb = cb;
    };
    ApolloClient.prototype.__requestRaw = function (payload) {
        return execute(this.link, payload);
    };
    ApolloClient.prototype.resetStore = function () {
        var _this = this;
        return Promise.resolve()
            .then(function () { return _this.queryManager.clearStore(); })
            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })
            .then(function () { return _this.reFetchObservableQueries(); });
    };
    ApolloClient.prototype.clearStore = function () {
        var _this = this;
        return Promise.resolve()
            .then(function () { return _this.queryManager.clearStore(); })
            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });
    };
    ApolloClient.prototype.onResetStore = function (cb) {
        var _this = this;
        this.resetStoreCallbacks.push(cb);
        return function () {
            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });
        };
    };
    ApolloClient.prototype.onClearStore = function (cb) {
        var _this = this;
        this.clearStoreCallbacks.push(cb);
        return function () {
            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });
        };
    };
    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {
        return this.queryManager.reFetchObservableQueries(includeStandby);
    };
    ApolloClient.prototype.extract = function (optimistic) {
        return this.cache.extract(optimistic);
    };
    ApolloClient.prototype.restore = function (serializedState) {
        return this.cache.restore(serializedState);
    };
    ApolloClient.prototype.addResolvers = function (resolvers) {
        this.localState.addResolvers(resolvers);
    };
    ApolloClient.prototype.setResolvers = function (resolvers) {
        this.localState.setResolvers(resolvers);
    };
    ApolloClient.prototype.getResolvers = function () {
        return this.localState.getResolvers();
    };
    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {
        this.localState.setFragmentMatcher(fragmentMatcher);
    };
    ApolloClient.prototype.setLink = function (newLink) {
        this.link = this.queryManager.link = newLink;
    };
    return ApolloClient;
}());

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var docCache = new Map();
var fragmentSourceMap = new Map();
var printFragmentWarnings = true;
var experimentalFragmentVariables = false;
function normalize(string) {
    return string.replace(/[\s,]+/g, ' ').trim();
}
function cacheKeyFromLoc(loc) {
    return normalize(loc.source.body.substring(loc.start, loc.end));
}
function processFragments(ast) {
    var seenKeys = new Set();
    var definitions = [];
    ast.definitions.forEach(function (fragmentDefinition) {
        if (fragmentDefinition.kind === 'FragmentDefinition') {
            var fragmentName = fragmentDefinition.name.value;
            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);
            var sourceKeySet = fragmentSourceMap.get(fragmentName);
            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {
                if (printFragmentWarnings) {
                    console.warn("Warning: fragment with name " + fragmentName + " already exists.\n"
                        + "graphql-tag enforces all fragment names across your application to be unique; read more about\n"
                        + "this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names");
                }
            }
            else if (!sourceKeySet) {
                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);
            }
            sourceKeySet.add(sourceKey);
            if (!seenKeys.has(sourceKey)) {
                seenKeys.add(sourceKey);
                definitions.push(fragmentDefinition);
            }
        }
        else {
            definitions.push(fragmentDefinition);
        }
    });
    return __assign(__assign({}, ast), { definitions: definitions });
}
function stripLoc(doc) {
    var workSet = new Set(doc.definitions);
    workSet.forEach(function (node) {
        if (node.loc)
            delete node.loc;
        Object.keys(node).forEach(function (key) {
            var value = node[key];
            if (value && typeof value === 'object') {
                workSet.add(value);
            }
        });
    });
    var loc = doc.loc;
    if (loc) {
        delete loc.startToken;
        delete loc.endToken;
    }
    return doc;
}
function parseDocument(source) {
    var cacheKey = normalize(source);
    if (!docCache.has(cacheKey)) {
        var parsed = parse(source, {
            experimentalFragmentVariables: experimentalFragmentVariables
        });
        if (!parsed || parsed.kind !== 'Document') {
            throw new Error('Not a valid GraphQL document.');
        }
        docCache.set(cacheKey, stripLoc(processFragments(parsed)));
    }
    return docCache.get(cacheKey);
}
function gql(literals) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    if (typeof literals === 'string') {
        literals = [literals];
    }
    var result = literals[0];
    args.forEach(function (arg, i) {
        if (arg && arg.kind === 'Document') {
            result += arg.loc.source.body;
        }
        else {
            result += arg;
        }
        result += literals[i + 1];
    });
    return parseDocument(result);
}
function resetCaches() {
    docCache.clear();
    fragmentSourceMap.clear();
}
function disableFragmentWarnings() {
    printFragmentWarnings = false;
}
function enableExperimentalFragmentVariables() {
    experimentalFragmentVariables = true;
}
function disableExperimentalFragmentVariables() {
    experimentalFragmentVariables = false;
}
var extras = {
    gql: gql,
    resetCaches: resetCaches,
    disableFragmentWarnings: disableFragmentWarnings,
    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,
    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables
};
(function (gql_1) {
    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;
})(gql || (gql = {}));
gql["default"] = gql;
var gql$1 = gql;

setVerbosity("log");
gql$1.resetCaches; gql$1.disableFragmentWarnings; gql$1.enableExperimentalFragmentVariables; gql$1.disableExperimentalFragmentVariables;

/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle$1 (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle$1(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var isObject_1 = isObject;

/** Detect free variable `global` from Node.js. */

var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

var _freeGlobal = freeGlobal;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal || freeSelf || Function('return this')();

var _root = root;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return _root.Date.now();
};

var now_1 = now;

/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

var _trimmedEndIndex = trimmedEndIndex;

/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, _trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

var _baseTrim = baseTrim;

/** Built-in value references. */
var Symbol$1 = _root.Symbol;

var _Symbol = Symbol$1;

/** Used for built-in method references. */
var objectProto$b = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$8 = objectProto$b.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$b.toString;

/** Built-in value references. */
var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty$8.call(value, symToStringTag$1),
      tag = value[symToStringTag$1];

  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString$1.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

var _getRawTag = getRawTag;

/** Used for built-in method references. */
var objectProto$a = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto$a.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

var _objectToString = objectToString;

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? _getRawTag(value)
    : _objectToString(value);
}

var _baseGetTag = baseGetTag;

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

var isObjectLike_1 = isObjectLike;

/** `Object#toString` result references. */
var symbolTag$1 = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike_1(value) && _baseGetTag(value) == symbolTag$1);
}

var isSymbol_1 = isSymbol;

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol_1(value)) {
    return NAN;
  }
  if (isObject_1(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject_1(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = _baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

var toNumber_1 = toNumber;

/** Error message constants. */
var FUNC_ERROR_TEXT$1 = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax$1 = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce$1(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  wait = toNumber_1(wait) || 0;
  if (isObject_1(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax$1(toNumber_1(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now_1();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now_1());
  }

  function debounced() {
    var time = now_1(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

var debounce_1 = debounce$1;

/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule UserAgent_DEPRECATED
 */
/**
 *  Provides entirely client-side User Agent and OS detection. You should prefer
 *  the non-deprecated UserAgent module when possible, which exposes our
 *  authoritative server-side PHP-based detection to the client.
 *
 *  Usage is straightforward:
 *
 *    if (UserAgent_DEPRECATED.ie()) {
 *      //  IE
 *    }
 *
 *  You can also do version checks:
 *
 *    if (UserAgent_DEPRECATED.ie() >= 7) {
 *      //  IE7 or better
 *    }
 *
 *  The browser functions will return NaN if the browser does not match, so
 *  you can also do version compares the other way:
 *
 *    if (UserAgent_DEPRECATED.ie() < 7) {
 *      //  IE6 or worse
 *    }
 *
 *  Note that the version is a float and may include a minor version number,
 *  so you should always use range operators to perform comparisons, not
 *  strict equality.
 *
 *  **Note:** You should **strongly** prefer capability detection to browser
 *  version detection where it's reasonable:
 *
 *    http://www.quirksmode.org/js/support.html
 *
 *  Further, we have a large number of mature wrapper functions and classes
 *  which abstract away many browser irregularities. Check the documentation,
 *  grep for things, or ask on javascript@lists.facebook.com before writing yet
 *  another copy of "event || window.event".
 *
 */

var _populated = false;

// Browsers
var _ie, _firefox, _opera, _webkit, _chrome;

// Actual IE browser for compatibility mode
var _ie_real_version;

// Platforms
var _osx, _windows, _linux, _android;

// Architectures
var _win64;

// Devices
var _iphone, _ipad, _native;

var _mobile;

function _populate() {
  if (_populated) {
    return;
  }

  _populated = true;

  // To work around buggy JS libraries that can't handle multi-digit
  // version numbers, Opera 10's user agent string claims it's Opera
  // 9, then later includes a Version/X.Y field:
  //
  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10
  var uas = navigator.userAgent;
  var agent = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(uas);
  var os    = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);

  _iphone = /\b(iPhone|iP[ao]d)/.exec(uas);
  _ipad = /\b(iP[ao]d)/.exec(uas);
  _android = /Android/i.exec(uas);
  _native = /FBAN\/\w+;/i.exec(uas);
  _mobile = /Mobile/i.exec(uas);

  // Note that the IE team blog would have you believe you should be checking
  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming
  // from either x64 or ia64;  so ultimately, you should just check for Win64
  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit
  // Windows will send 'WOW64' instead.
  _win64 = !!(/Win64/.exec(uas));

  if (agent) {
    _ie = agent[1] ? parseFloat(agent[1]) : (
          agent[5] ? parseFloat(agent[5]) : NaN);
    // IE compatibility mode
    if (_ie && document && document.documentMode) {
      _ie = document.documentMode;
    }
    // grab the "true" ie version from the trident token if available
    var trident = /(?:Trident\/(\d+.\d+))/.exec(uas);
    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;

    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;
    _opera   = agent[3] ? parseFloat(agent[3]) : NaN;
    _webkit  = agent[4] ? parseFloat(agent[4]) : NaN;
    if (_webkit) {
      // We do not add the regexp to the above test, because it will always
      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in
      // the userAgent string.
      agent = /(?:Chrome\/(\d+\.\d+))/.exec(uas);
      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;
    } else {
      _chrome = NaN;
    }
  } else {
    _ie = _firefox = _opera = _chrome = _webkit = NaN;
  }

  if (os) {
    if (os[1]) {
      // Detect OS X version.  If no version number matches, set _osx to true.
      // Version examples:  10, 10_6_1, 10.7
      // Parses version number as a float, taking only first two sets of
      // digits.  If only one set of digits is found, returns just the major
      // version number.
      var ver = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(uas);

      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;
    } else {
      _osx = false;
    }
    _windows = !!os[2];
    _linux   = !!os[3];
  } else {
    _osx = _windows = _linux = false;
  }
}

var UserAgent_DEPRECATED = {

  /**
   *  Check if the UA is Internet Explorer.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */
  ie: function() {
    return _populate() || _ie;
  },

  /**
   * Check if we're in Internet Explorer compatibility mode.
   *
   * @return bool true if in compatibility mode, false if
   * not compatibility mode or not ie
   */
  ieCompatibilityMode: function() {
    return _populate() || (_ie_real_version > _ie);
  },


  /**
   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we
   * only need this because Skype can't handle 64-bit IE yet.  We need to remove
   * this when we don't need it -- tracked by #601957.
   */
  ie64: function() {
    return UserAgent_DEPRECATED.ie() && _win64;
  },

  /**
   *  Check if the UA is Firefox.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */
  firefox: function() {
    return _populate() || _firefox;
  },


  /**
   *  Check if the UA is Opera.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */
  opera: function() {
    return _populate() || _opera;
  },


  /**
   *  Check if the UA is WebKit.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */
  webkit: function() {
    return _populate() || _webkit;
  },

  /**
   *  For Push
   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit
   */
  safari: function() {
    return UserAgent_DEPRECATED.webkit();
  },

  /**
   *  Check if the UA is a Chrome browser.
   *
   *
   *  @return float|NaN Version number (if match) or NaN.
   */
  chrome : function() {
    return _populate() || _chrome;
  },


  /**
   *  Check if the user is running Windows.
   *
   *  @return bool `true' if the user's OS is Windows.
   */
  windows: function() {
    return _populate() || _windows;
  },


  /**
   *  Check if the user is running Mac OS X.
   *
   *  @return float|bool   Returns a float if a version number is detected,
   *                       otherwise true/false.
   */
  osx: function() {
    return _populate() || _osx;
  },

  /**
   * Check if the user is running Linux.
   *
   * @return bool `true' if the user's OS is some flavor of Linux.
   */
  linux: function() {
    return _populate() || _linux;
  },

  /**
   * Check if the user is running on an iPhone or iPod platform.
   *
   * @return bool `true' if the user is running some flavor of the
   *    iPhone OS.
   */
  iphone: function() {
    return _populate() || _iphone;
  },

  mobile: function() {
    return _populate() || (_iphone || _ipad || _android || _mobile);
  },

  nativeApp: function() {
    // webviews inside of the native apps
    return _populate() || _native;
  },

  android: function() {
    return _populate() || _android;
  },

  ipad: function() {
    return _populate() || _ipad;
  }
};

var UserAgent_DEPRECATED_1 = UserAgent_DEPRECATED;

/**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */

var canUseDOM = !!(
  typeof window !== 'undefined' &&
  window.document &&
  window.document.createElement
);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners:
    canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

var ExecutionEnvironment_1 = ExecutionEnvironment;

/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */



var useHasFeature;
if (ExecutionEnvironment_1.canUseDOM) {
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment_1.canUseDOM ||
      capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

var isEventSupported_1 = isEventSupported;

/**
 * Copyright (c) 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule normalizeWheel
 * @typechecks
 */






// Reasonable defaults
var PIXEL_STEP  = 10;
var LINE_HEIGHT = 40;
var PAGE_HEIGHT = 800;

/**
 * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is
 * complicated, thus this doc is long and (hopefully) detailed enough to answer
 * your questions.
 *
 * If you need to react to the mouse wheel in a predictable way, this code is
 * like your bestest friend. * hugs *
 *
 * As of today, there are 4 DOM event types you can listen to:
 *
 *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)
 *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari
 *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!
 *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003
 *
 * So what to do?  The is the best:
 *
 *   normalizeWheel.getEventType();
 *
 * In your event callback, use this code to get sane interpretation of the
 * deltas.  This code will return an object with properties:
 *
 *   spinX   -- normalized spin speed (use for zoom) - x plane
 *   spinY   -- " - y plane
 *   pixelX  -- normalized distance (to pixels) - x plane
 *   pixelY  -- " - y plane
 *
 * Wheel values are provided by the browser assuming you are using the wheel to
 * scroll a web page by a number of lines or pixels (or pages).  Values can vary
 * significantly on different platforms and browsers, forgetting that you can
 * scroll at different speeds.  Some devices (like trackpads) emit more events
 * at smaller increments with fine granularity, and some emit massive jumps with
 * linear speed or acceleration.
 *
 * This code does its best to normalize the deltas for you:
 *
 *   - spin is trying to normalize how far the wheel was spun (or trackpad
 *     dragged).  This is super useful for zoom support where you want to
 *     throw away the chunky scroll steps on the PC and make those equal to
 *     the slow and smooth tiny steps on the Mac. Key data: This code tries to
 *     resolve a single slow step on a wheel to 1.
 *
 *   - pixel is normalizing the desired scroll delta in pixel units.  You'll
 *     get the crazy differences between browsers, but at least it'll be in
 *     pixels!
 *
 *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This
 *     should translate to positive value zooming IN, negative zooming OUT.
 *     This matches the newer 'wheel' event.
 *
 * Why are there spinX, spinY (or pixels)?
 *
 *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn
 *     with a mouse.  It results in side-scrolling in the browser by default.
 *
 *   - spinY is what you expect -- it's the classic axis of a mouse wheel.
 *
 *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and
 *     probably is by browsers in conjunction with fancy 3D controllers .. but
 *     you know.
 *
 * Implementation info:
 *
 * Examples of 'wheel' event if you scroll slowly (down) by one step with an
 * average mouse:
 *
 *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)
 *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)
 *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)
 *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)
 *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)
 *
 * On the trackpad:
 *
 *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)
 *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)
 *
 * On other/older browsers.. it's more complicated as there can be multiple and
 * also missing delta values.
 *
 * The 'wheel' event is more standard:
 *
 * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents
 *
 * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and
 * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain
 * backward compatibility with older events.  Those other values help us
 * better normalize spin speed.  Example of what the browsers provide:
 *
 *                          | event.wheelDelta | event.detail
 *        ------------------+------------------+--------------
 *          Safari v5/OS X  |       -120       |       0
 *          Safari v5/Win7  |       -120       |       0
 *         Chrome v17/OS X  |       -120       |       0
 *         Chrome v17/Win7  |       -120       |       0
 *                IE9/Win7  |       -120       |   undefined
 *         Firefox v4/OS X  |     undefined    |       1
 *         Firefox v4/Win7  |     undefined    |       3
 *
 */
function normalizeWheel$1(/*object*/ event) /*object*/ {
  var sX = 0, sY = 0,       // spinX, spinY
      pX = 0, pY = 0;       // pixelX, pixelY

  // Legacy
  if ('detail'      in event) { sY = event.detail; }
  if ('wheelDelta'  in event) { sY = -event.wheelDelta / 120; }
  if ('wheelDeltaY' in event) { sY = -event.wheelDeltaY / 120; }
  if ('wheelDeltaX' in event) { sX = -event.wheelDeltaX / 120; }

  // side scrolling on FF with DOMMouseScroll
  if ( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {
    sX = sY;
    sY = 0;
  }

  pX = sX * PIXEL_STEP;
  pY = sY * PIXEL_STEP;

  if ('deltaY' in event) { pY = event.deltaY; }
  if ('deltaX' in event) { pX = event.deltaX; }

  if ((pX || pY) && event.deltaMode) {
    if (event.deltaMode == 1) {          // delta in LINE units
      pX *= LINE_HEIGHT;
      pY *= LINE_HEIGHT;
    } else {                             // delta in PAGE units
      pX *= PAGE_HEIGHT;
      pY *= PAGE_HEIGHT;
    }
  }

  // Fall-back if spin cannot be determined
  if (pX && !sX) { sX = (pX < 1) ? -1 : 1; }
  if (pY && !sY) { sY = (pY < 1) ? -1 : 1; }

  return { spinX  : sX,
           spinY  : sY,
           pixelX : pX,
           pixelY : pY };
}


/**
 * The best combination if you prefer spinX + spinY normalization.  It favors
 * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with
 * 'wheel' event, making spin speed determination impossible.
 */
normalizeWheel$1.getEventType = function() /*string*/ {
  return (UserAgent_DEPRECATED_1.firefox())
           ? 'DOMMouseScroll'
           : (isEventSupported_1('wheel'))
               ? 'wheel'
               : 'mousewheel';
};

var normalizeWheel_1 = normalizeWheel$1;

var normalizeWheel = normalizeWheel_1;

function ie(n){return {all:n=n||new Map,on:function(t,e){var i=n.get(t);i&&i.push(e)||n.set(t,[e]);},off:function(t,e){var i=n.get(t);i&&i.splice(i.indexOf(e)>>>0,1);},emit:function(t,e){(n.get(t)||[]).slice().map(function(n){n(e);}),(n.get("*")||[]).slice().map(function(n){n(t,e);});}}}

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect$2(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect$2,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

function getBoundingClientRect(element) {
  var rect = element.getBoundingClientRect();
  return {
    width: rect.width,
    height: rect.height,
    top: rect.top,
    right: rect.right,
    bottom: rect.bottom,
    left: rect.left,
    x: rect.left,
    y: rect.top
  };
}

// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var currentNode = getParentNode(element);

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

var max = Math.max;
var min = Math.min;
var round = Math.round;

function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(round(x * dpr) / dpr) || 0,
    y: round(round(y * dpr) / dpr) || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets;

  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,
      _ref3$x = _ref3.x,
      x = _ref3$x === void 0 ? 0 : _ref3$x,
      _ref3$y = _ref3.y,
      y = _ref3$y === void 0 ? 0 : _ref3$y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);

      if (getComputedStyle$1(offsetParent).position !== 'static') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === top) {
      sideY = bottom; // $FlowFixMe[prop-missing]

      y -= offsetParent[heightProp] - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left) {
      sideX = right; // $FlowFixMe[prop-missing]

      x -= offsetParent[widthProp] - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref4) {
  var state = _ref4.state,
      options = _ref4.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  {
    var transitionProperty = getComputedStyle$1(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};

var hash$1 = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash$1[matched];
  });
}

var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle$1(body || html).direction === 'rtl') {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle$1(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function getVariation(placement) {
  return placement.split('-')[1];
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var referenceElement = state.elements.reference;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(referenceElement);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;

    {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis || checkAltAxis) {
    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min$1 = popperOffsets[mainAxis] + overflow[mainSide];
    var max$1 = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;

    if (checkMainAxis) {
      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
      popperOffsets[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset;
    }

    if (checkAltAxis) {
      var _mainSide = mainAxis === 'x' ? top : left;

      var _altSide = mainAxis === 'x' ? bottom : right;

      var _offset = popperOffsets[altAxis];

      var _min = _offset + overflow[_mainSide];

      var _max = _offset - overflow[_altSide];

      var _preventedOffset = within(tether ? min(_min, tetherMin) : _min, _offset, tether ? max(_max, tetherMax) : _max);

      popperOffsets[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

// Composite means it takes into account transforms as well as layout.

function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement);
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function format$1(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    Object.keys(modifier).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error(format$1(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

        case 'phase':
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (typeof modifier.effect !== 'function') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (!Array.isArray(modifier.requires)) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format$1(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(options) {
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);

          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = getComputedStyle$1(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject_1(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce_1(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

var throttle_1 = throttle;

var dayjs_min = createCommonjsModule(function (module, exports) {
!function(t,e){module.exports=e();}(commonjsGlobal,function(){var t="millisecond",e="second",n="minute",r="hour",i="day",s="week",u="month",a="quarter",o="year",f="date",h=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,c=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},$=function(t,e,n){var r=String(t);return !r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},l={s:$,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return (e<=0?"+":"-")+$(r,2,"0")+":"+$(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return -t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return +(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return {M:u,y:o,w:s,d:i,D:f,h:r,m:n,s:e,ms:t,Q:a}[h]||String(h||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},y="en",M={};M[y]=d;var m=function(t){return t instanceof S},D=function(t,e,n){var r;if(!t)return y;if("string"==typeof t)M[t]&&(r=t),e&&(M[t]=e,r=t);else {var i=t.name;M[i]=t,r=i;}return !n&&r&&(y=r),r||!n&&y},v=function(t,e){if(m(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new S(n)},g=l;g.l=D,g.i=m,g.w=function(t,e){return v(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var S=function(){function d(t){this.$L=D(t.locale,null,!0),this.parse(t);}var $=d.prototype;return $.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init();},$.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds();},$.$utils=function(){return g},$.isValid=function(){return !("Invalid Date"===this.$d.toString())},$.isSame=function(t,e){var n=v(t);return this.startOf(e)<=n&&n<=this.endOf(e)},$.isAfter=function(t,e){return v(t)<this.startOf(e)},$.isBefore=function(t,e){return this.endOf(e)<v(t)},$.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},$.unix=function(){return Math.floor(this.valueOf()/1e3)},$.valueOf=function(){return this.$d.getTime()},$.startOf=function(t,a){var h=this,c=!!g.u(a)||a,d=g.p(t),$=function(t,e){var n=g.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return c?n:n.endOf(i)},l=function(t,e){return g.w(h.toDate()[t].apply(h.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},y=this.$W,M=this.$M,m=this.$D,D="set"+(this.$u?"UTC":"");switch(d){case o:return c?$(1,0):$(31,11);case u:return c?$(1,M):$(0,M+1);case s:var v=this.$locale().weekStart||0,S=(y<v?y+7:y)-v;return $(c?m-S:m+(6-S),M);case i:case f:return l(D+"Hours",0);case r:return l(D+"Minutes",1);case n:return l(D+"Seconds",2);case e:return l(D+"Milliseconds",3);default:return this.clone()}},$.endOf=function(t){return this.startOf(t,!1)},$.$set=function(s,a){var h,c=g.p(s),d="set"+(this.$u?"UTC":""),$=(h={},h[i]=d+"Date",h[f]=d+"Date",h[u]=d+"Month",h[o]=d+"FullYear",h[r]=d+"Hours",h[n]=d+"Minutes",h[e]=d+"Seconds",h[t]=d+"Milliseconds",h)[c],l=c===i?this.$D+(a-this.$W):a;if(c===u||c===o){var y=this.clone().set(f,1);y.$d[$](l),y.init(),this.$d=y.set(f,Math.min(this.$D,y.daysInMonth())).$d;}else $&&this.$d[$](l);return this.init(),this},$.set=function(t,e){return this.clone().$set(t,e)},$.get=function(t){return this[g.p(t)]()},$.add=function(t,a){var f,h=this;t=Number(t);var c=g.p(a),d=function(e){var n=v(h);return g.w(n.date(n.date()+Math.round(e*t)),h)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(f={},f[n]=6e4,f[r]=36e5,f[e]=1e3,f)[c]||1,l=this.$d.getTime()+t*$;return g.w(l,this)},$.subtract=function(t,e){return this.add(-1*t,e)},$.format=function(t){var e=this;if(!this.isValid())return "Invalid Date";var n=t||"YYYY-MM-DDTHH:mm:ssZ",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,"0")},$=i.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,"0"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:g.s(this.$D,2,"0"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:g.s(s,2,"0"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:g.s(u,2,"0"),s:String(this.$s),ss:g.s(this.$s,2,"0"),SSS:g.s(this.$ms,3,"0"),Z:r};return n.replace(c,function(t,e){return e||l[t]||r.replace(":","")})},$.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},$.diff=function(t,f,h){var c,d=g.p(f),$=v(t),l=6e4*($.utcOffset()-this.utcOffset()),y=this-$,M=g.m(this,$);return M=(c={},c[o]=M/12,c[u]=M,c[a]=M/3,c[s]=(y-l)/6048e5,c[i]=(y-l)/864e5,c[r]=y/36e5,c[n]=y/6e4,c[e]=y/1e3,c)[d]||y,h?M:g.a(M)},$.daysInMonth=function(){return this.endOf(u).$D},$.$locale=function(){return M[this.$L]},$.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=D(t,e,!0);return r&&(n.$L=r),n},$.clone=function(){return g.w(this.$d,this)},$.toDate=function(){return new Date(this.valueOf())},$.toJSON=function(){return this.isValid()?this.toISOString():null},$.toISOString=function(){return this.$d.toISOString()},$.toString=function(){return this.$d.toUTCString()},d}(),p=S.prototype;return v.prototype=p,[["$ms",t],["$s",e],["$m",n],["$H",r],["$W",i],["$M",u],["$y",o],["$D",f]].forEach(function(t){p[t[1]]=function(e){return this.$g(e,t[0],t[1])};}),v.extend=function(t,e){return t.$i||(t(e,S,v),t.$i=!0),v},v.locale=D,v.isDayjs=m,v.unix=function(t){return v(1e3*t)},v.en=M[y],v.Ls=M,v.p={},v});
});

var localeData = createCommonjsModule(function (module, exports) {
!function(n,t){module.exports=t();}(commonjsGlobal,function(){return function(n,t,e){var r=function(n){return n&&(n.indexOf?n:n.s)},o=function(n,t,e,o,u){var a=n.name?n:n.$locale(),i=r(a[t]),s=r(a[e]),d=i||s.map(function(n){return n.substr(0,o)});if(!u)return d;var f=a.weekStart;return d.map(function(n,t){return d[(t+(f||0))%7]})},u=function(){return e.Ls[e.locale()]},a=function(n,t){return n.formats[t]||function(n){return n.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(n,t,e){return t||e.slice(1)})}(n.formats[t.toUpperCase()])};t.prototype.localeData=function(){return function(){var n=this;return {months:function(t){return t?t.format("MMMM"):o(n,"months")},monthsShort:function(t){return t?t.format("MMM"):o(n,"monthsShort","months",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(t){return t?t.format("dddd"):o(n,"weekdays")},weekdaysMin:function(t){return t?t.format("dd"):o(n,"weekdaysMin","weekdays",2)},weekdaysShort:function(t){return t?t.format("ddd"):o(n,"weekdaysShort","weekdays",3)},longDateFormat:function(t){return a(n.$locale(),t)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}}.bind(this)()},e.localeData=function(){var n=u();return {firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return e.weekdays()},weekdaysShort:function(){return e.weekdaysShort()},weekdaysMin:function(){return e.weekdaysMin()},months:function(){return e.months()},monthsShort:function(){return e.monthsShort()},longDateFormat:function(t){return a(n,t)},meridiem:n.meridiem,ordinal:n.ordinal}},e.months=function(){return o(u(),"months")},e.monthsShort=function(){return o(u(),"monthsShort","months",3)},e.weekdays=function(n){return o(u(),"weekdays",null,null,n)},e.weekdaysShort=function(n){return o(u(),"weekdaysShort","weekdays",3,n)},e.weekdaysMin=function(n){return o(u(),"weekdaysMin","weekdays",2,n)};}});
});

var customParseFormat = createCommonjsModule(function (module, exports) {
!function(t,e){module.exports=e();}(commonjsGlobal,function(){var t={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},e=function(e,n){return e.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,function(e,r,i){var o=i&&i.toUpperCase();return r||n[i]||t[i]||n[o].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(t,e,n){return e||n.slice(1)})})},n=/(\[[^[]*\])|([-:/.()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,r=/\d\d/,i=/\d\d?/,o=/\d*[^\s\d-_:/()]+/,s={};var a=function(t){return function(e){this[t]=+e;}},f=[/[+-]\d\d:?(\d\d)?/,function(t){(this.zone||(this.zone={})).offset=function(t){if(!t)return 0;var e=t.match(/([+-]|\d\d)/g),n=60*e[1]+(+e[2]||0);return 0===n?0:"+"===e[0]?-n:n}(t);}],u=function(t){var e=s[t];return e&&(e.indexOf?e:e.s.concat(e.f))},h=function(t,e){var n,r=s.meridiem;if(r){for(var i=1;i<=24;i+=1)if(t.indexOf(r(i,0,e))>-1){n=i>12;break}}else n=t===(e?"pm":"PM");return n},d={A:[o,function(t){this.afternoon=h(t,!1);}],a:[o,function(t){this.afternoon=h(t,!0);}],S:[/\d/,function(t){this.milliseconds=100*+t;}],SS:[r,function(t){this.milliseconds=10*+t;}],SSS:[/\d{3}/,function(t){this.milliseconds=+t;}],s:[i,a("seconds")],ss:[i,a("seconds")],m:[i,a("minutes")],mm:[i,a("minutes")],H:[i,a("hours")],h:[i,a("hours")],HH:[i,a("hours")],hh:[i,a("hours")],D:[i,a("day")],DD:[r,a("day")],Do:[o,function(t){var e=s.ordinal,n=t.match(/\d+/);if(this.day=n[0],e)for(var r=1;r<=31;r+=1)e(r).replace(/\[|\]/g,"")===t&&(this.day=r);}],M:[i,a("month")],MM:[r,a("month")],MMM:[o,function(t){var e=u("months"),n=(u("monthsShort")||e.map(function(t){return t.substr(0,3)})).indexOf(t)+1;if(n<1)throw new Error;this.month=n%12||n;}],MMMM:[o,function(t){var e=u("months").indexOf(t)+1;if(e<1)throw new Error;this.month=e%12||e;}],Y:[/[+-]?\d+/,a("year")],YY:[r,function(t){t=+t,this.year=t+(t>68?1900:2e3);}],YYYY:[/\d{4}/,a("year")],Z:f,ZZ:f};var c=function(t,r,i){try{var o=function(t){for(var r=(t=e(t,s&&s.formats)).match(n),i=r.length,o=0;o<i;o+=1){var a=r[o],f=d[a],u=f&&f[0],h=f&&f[1];r[o]=h?{regex:u,parser:h}:a.replace(/^\[|\]$/g,"");}return function(t){for(var e={},n=0,o=0;n<i;n+=1){var s=r[n];if("string"==typeof s)o+=s.length;else {var a=s.regex,f=s.parser,u=t.substr(o),h=a.exec(u)[0];f.call(e,h),t=t.replace(h,"");}}return function(t){var e=t.afternoon;if(void 0!==e){var n=t.hours;e?n<12&&(t.hours+=12):12===n&&(t.hours=0),delete t.afternoon;}}(e),e}}(r)(t),a=o.year,f=o.month,u=o.day,h=o.hours,c=o.minutes,m=o.seconds,l=o.milliseconds,M=o.zone,Y=new Date,v=u||(a||f?1:Y.getDate()),p=a||Y.getFullYear(),D=0;a&&!f||(D=f>0?f-1:Y.getMonth());var y=h||0,L=c||0,g=m||0,$=l||0;return M?new Date(Date.UTC(p,D,v,y,L,g,$+60*M.offset*1e3)):i?new Date(Date.UTC(p,D,v,y,L,g,$)):new Date(p,D,v,y,L,g,$)}catch(t){return new Date("")}};return function(t,e,n){n.p.customParseFormat=!0;var r=e.prototype,i=r.parse;r.parse=function(t){var e=t.date,r=t.utc,o=t.args;this.$u=r;var a=o[1];if("string"==typeof a){var f=!0===o[2],u=!0===o[3],h=f||u,d=o[2];u&&(d=o[2]),s=this.$locale(),!f&&d&&(s=n.Ls[d]),this.$d=c(e,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),h&&e!==this.format(a)&&(this.$d=new Date("")),s={};}else if(a instanceof Array)for(var m=a.length,l=1;l<=m;l+=1){o[1]=a[l-1];var M=n.apply(this,o);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}l===m&&(this.$d=new Date(""));}else i.call(this,t);};}});
});

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

var _arrayPush = arrayPush;

/** `Object#toString` result references. */
var argsTag$2 = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike_1(value) && _baseGetTag(value) == argsTag$2;
}

var _baseIsArguments = baseIsArguments;

/** Used for built-in method references. */
var objectProto$9 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable$1 = objectProto$9.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
  return isObjectLike_1(value) && hasOwnProperty$7.call(value, 'callee') &&
    !propertyIsEnumerable$1.call(value, 'callee');
};

var isArguments_1 = isArguments;

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

var isArray_1 = isArray;

/** Built-in value references. */
var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray_1(value) || isArguments_1(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

var _isFlattenable = isFlattenable;

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = _isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        _arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

var _baseFlatten = baseFlatten;

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

var identity_1 = identity;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

var _apply = apply;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return _apply(func, this, otherArgs);
  };
}

var _overRest = overRest;

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

var constant_1 = constant;

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag$1 = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject_1(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = _baseGetTag(value);
  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
}

var isFunction_1 = isFunction;

/** Used to detect overreaching core-js shims. */
var coreJsData = _root['__core-js_shared__'];

var _coreJsData = coreJsData;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

var _isMasked = isMasked;

/** Used for built-in method references. */
var funcProto$1 = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString$1 = funcProto$1.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

var _toSource = toSource;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto$8 = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty$6 = objectProto$8.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty$6).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject_1(value) || _isMasked(value)) {
    return false;
  }
  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value));
}

var _baseIsNative = baseIsNative;

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

var _getValue = getValue;

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}

var _getNative = getNative;

var defineProperty = (function() {
  try {
    var func = _getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

var _defineProperty = defineProperty;

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty ? identity_1 : function(func, string) {
  return _defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant_1(string),
    'writable': true
  });
};

var _baseSetToString = baseSetToString;

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

var _shortOut = shortOut;

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString);

var _setToString = setToString;

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return _setToString(_overRest(func, start, identity_1), func + '');
}

var _baseRest = baseRest;

/* Built-in method references that are verified to be native. */
var nativeCreate = _getNative(Object, 'create');

var _nativeCreate = nativeCreate;

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}

var _hashClear = hashClear;

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

var _hashDelete = hashDelete;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto$7 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$5 = objectProto$7.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED$2 ? undefined : result;
  }
  return hasOwnProperty$5.call(data, key) ? data[key] : undefined;
}

var _hashGet = hashGet;

/** Used for built-in method references. */
var objectProto$6 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$4 = objectProto$6.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? (data[key] !== undefined) : hasOwnProperty$4.call(data, key);
}

var _hashHas = hashHas;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;
  return this;
}

var _hashSet = hashSet;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;

var _Hash = Hash;

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

var _listCacheClear = listCacheClear;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

var eq_1 = eq;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_1(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

var _assocIndexOf = assocIndexOf;

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

var _listCacheDelete = listCacheDelete;

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

var _listCacheGet = listCacheGet;

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}

var _listCacheHas = listCacheHas;

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

var _listCacheSet = listCacheSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;

var _ListCache = ListCache;

/* Built-in method references that are verified to be native. */
var Map$1 = _getNative(_root, 'Map');

var _Map = Map$1;

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash,
    'map': new (_Map || _ListCache),
    'string': new _Hash
  };
}

var _mapCacheClear = mapCacheClear;

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

var _isKeyable = isKeyable;

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

var _getMapData = getMapData;

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

var _mapCacheDelete = mapCacheDelete;

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}

var _mapCacheGet = mapCacheGet;

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}

var _mapCacheHas = mapCacheHas;

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

var _mapCacheSet = mapCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;

var _MapCache = MapCache;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

var _setCacheAdd = setCacheAdd;

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

var _setCacheHas = setCacheHas;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;

var _SetCache = SetCache;

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

var _baseFindIndex = baseFindIndex;

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

var _baseIsNaN = baseIsNaN;

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

var _strictIndexOf = strictIndexOf;

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? _strictIndexOf(array, value, fromIndex)
    : _baseFindIndex(array, _baseIsNaN, fromIndex);
}

var _baseIndexOf = baseIndexOf;

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && _baseIndexOf(array, value, 0) > -1;
}

var _arrayIncludes = arrayIncludes;

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

var _arrayIncludesWith = arrayIncludesWith;

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

var _cacheHas = cacheHas;

/* Built-in method references that are verified to be native. */
var Set$1 = _getNative(_root, 'Set');

var _Set = Set$1;

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

var noop_1 = noop;

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

var _setToArray = setToArray;

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(_Set && (1 / _setToArray(new _Set([,-0]))[1]) == INFINITY) ? noop_1 : function(values) {
  return new _Set(values);
};

var _createSet = createSet;

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE$1 = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = _arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE$1) {
    var set = iteratee ? null : _createSet(array);
    if (set) {
      return _setToArray(set);
    }
    isCommon = false;
    includes = _cacheHas;
    seen = new _SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

var _baseUniq = baseUniq;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER$1 = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
}

var isLength_1 = isLength;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength_1(value.length) && !isFunction_1(value);
}

var isArrayLike_1 = isArrayLike;

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike_1(value) && isArrayLike_1(value);
}

var isArrayLikeObject_1 = isArrayLikeObject;

/**
 * Creates an array of unique values, in order, from all given arrays using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.union([2], [1, 2]);
 * // => [2, 1]
 */
var union = _baseRest(function(arrays) {
  return _baseUniq(_baseFlatten(arrays, 1, isArrayLikeObject_1, true));
});

var union_1 = union;

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache;
  this.size = 0;
}

var _stackClear = stackClear;

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

var _stackDelete = stackDelete;

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

var _stackGet = stackGet;

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

var _stackHas = stackHas;

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache) {
    var pairs = data.__data__;
    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

var _stackSet = stackSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;

var _Stack = Stack;

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

var _arraySome = arraySome;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$3 = 1,
    COMPARE_UNORDERED_FLAG$1 = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG$1) ? new _SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!_arraySome(other, function(othValue, othIndex) {
            if (!_cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

var _equalArrays = equalArrays;

/** Built-in value references. */
var Uint8Array = _root.Uint8Array;

var _Uint8Array = Uint8Array;

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

var _mapToArray = mapToArray;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$2 = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag$1 = '[object Boolean]',
    dateTag$1 = '[object Date]',
    errorTag$1 = '[object Error]',
    mapTag$2 = '[object Map]',
    numberTag$1 = '[object Number]',
    regexpTag$1 = '[object RegExp]',
    setTag$2 = '[object Set]',
    stringTag$1 = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag$1 = '[object ArrayBuffer]',
    dataViewTag$2 = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag$2:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag$1:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag$1:
    case dateTag$1:
    case numberTag$1:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq_1(+object, +other);

    case errorTag$1:
      return object.name == other.name && object.message == other.message;

    case regexpTag$1:
    case stringTag$1:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag$2:
      var convert = _mapToArray;

    case setTag$2:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;
      convert || (convert = _setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

var _equalByTag = equalByTag;

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object));
}

var _baseGetAllKeys = baseGetAllKeys;

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

var _arrayFilter = arrayFilter;

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

var stubArray_1 = stubArray;

/** Used for built-in method references. */
var objectProto$5 = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto$5.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray_1 : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

var _getSymbols = getSymbols;

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

var _baseTimes = baseTimes;

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

var stubFalse_1 = stubFalse;

var isBuffer_1 = createCommonjsModule(function (module, exports) {
/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse_1;

module.exports = isBuffer;
});

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

var _isIndex = isIndex;

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]',
    arrayTag$1 = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag$1 = '[object Map]',
    numberTag = '[object Number]',
    objectTag$2 = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag$1 = '[object Set]',
    stringTag = '[object String]',
    weakMapTag$1 = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag$1 = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag$1] = typedArrayTags[numberTag] =
typedArrayTags[objectTag$2] = typedArrayTags[regexpTag] =
typedArrayTags[setTag$1] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag$1] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike_1(value) &&
    isLength_1(value.length) && !!typedArrayTags[_baseGetTag(value)];
}

var _baseIsTypedArray = baseIsTypedArray;

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

var _baseUnary = baseUnary;

var _nodeUtil = createCommonjsModule(function (module, exports) {
/** Detect free variable `exports`. */
var freeExports = exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && _freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;
});

/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;

var isTypedArray_1 = isTypedArray;

/** Used for built-in method references. */
var objectProto$4 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_1(value),
      isArg = !isArr && isArguments_1(value),
      isBuff = !isArr && !isArg && isBuffer_1(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? _baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty$3.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           _isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

var _arrayLikeKeys = arrayLikeKeys;

/** Used for built-in method references. */
var objectProto$3 = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$3;

  return value === proto;
}

var _isPrototype = isPrototype;

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

var _overArg = overArg;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = _overArg(Object.keys, Object);

var _nativeKeys = nativeKeys;

/** Used for built-in method references. */
var objectProto$2 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!_isPrototype(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$2.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

var _baseKeys = baseKeys;

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object);
}

var keys_1 = keys;

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return _baseGetAllKeys(object, keys_1, _getSymbols);
}

var _getAllKeys = getAllKeys;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$1 = 1;

/** Used for built-in method references. */
var objectProto$1 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1,
      objProps = _getAllKeys(object),
      objLength = objProps.length,
      othProps = _getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty$1.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

var _equalObjects = equalObjects;

/* Built-in method references that are verified to be native. */
var DataView = _getNative(_root, 'DataView');

var _DataView = DataView;

/* Built-in method references that are verified to be native. */
var Promise$1 = _getNative(_root, 'Promise');

var _Promise = Promise$1;

/* Built-in method references that are verified to be native. */
var WeakMap$1 = _getNative(_root, 'WeakMap');

var _WeakMap = WeakMap$1;

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag$1 = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = _toSource(_DataView),
    mapCtorString = _toSource(_Map),
    promiseCtorString = _toSource(_Promise),
    setCtorString = _toSource(_Set),
    weakMapCtorString = _toSource(_WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (_Map && getTag(new _Map) != mapTag) ||
    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
    (_Set && getTag(new _Set) != setTag) ||
    (_WeakMap && getTag(new _WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = _baseGetTag(value),
        Ctor = result == objectTag$1 ? value.constructor : undefined,
        ctorString = Ctor ? _toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

var _getTag = getTag;

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_1(object),
      othIsArr = isArray_1(other),
      objTag = objIsArr ? arrayTag : _getTag(object),
      othTag = othIsArr ? arrayTag : _getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer_1(object)) {
    if (!isBuffer_1(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack);
    return (objIsArr || isTypedArray_1(object))
      ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new _Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack);
  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

var _baseIsEqualDeep = baseIsEqualDeep;

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike_1(value) && !isObjectLike_1(other))) {
    return value !== value && other !== other;
  }
  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

var _baseIsEqual = baseIsEqual;

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return _baseIsEqual(value, other);
}

var isEqual_1 = isEqual;

var advancedFormat = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t,r){var n=t.prototype,a=n.format;r.en.ordinal=function(e){var t=["th","st","nd","rd"],r=e%100;return "["+e+(t[(r-20)%10]||t[r]||t[0])+"]"},n.format=function(e){var t=this,r=this.$locale(),n=this.$utils(),s=(e||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,function(e){switch(e){case"Q":return Math.ceil((t.$M+1)/3);case"Do":return r.ordinal(t.$D);case"gggg":return t.weekYear();case"GGGG":return t.isoWeekYear();case"wo":return r.ordinal(t.week(),"W");case"w":case"ww":return n.s(t.week(),"w"===e?1:2,"0");case"W":case"WW":return n.s(t.isoWeek(),"W"===e?1:2,"0");case"k":case"kk":return n.s(String(0===t.$H?24:t.$H),"k"===e?1:2,"0");case"X":return Math.floor(t.$d.getTime()/1e3);case"x":return t.$d.getTime();case"z":return "["+t.offsetName()+"]";case"zzz":return "["+t.offsetName("long")+"]";default:return e}});return a.bind(this)(s)};}});
});

var weekOfYear = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){var e="week",t="year";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),"day");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,"millisecond"),d=this.diff(a,e,!0);return d<0?r(this).startOf("week").week():Math.ceil(d)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)};}});
});

var weekYear = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t){t.prototype.weekYear=function(){var e=this.month(),t=this.week(),n=this.year();return 1===t&&11===e?n+1:0===e&&t>=52?n-1:n};}});
});

var dayOfYear = createCommonjsModule(function (module, exports) {
!function(t,e){module.exports=e();}(commonjsGlobal,function(){return function(t,e){e.prototype.dayOfYear=function(t){var e=Math.round((this.startOf("day")-this.startOf("year"))/864e5)+1;return null==t?e:this.add(t-e,"day")};}});
});

var isSameOrAfter = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)};}});
});

var isSameOrBefore = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t){t.prototype.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)};}});
});

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

/* eslint no-console:0 */
var formatRegExp = /%[sdj%]/g;
var warning = function warning() {}; // don't print warning message when in production env or node runtime

if (typeof process !== 'undefined' && process.env && "development" !== 'production' && typeof window !== 'undefined' && typeof document !== 'undefined') {
  warning = function warning(type, errors) {
    if (typeof console !== 'undefined' && console.warn) {
      if (errors.every(function (e) {
        return typeof e === 'string';
      })) {
        console.warn(type, errors);
      }
    }
  };
}

function convertFieldsError(errors) {
  if (!errors || !errors.length) return null;
  var fields = {};
  errors.forEach(function (error) {
    var field = error.field;
    fields[field] = fields[field] || [];
    fields[field].push(error);
  });
  return fields;
}
function format() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var i = 1;
  var f = args[0];
  var len = args.length;

  if (typeof f === 'function') {
    return f.apply(null, args.slice(1));
  }

  if (typeof f === 'string') {
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') {
        return '%';
      }

      if (i >= len) {
        return x;
      }

      switch (x) {
        case '%s':
          return String(args[i++]);

        case '%d':
          return Number(args[i++]);

        case '%j':
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return '[Circular]';
          }

          break;

        default:
          return x;
      }
    });
    return str;
  }

  return f;
}

function isNativeStringType(type) {
  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'date' || type === 'pattern';
}

function isEmptyValue(value, type) {
  if (value === undefined || value === null) {
    return true;
  }

  if (type === 'array' && Array.isArray(value) && !value.length) {
    return true;
  }

  if (isNativeStringType(type) && typeof value === 'string' && !value) {
    return true;
  }

  return false;
}

function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total = 0;
  var arrLength = arr.length;

  function count(errors) {
    results.push.apply(results, errors);
    total++;

    if (total === arrLength) {
      callback(results);
    }
  }

  arr.forEach(function (a) {
    func(a, count);
  });
}

function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;

  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }

    var original = index;
    index = index + 1;

    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }

  next([]);
}

function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function (k) {
    ret.push.apply(ret, objArr[k]);
  });
  return ret;
}

var AsyncValidationError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(AsyncValidationError, _Error);

  function AsyncValidationError(errors, fields) {
    var _this;

    _this = _Error.call(this, 'Async Validation Error') || this;
    _this.errors = errors;
    _this.fields = fields;
    return _this;
  }

  return AsyncValidationError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var _pending = new Promise(function (resolve, reject) {
      var next = function next(errors) {
        callback(errors);
        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve();
      };

      var flattenArr = flattenObjArr(objArr);
      asyncSerialArray(flattenArr, func, next);
    });

    _pending["catch"](function (e) {
      return e;
    });

    return _pending;
  }

  var firstFields = option.firstFields || [];

  if (firstFields === true) {
    firstFields = Object.keys(objArr);
  }

  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];
  var pending = new Promise(function (resolve, reject) {
    var next = function next(errors) {
      results.push.apply(results, errors);
      total++;

      if (total === objArrLength) {
        callback(results);
        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve();
      }
    };

    if (!objArrKeys.length) {
      callback(results);
      resolve();
    }

    objArrKeys.forEach(function (key) {
      var arr = objArr[key];

      if (firstFields.indexOf(key) !== -1) {
        asyncSerialArray(arr, func, next);
      } else {
        asyncParallelArray(arr, func, next);
      }
    });
  });
  pending["catch"](function (e) {
    return e;
  });
  return pending;
}
function complementError(rule) {
  return function (oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }

    return {
      message: typeof oe === 'function' ? oe() : oe,
      field: oe.field || rule.fullField
    };
  };
}
function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value = source[s];

        if (typeof value === 'object' && typeof target[s] === 'object') {
          target[s] = _extends(_extends({}, target[s]), value);
        } else {
          target[s] = value;
        }
      }
    }
  }

  return target;
}

/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function required(rule, value, source, errors, options, type) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {
    errors.push(format(options.messages.required, rule.fullField));
  }
}

/**
 *  Rule for validating whitespace.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function whitespace(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === '') {
    errors.push(format(options.messages.whitespace, rule.fullField));
  }
}

/* eslint max-len:0 */

var pattern = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$", 'i'),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};
var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  "float": function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }

    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function' && !isNaN(value.getTime());
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }

    return typeof value === 'number';
  },
  object: function object(value) {
    return typeof value === 'object' && !types.array(value);
  },
  method: function method(value) {
    return typeof value === 'function';
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern.url);
  },
  hex: function hex(value) {
    return typeof value === 'string' && !!value.match(pattern.hex);
  }
};
/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function type(rule, value, source, errors, options) {
  if (rule.required && value === undefined) {
    required(rule, value, source, errors, options);
    return;
  }

  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];
  var ruleType = rule.type;

  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
    } // straight typeof check

  } else if (ruleType && typeof value !== rule.type) {
    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
}

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function range(rule, value, source, errors, options) {
  var len = typeof rule.len === 'number';
  var min = typeof rule.min === 'number';
  var max = typeof rule.max === 'number'; // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）

  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === 'number';
  var str = typeof value === 'string';
  var arr = Array.isArray(value);

  if (num) {
    key = 'number';
  } else if (str) {
    key = 'string';
  } else if (arr) {
    key = 'array';
  } // if the value is not of a supported type for range validation
  // the validation rule rule should use the
  // type property to also test for a particular type


  if (!key) {
    return false;
  }

  if (arr) {
    val = value.length;
  }

  if (str) {
    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
    val = value.replace(spRegexp, '_').length;
  }

  if (len) {
    if (val !== rule.len) {
      errors.push(format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min && !max && val < rule.min) {
    errors.push(format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max && !min && val > rule.max) {
    errors.push(format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min && max && (val < rule.min || val > rule.max)) {
    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
}

var ENUM = 'enum';
/**
 *  Rule for validating a value exists in an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function enumerable(rule, value, source, errors, options) {
  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];

  if (rule[ENUM].indexOf(value) === -1) {
    errors.push(format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
  }
}

/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function pattern$1(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
      // flag is accidentally set to `true`, which in a validation scenario
      // is not necessary and the result might be misleading
      rule.pattern.lastIndex = 0;

      if (!rule.pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === 'string') {
      var _pattern = new RegExp(rule.pattern);

      if (!_pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
}

var rules = {
  required: required,
  whitespace: whitespace,
  type: type,
  range: range,
  "enum": enumerable,
  pattern: pattern$1
};

/**
 *  Performs validation for string types.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function string(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value, 'string') && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options, 'string');

    if (!isEmptyValue(value, 'string')) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
      rules.pattern(rule, value, source, errors, options);

      if (rule.whitespace === true) {
        rules.whitespace(rule, value, source, errors, options);
      }
    }
  }

  callback(errors);
}

/**
 *  Validates a function.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function method(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates a number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function number(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (value === '') {
      value = undefined;
    }

    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates a boolean.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function _boolean(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates the regular expression type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function regexp(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (!isEmptyValue(value)) {
      rules.type(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates a number is an integer.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function integer(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates a number is a floating point number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function floatFn(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates an array.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function array(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if ((value === undefined || value === null) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options, 'array');

    if (value !== undefined && value !== null) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates an object.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function object(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules.type(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

var ENUM$1 = 'enum';
/**
 *  Validates an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function enumerable$1(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (value !== undefined) {
      rules[ENUM$1](rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Validates a regular expression pattern.
 *
 *  Performs validation when a rule only contains
 *  a pattern property but is not declared as a string type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function pattern$2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value, 'string') && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (!isEmptyValue(value, 'string')) {
      rules.pattern(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

function date(rule, value, callback, source, options) {
  // console.log('integer rule called %j', rule);
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);

  if (validate) {
    if (isEmptyValue(value, 'date') && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);

    if (!isEmptyValue(value, 'date')) {
      var dateObject;

      if (value instanceof Date) {
        dateObject = value;
      } else {
        dateObject = new Date(value);
      }

      rules.type(rule, dateObject, source, errors, options);

      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }

  callback(errors);
}

function required$1(rule, value, callback, source, options) {
  var errors = [];
  var type = Array.isArray(value) ? 'array' : typeof value;
  rules.required(rule, value, source, errors, options, type);
  callback(errors);
}

function type$1(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value, ruleType) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options, ruleType);

    if (!isEmptyValue(value, ruleType)) {
      rules.type(rule, value, source, errors, options);
    }
  }

  callback(errors);
}

/**
 *  Performs validation for any type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function any(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);

  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }

    rules.required(rule, value, source, errors, options);
  }

  callback(errors);
}

var validators = {
  string: string,
  method: method,
  number: number,
  "boolean": _boolean,
  regexp: regexp,
  integer: integer,
  "float": floatFn,
  array: array,
  object: object,
  "enum": enumerable$1,
  pattern: pattern$2,
  date: date,
  url: type$1,
  hex: type$1,
  email: type$1,
  required: required$1,
  any: any
};

function newMessages() {
  return {
    "default": 'Validation error on field %s',
    required: '%s is required',
    "enum": '%s must be one of %s',
    whitespace: '%s cannot be empty',
    date: {
      format: '%s date %s is invalid for format %s',
      parse: '%s date could not be parsed, %s is invalid ',
      invalid: '%s date %s is invalid'
    },
    types: {
      string: '%s is not a %s',
      method: '%s is not a %s (function)',
      array: '%s is not an %s',
      object: '%s is not an %s',
      number: '%s is not a %s',
      date: '%s is not a %s',
      "boolean": '%s is not a %s',
      integer: '%s is not an %s',
      "float": '%s is not a %s',
      regexp: '%s is not a valid %s',
      email: '%s is not a valid %s',
      url: '%s is not a valid %s',
      hex: '%s is not a valid %s'
    },
    string: {
      len: '%s must be exactly %s characters',
      min: '%s must be at least %s characters',
      max: '%s cannot be longer than %s characters',
      range: '%s must be between %s and %s characters'
    },
    number: {
      len: '%s must equal %s',
      min: '%s cannot be less than %s',
      max: '%s cannot be greater than %s',
      range: '%s must be between %s and %s'
    },
    array: {
      len: '%s must be exactly %s in length',
      min: '%s cannot be less than %s in length',
      max: '%s cannot be greater than %s in length',
      range: '%s must be between %s and %s in length'
    },
    pattern: {
      mismatch: '%s value %s does not match pattern %s'
    },
    clone: function clone() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}
var messages = newMessages();

/**
 *  Encapsulates a validation schema.
 *
 *  @param descriptor An object declaring validation rules
 *  for this schema.
 */

function Schema(descriptor) {
  this.rules = null;
  this._messages = messages;
  this.define(descriptor);
}

Schema.prototype = {
  messages: function messages(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }

    return this._messages;
  },
  define: function define(rules) {
    if (!rules) {
      throw new Error('Cannot configure a schema with no rules');
    }

    if (typeof rules !== 'object' || Array.isArray(rules)) {
      throw new Error('Rules must be an object');
    }

    this.rules = {};
    var z;
    var item;

    for (z in rules) {
      if (rules.hasOwnProperty(z)) {
        item = rules[z];
        this.rules[z] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_, o, oc) {
    var _this = this;

    if (o === void 0) {
      o = {};
    }

    if (oc === void 0) {
      oc = function oc() {};
    }

    var source = source_;
    var options = o;
    var callback = oc;

    if (typeof options === 'function') {
      callback = options;
      options = {};
    }

    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback();
      }

      return Promise.resolve();
    }

    function complete(results) {
      var i;
      var errors = [];
      var fields = {};

      function add(e) {
        if (Array.isArray(e)) {
          var _errors;

          errors = (_errors = errors).concat.apply(_errors, e);
        } else {
          errors.push(e);
        }
      }

      for (i = 0; i < results.length; i++) {
        add(results[i]);
      }

      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        fields = convertFieldsError(errors);
      }

      callback(errors, fields);
    }

    if (options.messages) {
      var messages$1 = this.messages();

      if (messages$1 === messages) {
        messages$1 = newMessages();
      }

      deepMerge(messages$1, options.messages);
      options.messages = messages$1;
    } else {
      options.messages = this.messages();
    }

    var arr;
    var value;
    var series = {};
    var keys = options.keys || Object.keys(this.rules);
    keys.forEach(function (z) {
      arr = _this.rules[z];
      value = source[z];
      arr.forEach(function (r) {
        var rule = r;

        if (typeof rule.transform === 'function') {
          if (source === source_) {
            source = _extends({}, source);
          }

          value = source[z] = rule.transform(value);
        }

        if (typeof rule === 'function') {
          rule = {
            validator: rule
          };
        } else {
          rule = _extends({}, rule);
        }

        rule.validator = _this.getValidationMethod(rule);
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this.getType(rule);

        if (!rule.validator) {
          return;
        }

        series[z] = series[z] || [];
        series[z].push({
          rule: rule,
          value: value,
          source: source,
          field: z
        });
      });
    });
    var errorFields = {};
    return asyncMap(series, options, function (data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === 'object' || rule.type === 'array') && (typeof rule.fields === 'object' || typeof rule.defaultField === 'object');
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;

      function addFullfield(key, schema) {
        return _extends(_extends({}, schema), {}, {
          fullField: rule.fullField + "." + key
        });
      }

      function cb(e) {
        if (e === void 0) {
          e = [];
        }

        var errors = e;

        if (!Array.isArray(errors)) {
          errors = [errors];
        }

        if (!options.suppressWarning && errors.length) {
          Schema.warning('async-validator:', errors);
        }

        if (errors.length && rule.message !== undefined) {
          errors = [].concat(rule.message);
        }

        errors = errors.map(complementError(rule));

        if (options.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }

        if (!deep) {
          doIt(errors);
        } else {
          // if rule is required but the target object
          // does not exist fail at the rule level and don't
          // go deeper
          if (rule.required && !data.value) {
            if (rule.message !== undefined) {
              errors = [].concat(rule.message).map(complementError(rule));
            } else if (options.error) {
              errors = [options.error(rule, format(options.messages.required, rule.field))];
            }

            return doIt(errors);
          }

          var fieldsSchema = {};

          if (rule.defaultField) {
            for (var k in data.value) {
              if (data.value.hasOwnProperty(k)) {
                fieldsSchema[k] = rule.defaultField;
              }
            }
          }

          fieldsSchema = _extends(_extends({}, fieldsSchema), data.rule.fields);

          for (var f in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f)) {
              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
            }
          }

          var schema = new Schema(fieldsSchema);
          schema.messages(options.messages);

          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }

          schema.validate(data.value, data.rule.options || options, function (errs) {
            var finalErrors = [];

            if (errors && errors.length) {
              finalErrors.push.apply(finalErrors, errors);
            }

            if (errs && errs.length) {
              finalErrors.push.apply(finalErrors, errs);
            }

            doIt(finalErrors.length ? finalErrors : null);
          });
        }
      }

      var res;

      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data.value, cb, data.source, options);
      } else if (rule.validator) {
        res = rule.validator(rule, data.value, cb, data.source, options);

        if (res === true) {
          cb();
        } else if (res === false) {
          cb(rule.message || rule.field + " fails");
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }

      if (res && res.then) {
        res.then(function () {
          return cb();
        }, function (e) {
          return cb(e);
        });
      }
    }, function (results) {
      complete(results);
    });
  },
  getType: function getType(rule) {
    if (rule.type === undefined && rule.pattern instanceof RegExp) {
      rule.type = 'pattern';
    }

    if (typeof rule.validator !== 'function' && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format('Unknown rule type %s', rule.type));
    }

    return rule.type || 'string';
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === 'function') {
      return rule.validator;
    }

    var keys = Object.keys(rule);
    var messageIndex = keys.indexOf('message');

    if (messageIndex !== -1) {
      keys.splice(messageIndex, 1);
    }

    if (keys.length === 1 && keys[0] === 'required') {
      return validators.required;
    }

    return validators[this.getType(rule)] || false;
  }
};

Schema.register = function register(type, validator) {
  if (typeof validator !== 'function') {
    throw new Error('Cannot register a validator by type, validator is not a function');
  }

  validators[type] = validator;
};

Schema.warning = warning;
Schema.messages = messages;
Schema.validators = validators;

var Ce="undefined"==typeof window;Object.freeze({}),Object.freeze([]);const xe=()=>{},we=Object.assign,Se=Array.isArray,_e=e=>"function"==typeof e,Ee=e=>"string"==typeof e,Me=e=>null!==e&&"object"==typeof e,Te=Object.prototype.toString,Ne=e=>Te.call(e),De=e=>Ne(e).slice(8,-1),Oe=e=>{const t=Object.create(null);return l=>t[l]||(t[l]=e(l))},Pe=/-(\w)/g,Ve=Oe((e=>e.replace(Pe,((e,t)=>t?t.toUpperCase():"")))),Ie=Oe((e=>e.charAt(0).toUpperCase()+e.slice(1)));class Be extends Error{constructor(e){super(e),this.name="ElementPlusError";}}var Ae=(e,t)=>{throw new Be(`[${e}] ${t}`)};function Le(e,t){console.warn(new Be(`[${e}] ${t}`));}const ze=(e,t="")=>{let l=e;return t.split(".").map((e=>{l=null==l?void 0:l[e];})),l};function Fe(e,t,l){let a=e;const n=(t=(t=t.replace(/\[(\w+)\]/g,".$1")).replace(/^\./,"")).split(".");let o=0;for(;o<n.length-1&&(a||l);o++){const e=n[o];if(!(e in a)){if(l)throw new Error("please transfer a valid prop path to form item!");break}a=a[e];}return {o:a,k:n[o],v:null==a?void 0:a[n[o]]}}const Re=()=>Math.floor(1e4*Math.random()),$e=e=>e||0===e?Array.isArray(e)?e:[e]:[],He=e=>"boolean"==typeof e,We=e=>"number"==typeof e;function je(e){let t=!1;return function(...l){t||(t=!0,window.requestAnimationFrame((()=>{e.apply(this,l),t=!1;})));}}const Ke=e=>{clearTimeout(e.value),e.value=null;};function Ye(e){return Object.keys(e).map((t=>[t,e[t]]))}function qe(){const t=getCurrentInstance();return "$ELEMENT"in t.proxy?t.proxy.$ELEMENT:{}}const Ue=function(e,t){return e.find(t)};function Ge(e){return !!(!e&&0!==e||Se(e)&&!e.length||Me(e)&&!Object.keys(e).length)}function Xe(e){return e.reduce(((e,t)=>{const l=Array.isArray(t)?Xe(t):t;return e.concat(l)}),[])}function Qe(e){return Array.from(new Set(e))}function Ze(e){return e.value}const Je=function(e,t,l,a=!1){e&&t&&l&&e.addEventListener(t,l,a);},et=function(e,t,l,a=!1){e&&t&&l&&e.removeEventListener(t,l,a);};function tt(e,t){if(!e||!t)return !1;if(-1!==t.indexOf(" "))throw new Error("className should not contain space.");return e.classList?e.classList.contains(t):(" "+e.className+" ").indexOf(" "+t+" ")>-1}function lt(e,t){if(!e)return;let l=e.className;const a=(t||"").split(" ");for(let t=0,n=a.length;t<n;t++){const n=a[t];n&&(e.classList?e.classList.add(n):tt(e,n)||(l+=" "+n));}e.classList||(e.className=l);}function at(e,t){if(!e||!t)return;const l=t.split(" ");let a=" "+e.className+" ";for(let t=0,n=l.length;t<n;t++){const n=l[t];n&&(e.classList?e.classList.remove(n):tt(e,n)&&(a=a.replace(" "+n+" "," ")));}e.classList||(e.className=(a||"").replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g,""));}const nt=function(e,t){if(!Ce){if(!e||!t)return null;"float"===(t=Ve(t))&&(t="cssFloat");try{const l=e.style[t];if(l)return l;const a=document.defaultView.getComputedStyle(e,"");return a?a[t]:""}catch(l){return e.style[t]}}},ot=(e,t)=>{if(Ce)return;return nt(e,null==t?"overflow":t?"overflow-y":"overflow-x").match(/(scroll|auto)/)},it=(e,t)=>{if(Ce)return;let l=e;for(;l;){if([window,document,document.documentElement].includes(l))return window;if(ot(l,t))return l;l=l.parentNode;}return l},st=e=>e.stopPropagation(),ut=function(e){for(const t of e){const e=t.target.__resizeListeners__||[];e.length&&e.forEach((e=>{e();}));}},dt=function(e,t){!Ce&&e&&(e.__resizeListeners__||(e.__resizeListeners__=[],e.__ro__=new index(ut),e.__ro__.observe(e)),e.__resizeListeners__.push(t));},ct=function(e,t){e&&e.__resizeListeners__&&(e.__resizeListeners__.splice(e.__resizeListeners__.indexOf(t),1),e.__resizeListeners__.length||e.__ro__.disconnect());};var pt=defineComponent({name:"ElAffix",props:{zIndex:{type:Number,default:100},target:{type:String,default:""},offset:{type:Number,default:0},position:{type:String,default:"top"}},emits:["scroll","change"],setup(e,{emit:t}){const s=ref(null),u=ref(null),d=ref(null),c=reactive({fixed:!1,height:0,width:0,scrollTop:0,clientHeight:0,transform:0}),p=computed((()=>({height:c.fixed?c.height+"px":"",width:c.fixed?c.width+"px":""}))),h=computed((()=>{if(!c.fixed)return;const t=e.offset?e.offset+"px":0,l=c.transform?`translateY(${c.transform}px)`:"";return {height:c.height+"px",width:c.width+"px",top:"top"===e.position?t:"",bottom:"bottom"===e.position?t:"",transform:l,zIndex:e.zIndex}})),v=()=>{const t=u.value.getBoundingClientRect(),l=s.value.getBoundingClientRect();if(c.height=t.height,c.width=t.width,c.scrollTop=d.value===window?document.documentElement.scrollTop:d.value.scrollTop,c.clientHeight=document.documentElement.clientHeight,"top"===e.position)if(e.target){const a=l.bottom-e.offset-c.height;c.fixed=e.offset>t.top&&l.bottom>0,c.transform=a<0?a:0;}else c.fixed=e.offset>t.top;else if(e.target){const a=c.clientHeight-l.top-e.offset-c.height;c.fixed=c.clientHeight-e.offset<t.bottom&&c.clientHeight>l.top,c.transform=a<0?-a:0;}else c.fixed=c.clientHeight-e.offset<t.bottom;},m=()=>{v(),t("scroll",{scrollTop:c.scrollTop,fixed:c.fixed});};return watch((()=>c.fixed),(()=>{t("change",c.fixed);})),onMounted((()=>{if(e.target){if(s.value=document.querySelector(e.target),!s.value)throw new Error("target is not existed: "+e.target)}else s.value=document.documentElement;d.value=it(u.value),Je(d.value,"scroll",m),dt(u.value,v);})),onBeforeUnmount((()=>{et(d.value,"scroll",m),ct(u.value,v);})),{root:u,state:c,rootStyle:p,affixStyle:h}}});pt.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{ref:"root",class:"el-affix",style:e.rootStyle},[createVNode("div",{class:{"el-affix--fixed":e.state.fixed},style:e.affixStyle},[renderSlot(e.$slots,"default")],6)],4)},pt.__file="packages/affix/src/index.vue",pt.install=e=>{e.component(pt.name,pt);};const vt={success:"el-icon-success",warning:"el-icon-warning",error:"el-icon-error"};var mt=defineComponent({name:"ElAlert",props:{title:{type:String,default:""},description:{type:String,default:""},type:{type:String,default:"info"},closable:{type:Boolean,default:!0},closeText:{type:String,default:""},showIcon:Boolean,center:Boolean,effect:{type:String,default:"light",validator:e=>["light","dark"].indexOf(e)>-1}},emits:["close"],setup(e,t){const a=ref(!0),o=computed((()=>"el-alert--"+e.type)),i=computed((()=>vt[e.type]||"el-icon-info")),r=computed((()=>e.description||t.slots.default?"is-big":"")),s=computed((()=>e.description||t.slots.default?"is-bold":""));return {visible:a,typeClass:o,iconClass:i,isBigIcon:r,isBoldTitle:s,close:e=>{a.value=!1,t.emit("close",e);}}}});const ft={class:"el-alert__content"},gt={key:1,class:"el-alert__description"};mt.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,{name:"el-alert-fade"},{default:withCtx((()=>[withDirectives(createVNode("div",{class:["el-alert",[e.typeClass,e.center?"is-center":"","is-"+e.effect]],role:"alert"},[e.showIcon?(openBlock(),createBlock("i",{key:0,class:["el-alert__icon",[e.iconClass,e.isBigIcon]]},null,2)):createCommentVNode("v-if",!0),createVNode("div",ft,[e.title||e.$slots.title?(openBlock(),createBlock("span",{key:0,class:["el-alert__title",[e.isBoldTitle]]},[renderSlot(e.$slots,"title",{},(()=>[createTextVNode(toDisplayString(e.title),1)]))],2)):createCommentVNode("v-if",!0),e.$slots.default||e.description?(openBlock(),createBlock("p",gt,[renderSlot(e.$slots,"default",{},(()=>[createTextVNode(toDisplayString(e.description),1)]))])):createCommentVNode("v-if",!0),e.closable?(openBlock(),createBlock("i",{key:2,class:["el-alert__closebtn",{"is-customed":""!==e.closeText,"el-icon-close":""===e.closeText}],onClick:t[1]||(t[1]=(...t)=>e.close&&e.close(...t))},toDisplayString(e.closeText),3)):createCommentVNode("v-if",!0)])],2),[[vShow,e.visible]])])),_:1})},mt.__file="packages/alert/src/index.vue",mt.install=e=>{e.component(mt.name,mt);};var yt=defineComponent({name:"ElAside",props:{width:{type:String,default:"300px"}}});yt.render=function(e,t,l,a,n,o){return openBlock(),createBlock("aside",{class:"el-aside",style:{width:e.width}},[renderSlot(e.$slots,"default")],4)},yt.__file="packages/container/src/aside.vue",yt.install=e=>{e.component(yt.name,yt);};const Ct=["class","style"],xt=/^on[A-Z]/;var wt=(t={})=>{const{excludeListeners:l=!1,excludeKeys:n=[]}=t,o=getCurrentInstance(),i=shallowRef({}),r=n.concat(Ct);return o.attrs=reactive(o.attrs),watchEffect((()=>{const e=Ye(o.attrs).reduce(((e,[t,a])=>(r.includes(t)||l&&xt.test(t)||(e[t]=a),e)),{});i.value=e;})),i};let St;function _t(){if(Ce)return 0;if(void 0!==St)return St;const e=document.createElement("div");e.className="el-scrollbar__wrap",e.style.visibility="hidden",e.style.width="100px",e.style.position="absolute",e.style.top="-9999px",document.body.appendChild(e);const t=e.offsetWidth;e.style.overflow="scroll";const l=document.createElement("div");l.style.width="100%",e.appendChild(l);const a=l.offsetWidth;return e.parentNode.removeChild(e),St=t-a,St}var Et=e=>{isRef(e)||Ae("[useLockScreen]","You need to pass a ref param to this function");let t=0,l=!1,a="0",n=0;watch(e,(e=>{if(e){l=!tt(document.body,"el-popup-parent--hidden"),l&&(a=document.body.style.paddingRight,n=parseInt(nt(document.body,"paddingRight"),10)),t=_t();const e=document.documentElement.clientHeight<document.body.scrollHeight,o=nt(document.body,"overflowY");t>0&&(e||"scroll"===o)&&l&&(document.body.style.paddingRight=n+t+"px"),lt(document.body,"el-popup-parent--hidden");}else l&&(document.body.style.paddingRight=a,at(document.body,"el-popup-parent--hidden")),l=!0;}));},Mt=(e,t)=>{let l;watch((()=>e.value),(e=>{var a,n;e?(l=document.activeElement,isRef(t)&&(null===(n=(a=t.value).focus)||void 0===n||n.call(a))):l.focus();}));};const Tt={tab:"Tab",enter:"Enter",space:"Space",left:"ArrowLeft",up:"ArrowUp",right:"ArrowRight",down:"ArrowDown",esc:"Escape",delete:"Delete",backspace:"Backspace"},Nt=e=>{return "fixed"!==getComputedStyle(e).position&&null!==e.offsetParent},Dt=e=>Array.from(e.querySelectorAll('a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])')).filter(Ot).filter(Nt),Ot=e=>{if(e.tabIndex>0||0===e.tabIndex&&null!==e.getAttribute("tabIndex"))return !0;if(e.disabled)return !1;switch(e.nodeName){case"A":return !!e.href&&"ignore"!==e.rel;case"INPUT":return !("hidden"===e.type||"file"===e.type);case"BUTTON":case"SELECT":case"TEXTAREA":return !0;default:return !1}},Pt=function(e,t,...l){let a;a=t.includes("mouse")||t.includes("click")?"MouseEvents":t.includes("key")?"KeyboardEvent":"HTMLEvents";const n=document.createEvent(a);return n.initEvent(t,...l),e.dispatchEvent(n),e},Vt=[];var It=(e,t)=>{watch((()=>t.value),(t=>{t?Vt.push(e):Vt.splice(Vt.findIndex((t=>t===e)),1);}));};Ce||Je(document,"keydown",(e=>{if(0!==Vt.length&&e.code===Tt.esc){e.stopPropagation();Vt[Vt.length-1].handleClose();}}));const Bt=new Map;let At;function Lt(e,t){let l=[];return Array.isArray(t.arg)?l=t.arg:l.push(t.arg),function(a,n){const o=t.instance.popperRef,i=a.target,r=n.target,s=!t||!t.instance,u=!i||!r,d=e.contains(i)||e.contains(r),c=e===i,p=l.length&&l.some((e=>null==e?void 0:e.contains(i)))||l.length&&l.includes(r),h=o&&(o.contains(i)||o.contains(r));s||u||d||c||p||h||t.value();}}Ce||(Je(document,"mousedown",(e=>At=e)),Je(document,"mouseup",(e=>{for(const{documentHandler:t}of Bt.values())t(e,At);})));const zt={beforeMount(e,t){Bt.set(e,{documentHandler:Lt(e,t),bindingFn:t.value});},updated(e,t){Bt.set(e,{documentHandler:Lt(e,t),bindingFn:t.value});},unmounted(e){Bt.delete(e);}};var Ft={beforeMount(e,t){let l,a=null;const n=()=>t.value&&t.value(),o=()=>{Date.now()-l<100&&n(),clearInterval(a),a=null;};Je(e,"mousedown",(e=>{0===e.button&&(l=Date.now(),function(e,t,l){const a=function(...n){l&&l.apply(this,n),et(e,t,a);};Je(e,t,a);}(document,"mouseup",o),clearInterval(a),a=setInterval(n,100));}));}};const Rt=[],$t=e=>{if(0===Rt.length)return;const l=Rt[Rt.length-1]["_trap-focus-children"];if(l.length>0&&e.code===Tt.tab){if(1===l.length)return e.preventDefault(),void(document.activeElement!==l[0]&&l[0].focus());const a=e.shiftKey,n=e.target===l[0],o=e.target===l[l.length-1];if(n&&a&&(e.preventDefault(),l[l.length-1].focus()),o&&!a&&(e.preventDefault(),l[0].focus()),"test"==="development");}},Ht={beforeMount(e){e["_trap-focus-children"]=Dt(e),Rt.push(e),Rt.length<=1&&Je(document,"keydown",$t);},updated(e){nextTick((()=>{e["_trap-focus-children"]=Dt(e);}));},unmounted(){Rt.shift(),0===Rt.length&&et(document,"keydown",$t);}},Wt="undefined"!=typeof navigator&&navigator.userAgent.toLowerCase().indexOf("firefox")>-1,jt={beforeMount(e,t){!function(e,t){if(e&&e.addEventListener){const l=function(e){const l=normalizeWheel(e);t&&t.apply(this,[e,l]);};Wt?e.addEventListener("DOMMouseScroll",l):e.onmousewheel=l;}}(e,t.value);}},Kt="update:modelValue",Yt={validating:"el-icon-loading",success:"el-icon-circle-check",error:"el-icon-circle-close"};function qt(e){return /([(\uAC00-\uD7AF)|(\u3130-\u318F)])+/gi.test(e)}const Ut=e=>["","large","medium","small","mini"].includes(e),Gt="el.form.addField",Xt="el.form.removeField";var Qt=defineComponent({name:"ElForm",props:{model:Object,rules:Object,labelPosition:String,labelWidth:String,labelSuffix:{type:String,default:""},inline:Boolean,inlineMessage:Boolean,statusIcon:Boolean,showMessage:{type:Boolean,default:!0},size:String,disabled:Boolean,validateOnRuleChange:{type:Boolean,default:!0},hideRequiredAsterisk:{type:Boolean,default:!1}},emits:["validate"],setup(e,{emit:t}){const i=ie(),r=[];watch((()=>e.rules),(()=>{r.forEach((e=>{e.removeValidateEvents(),e.addValidateEvents();})),e.validateOnRuleChange&&d((()=>({})));})),i.on(Gt,(e=>{e&&r.push(e);})),i.on(Xt,(e=>{e.prop&&r.splice(r.indexOf(e),1);}));const s=()=>{e.model?r.forEach((e=>{e.resetField();})):console.warn("[Element Warn][Form]model is required for resetFields to work.");},u=(e=[])=>{(e.length?"string"==typeof e?r.filter((t=>e===t.prop)):r.filter((t=>e.indexOf(t.prop)>-1)):r).forEach((e=>{e.clearValidate();}));},d=t=>{if(!e.model)return void console.warn("[Element Warn][Form]model is required for validate to work!");let l;"function"!=typeof t&&(l=new Promise(((e,l)=>{t=function(t,a){t?e(!0):l(a);};}))),0===r.length&&t(!0);let a=!0,n=0,o={};for(const e of r)e.validate("",((e,l)=>{e&&(a=!1),o=Object.assign(Object.assign({},o),l),++n===r.length&&t(a,o);}));return l},c=(e,t)=>{e=[].concat(e);const l=r.filter((t=>-1!==e.indexOf(t.prop)));r.length?l.forEach((e=>{e.validate("",t);})):console.warn("[Element Warn]please pass correct props!");},p=reactive(Object.assign(Object.assign(Object.assign({formMitt:i},toRefs(e)),{resetFields:s,clearValidate:u,validateField:c,emit:t}),function(){const e=ref([]);function t(t){const l=e.value.indexOf(t);return -1===l&&console.warn("[Element Warn][ElementForm]unexpected width "+t),l}return {autoLabelWidth:computed((()=>{if(!e.value.length)return "0";const t=Math.max(...e.value);return t?t+"px":""})),registerLabelWidth:function(l,a){if(l&&a){const n=t(a);e.value.splice(n,1,l);}else l&&e.value.push(l);},deregisterLabelWidth:function(l){const a=t(l);a>-1&&e.value.splice(a,1);}}}()));return provide("elForm",p),{validate:d,resetFields:s,clearValidate:u,validateField:c}}});Qt.render=function(e,t,l,a,n,o){return openBlock(),createBlock("form",{class:["el-form",[e.labelPosition?"el-form--label-"+e.labelPosition:"",{"el-form--inline":e.inline}]]},[renderSlot(e.$slots,"default")],2)},Qt.__file="packages/form/src/form.vue",Qt.install=e=>{e.component(Qt.name,Qt);};const Zt=Qt;let Jt;const el=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing"];function tl(e,t=1,l=null){var a;Jt||(Jt=document.createElement("textarea"),document.body.appendChild(Jt));const{paddingSize:n,borderSize:o,boxSizing:i,contextStyle:r}=function(e){const t=window.getComputedStyle(e),l=t.getPropertyValue("box-sizing"),a=parseFloat(t.getPropertyValue("padding-bottom"))+parseFloat(t.getPropertyValue("padding-top")),n=parseFloat(t.getPropertyValue("border-bottom-width"))+parseFloat(t.getPropertyValue("border-top-width"));return {contextStyle:el.map((e=>`${e}:${t.getPropertyValue(e)}`)).join(";"),paddingSize:a,borderSize:n,boxSizing:l}}(e);Jt.setAttribute("style",r+";\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important;\n"),Jt.value=e.value||e.placeholder||"";let s=Jt.scrollHeight;const u={};"border-box"===i?s+=o:"content-box"===i&&(s-=n),Jt.value="";const d=Jt.scrollHeight-n;if(null!==t){let e=d*t;"border-box"===i&&(e=e+n+o),s=Math.max(e,s),u.minHeight=e+"px";}if(null!==l){let e=d*l;"border-box"===i&&(e=e+n+o),s=Math.min(e,s);}return u.height=s+"px",null===(a=Jt.parentNode)||void 0===a||a.removeChild(Jt),Jt=null,u}const ll={suffix:"append",prefix:"prepend"};var al=defineComponent({name:"ElInput",inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},type:{type:String,default:"text"},size:{type:String,validator:Ut},resize:{type:String,validator:e=>["none","both","horizontal","vertical"].includes(e)},autosize:{type:[Boolean,Object],default:!1},autocomplete:{type:String,default:"off",validator:e=>["on","off"].includes(e)},placeholder:{type:String},form:{type:String,default:""},disabled:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},showPassword:{type:Boolean,default:!1},showWordLimit:{type:Boolean,default:!1},suffixIcon:{type:String,default:""},prefixIcon:{type:String,default:""},label:{type:String},tabindex:{type:String},validateEvent:{type:Boolean,default:!0}},emits:[Kt,"input","change","focus","blur","clear","mouseleave","mouseenter","keydown"],setup(t,a){const r=getCurrentInstance(),s=wt(),u=qe(),d=inject("elForm",{}),c=inject("elFormItem",{}),p=ref(null),h=ref(null),v=ref(!1),m=ref(!1),f=ref(!1),g=ref(!1),b=shallowRef({}),k=computed((()=>p.value||h.value)),C=computed((()=>t.size||c.size||u.size)),w=computed((()=>d.statusIcon)),S=computed((()=>c.validateState||"")),M=computed((()=>Yt[S.value])),T=computed((()=>Object.assign(Object.assign({},b.value),{resize:t.resize}))),N=computed((()=>t.disabled||d.disabled)),D=computed((()=>null===t.modelValue||void 0===t.modelValue?"":String(t.modelValue))),O=computed((()=>a.attrs.maxlength)),P=computed((()=>t.clearable&&!N.value&&!t.readonly&&D.value&&(v.value||m.value))),V=computed((()=>t.showPassword&&!N.value&&!t.readonly&&(!!D.value||v.value))),I=computed((()=>t.showWordLimit&&a.attrs.maxlength&&("text"===t.type||"textarea"===t.type)&&!N.value&&!t.readonly&&!t.showPassword)),B=computed((()=>"number"==typeof t.modelValue?String(t.modelValue).length:(t.modelValue||"").length)),A=computed((()=>I.value&&B.value>O.value)),L=()=>{const{type:e,autosize:l}=t;if(!Ce&&"textarea"===e)if(l){const e=Me(l)?l.minRows:void 0,t=Me(l)?l.maxRows:void 0;b.value=tl(h.value,e,t);}else b.value={minHeight:tl(h.value).minHeight};},z=()=>{const e=k.value;e&&e.value!==D.value&&(e.value=D.value);},F=e=>{const{el:t}=r.vnode,l=Array.from(t.querySelectorAll(".el-input__"+e)).find((e=>e.parentNode===t));if(!l)return;const n=ll[e];a.slots[n]?l.style.transform=`translateX(${"suffix"===e?"-":""}${t.querySelector(".el-input-group__"+n).offsetWidth}px)`:l.removeAttribute("style");},R=()=>{F("prefix"),F("suffix");},$=e=>{const{value:t}=e.target;f.value||t!==D.value&&(a.emit(Kt,t),a.emit("input",t),nextTick(z));},H=()=>{nextTick((()=>{k.value.focus();}));};watch((()=>t.modelValue),(e=>{var l;nextTick(L),t.validateEvent&&(null===(l=c.formItemMitt)||void 0===l||l.emit("el.form.change",[e]));})),watch(D,(()=>{z();})),watch((()=>t.type),(()=>{nextTick((()=>{z(),L(),R();}));})),onMounted((()=>{z(),R(),nextTick(L);})),onUpdated((()=>{nextTick(R);}));return {input:p,textarea:h,attrs:s,inputSize:C,validateState:S,validateIcon:M,textareaStyle:T,resizeTextarea:L,inputDisabled:N,showClear:P,showPwdVisible:V,isWordLimitVisible:I,upperLimit:O,textLength:B,hovering:m,inputExceed:A,passwordVisible:g,inputOrTextarea:k,handleInput:$,handleChange:e=>{a.emit("change",e.target.value);},handleFocus:e=>{v.value=!0,a.emit("focus",e);},handleBlur:e=>{var l;v.value=!1,a.emit("blur",e),t.validateEvent&&(null===(l=c.formItemMitt)||void 0===l||l.emit("el.form.blur",[t.modelValue]));},handleCompositionStart:()=>{f.value=!0;},handleCompositionUpdate:e=>{const t=e.target.value,l=t[t.length-1]||"";f.value=!qt(l);},handleCompositionEnd:e=>{f.value&&(f.value=!1,$(e));},handlePasswordVisible:()=>{g.value=!g.value,H();},clear:()=>{a.emit(Kt,""),a.emit("change",""),a.emit("clear");},select:()=>{k.value.select();},focus:H,blur:()=>{k.value.blur();},getSuffixVisible:()=>a.slots.suffix||t.suffixIcon||P.value||t.showPassword||I.value||S.value&&w.value,onMouseLeave:e=>{m.value=!1,a.emit("mouseleave",e);},onMouseEnter:e=>{m.value=!0,a.emit("mouseenter",e);},handleKeydown:e=>{a.emit("keydown",e);}}}});const nl={key:0,class:"el-input-group__prepend"},ol={key:2,class:"el-input__prefix"},il={key:3,class:"el-input__suffix"},rl={class:"el-input__suffix-inner"},sl={key:3,class:"el-input__count"},ul={class:"el-input__count-inner"},dl={key:4,class:"el-input-group__append"},cl={key:2,class:"el-input__count"};al.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["textarea"===e.type?"el-textarea":"el-input",e.inputSize?"el-input--"+e.inputSize:"",{"is-disabled":e.inputDisabled,"is-exceed":e.inputExceed,"el-input-group":e.$slots.prepend||e.$slots.append,"el-input-group--append":e.$slots.append,"el-input-group--prepend":e.$slots.prepend,"el-input--prefix":e.$slots.prefix||e.prefixIcon,"el-input--suffix":e.$slots.suffix||e.suffixIcon||e.clearable||e.showPassword},e.$attrs.class],style:e.$attrs.style,onMouseenter:t[19]||(t[19]=(...t)=>e.onMouseEnter&&e.onMouseEnter(...t)),onMouseleave:t[20]||(t[20]=(...t)=>e.onMouseLeave&&e.onMouseLeave(...t))},["textarea"!==e.type?(openBlock(),createBlock(Fragment,{key:0},[createCommentVNode(" 前置元素 "),e.$slots.prepend?(openBlock(),createBlock("div",nl,[renderSlot(e.$slots,"prepend")])):createCommentVNode("v-if",!0),"textarea"!==e.type?(openBlock(),createBlock("input",mergeProps({key:1,ref:"input",class:"el-input__inner"},e.attrs,{type:e.showPassword?e.passwordVisible?"text":"password":e.type,disabled:e.inputDisabled,readonly:e.readonly,autocomplete:e.autocomplete,tabindex:e.tabindex,"aria-label":e.label,placeholder:e.placeholder,onCompositionstart:t[1]||(t[1]=(...t)=>e.handleCompositionStart&&e.handleCompositionStart(...t)),onCompositionupdate:t[2]||(t[2]=(...t)=>e.handleCompositionUpdate&&e.handleCompositionUpdate(...t)),onCompositionend:t[3]||(t[3]=(...t)=>e.handleCompositionEnd&&e.handleCompositionEnd(...t)),onInput:t[4]||(t[4]=(...t)=>e.handleInput&&e.handleInput(...t)),onFocus:t[5]||(t[5]=(...t)=>e.handleFocus&&e.handleFocus(...t)),onBlur:t[6]||(t[6]=(...t)=>e.handleBlur&&e.handleBlur(...t)),onChange:t[7]||(t[7]=(...t)=>e.handleChange&&e.handleChange(...t)),onKeydown:t[8]||(t[8]=(...t)=>e.handleKeydown&&e.handleKeydown(...t))}),null,16,["type","disabled","readonly","autocomplete","tabindex","aria-label","placeholder"])):createCommentVNode("v-if",!0),createCommentVNode(" 前置内容 "),e.$slots.prefix||e.prefixIcon?(openBlock(),createBlock("span",ol,[renderSlot(e.$slots,"prefix"),e.prefixIcon?(openBlock(),createBlock("i",{key:0,class:["el-input__icon",e.prefixIcon]},null,2)):createCommentVNode("v-if",!0)])):createCommentVNode("v-if",!0),createCommentVNode(" 后置内容 "),e.getSuffixVisible()?(openBlock(),createBlock("span",il,[createVNode("span",rl,[e.showClear&&e.showPwdVisible&&e.isWordLimitVisible?createCommentVNode("v-if",!0):(openBlock(),createBlock(Fragment,{key:0},[renderSlot(e.$slots,"suffix"),e.suffixIcon?(openBlock(),createBlock("i",{key:0,class:["el-input__icon",e.suffixIcon]},null,2)):createCommentVNode("v-if",!0)],64)),e.showClear?(openBlock(),createBlock("i",{key:1,class:"el-input__icon el-icon-circle-close el-input__clear",onMousedown:t[9]||(t[9]=withModifiers((()=>{}),["prevent"])),onClick:t[10]||(t[10]=(...t)=>e.clear&&e.clear(...t))},null,32)):createCommentVNode("v-if",!0),e.showPwdVisible?(openBlock(),createBlock("i",{key:2,class:"el-input__icon el-icon-view el-input__clear",onClick:t[11]||(t[11]=(...t)=>e.handlePasswordVisible&&e.handlePasswordVisible(...t))})):createCommentVNode("v-if",!0),e.isWordLimitVisible?(openBlock(),createBlock("span",sl,[createVNode("span",ul,toDisplayString(e.textLength)+"/"+toDisplayString(e.upperLimit),1)])):createCommentVNode("v-if",!0)]),e.validateState?(openBlock(),createBlock("i",{key:0,class:["el-input__icon","el-input__validateIcon",e.validateIcon]},null,2)):createCommentVNode("v-if",!0)])):createCommentVNode("v-if",!0),createCommentVNode(" 后置元素 "),e.$slots.append?(openBlock(),createBlock("div",dl,[renderSlot(e.$slots,"append")])):createCommentVNode("v-if",!0)],64)):(openBlock(),createBlock("textarea",mergeProps({key:1,ref:"textarea",class:"el-textarea__inner"},e.attrs,{tabindex:e.tabindex,disabled:e.inputDisabled,readonly:e.readonly,autocomplete:e.autocomplete,style:e.textareaStyle,"aria-label":e.label,placeholder:e.placeholder,onCompositionstart:t[12]||(t[12]=(...t)=>e.handleCompositionStart&&e.handleCompositionStart(...t)),onCompositionupdate:t[13]||(t[13]=(...t)=>e.handleCompositionUpdate&&e.handleCompositionUpdate(...t)),onCompositionend:t[14]||(t[14]=(...t)=>e.handleCompositionEnd&&e.handleCompositionEnd(...t)),onInput:t[15]||(t[15]=(...t)=>e.handleInput&&e.handleInput(...t)),onFocus:t[16]||(t[16]=(...t)=>e.handleFocus&&e.handleFocus(...t)),onBlur:t[17]||(t[17]=(...t)=>e.handleBlur&&e.handleBlur(...t)),onChange:t[18]||(t[18]=(...t)=>e.handleChange&&e.handleChange(...t))}),null,16,["tabindex","disabled","readonly","autocomplete","aria-label","placeholder"])),e.isWordLimitVisible&&"textarea"===e.type?(openBlock(),createBlock("span",cl,toDisplayString(e.textLength)+"/"+toDisplayString(e.upperLimit),1)):createCommentVNode("v-if",!0)],38)},al.__file="packages/input/src/index.vue",al.install=e=>{e.component(al.name,al);};const pl=al,hl={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};var vl=defineComponent({name:"Bar",props:{vertical:Boolean,size:String,move:Number},setup(e){const t=ref(null),a=ref(null),o=inject("scrollbar",{}),s=inject("scrollbar-wrap",{}),u=computed((()=>hl[e.vertical?"vertical":"horizontal"])),d=ref({}),c=ref(null),p=ref(!1);let h=null;const v=e=>{e.stopImmediatePropagation(),c.value=!0,Je(document,"mousemove",m),Je(document,"mouseup",f),h=document.onselectstart,document.onselectstart=()=>!1;},m=e=>{if(!1===c.value)return;const l=d.value[u.value.axis];if(!l)return;const n=100*(-1*(t.value.getBoundingClientRect()[u.value.direction]-e[u.value.client])-(a.value[u.value.offset]-l))/t.value[u.value.offset];s.value[u.value.scroll]=n*s.value[u.value.scrollSize]/100;},f=()=>{c.value=!1,d.value[u.value.axis]=0,et(document,"mousemove",m),document.onselectstart=h;},g=computed((()=>function({move:e,size:t,bar:l}){const a={},n=`translate${l.axis}(${e}%)`;return a[l.size]=t,a.transform=n,a.msTransform=n,a.webkitTransform=n,a}({size:e.size,move:e.move,bar:u.value}))),b=()=>{p.value=!!e.size;},y=()=>{p.value=!1;};return onMounted((()=>{Je(o.value,"mousemove",b),Je(o.value,"mouseleave",y);})),onBeforeUnmount((()=>{et(document,"mouseup",f),et(o.value,"mousemove",b),et(o.value,"mouseleave",y);})),{instance:t,thumb:a,bar:u,clickTrackHandler:e=>{const l=100*(Math.abs(e.target.getBoundingClientRect()[u.value.direction]-e[u.value.client])-a.value[u.value.offset]/2)/t.value[u.value.offset];s.value[u.value.scroll]=l*s.value[u.value.scrollSize]/100;},clickThumbHandler:e=>{e.stopPropagation(),e.ctrlKey||[1,2].includes(e.button)||(v(e),d.value[u.value.axis]=e.currentTarget[u.value.offset]-(e[u.value.client]-e.currentTarget.getBoundingClientRect()[u.value.direction]));},thumbStyle:g,visible:p}}});vl.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,{name:"el-scrollbar-fade"},{default:withCtx((()=>[withDirectives(createVNode("div",{ref:"instance",class:["el-scrollbar__bar","is-"+e.bar.key],onMousedown:t[2]||(t[2]=(...t)=>e.clickTrackHandler&&e.clickTrackHandler(...t))},[createVNode("div",{ref:"thumb",class:"el-scrollbar__thumb",style:e.thumbStyle,onMousedown:t[1]||(t[1]=(...t)=>e.clickThumbHandler&&e.clickThumbHandler(...t))},null,36)],34),[[vShow,e.visible]])])),_:1})},vl.__file="packages/scrollbar/src/bar.vue";var ml=defineComponent({name:"ElScrollbar",components:{Bar:vl},props:{native:{type:Boolean,default:!1},wrapStyle:{type:[String,Array],default:""},wrapClass:{type:[String,Array],default:""},viewClass:{type:[String,Array],default:""},viewStyle:{type:[String,Array],default:""},noresize:Boolean,tag:{type:String,default:"div"}},setup(e){const t=ref("0"),a=ref("0"),o=ref(0),s=ref(0),u=ref(null),d=ref(null),c=ref(null);provide("scrollbar",u),provide("scrollbar-wrap",d);const p=()=>{if(!d.value)return;const e=100*d.value.clientHeight/d.value.scrollHeight,l=100*d.value.clientWidth/d.value.scrollWidth;a.value=e<100?e+"%":"",t.value=l<100?l+"%":"";},h=computed((()=>Array.isArray(e.wrapStyle)?function(e){const t={};for(let l=0;l<e.length;l++)e[l]&&we(t,e[l]);return t}(e.wrapStyle):e.wrapStyle));return onMounted((()=>{e.native||(nextTick(p),e.noresize||(dt(c.value,p),addEventListener("resize",p)));})),onBeforeUnmount((()=>{e.native||e.noresize||(ct(c.value,p),removeEventListener("resize",p));})),{moveX:o,moveY:s,sizeWidth:t,sizeHeight:a,style:h,scrollbar:u,wrap:d,resize:c,update:p,handleScroll:()=>{!e.native&&d.value&&(s.value=100*d.value.scrollTop/d.value.clientHeight,o.value=100*d.value.scrollLeft/d.value.clientWidth);}}}});const fl={ref:"scrollbar",class:"el-scrollbar"};ml.render=function(e,t,l,a,n,o){const i=resolveComponent("bar");return openBlock(),createBlock("div",fl,[createVNode("div",{ref:"wrap",class:[e.wrapClass,"el-scrollbar__wrap",e.native?"":"el-scrollbar__wrap--hidden-default"],style:e.style,onScroll:t[1]||(t[1]=(...t)=>e.handleScroll&&e.handleScroll(...t))},[(openBlock(),createBlock(resolveDynamicComponent(e.tag),{ref:"resize",class:["el-scrollbar__view",e.viewClass],style:e.viewStyle},{default:withCtx((()=>[renderSlot(e.$slots,"default")])),_:3},8,["class","style"]))],38),e.native?createCommentVNode("v-if",!0):(openBlock(),createBlock(Fragment,{key:0},[createVNode(i,{move:e.moveX,size:e.sizeWidth},null,8,["move","size"]),createVNode(i,{vertical:"",move:e.moveY,size:e.sizeHeight},null,8,["move","size"])],64))],512)},ml.__file="packages/scrollbar/src/index.vue",ml.install=e=>{e.component(ml.name,ml);};const gl=ml;var bl;!function(e){e[e.TEXT=1]="TEXT",e[e.CLASS=2]="CLASS",e[e.STYLE=4]="STYLE",e[e.PROPS=8]="PROPS",e[e.FULL_PROPS=16]="FULL_PROPS",e[e.HYDRATE_EVENTS=32]="HYDRATE_EVENTS",e[e.STABLE_FRAGMENT=64]="STABLE_FRAGMENT",e[e.KEYED_FRAGMENT=128]="KEYED_FRAGMENT",e[e.UNKEYED_FRAGMENT=256]="UNKEYED_FRAGMENT",e[e.NEED_PATCH=512]="NEED_PATCH",e[e.DYNAMIC_SLOTS=1024]="DYNAMIC_SLOTS",e[e.HOISTED=-1]="HOISTED",e[e.BAIL=-2]="BAIL";}(bl||(bl={}));const yl=e=>e.type===Fragment,kl=e=>e.type===Comment;function Cl(e,t){if(!kl(e))return yl(e)||(e=>"template"===e.type)(e)?t>0?xl(e.children,t-1):void 0:e}const xl=(e,t=3)=>Array.isArray(e)?Cl(e[0],t):Cl(e,t);function wl(e,t,l,a,n){return openBlock(),createBlock(e,t,l,a,n)}const _l=e=>{e.preventDefault(),e.stopPropagation();},El=()=>{null==Ol||Ol.doOnModalClick();};let Ml,Tl=!1;const Nl=function(){if(Ce)return;let e=Ol.modalDom;return e?Tl=!0:(Tl=!1,e=document.createElement("div"),Ol.modalDom=e,Je(e,"touchmove",_l),Je(e,"click",El)),e},Dl={},Ol={modalFade:!0,modalDom:void 0,zIndex:Ml,getInstance:function(e){return Dl[e]},register:function(e,t){e&&t&&(Dl[e]=t);},deregister:function(e){e&&(Dl[e]=null,delete Dl[e]);},nextZIndex:function(){return ++Ol.zIndex},modalStack:[],doOnModalClick:function(){const e=Ol.modalStack[Ol.modalStack.length-1];if(!e)return;const t=Ol.getInstance(e.id);t&&t.closeOnClickModal.value&&t.close();},openModal:function(e,t,l,a,n){if(Ce)return;if(!e||void 0===t)return;this.modalFade=n;const o=this.modalStack;for(let t=0,l=o.length;t<l;t++){if(o[t].id===e)return}const i=Nl();if(lt(i,"v-modal"),this.modalFade&&!Tl&&lt(i,"v-modal-enter"),a){a.trim().split(/\s+/).forEach((e=>lt(i,e)));}setTimeout((()=>{at(i,"v-modal-enter");}),200),l&&l.parentNode&&11!==l.parentNode.nodeType?l.parentNode.appendChild(i):document.body.appendChild(i),t&&(i.style.zIndex=String(t)),i.tabIndex=0,i.style.display="",this.modalStack.push({id:e,zIndex:t,modalClass:a});},closeModal:function(e){const t=this.modalStack,l=Nl();if(t.length>0){const a=t[t.length-1];if(a.id===e){if(a.modalClass){a.modalClass.trim().split(/\s+/).forEach((e=>at(l,e)));}t.pop(),t.length>0&&(l.style.zIndex=t[t.length-1].zIndex);}else for(let l=t.length-1;l>=0;l--)if(t[l].id===e){t.splice(l,1);break}}0===t.length&&(this.modalFade&&lt(l,"v-modal-leave"),setTimeout((()=>{0===t.length&&(l.parentNode&&l.parentNode.removeChild(l),l.style.display="none",Ol.modalDom=void 0),at(l,"v-modal-leave");}),200));}};Object.defineProperty(Ol,"zIndex",{configurable:!0,get:()=>(void 0===Ml&&(Ml=2e3),Ml),set(e){Ml=e;}});function Pl(e,t=[]){const{arrow:l,arrowOffset:a,offset:n,gpuAcceleration:o}=e,i=[{name:"offset",options:{offset:[0,null!=n?n:12]}},{name:"preventOverflow",options:{padding:{top:2,bottom:2,left:5,right:5}}},{name:"flip",options:{padding:5}},{name:"computeStyles",options:{gpuAcceleration:o,adaptive:o}}];return l&&i.push({name:"arrow",options:{element:l,padding:null!=a?a:5}}),i.push(...t),i}var Vl;Ce||Je(window,"keydown",(function(e){if(e.code===Tt.esc){const e=function(){if(!Ce&&Ol.modalStack.length>0){const e=Ol.modalStack[Ol.modalStack.length-1];if(!e)return;return Ol.getInstance(e.id)}}();e&&e.closeOnPressEscape.value&&(e.handleClose?e.handleClose():e.handleAction?e.handleAction("cancel"):e.close());}})),function(e){e.DARK="dark",e.LIGHT="light";}(Vl||(Vl={}));var Il={arrowOffset:{type:Number,default:5},appendToBody:{type:Boolean,default:!0},autoClose:{type:Number,default:0},boundariesPadding:{type:Number,default:0},content:{type:String,default:""},class:{type:String,default:""},style:Object,hideAfter:{type:Number,default:200},cutoff:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},effect:{type:String,default:Vl.DARK},enterable:{type:Boolean,default:!0},manualMode:{type:Boolean,default:!1},showAfter:{type:Number,default:0},offset:{type:Number,default:12},placement:{type:String,default:"bottom"},popperClass:{type:String,default:""},pure:{type:Boolean,default:!1},popperOptions:{type:Object,default:()=>null},showArrow:{type:Boolean,default:!0},strategy:{type:String,default:"fixed"},transition:{type:String,default:"el-fade-in-linear"},trigger:{type:[String,Array],default:"hover"},visible:{type:Boolean,default:void 0},stopPopperMouseEvent:{type:Boolean,default:!0},gpuAcceleration:{type:Boolean,default:!0}};function Bl(e,{emit:t}){const i=ref(null),r=ref(null),s=ref(null),u="el-popper-"+Re();let d=null,c=null,p=null,h=!1;const v=()=>e.manualMode||"manual"===e.trigger,m=ref({zIndex:Ol.nextZIndex()}),f=function(e,t){return computed((()=>{var l;return Object.assign(Object.assign({placement:e.placement},e.popperOptions),{modifiers:Pl({arrow:t.arrow.value,arrowOffset:e.arrowOffset,offset:e.offset,gpuAcceleration:e.gpuAcceleration},null===(l=e.popperOptions)||void 0===l?void 0:l.modifiers)})}))}(e,{arrow:i}),g=reactive({visible:!!e.visible}),b=computed({get:()=>!e.disabled&&(He(e.visible)?e.visible:g.visible),set(l){v()||(He(e.visible)?t("update:visible",l):g.visible=l);}});function y(){e.autoClose>0&&(p=window.setTimeout((()=>{k();}),e.autoClose)),b.value=!0;}function k(){b.value=!1;}function C(){clearTimeout(c),clearTimeout(p);}const x=()=>{v()||e.disabled||(C(),0===e.showAfter?y():c=window.setTimeout((()=>{y();}),e.showAfter));},w=()=>{v()||(C(),e.hideAfter>0?p=window.setTimeout((()=>{S();}),e.hideAfter):S());},S=()=>{k(),e.disabled&&E(!0);};function _(){if(!Ze(b))return;const e=Ze(r),t=De(e).startsWith("HTML")?e:e.$el;d=createPopper(t,Ze(s),Ze(f)),d.update();}function E(e){!d||Ze(b)&&!e||M();}function M(){var e;null===(e=null==d?void 0:d.destroy)||void 0===e||e.call(d),d=null;}const T={};if(!v()){const t=()=>{Ze(b)?w():x();},l=e=>{switch(e.stopPropagation(),e.type){case"click":h?h=!1:t();break;case"mouseenter":x();break;case"mouseleave":w();break;case"focus":h=!0,x();break;case"blur":h=!1,w();}},a={click:["onClick"],hover:["onMouseenter","onMouseleave"],focus:["onFocus","onBlur"]},n=e=>{a[e].forEach((e=>{T[e]=l;}));};Se(e.trigger)?Object.values(e.trigger).map(n):n(e.trigger);}return watch(f,(e=>{d&&(d.setOptions(e),d.update());})),watch(b,(function(e){e&&(m.value.zIndex=Ol.nextZIndex(),_());})),{update:function(){Ze(b)&&(d?d.update():_());},doDestroy:E,show:x,hide:w,onPopperMouseEnter:function(){e.enterable&&"click"!==e.trigger&&clearTimeout(p);},onPopperMouseLeave:function(){const{trigger:t}=e;Ee(t)&&("click"===t||"focus"===t)||1===t.length&&("click"===t[0]||"focus"===t[0])||w();},onAfterEnter:()=>{t("after-enter");},onAfterLeave:()=>{M(),t("after-leave");},onBeforeEnter:()=>{t("before-enter");},onBeforeLeave:()=>{t("before-leave");},initializePopper:_,isManualMode:v,arrowRef:i,events:T,popperId:u,popperInstance:d,popperRef:s,popperStyle:m,triggerRef:r,visibility:b}}function Al(e,t){const{effect:l,name:a,stopPopperMouseEvent:n,popperClass:o,popperStyle:i,popperRef:r,pure:s,popperId:u,visibility:c,onMouseenter:m,onMouseleave:f,onAfterEnter:g,onAfterLeave:y,onBeforeEnter:k,onBeforeLeave:C}=e,x=[o,"el-popper","is-"+l,s?"is-pure":""],w=n?st:xe;return createVNode(Transition,{name:a,onAfterEnter:g,onAfterLeave:y,onBeforeEnter:k,onBeforeLeave:C},{default:withCtx((()=>[withDirectives(createVNode("div",{"aria-hidden":String(!c),class:x,style:null!=i?i:{},id:u,ref:null!=r?r:"popperRef",role:"tooltip",onMouseenter:m,onMouseleave:f,onClick:st,onMousedown:w,onMouseup:w},t,bl.CLASS|bl.STYLE|bl.PROPS|bl.HYDRATE_EVENTS,["aria-hidden","onMouseenter","onMouseleave","onMousedown","onMouseup","onClick","id"]),[[vShow,c]])]))},bl.PROPS,["name","onAfterEnter","onAfterLeave","onBeforeEnter","onBeforeLeave"])}function Ll(e,t){const l=xl(e,1);return l||Ae("renderTrigger","trigger expects single rooted node"),cloneVNode(l,t,!0)}function zl(e){return e?(openBlock(),createBlock("div",{ref:"arrowRef",class:"el-popper__arrow","data-popper-arrow":""},null,bl.NEED_PATCH)):(openBlock(),createBlock(Comment,null,""))}var Fl=defineComponent({name:"ElPopper",props:Il,emits:["update:visible","after-enter","after-leave","before-enter","before-leave"],setup(e,t){t.slots.trigger||Ae("ElPopper","Trigger must be provided");const l=Bl(e,t),a=()=>l.doDestroy(!0);return onMounted(l.initializePopper),onBeforeUnmount(a),onActivated(l.initializePopper),onDeactivated(a),l},render(){var e;const{$slots:t,appendToBody:l,class:a,style:n,effect:o,hide:i,onPopperMouseEnter:r,onPopperMouseLeave:s,onAfterEnter:u,onAfterLeave:p,onBeforeEnter:h,onBeforeLeave:m,popperClass:f,popperId:b,popperStyle:y,pure:k,showArrow:C,transition:x,visibility:w,stopPopperMouseEvent:S}=this,_=this.isManualMode(),E=zl(C),T=Al({effect:o,name:x,popperClass:f,popperId:b,popperStyle:y,pure:k,stopPopperMouseEvent:S,onMouseenter:r,onMouseleave:s,onAfterEnter:u,onAfterLeave:p,onBeforeEnter:h,onBeforeLeave:m,visibility:w},[renderSlot(t,"default",{},(()=>[toDisplayString(this.content)])),E]),N=null===(e=t.trigger)||void 0===e?void 0:e.call(t),D=Object.assign({ariaDescribedby:b,class:a,style:n,ref:"triggerRef"},this.events),O=_?Ll(N,D):withDirectives(Ll(N,D),[[zt,i]]);return wl(Fragment,null,[O,createVNode(Teleport,{to:"body",disabled:!l},[T],bl.PROPS,["disabled"])])}});Fl.__file="packages/popper/src/index.vue",Fl.install=e=>{e.component(Fl.name,Fl);};const Rl=Fl;var $l=defineComponent({name:"ElAutocomplete",components:{ElPopper:Rl,ElInput:pl,ElScrollbar:gl},directives:{clickoutside:zt},inheritAttrs:!1,props:{valueKey:{type:String,default:"value"},modelValue:{type:[String,Number],default:""},debounce:{type:Number,default:300},placement:{type:String,validator:e=>["top","top-start","top-end","bottom","bottom-start","bottom-end"].includes(e),default:"bottom-start"},fetchSuggestions:{type:Function,default:xe},popperClass:{type:String,default:""},triggerOnFocus:{type:Boolean,default:!0},selectWhenUnmatched:{type:Boolean,default:!1},hideLoading:{type:Boolean,default:!1},popperAppendToBody:{type:Boolean,default:!0},highlightFirstItem:{type:Boolean,default:!1}},emits:[Kt,"input","change","focus","blur","clear","select"],setup(e,t){const a=wt(),r=ref([]),s=ref(-1),u=ref(""),d=ref(!1),c=ref(!1),p=ref(!1),h=ref(null),v=ref(null),m=ref(null),f=computed((()=>"el-autocomplete-"+Re())),g=computed((()=>(Se(r.value)&&r.value.length>0||p.value)&&d.value)),b=computed((()=>!e.hideLoading&&p.value)),y=()=>{nextTick(m.value.update);};watch(g,(()=>{u.value=h.value.$el.offsetWidth+"px";})),onMounted((()=>{h.value.inputOrTextarea.setAttribute("role","textbox"),h.value.inputOrTextarea.setAttribute("aria-autocomplete","list"),h.value.inputOrTextarea.setAttribute("aria-controls","id"),h.value.inputOrTextarea.setAttribute("aria-activedescendant",`${f.value}-item-${s.value}`);const e=v.value.querySelector(".el-autocomplete-suggestion__list");e.setAttribute("role","listbox"),e.setAttribute("id",f.value);})),onUpdated(y);const k=t=>{c.value||(p.value=!0,y(),e.fetchSuggestions(t,(t=>{p.value=!1,c.value||(Se(t)?(r.value=t,s.value=e.highlightFirstItem?0:-1):Ae("ElAutocomplete","autocomplete suggestions must be an array"));})));},C=debounce_1(k,e.debounce),w=l=>{t.emit("input",l[e.valueKey]),t.emit(Kt,l[e.valueKey]),t.emit("select",l),nextTick((()=>{r.value=[],s.value=-1;}));};return {attrs:a,suggestions:r,highlightedIndex:s,dropdownWidth:u,activated:d,suggestionDisabled:c,loading:p,inputRef:h,regionRef:v,popper:m,id:f,suggestionVisible:g,suggestionLoading:b,getData:k,handleInput:l=>{if(t.emit("input",l),t.emit(Kt,l),c.value=!1,!e.triggerOnFocus&&!l)return c.value=!0,void(r.value=[]);C(l);},handleChange:e=>{t.emit("change",e);},handleFocus:l=>{d.value=!0,t.emit("focus",l),e.triggerOnFocus&&C(e.modelValue);},handleBlur:e=>{t.emit("blur",e);},handleClear:()=>{d.value=!1,t.emit(Kt,""),t.emit("clear");},handleKeyEnter:()=>{g.value&&s.value>=0&&s.value<r.value.length?w(r.value[s.value]):e.selectWhenUnmatched&&(t.emit("select",{value:e.modelValue}),nextTick((()=>{r.value=[],s.value=-1;})));},close:()=>{d.value=!1;},focus:()=>{h.value.focus();},select:w,highlight:e=>{if(!g.value||p.value)return;if(e<0)return void(s.value=-1);e>=r.value.length&&(e=r.value.length-1);const t=v.value.querySelector(".el-autocomplete-suggestion__wrap"),l=t.querySelectorAll(".el-autocomplete-suggestion__list li")[e],a=t.scrollTop,n=l.offsetTop;n+l.scrollHeight>a+t.clientHeight&&(t.scrollTop+=l.scrollHeight),n<a&&(t.scrollTop-=l.scrollHeight),s.value=e,h.value.inputOrTextarea.setAttribute("aria-activedescendant",`${f.value}-item-${s.value}`);}}}});const Hl={key:0},Wl=createVNode("i",{class:"el-icon-loading"},null,-1);$l.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveComponent("el-scrollbar"),p=resolveComponent("el-popper"),m=resolveDirective("clickoutside");return openBlock(),createBlock(p,{ref:"popper",visible:e.suggestionVisible,"onUpdate:visible":t[3]||(t[3]=t=>e.suggestionVisible=t),placement:e.placement,"popper-class":"el-autocomplete__popper "+e.popperClass,"append-to-body":e.popperAppendToBody,pure:"","manual-mode":"",effect:"light",trigger:"click",transition:"el-zoom-in-top","gpu-acceleration":!1},{trigger:withCtx((()=>[withDirectives(createVNode("div",{class:["el-autocomplete",e.$attrs.class],style:e.$attrs.style,role:"combobox","aria-haspopup":"listbox","aria-expanded":e.suggestionVisible,"aria-owns":e.id},[createVNode(i,mergeProps({ref:"inputRef"},e.attrs,{"model-value":e.modelValue,onInput:e.handleInput,onChange:e.handleChange,onFocus:e.handleFocus,onBlur:e.handleBlur,onClear:e.handleClear,onKeydown:[t[1]||(t[1]=withKeys(withModifiers((t=>e.highlight(e.highlightedIndex-1)),["prevent"]),["up"])),t[2]||(t[2]=withKeys(withModifiers((t=>e.highlight(e.highlightedIndex+1)),["prevent"]),["down"])),withKeys(e.handleKeyEnter,["enter"]),withKeys(e.close,["tab"])]}),createSlots({_:2},[e.$slots.prepend?{name:"prepend",fn:withCtx((()=>[renderSlot(e.$slots,"prepend")]))}:void 0,e.$slots.append?{name:"append",fn:withCtx((()=>[renderSlot(e.$slots,"append")]))}:void 0,e.$slots.prefix?{name:"prefix",fn:withCtx((()=>[renderSlot(e.$slots,"prefix")]))}:void 0,e.$slots.suffix?{name:"suffix",fn:withCtx((()=>[renderSlot(e.$slots,"suffix")]))}:void 0]),1040,["model-value","onInput","onChange","onFocus","onBlur","onClear","onKeydown"])],14,["aria-expanded","aria-owns"]),[[m,e.close]])])),default:withCtx((()=>[createVNode("div",{ref:"regionRef",class:["el-autocomplete-suggestion",e.suggestionLoading&&"is-loading"],style:{width:e.dropdownWidth,outline:"none"},role:"region"},[createVNode(r,{tag:"ul","wrap-class":"el-autocomplete-suggestion__wrap","view-class":"el-autocomplete-suggestion__list"},{default:withCtx((()=>[e.suggestionLoading?(openBlock(),createBlock("li",Hl,[Wl])):(openBlock(!0),createBlock(Fragment,{key:1},renderList(e.suggestions,((t,l)=>(openBlock(),createBlock("li",{id:`${e.id}-item-${l}`,key:l,class:{highlighted:e.highlightedIndex===l},role:"option","aria-selected":e.highlightedIndex===l,onClick:l=>e.select(t)},[renderSlot(e.$slots,"default",{item:t},(()=>[createTextVNode(toDisplayString(t[e.valueKey]),1)]))],10,["id","aria-selected","onClick"])))),128))])),_:1})],6)])),_:1},8,["visible","placement","popper-class","append-to-body"])},$l.__file="packages/autocomplete/src/index.vue",$l.install=e=>{e.component($l.name,$l);};var Kl=defineComponent({name:"ElAvatar",props:{size:{type:[Number,String],validator:e=>"string"==typeof e?["large","medium","small"].includes(e):"number"==typeof e,default:"large"},shape:{type:String,default:"circle",validator:e=>["circle","square"].includes(e)},icon:String,src:String,alt:String,srcSet:String,fit:{type:String,default:"cover"}},emits:["error"],setup(e,{emit:t}){const a=ref(!1),i=toRef(e,"src");watch(i,(()=>{a.value=!1;}));const r=computed((()=>{const{size:t,icon:l,shape:a}=e;let n=["el-avatar"];return t&&"string"==typeof t&&n.push("el-avatar--"+t),l&&n.push("el-avatar--icon"),a&&n.push("el-avatar--"+a),n})),s=computed((()=>{const{size:t}=e;return "number"==typeof t?{height:t+"px",width:t+"px",lineHeight:t+"px"}:{}})),u=computed((()=>({objectFit:e.fit})));return {hasLoadError:a,avatarClass:r,sizeStyle:s,handleError:function(e){a.value=!0,t("error",e);},fitStyle:u}}});Kl.render=function(e,t,l,a,n,o){return openBlock(),createBlock("span",{class:e.avatarClass,style:e.sizeStyle},[!e.src&&!e.srcSet||e.hasLoadError?e.icon?(openBlock(),createBlock("i",{key:1,class:e.icon},null,2)):renderSlot(e.$slots,"default",{key:2}):(openBlock(),createBlock("img",{key:0,src:e.src,alt:e.alt,srcset:e.srcSet,style:e.fitStyle,onError:t[1]||(t[1]=(...t)=>e.handleError&&e.handleError(...t))},null,44,["src","alt","srcset"]))],6)},Kl.__file="packages/avatar/src/index.vue",Kl.install=e=>{e.component(Kl.name,Kl);};const ql=e=>Math.pow(e,3);var Ul=defineComponent({name:"ElBacktop",props:{visibilityHeight:{type:Number,default:200},target:{type:String,default:""},right:{type:Number,default:40},bottom:{type:Number,default:40}},emits:["click"],setup(e,t){const a=ref(null),o=ref(null),s=ref(!1),u=computed((()=>e.bottom+"px")),d=computed((()=>e.right+"px")),c=()=>{const e=Date.now(),t=a.value.scrollTop,l=window.requestAnimationFrame||(e=>setTimeout(e,16)),n=()=>{const o=(Date.now()-e)/500;var i;o<1?(a.value.scrollTop=t*(1-((i=o)<.5?ql(2*i)/2:1-ql(2*(1-i))/2)),l(n)):a.value.scrollTop=0;};l(n);},p=throttle_1((()=>{s.value=a.value.scrollTop>=e.visibilityHeight;}),300);return onMounted((()=>{if(o.value=document,a.value=document.documentElement,e.target){if(a.value=document.querySelector(e.target),!a.value)throw new Error("target is not existed: "+e.target);o.value=a.value;}Je(o.value,"scroll",p);})),onBeforeUnmount((()=>{et(o.value,"scroll",p);})),{el:a,container:o,visible:s,styleBottom:u,styleRight:d,handleClick:e=>{c(),t.emit("click",e);}}}});const Gl=createVNode("i",{class:"el-icon-caret-top"},null,-1);Ul.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,{name:"el-fade-in"},{default:withCtx((()=>[e.visible?(openBlock(),createBlock("div",{key:0,style:{right:e.styleRight,bottom:e.styleBottom},class:"el-backtop",onClick:t[1]||(t[1]=withModifiers(((...t)=>e.handleClick&&e.handleClick(...t)),["stop"]))},[renderSlot(e.$slots,"default",{},(()=>[Gl]))],4)):createCommentVNode("v-if",!0)])),_:1})},Ul.__file="packages/backtop/src/index.vue",Ul.install=e=>{e.component(Ul.name,Ul);};var Ql=defineComponent({name:"ElBadge",props:{value:{type:[String,Number],default:""},max:{type:Number,default:99},isDot:Boolean,hidden:Boolean,type:{type:String,default:"primary",validator:e=>["primary","success","warning","info","danger"].includes(e)}},setup:e=>({content:computed((()=>{if(!e.isDot)return "number"==typeof e.value&&"number"==typeof e.max&&e.max<e.value?e.max+"+":e.value}))})});const Zl={class:"el-badge"};Ql.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",Zl,[renderSlot(e.$slots,"default"),createVNode(Transition,{name:"el-zoom-in-center"},{default:withCtx((()=>[withDirectives(createVNode("sup",{class:["el-badge__content",["el-badge__content--"+e.type,{"is-fixed":e.$slots.default,"is-dot":e.isDot}]],textContent:toDisplayString(e.content)},null,10,["textContent"]),[[vShow,!e.hidden&&(e.content||0===e.content||e.isDot)]])])),_:1})])},Ql.__file="packages/badge/src/index.vue",Ql.install=e=>{e.component(Ql.name,Ql);};var ea=defineComponent({name:"ElBreadcrumb",props:{separator:{type:String,default:"/"},separatorClass:{type:String,default:""}},setup(e){const t=ref(null);return provide("breadcrumb",e),onMounted((()=>{const e=t.value.querySelectorAll(".el-breadcrumb__item");e.length&&e[e.length-1].setAttribute("aria-current","page");})),{breadcrumb:t}}});const ta={ref:"breadcrumb",class:"el-breadcrumb","aria-label":"Breadcrumb",role:"navigation"};ea.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",ta,[renderSlot(e.$slots,"default")],512)},ea.__file="packages/breadcrumb/src/index.vue",ea.install=e=>{e.component(ea.name,ea);};var aa=defineComponent({name:"ElBreadcrumbItem",props:{to:{type:[String,Object],default:""},replace:{type:Boolean,default:!1}},setup(t){const a=ref(null),n=inject("breadcrumb"),o=getCurrentInstance().appContext.config.globalProperties.$router;return onMounted((()=>{a.value.setAttribute("role","link"),a.value.addEventListener("click",(()=>{t.to&&o&&(t.replace?o.replace(t.to):o.push(t.to));}));})),{link:a,separator:null==n?void 0:n.separator,separatorClass:null==n?void 0:n.separatorClass}}});const na={class:"el-breadcrumb__item"},oa={key:1,class:"el-breadcrumb__separator",role:"presentation"};aa.render=function(e,t,l,a,n,o){return openBlock(),createBlock("span",na,[createVNode("span",{ref:"link",class:["el-breadcrumb__inner",e.to?"is-link":""],role:"link"},[renderSlot(e.$slots,"default")],2),e.separatorClass?(openBlock(),createBlock("i",{key:0,class:["el-breadcrumb__separator",e.separatorClass]},null,2)):(openBlock(),createBlock("span",oa,toDisplayString(e.separator),1))])},aa.__file="packages/breadcrumb/src/item.vue",aa.install=e=>{e.component(aa.name,aa);};var ra=defineComponent({name:"ElButton",props:{type:{type:String,default:"default",validator:e=>["default","primary","success","warning","info","danger","text"].includes(e)},size:{type:String,validator:Ut},icon:{type:String,default:""},nativeType:{type:String,default:"button",validator:e=>["button","submit","reset"].includes(e)},loading:Boolean,disabled:Boolean,plain:Boolean,autofocus:Boolean,round:Boolean,circle:Boolean},emits:["click"],setup(e,t){const l=qe(),a=inject("elForm",{}),o=inject("elFormItem",{});return {buttonSize:computed((()=>e.size||o.size||l.size)),buttonDisabled:computed((()=>e.disabled||a.disabled)),handleClick:e=>{t.emit("click",e);}}}});const sa={key:0,class:"el-icon-loading"},ua={key:2};ra.render=function(e,t,l,a,n,o){return openBlock(),createBlock("button",{class:["el-button",e.type?"el-button--"+e.type:"",e.buttonSize?"el-button--"+e.buttonSize:"",{"is-disabled":e.buttonDisabled,"is-loading":e.loading,"is-plain":e.plain,"is-round":e.round,"is-circle":e.circle}],disabled:e.buttonDisabled||e.loading,autofocus:e.autofocus,type:e.nativeType,onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t))},[e.loading?(openBlock(),createBlock("i",sa)):createCommentVNode("v-if",!0),e.icon&&!e.loading?(openBlock(),createBlock("i",{key:1,class:e.icon},null,2)):createCommentVNode("v-if",!0),e.$slots.default?(openBlock(),createBlock("span",ua,[renderSlot(e.$slots,"default")])):createCommentVNode("v-if",!0)],10,["disabled","autofocus","type"])},ra.__file="packages/button/src/button.vue",ra.install=e=>{e.component(ra.name,ra);};const da=ra;var ca=defineComponent({name:"ElButtonGroup"});const pa={class:"el-button-group"};ca.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",pa,[renderSlot(e.$slots,"default")])},ca.__file="packages/button/src/button-group.vue",ca.install=e=>{e.component(ca.name,ca);};const ha=ca;let va={name:"en",el:{colorpicker:{confirm:"OK",clear:"Clear"},datepicker:{now:"Now",today:"Today",cancel:"Cancel",clear:"Clear",confirm:"OK",selectDate:"Select date",selectTime:"Select time",startDate:"Start Date",startTime:"Start Time",endDate:"End Date",endTime:"End Time",prevYear:"Previous Year",nextYear:"Next Year",prevMonth:"Previous Month",nextMonth:"Next Month",year:"",month1:"January",month2:"February",month3:"March",month4:"April",month5:"May",month6:"June",month7:"July",month8:"August",month9:"September",month10:"October",month11:"November",month12:"December",week:"week",weeks:{sun:"Sun",mon:"Mon",tue:"Tue",wed:"Wed",thu:"Thu",fri:"Fri",sat:"Sat"},months:{jan:"Jan",feb:"Feb",mar:"Mar",apr:"Apr",may:"May",jun:"Jun",jul:"Jul",aug:"Aug",sep:"Sep",oct:"Oct",nov:"Nov",dec:"Dec"}},select:{loading:"Loading",noMatch:"No matching data",noData:"No data",placeholder:"Select"},cascader:{noMatch:"No matching data",loading:"Loading",placeholder:"Select",noData:"No data"},pagination:{goto:"Go to",pagesize:"/page",total:"Total {total}",pageClassifier:""},messagebox:{title:"Message",confirm:"OK",cancel:"Cancel",error:"Illegal input"},upload:{deleteTip:"press delete to remove",delete:"Delete",preview:"Preview",continue:"Continue"},table:{emptyText:"No Data",confirmFilter:"Confirm",resetFilter:"Reset",clearFilter:"All",sumText:"Sum"},tree:{emptyText:"No Data"},transfer:{noMatch:"No matching data",noData:"No data",titles:["List 1","List 2"],filterPlaceholder:"Enter keyword",noCheckedFormat:"{total} items",hasCheckedFormat:"{checked}/{total} checked"},image:{error:"FAILED"},pageHeader:{title:"Back"},popconfirm:{confirmButtonText:"Yes",cancelButtonText:"No"}}};function fa(e,t){return e&&t?e.replace(/\{(\w+)\}/g,((e,l)=>t[l])):e}const ga=(...e)=>{const[t,l]=e;let a;const n=t.split(".");let o=va;for(let e=0,t=n.length;e<t;e++){if(a=o[n[e]],e===t-1)return fa(a,l);if(!a)return "";o=a;}return ""},ba={date:"YYYY-MM-DD",week:"gggg[w]ww",year:"YYYY",month:"YYYY-MM",datetime:"YYYY-MM-DD HH:mm:ss",monthrange:"YYYY-MM",daterange:"YYYY-MM-DD",datetimerange:"YYYY-MM-DD HH:mm:ss"},ya={name:{type:[Array,String],default:""},popperClass:{type:String,default:""},format:{type:String},type:{type:String,default:""},clearable:{type:Boolean,default:!0},clearIcon:{type:String,default:"el-icon-circle-close"},editable:{type:Boolean,default:!0},prefixIcon:{type:String,default:""},size:{type:String,validator:Ut},readonly:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},placeholder:{type:String,default:""},modelValue:{type:[Date,Array,String],default:""},rangeSeparator:{type:String,default:"-"},startPlaceholder:String,endPlaceholder:String,defaultValue:{type:[Date,Array]},defaultTime:{type:[Date,Array]},isRange:{type:Boolean,default:!1},disabledHours:{type:Function},disabledMinutes:{type:Function},disabledSeconds:{type:Function},disabledDate:{type:Function},cellClassName:{type:Function},shortcuts:{type:Array,default:()=>[]},arrowControl:{type:Boolean,default:!1},validateEvent:{type:Boolean,default:!0},unlinkPanels:Boolean},ka=function(e,t){const l=e instanceof Date,a=t instanceof Date;return l&&a?e.getTime()===t.getTime():!l&&!a&&e===t},Ca=function(e,t){const l=e instanceof Array,a=t instanceof Array;return l&&a?e.length===t.length&&e.every(((e,l)=>ka(e,t[l]))):!l&&!a&&ka(e,t)};var xa=defineComponent({name:"Picker",components:{ElInput:pl,ElPopper:Rl},directives:{clickoutside:zt},props:ya,emits:["update:modelValue","change","focus","blur"],setup(e,t){const a=qe(),i=inject("elForm",{}),r=inject("elFormItem",{}),s=ref(null),u=ref(!1),d=ref(!1),c=ref(null);watch(u,(l=>{var a;l?c.value=e.modelValue:(T.value=null,t.emit("blur"),D(),e.validateEvent&&(null===(a=r.formItemMitt)||void 0===a||a.emit("el.form.blur")));}));const p=(l,a)=>{var n;!a&&Ca(l,c.value)||(t.emit("change",l),e.validateEvent&&(null===(n=r.formItemMitt)||void 0===n||n.emit("el.form.change",l)));},h=l=>{Ca(e.modelValue,l)||t.emit("update:modelValue",l);},v=computed((()=>{if(s.value.triggerRef){const e=E.value?s.value.triggerRef:s.value.triggerRef.$el;return [].slice.call(e.querySelectorAll("input"))}return []})),m=computed((()=>e.disabled||i.disabled)),f=computed((()=>{let t;return w.value?I.value.getDefaultValue&&(t=I.value.getDefaultValue()):t=Array.isArray(e.modelValue)?e.modelValue.map((e=>dayjs_min(e))):dayjs_min(e.modelValue),I.value.getRangeAvaliableTime&&(t=I.value.getRangeAvaliableTime(t)),t})),g=computed((()=>{if(!I.value.panelReady)return;const e=P(f.value);return Array.isArray(T.value)?[T.value[0]||e&&e[0]||"",T.value[1]||e&&e[1]||""]:null!==T.value?T.value:!y.value&&w.value||!u.value&&w.value?void 0:e?k.value?e.join(", "):e:""})),b=computed((()=>-1!==e.type.indexOf("time"))),y=computed((()=>0===e.type.indexOf("time"))),k=computed((()=>"dates"===e.type)),C=computed((()=>e.prefixIcon||(b.value?"el-icon-time":"el-icon-date"))),x=ref(!1),w=computed((()=>!e.modelValue||Array.isArray(e.modelValue)&&!e.modelValue.length)),E=computed((()=>e.type.indexOf("range")>-1)),M=computed((()=>e.size||r.size||a.size)),T=ref(null),N=()=>{if(T.value){const e=O(g.value);e&&V(e)&&(h(Array.isArray(e)?e.map((e=>e.toDate())):e.toDate()),T.value=null);}""===T.value&&(h(null),p(null),T.value=null);},D=()=>{v.value.forEach((e=>e.blur()));},O=e=>e?I.value.parseUserInput(e):null,P=e=>e?I.value.formatToString(e):null,V=e=>I.value.isValidValue(e),I=ref({});return provide("EP_PICKER_BASE",{props:e}),{isDatesPicker:k,handleEndChange:()=>{const e=O(T.value&&T.value[1]);if(e&&e.isValid()){T.value=[g.value[0],P(e)];const t=[f.value&&f.value[0],e];V(t)&&(h(t),T.value=null);}},handleStartChange:()=>{const e=O(T.value&&T.value[0]);if(e&&e.isValid()){T.value=[P(e),g.value[1]];const t=[e,f.value&&f.value[1]];V(t)&&(h(t),T.value=null);}},handleStartInput:e=>{T.value?T.value=[e.target.value,T.value[1]]:T.value=[e.target.value,null];},handleEndInput:e=>{T.value?T.value=[T.value[0],e.target.value]:T.value=[null,e.target.value];},onUserInput:e=>{T.value=e;},handleChange:N,handleKeydown:e=>{const t=e.code;return t===Tt.esc?(u.value=!1,void e.stopPropagation()):t!==Tt.tab?t===Tt.enter?((""===T.value||V(O(g.value)))&&(N(),u.value=!1),void e.stopPropagation()):void(T.value?e.stopPropagation():I.value.handleKeydown&&I.value.handleKeydown(e)):void(E.value?setTimeout((()=>{-1===v.value.indexOf(document.activeElement)&&(u.value=!1,D());}),0):(N(),u.value=!1,e.stopPropagation()))},onClickOutside:()=>{u.value&&(u.value=!1);},pickerSize:M,isRangeInput:E,onMouseLeave:()=>{x.value=!1;},onMouseEnter:()=>{e.readonly||m.value||!w.value&&e.clearable&&(x.value=!0);},onClearIconClick:t=>{e.readonly||m.value||x.value&&(t.stopPropagation(),h(null),p(null,!0),x.value=!1,u.value=!1,I.value.handleClear&&I.value.handleClear());},showClose:x,triggerClass:C,onPick:(e="",t=!1)=>{let l;u.value=t,l=Array.isArray(e)?e.map((e=>e.toDate())):e?e.toDate():e,T.value=null,h(l),p(l);},handleFocus:l=>{e.readonly||m.value||(u.value=!0,t.emit("focus",l));},pickerVisible:u,pickerActualVisible:d,displayValue:g,parsedValue:f,setSelectionRange:(e,t,l)=>{const a=v.value;a.length&&(l&&"min"!==l?"max"===l&&(a[1].setSelectionRange(e,t),a[1].focus()):(a[0].setSelectionRange(e,t),a[0].focus()));},refPopper:s,pickerDisabled:m,onSetPickerOption:e=>{I.value[e[0]]=e[1],I.value.panelReady=!0;}}}});const wa={class:"el-range-separator"};xa.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveComponent("el-popper"),p=resolveDirective("clickoutside");return openBlock(),createBlock(r,mergeProps({ref:"refPopper",visible:e.pickerVisible,"onUpdate:visible":t[18]||(t[18]=t=>e.pickerVisible=t),"manual-mode":"",effect:"light",pure:"",trigger:"click"},e.$attrs,{"popper-class":"el-picker__popper "+e.popperClass,transition:"el-zoom-in-top","gpu-acceleration":!1,"stop-popper-mouse-event":!1,"append-to-body":"",onBeforeEnter:t[19]||(t[19]=t=>e.pickerActualVisible=!0),onAfterLeave:t[20]||(t[20]=t=>e.pickerActualVisible=!1)}),{trigger:withCtx((()=>[e.isRangeInput?withDirectives((openBlock(),createBlock("div",{key:1,class:["el-date-editor el-range-editor el-input__inner",["el-date-editor--"+e.type,e.pickerSize?"el-range-editor--"+e.pickerSize:"",e.pickerDisabled?"is-disabled":"",e.pickerVisible?"is-active":""]],onClick:t[10]||(t[10]=(...t)=>e.handleFocus&&e.handleFocus(...t)),onMouseenter:t[11]||(t[11]=(...t)=>e.onMouseEnter&&e.onMouseEnter(...t)),onMouseleave:t[12]||(t[12]=(...t)=>e.onMouseLeave&&e.onMouseLeave(...t)),onKeydown:t[13]||(t[13]=(...t)=>e.handleKeydown&&e.handleKeydown(...t))},[createVNode("i",{class:["el-input__icon","el-range__icon",e.triggerClass]},null,2),createVNode("input",{autocomplete:"off",name:e.name&&e.name[0],placeholder:e.startPlaceholder,value:e.displayValue&&e.displayValue[0],disabled:e.pickerDisabled,readonly:!e.editable||e.readonly,class:"el-range-input",onInput:t[3]||(t[3]=(...t)=>e.handleStartInput&&e.handleStartInput(...t)),onChange:t[4]||(t[4]=(...t)=>e.handleStartChange&&e.handleStartChange(...t)),onFocus:t[5]||(t[5]=(...t)=>e.handleFocus&&e.handleFocus(...t))},null,40,["name","placeholder","value","disabled","readonly"]),renderSlot(e.$slots,"range-separator",{},(()=>[createVNode("span",wa,toDisplayString(e.rangeSeparator),1)])),createVNode("input",{autocomplete:"off",name:e.name&&e.name[1],placeholder:e.endPlaceholder,value:e.displayValue&&e.displayValue[1],disabled:e.pickerDisabled,readonly:!e.editable||e.readonly,class:"el-range-input",onFocus:t[6]||(t[6]=(...t)=>e.handleFocus&&e.handleFocus(...t)),onInput:t[7]||(t[7]=(...t)=>e.handleEndInput&&e.handleEndInput(...t)),onChange:t[8]||(t[8]=(...t)=>e.handleEndChange&&e.handleEndChange(...t))},null,40,["name","placeholder","value","disabled","readonly"]),createVNode("i",{class:[[e.showClose?""+e.clearIcon:""],"el-input__icon el-range__close-icon"],onClick:t[9]||(t[9]=(...t)=>e.onClearIconClick&&e.onClearIconClick(...t))},null,2)],34)),[[p,e.onClickOutside]]):withDirectives((openBlock(),createBlock(i,{key:0,"model-value":e.displayValue,name:e.name,size:e.pickerSize,disabled:e.pickerDisabled,placeholder:e.placeholder,class:["el-date-editor","el-date-editor--"+e.type],readonly:!e.editable||e.readonly||e.isDatesPicker||"week"===e.type,onInput:e.onUserInput,onFocus:e.handleFocus,onKeydown:e.handleKeydown,onChange:e.handleChange,onMouseenter:e.onMouseEnter,onMouseleave:e.onMouseLeave},{prefix:withCtx((()=>[createVNode("i",{class:["el-input__icon",e.triggerClass],onClick:t[1]||(t[1]=(...t)=>e.handleFocus&&e.handleFocus(...t))},null,2)])),suffix:withCtx((()=>[createVNode("i",{class:["el-input__icon",[e.showClose?""+e.clearIcon:""]],onClick:t[2]||(t[2]=(...t)=>e.onClearIconClick&&e.onClearIconClick(...t))},null,2)])),_:1},8,["model-value","name","size","disabled","placeholder","class","readonly","onInput","onFocus","onKeydown","onChange","onMouseenter","onMouseleave"])),[[p,e.onClickOutside]])])),default:withCtx((()=>[renderSlot(e.$slots,"default",{visible:e.pickerVisible,actualVisible:e.pickerActualVisible,parsedValue:e.parsedValue,format:e.format,unlinkPanels:e.unlinkPanels,type:e.type,defaultValue:e.defaultValue,onPick:t[14]||(t[14]=(...t)=>e.onPick&&e.onPick(...t)),onSelectRange:t[15]||(t[15]=(...t)=>e.setSelectionRange&&e.setSelectionRange(...t)),onSetPickerOption:t[16]||(t[16]=(...t)=>e.onSetPickerOption&&e.onSetPickerOption(...t)),onMousedown:t[17]||(t[17]=withModifiers((()=>{}),["stop"]))})])),_:1},16,["visible","popper-class"])},xa.__file="packages/time-picker/src/common/picker.vue";const Sa=(e,t,l)=>{const a=[],n=t&&l();for(let t=0;t<e;t++)a[t]=!!n&&n.includes(t);return a},_a=e=>e.map(((e,t)=>e||t)).filter((e=>!0!==e)),Ea=(e,t,l)=>({getHoursList:(t,l)=>Sa(24,e,(()=>e(t,l))),getMinutesList:(e,l,a)=>Sa(60,t,(()=>t(e,l,a))),getSecondsList:(e,t,a,n)=>Sa(60,l,(()=>l(e,t,a,n)))}),Ma=(e,t,l)=>{const{getHoursList:a,getMinutesList:n,getSecondsList:o}=Ea(e,t,l);return {getAvaliableHours:(e,t)=>_a(a(e,t)),getAvaliableMinutes:(e,t,l)=>_a(n(e,t,l)),getAvaliableSeconds:(e,t,l,a)=>_a(o(e,t,l,a))}};var Ta=defineComponent({directives:{repeatClick:Ft},components:{ElScrollbar:gl},props:{role:{type:String,required:!0},spinnerDate:{type:Object,required:!0},showSeconds:{type:Boolean,default:!0},arrowControl:Boolean,amPmMode:{type:String,default:""},disabledHours:{type:Function},disabledMinutes:{type:Function},disabledSeconds:{type:Function}},emits:["change","select-range","set-option"],setup(e,t){let a=!1;const r=debounce_1((e=>{a=!1,T(e);}),200),s=ref(null),u=ref(null),d=ref(null),c=ref(null),p={hours:u,minutes:d,seconds:c},h=computed((()=>{const t=["hours","minutes","seconds"];return e.showSeconds?t:t.slice(0,2)})),v=computed((()=>e.spinnerDate.hour())),m=computed((()=>e.spinnerDate.minute())),f=computed((()=>e.spinnerDate.second())),g=computed((()=>({hours:v,minutes:m,seconds:f}))),b=computed((()=>A(e.role))),y=computed((()=>L(v.value,e.role))),k=computed((()=>z(v.value,m.value,e.role))),C=computed((()=>({hours:b,minutes:y,seconds:k}))),w=computed((()=>{const e=v.value;return [e>0?e-1:void 0,e,e<23?e+1:void 0]})),S=computed((()=>{const e=m.value;return [e>0?e-1:void 0,e,e<59?e+1:void 0]})),_=computed((()=>{const e=f.value;return [e>0?e-1:void 0,e,e<59?e+1:void 0]})),E=computed((()=>({hours:w,minutes:S,seconds:_}))),M=e=>{"hours"===e?t.emit("select-range",0,2):"minutes"===e?t.emit("select-range",3,5):"seconds"===e&&t.emit("select-range",6,8),s.value=e;},T=e=>{D(e,g.value[e].value);},N=()=>{T("hours"),T("minutes"),T("seconds");},D=(t,l)=>{if(e.arrowControl)return;const a=p[t];a.value&&(a.value.$el.querySelector(".el-scrollbar__wrap").scrollTop=Math.max(0,l*O(t)));},O=e=>p[e].value.$el.querySelector("li").offsetHeight,P=e=>{s.value||M("hours");const t=s.value;let l=g.value[t].value;const a="hours"===s.value?24:60;l=(l+e+a)%a,V(t,l),D(t,l),nextTick((()=>M(s.value)));},V=(l,a)=>{if(!C.value[l].value[a])switch(l){case"hours":t.emit("change",e.spinnerDate.hour(a).minute(m.value).second(f.value));break;case"minutes":t.emit("change",e.spinnerDate.hour(v.value).minute(a).second(f.value));break;case"seconds":t.emit("change",e.spinnerDate.hour(v.value).minute(m.value).second(a));}},I=e=>p[e].value.$el.offsetHeight,B=()=>{const e=e=>{p[e].value&&(p[e].value.$el.querySelector(".el-scrollbar__wrap").onscroll=()=>{(e=>{a=!0,r(e);const t=Math.min(Math.round((p[e].value.$el.querySelector(".el-scrollbar__wrap").scrollTop-(.5*I(e)-10)/O(e)+3)/O(e)),"hours"===e?23:59);V(e,t);})(e);});};e("hours"),e("minutes"),e("seconds");};onMounted((()=>{nextTick((()=>{!e.arrowControl&&B(),N(),"start"===e.role&&M("hours");}));}));t.emit("set-option",[e.role+"_scrollDown",P]),t.emit("set-option",[e.role+"_emitSelectRange",M]);const{getHoursList:A,getMinutesList:L,getSecondsList:z}=Ea(e.disabledHours,e.disabledMinutes,e.disabledSeconds);return watch((()=>e.spinnerDate),(()=>{a||N();})),{getRefId:e=>`list${e.charAt(0).toUpperCase()+e.slice(1)}Ref`,spinnerItems:h,currentScrollbar:s,hours:v,minutes:m,seconds:f,hoursList:b,minutesList:y,arrowHourList:w,arrowMinuteList:S,arrowSecondList:_,getAmPmFlag:t=>{if(!!!e.amPmMode)return "";let l=t<12?" am":" pm";return "A"===e.amPmMode&&(l=l.toUpperCase()),l},emitSelectRange:M,adjustCurrentSpinner:T,typeItemHeight:O,listHoursRef:u,listMinutesRef:d,listSecondsRef:c,onIncreaseClick:()=>{P(1);},onDecreaseClick:()=>{P(-1);},handleClick:(e,{value:t,disabled:l})=>{l||(V(e,t),M(e),D(e,t));},secondsList:k,timePartsMap:g,arrowListMap:E,listMap:C}}});const Na={class:"el-time-spinner__arrow el-icon-arrow-up"},Da={class:"el-time-spinner__arrow el-icon-arrow-down"},Oa={class:"el-time-spinner__list"};Ta.render=function(e,t,l,a,n,o){const i=resolveComponent("el-scrollbar"),r=resolveDirective("repeat-click");return openBlock(),createBlock("div",{class:["el-time-spinner",{"has-seconds":e.showSeconds}]},[e.arrowControl?createCommentVNode("v-if",!0):(openBlock(!0),createBlock(Fragment,{key:0},renderList(e.spinnerItems,(t=>(openBlock(),createBlock(i,{key:t,ref:e.getRefId(t),class:"el-time-spinner__wrapper","wrap-style":"max-height: inherit;","view-class":"el-time-spinner__list",noresize:"",tag:"ul",onMouseenter:l=>e.emitSelectRange(t),onMousemove:l=>e.adjustCurrentSpinner(t)},{default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.listMap[t].value,((l,a)=>(openBlock(),createBlock("li",{key:a,class:["el-time-spinner__item",{active:a===e.timePartsMap[t].value,disabled:l}],onClick:n=>e.handleClick(t,{value:a,disabled:l})},["hours"===t?(openBlock(),createBlock(Fragment,{key:0},[createTextVNode(toDisplayString(("0"+(e.amPmMode?a%12||12:a)).slice(-2))+toDisplayString(e.getAmPmFlag(a)),1)],64)):(openBlock(),createBlock(Fragment,{key:1},[createTextVNode(toDisplayString(("0"+a).slice(-2)),1)],64))],10,["onClick"])))),128))])),_:2},1032,["onMouseenter","onMousemove"])))),128)),e.arrowControl?(openBlock(!0),createBlock(Fragment,{key:1},renderList(e.spinnerItems,(t=>(openBlock(),createBlock("div",{key:t,class:"el-time-spinner__wrapper is-arrow",onMouseenter:l=>e.emitSelectRange(t)},[withDirectives(createVNode("i",Na,null,512),[[r,e.onDecreaseClick]]),withDirectives(createVNode("i",Da,null,512),[[r,e.onIncreaseClick]]),createVNode("ul",Oa,[(openBlock(!0),createBlock(Fragment,null,renderList(e.arrowListMap[t].value,((l,a)=>(openBlock(),createBlock("li",{key:a,class:["el-time-spinner__item",{active:l===e.timePartsMap[t].value,disabled:e.listMap[t].value[l]}]},toDisplayString(void 0===l?"":("0"+(e.amPmMode?l%12||12:l)).slice(-2)+e.getAmPmFlag(l)),3)))),128))])],40,["onMouseenter"])))),128)):createCommentVNode("v-if",!0)],2)},Ta.__file="packages/time-picker/src/time-picker-com/basic-time-spinner.vue";var Pa=defineComponent({components:{TimeSpinner:Ta},props:{visible:Boolean,actualVisible:{type:Boolean,default:void 0},datetimeRole:{type:String},parsedValue:{type:[Object,String]},format:{type:String,default:""}},emits:["pick","select-range","set-picker-option"],setup(e,t){const a=ref([0,2]),o=ref(e.parsedValue),i=computed((()=>void 0===e.actualVisible?"el-zoom-in-top":"")),r=computed((()=>e.format.includes("ss"))),s=computed((()=>e.format.includes("A")?"A":e.format.includes("a")?"a":"")),u=t=>{const l={hour:g,minute:b,second:y};let a=t;return ["hour","minute","second"].forEach((t=>{if(l[t]){let n;const o=l[t];n="minute"===t?o(a.hour(),e.datetimeRole):"second"===t?o(a.hour(),a.minute(),e.datetimeRole):o(e.datetimeRole),n&&n.length&&!n.includes(a[t]())&&(a=a[t](n[0]));}})),a};t.emit("set-picker-option",["isValidValue",e=>{const t=dayjs_min(e),l=u(t);return t.isSame(l)}]),t.emit("set-picker-option",["formatToString",t=>t?t.format(e.format):null]),t.emit("set-picker-option",["parseUserInput",t=>t?dayjs_min(t,e.format):null]),t.emit("set-picker-option",["handleKeydown",e=>{const t=e.code;if(t===Tt.left||t===Tt.right){return (e=>{const t=[0,3].concat(r.value?[6]:[]),l=["hours","minutes"].concat(r.value?["seconds"]:[]),n=(t.indexOf(a.value[0])+e+t.length)%t.length;d.start_emitSelectRange(l[n]);})(t===Tt.left?-1:1),void e.preventDefault()}if(t===Tt.up||t===Tt.down){const l=t===Tt.up?-1:1;return d.start_scrollDown(l),void e.preventDefault()}}]),t.emit("set-picker-option",["getRangeAvaliableTime",u]),t.emit("set-picker-option",["getDefaultValue",()=>dayjs_min(f)]);const d={},c=inject("EP_PICKER_BASE"),{arrowControl:p,disabledHours:h,disabledMinutes:v,disabledSeconds:m,defaultValue:f}=c.props,{getAvaliableHours:g,getAvaliableMinutes:b,getAvaliableSeconds:y}=Ma(h,v,m);return {transitionName:i,arrowControl:p,onSetOption:e=>{d[e[0]]=e[1];},t:ga,handleConfirm:(l=!1,a)=>{a||t.emit("pick",e.parsedValue,l);},handleChange:l=>{if(!e.visible)return;const a=u(l).millisecond(0);t.emit("pick",a,!0);},setSelectionRange:(e,l)=>{t.emit("select-range",e,l),a.value=[e,l];},amPmMode:s,showSeconds:r,handleCancel:()=>{t.emit("pick",o.value,!1);},disabledHours:h,disabledMinutes:v,disabledSeconds:m}}});const Va={key:0,class:"el-time-panel"},Ia={class:"el-time-panel__footer"};Pa.render=function(e,t,l,a,n,o){const i=resolveComponent("time-spinner");return openBlock(),createBlock(Transition,{name:e.transitionName},{default:withCtx((()=>[e.actualVisible||e.visible?(openBlock(),createBlock("div",Va,[createVNode("div",{class:["el-time-panel__content",{"has-seconds":e.showSeconds}]},[createVNode(i,{ref:"spinner",role:e.datetimeRole||"start","arrow-control":e.arrowControl,"show-seconds":e.showSeconds,"am-pm-mode":e.amPmMode,"spinner-date":e.parsedValue,"disabled-hours":e.disabledHours,"disabled-minutes":e.disabledMinutes,"disabled-seconds":e.disabledSeconds,onChange:e.handleChange,onSetOption:e.onSetOption,onSelectRange:e.setSelectionRange},null,8,["role","arrow-control","show-seconds","am-pm-mode","spinner-date","disabled-hours","disabled-minutes","disabled-seconds","onChange","onSetOption","onSelectRange"])],2),createVNode("div",Ia,[createVNode("button",{type:"button",class:"el-time-panel__btn cancel",onClick:t[1]||(t[1]=(...t)=>e.handleCancel&&e.handleCancel(...t))},toDisplayString(e.t("el.datepicker.cancel")),1),createVNode("button",{type:"button",class:"el-time-panel__btn confirm",onClick:t[2]||(t[2]=t=>e.handleConfirm())},toDisplayString(e.t("el.datepicker.confirm")),1)])])):createCommentVNode("v-if",!0)])),_:1},8,["name"])},Pa.__file="packages/time-picker/src/time-picker-com/panel-time-pick.vue";const Ba=(e,t)=>{const l=[];for(let a=e;a<=t;a++)l.push(a);return l};var Aa=defineComponent({components:{TimeSpinner:Ta},props:{visible:Boolean,actualVisible:Boolean,parsedValue:{type:[Array,String]},format:{type:String,default:""}},emits:["pick","select-range","set-picker-option"],setup(e,t){const a=computed((()=>e.parsedValue[0])),o=computed((()=>e.parsedValue[1])),i=ref(e.parsedValue),r=computed((()=>e.format.includes("ss"))),s=computed((()=>e.format.includes("A")?"A":e.format.includes("a")?"a":"")),u=ref([]),d=ref([]),c=(e,l)=>{t.emit("pick",[e,l],!0);},p=computed((()=>a.value>o.value)),h=ref([0,2]),v=computed((()=>r.value?11:8)),m=(e,t)=>{const l=M?M(e):[],n="start"===e,i=(t||(n?o.value:a.value)).hour(),r=n?Ba(i+1,23):Ba(0,i-1);return union_1(l,r)},f=(e,t,l)=>{const n=T?T(e,t):[],i="start"===t,r=l||(i?o.value:a.value);if(e!==r.hour())return n;const s=r.minute(),u=i?Ba(s+1,59):Ba(0,s-1);return union_1(n,u)},g=(e,t,l,n)=>{const i=N?N(e,t,l):[],r="start"===l,s=n||(r?o.value:a.value),u=s.hour(),d=s.minute();if(e!==u||t!==d)return i;const c=s.second(),p=r?Ba(c+1,59):Ba(0,c-1);return union_1(i,p)},b=e=>e.map(((t,l)=>x(e[0],e[1],0===l?"start":"end"))),{getAvaliableHours:y,getAvaliableMinutes:k,getAvaliableSeconds:C}=Ma(m,f,g),x=(e,t,l)=>{const a={hour:y,minute:k,second:C},n="start"===l;let o=n?e:t;const i=n?t:e;return ["hour","minute","second"].forEach((e=>{if(a[e]){let t;const r=a[e];if(t="minute"===e?r(o.hour(),l,i):"second"===e?r(o.hour(),o.minute(),l,i):r(l,i),t&&t.length&&!t.includes(o[e]())){const l=n?0:t.length-1;o=o[e](t[l]);}}})),o};t.emit("set-picker-option",["formatToString",t=>t?Array.isArray(t)?t.map((t=>t.format(e.format))):t.format(e.format):null]),t.emit("set-picker-option",["parseUserInput",t=>t?Array.isArray(t)?t.map((t=>dayjs_min(t,e.format))):dayjs_min(t,e.format):null]),t.emit("set-picker-option",["isValidValue",e=>{const t=e.map((e=>dayjs_min(e))),l=b(t);return t[0].isSame(l[0])&&t[1].isSame(l[1])}]),t.emit("set-picker-option",["handleKeydown",e=>{const t=e.code;if(t===Tt.left||t===Tt.right){return (e=>{const t=r.value?[0,3,6,11,14,17]:[0,3,8,11],l=["hours","minutes"].concat(r.value?["seconds"]:[]),a=(t.indexOf(h.value[0])+e+t.length)%t.length,n=t.length/2;a<n?w.start_emitSelectRange(l[a]):w.end_emitSelectRange(l[a-n]);})(t===Tt.left?-1:1),void e.preventDefault()}if(t===Tt.up||t===Tt.down){const l=t===Tt.up?-1:1,a=h.value[0]<v.value?"start":"end";return w[a+"_scrollDown"](l),void e.preventDefault()}}]),t.emit("set-picker-option",["getDefaultValue",()=>Array.isArray(D)?D.map((e=>dayjs_min(e))):[dayjs_min(D),dayjs_min(D).add(60,"m")]]),t.emit("set-picker-option",["getRangeAvaliableTime",b]);const w={},S=inject("EP_PICKER_BASE"),{arrowControl:E,disabledHours:M,disabledMinutes:T,disabledSeconds:N,defaultValue:D}=S.props;return {arrowControl:E,onSetOption:e=>{w[e[0]]=e[1];},setMaxSelectionRange:(e,l)=>{t.emit("select-range",e,l,"max"),h.value=[e+v.value,l+v.value];},setMinSelectionRange:(e,l)=>{t.emit("select-range",e,l,"min"),h.value=[e,l];},btnConfirmDisabled:p,handleCancel:()=>{t.emit("pick",i.value,null);},handleConfirm:(e=!1)=>{t.emit("pick",[a.value,o.value],e);},t:ga,showSeconds:r,minDate:a,maxDate:o,amPmMode:s,handleMinChange:e=>{c(e.millisecond(0),o.value);},handleMaxChange:e=>{c(a.value,e.millisecond(0));},minSelectableRange:u,maxSelectableRange:d,disabledHours_:m,disabledMinutes_:f,disabledSeconds_:g}}});const La={key:0,class:"el-time-range-picker el-picker-panel"},za={class:"el-time-range-picker__content"},Fa={class:"el-time-range-picker__cell"},Ra={class:"el-time-range-picker__header"},$a={class:"el-time-range-picker__cell"},Ha={class:"el-time-range-picker__header"},Wa={class:"el-time-panel__footer"};Aa.render=function(e,t,l,a,n,o){const i=resolveComponent("time-spinner");return e.actualVisible?(openBlock(),createBlock("div",La,[createVNode("div",za,[createVNode("div",Fa,[createVNode("div",Ra,toDisplayString(e.t("el.datepicker.startTime")),1),createVNode("div",{class:[{"has-seconds":e.showSeconds,"is-arrow":e.arrowControl},"el-time-range-picker__body el-time-panel__content"]},[createVNode(i,{ref:"minSpinner",role:"start","show-seconds":e.showSeconds,"am-pm-mode":e.amPmMode,"arrow-control":e.arrowControl,"spinner-date":e.minDate,"disabled-hours":e.disabledHours_,"disabled-minutes":e.disabledMinutes_,"disabled-seconds":e.disabledSeconds_,onChange:e.handleMinChange,onSetOption:e.onSetOption,onSelectRange:e.setMinSelectionRange},null,8,["show-seconds","am-pm-mode","arrow-control","spinner-date","disabled-hours","disabled-minutes","disabled-seconds","onChange","onSetOption","onSelectRange"])],2)]),createVNode("div",$a,[createVNode("div",Ha,toDisplayString(e.t("el.datepicker.endTime")),1),createVNode("div",{class:[{"has-seconds":e.showSeconds,"is-arrow":e.arrowControl},"el-time-range-picker__body el-time-panel__content"]},[createVNode(i,{ref:"maxSpinner",role:"end","show-seconds":e.showSeconds,"am-pm-mode":e.amPmMode,"arrow-control":e.arrowControl,"spinner-date":e.maxDate,"disabled-hours":e.disabledHours_,"disabled-minutes":e.disabledMinutes_,"disabled-seconds":e.disabledSeconds_,onChange:e.handleMaxChange,onSetOption:e.onSetOption,onSelectRange:e.setMaxSelectionRange},null,8,["show-seconds","am-pm-mode","arrow-control","spinner-date","disabled-hours","disabled-minutes","disabled-seconds","onChange","onSetOption","onSelectRange"])],2)])]),createVNode("div",Wa,[createVNode("button",{type:"button",class:"el-time-panel__btn cancel",onClick:t[1]||(t[1]=t=>e.handleCancel())},toDisplayString(e.t("el.datepicker.cancel")),1),createVNode("button",{type:"button",class:"el-time-panel__btn confirm",disabled:e.btnConfirmDisabled,onClick:t[2]||(t[2]=t=>e.handleConfirm())},toDisplayString(e.t("el.datepicker.confirm")),9,["disabled"])])])):createCommentVNode("v-if",!0)},Aa.__file="packages/time-picker/src/time-picker-com/panel-time-range.vue",dayjs_min.extend(customParseFormat);var ja=defineComponent({name:"ElTimePicker",install:null,props:Object.assign(Object.assign({},ya),{isRange:{type:Boolean,default:!1}}),emits:["update:modelValue"],setup(e,t){const l=e.isRange?"timerange":"time",a=e.isRange?Aa:Pa;return ()=>h(xa,Object.assign(Object.assign({format:"HH:mm:ss"},e),{type:l,"onUpdate:modelValue":e=>t.emit("update:modelValue",e)}),{default:e=>h(a,e)})}});const Ka=e=>Array.from(Array(e).keys()),Ya=e=>e.replace(/\W?m{1,2}|\W?ZZ/g,"").replace(/\W?h{1,2}|\W?s{1,3}|\W?a/gi,"").trim(),qa=e=>e.replace(/\W?D{1,2}|\W?Do|\W?d{1,4}|\W?M{1,4}|\W?Y{2,4}/g,"").trim(),Ua=ja;Ua.install=e=>{e.component(Ua.name,Ua);},dayjs_min.extend(localeData);var Ga=defineComponent({props:{selectedDay:{type:Object},range:{type:Array},date:{type:Object},hideHeader:{type:Boolean}},emits:["pick"],setup(e,t){const a=ref(dayjs_min().localeData().weekdaysShort()),o=dayjs_min(),i=o.$locale().weekStart||0,r=(t,l)=>{let a;return a="prev"===l?e.date.startOf("month").subtract(1,"month").date(t):"next"===l?e.date.startOf("month").add(1,"month").date(t):e.date.date(t),a},s=computed((()=>e.range&&e.range.length)),u=computed((()=>{let t=[];if(s.value){const[l,a]=e.range,n=Ka(a.date()-l.date()+1).map(((e,t)=>({text:l.date()+t,type:"current"})));let o=n.length%7;o=0===o?0:7-o;const i=Ka(o).map(((e,t)=>({text:t+1,type:"next"})));t=n.concat(i);}else {const l=e.date.startOf("month").day()||7;t=[...((e,t)=>{const l=e.subtract(1,"month").endOf("month").date();return Ka(t).map(((e,a)=>l-(t-a-1)))})(e.date,l-i).map((e=>({text:e,type:"prev"}))),...(e=>{const t=e.daysInMonth();return Ka(t).map(((e,t)=>t+1))})(e.date).map((e=>({text:e,type:"current"})))];const a=Ka(42-t.length).map(((e,t)=>({text:t+1,type:"next"})));t=t.concat(a);}return (e=>Ka(e.length/7).map(((t,l)=>{const a=7*l;return e.slice(a,a+7)})))(t)})),d=computed((()=>{const e=i;return 0===e?a.value:a.value.slice(e).concat(a.value.slice(0,e))}));return {isInRange:s,weekDays:d,rows:u,getCellClass:({text:t,type:l})=>{const a=[l];if("current"===l){const n=r(t,l);n.isSame(e.selectedDay,"day")&&a.push("is-selected"),n.isSame(o,"day")&&a.push("is-today");}return a},pickDay:({text:e,type:l})=>{const a=r(e,l);t.emit("pick",a);},getSlotData:({text:t,type:l})=>{const a=r(t,l);return {isSelected:a.isSame(e.selectedDay),type:l+"-month",day:a.format("YYYY-MM-DD"),date:a.toDate()}}}}});const Xa={key:0},Qa={class:"el-calendar-day"};Ga.render=function(e,t,l,a,n,o){return openBlock(),createBlock("table",{class:{"el-calendar-table":!0,"is-range":e.isInRange},cellspacing:"0",cellpadding:"0"},[e.hideHeader?createCommentVNode("v-if",!0):(openBlock(),createBlock("thead",Xa,[(openBlock(!0),createBlock(Fragment,null,renderList(e.weekDays,(e=>(openBlock(),createBlock("th",{key:e},toDisplayString(e),1)))),128))])),createVNode("tbody",null,[(openBlock(!0),createBlock(Fragment,null,renderList(e.rows,((t,l)=>(openBlock(),createBlock("tr",{key:l,class:{"el-calendar-table__row":!0,"el-calendar-table__row--hide-border":0===l&&e.hideHeader}},[(openBlock(!0),createBlock(Fragment,null,renderList(t,((t,l)=>(openBlock(),createBlock("td",{key:l,class:e.getCellClass(t),onClick:l=>e.pickDay(t)},[createVNode("div",Qa,[renderSlot(e.$slots,"dateCell",{data:e.getSlotData(t)},(()=>[createVNode("span",null,toDisplayString(t.text),1)]))])],10,["onClick"])))),128))],2)))),128))])],2)},Ga.__file="packages/calendar/src/date-table.vue";var Za=defineComponent({name:"ElCalendar",components:{DateTable:Ga,ElButton:da,ElButtonGroup:ha},props:{modelValue:{type:Date},range:{type:Array,validator:e=>!!Array.isArray(e)&&(2===e.length&&e.every((e=>e instanceof Date)))}},emits:["input","update:modelValue"],setup(e,t){const a=ref(null),o=dayjs_min(),i=computed((()=>c.value.subtract(1,"month"))),r=computed((()=>dayjs_min(c.value).format("YYYY-MM"))),s=computed((()=>c.value.add(1,"month"))),u=computed((()=>{const e="el.datepicker.month"+c.value.format("M");return `${c.value.year()} ${ga("el.datepicker.year")} ${ga(e)}`})),d=computed({get:()=>e.modelValue?c.value:a.value,set(e){a.value=e;const l=e.toDate();t.emit("input",l),t.emit("update:modelValue",l);}}),c=computed((()=>e.modelValue?dayjs_min(e.modelValue):d.value?d.value:p.value.length?p.value[0][0]:o)),p=computed((()=>{if(!e.range)return [];const t=e.range.map((e=>dayjs_min(e))),[l,a]=t;if(l.isAfter(a))return console.warn("[ElementCalendar]end time should be greater than start time"),[];if(l.isSame(a,"month"))return [[l.startOf("week"),a.endOf("week")]];{if(l.add(1,"month").month()!==a.month())return console.warn("[ElementCalendar]start time and end time interval must not exceed two months"),[];const e=a.startOf("month"),t=e.startOf("week");let n=e;return e.isSame(t,"month")||(n=e.endOf("week").add(1,"day")),[[l.startOf("week"),l.endOf("month")],[n,a.endOf("week")]]}})),h=e=>{d.value=e;};return {selectedDay:a,curMonthDatePrefix:r,i18nDate:u,realSelectedDay:d,date:c,validatedRange:p,pickDay:h,selectDate:e=>{let t;t="prev-month"===e?i.value:"next-month"===e?s.value:o,t.isSame(c.value,"day")||h(t);},t:ga}}});const Ja={class:"el-calendar"},en={class:"el-calendar__header"},tn={class:"el-calendar__title"},ln={key:0,class:"el-calendar__button-group"},an={key:0,class:"el-calendar__body"},nn={key:1,class:"el-calendar__body"};Za.render=function(e,t,l,a,n,o){const i=resolveComponent("el-button"),r=resolveComponent("el-button-group"),p=resolveComponent("date-table");return openBlock(),createBlock("div",Ja,[createVNode("div",en,[createVNode("div",tn,toDisplayString(e.i18nDate),1),0===e.validatedRange.length?(openBlock(),createBlock("div",ln,[createVNode(r,null,{default:withCtx((()=>[createVNode(i,{size:"mini",onClick:t[1]||(t[1]=t=>e.selectDate("prev-month"))},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.prevMonth")),1)])),_:1}),createVNode(i,{size:"mini",onClick:t[2]||(t[2]=t=>e.selectDate("today"))},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.today")),1)])),_:1}),createVNode(i,{size:"mini",onClick:t[3]||(t[3]=t=>e.selectDate("next-month"))},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.nextMonth")),1)])),_:1})])),_:1})])):createCommentVNode("v-if",!0)]),0===e.validatedRange.length?(openBlock(),createBlock("div",an,[createVNode(p,{date:e.date,"selected-day":e.realSelectedDay,onPick:e.pickDay},createSlots({_:2},[e.$slots.dateCell?{name:"dateCell",fn:withCtx((t=>[renderSlot(e.$slots,"dateCell",t)]))}:void 0]),1032,["date","selected-day","onPick"])])):(openBlock(),createBlock("div",nn,[(openBlock(!0),createBlock(Fragment,null,renderList(e.validatedRange,((t,l)=>(openBlock(),createBlock(p,{key:l,date:t[0],"selected-day":e.realSelectedDay,range:t,"hide-header":0!==l,onPick:e.pickDay},createSlots({_:2},[e.$slots.dateCell?{name:"dateCell",fn:withCtx((t=>[renderSlot(e.$slots,"dateCell",t)]))}:void 0]),1032,["date","selected-day","range","hide-header","onPick"])))),128))]))])},Za.__file="packages/calendar/src/index.vue",Za.install=e=>{e.component(Za.name,Za);};const on=Za;var rn=defineComponent({name:"ElCard",props:{header:{type:String,default:""},bodyStyle:{type:[String,Object,Array],default:""},shadow:{type:String,default:""}}});const sn={key:0,class:"el-card__header"};rn.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",null,[createVNode("div",{class:["el-card",e.shadow?"is-"+e.shadow+"-shadow":"is-always-shadow"]},[e.$slots.header||e.header?(openBlock(),createBlock("div",sn,[renderSlot(e.$slots,"header",{},(()=>[createTextVNode(toDisplayString(e.header),1)]))])):createCommentVNode("v-if",!0),createVNode("div",{class:"el-card__body",style:e.bodyStyle},[renderSlot(e.$slots,"default")],4)],2)])},rn.__file="packages/card/src/index.vue",rn.install=e=>{e.component(rn.name,rn);};const un=rn;var dn=defineComponent({name:"ElCarousel",props:{initialIndex:{type:Number,default:0},height:{type:String,default:""},trigger:{type:String,default:"hover"},autoplay:{type:Boolean,default:!0},interval:{type:Number,default:3e3},indicatorPosition:{type:String,default:""},indicator:{type:Boolean,default:!0},arrow:{type:String,default:"hover"},type:{type:String,default:""},loop:{type:Boolean,default:!0},direction:{type:String,default:"horizontal",validator:e=>["horizontal","vertical"].includes(e)},pauseOnHover:{type:Boolean,default:!0}},emits:["change"],setup(e,{emit:t}){const s=reactive({activeIndex:-1,containerWidth:0,timer:null,hover:!1}),u=ref(null),d=ref([]),c=ref(0),p=ref(0),h=computed((()=>"never"!==e.arrow&&"vertical"!==e.direction)),v=computed((()=>d.value.some((e=>e.label.toString().length>0)))),m=computed((()=>{const t=["el-carousel","el-carousel--"+e.direction];return "card"===e.type&&t.push("el-carousel--card"),t})),f=computed((()=>{const t=["el-carousel__indicators","el-carousel__indicators--"+e.direction];return v.value&&t.push("el-carousel__indicators--labels"),"outside"!==e.indicatorPosition&&"card"!==e.type||t.push("el-carousel__indicators--outside"),t})),g=throttle_1((e=>{w(e);}),300,{trailing:!0}),b=throttle_1((t=>{!function(t){"hover"===e.trigger&&t!==s.activeIndex&&(s.activeIndex=t);}(t);}),300);function y(){s.timer&&(clearInterval(s.timer),s.timer=null);}function k(){e.interval<=0||!e.autoplay||s.timer||(s.timer=setInterval((()=>C()),e.interval));}const C=()=>{s.activeIndex<d.value.length-1?s.activeIndex=s.activeIndex+1:e.loop&&(s.activeIndex=0);};function w(t){if("string"==typeof t){const e=d.value.filter((e=>e.name===t));e.length>0&&(t=d.value.indexOf(e[0]));}if(t=Number(t),isNaN(t)||t!==Math.floor(t))return void console.warn("[Element Warn][Carousel]index must be an integer.");let l=d.value.length;const a=s.activeIndex;s.activeIndex=t<0?e.loop?l-1:0:t>=l?e.loop?0:l-1:t,a===s.activeIndex&&_(a);}function _(e){d.value.forEach(((t,l)=>{t.translateItem(l,s.activeIndex,e);}));}function E(){w(s.activeIndex+1);}return watch((()=>s.activeIndex),((e,l)=>{_(l),l>-1&&t("change",e,l);})),watch((()=>e.autoplay),(e=>{e?k():y();})),watch((()=>e.loop),(()=>{w(s.activeIndex);})),onMounted((()=>{nextTick((()=>{dt(u.value,_),u.value&&(c.value=u.value.offsetWidth,p.value=u.value.offsetHeight),e.initialIndex<d.value.length&&e.initialIndex>=0&&(s.activeIndex=e.initialIndex),k();}));})),onBeforeUnmount((()=>{u.value&&ct(u.value,_),y();})),provide("injectCarouselScope",{direction:e.direction,offsetWidth:c,offsetHeight:p,type:e.type,items:d,loop:e.loop,addItem:function(e){d.value.push(e);},removeItem:function(e){const t=d.value.findIndex((t=>t.uid===e));-1!==t&&(d.value.splice(t,1),s.activeIndex===t&&E());},setActiveItem:w}),{data:s,props:e,items:d,arrowDisplay:h,carouselClasses:m,indicatorsClasses:f,hasLabel:v,handleMouseEnter:function(){s.hover=!0,e.pauseOnHover&&y();},handleMouseLeave:function(){s.hover=!1,k();},handleIndicatorClick:function(e){s.activeIndex=e;},throttledArrowClick:g,throttledIndicatorHover:b,handleButtonEnter:function(t){"vertical"!==e.direction&&d.value.forEach(((e,l)=>{t===function(e,t){const l=d.value.length;return t===l-1&&e.inStage&&d.value[0].active||e.inStage&&d.value[t+1]&&d.value[t+1].active?"left":!!(0===t&&e.inStage&&d.value[l-1].active||e.inStage&&d.value[t-1]&&d.value[t-1].active)&&"right"}(e,l)&&(e.hover=!0);}));},handleButtonLeave:function(){"vertical"!==e.direction&&d.value.forEach((e=>{e.hover=!1;}));},prev:function(){w(s.activeIndex-1);},next:E,setActiveItem:w,root:u}}});const cn=createVNode("i",{class:"el-icon-arrow-left"},null,-1),pn=createVNode("i",{class:"el-icon-arrow-right"},null,-1),hn={class:"el-carousel__button"},vn={key:0};dn.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{ref:"root",class:e.carouselClasses,onMouseenter:t[7]||(t[7]=withModifiers(((...t)=>e.handleMouseEnter&&e.handleMouseEnter(...t)),["stop"])),onMouseleave:t[8]||(t[8]=withModifiers(((...t)=>e.handleMouseLeave&&e.handleMouseLeave(...t)),["stop"]))},[createVNode("div",{class:"el-carousel__container",style:{height:e.height}},[e.arrowDisplay?(openBlock(),createBlock(Transition,{key:0,name:"carousel-arrow-left"},{default:withCtx((()=>[withDirectives(createVNode("button",{type:"button",class:"el-carousel__arrow el-carousel__arrow--left",onMouseenter:t[1]||(t[1]=t=>e.handleButtonEnter("left")),onMouseleave:t[2]||(t[2]=(...t)=>e.handleButtonLeave&&e.handleButtonLeave(...t)),onClick:t[3]||(t[3]=withModifiers((t=>e.throttledArrowClick(e.data.activeIndex-1)),["stop"]))},[cn],544),[[vShow,("always"===e.arrow||e.data.hover)&&(e.props.loop||e.data.activeIndex>0)]])])),_:1})):createCommentVNode("v-if",!0),e.arrowDisplay?(openBlock(),createBlock(Transition,{key:1,name:"carousel-arrow-right"},{default:withCtx((()=>[withDirectives(createVNode("button",{type:"button",class:"el-carousel__arrow el-carousel__arrow--right",onMouseenter:t[4]||(t[4]=t=>e.handleButtonEnter("right")),onMouseleave:t[5]||(t[5]=(...t)=>e.handleButtonLeave&&e.handleButtonLeave(...t)),onClick:t[6]||(t[6]=withModifiers((t=>e.throttledArrowClick(e.data.activeIndex+1)),["stop"]))},[pn],544),[[vShow,("always"===e.arrow||e.data.hover)&&(e.props.loop||e.data.activeIndex<e.items.length-1)]])])),_:1})):createCommentVNode("v-if",!0),renderSlot(e.$slots,"default")],4),"none"!==e.indicatorPosition?(openBlock(),createBlock("ul",{key:0,class:e.indicatorsClasses},[(openBlock(!0),createBlock(Fragment,null,renderList(e.items,((t,l)=>(openBlock(),createBlock("li",{key:l,class:["el-carousel__indicator","el-carousel__indicator--"+e.direction,{"is-active":l===e.data.activeIndex}],onMouseenter:t=>e.throttledIndicatorHover(l),onClick:withModifiers((t=>e.handleIndicatorClick(l)),["stop"])},[createVNode("button",hn,[e.hasLabel?(openBlock(),createBlock("span",vn,toDisplayString(t.label),1)):createCommentVNode("v-if",!0)])],42,["onMouseenter","onClick"])))),128))],2)):createCommentVNode("v-if",!0)],34)},dn.__file="packages/carousel/src/main.vue",dn.install=e=>{e.component(dn.name,dn);};var fn=defineComponent({name:"ElCarouselItem",props:{name:{type:String,default:""},label:{type:[String,Number],default:""}},setup(t){const l=getCurrentInstance();l.uid;const o=reactive({hover:!1,translate:0,scale:1,active:!1,ready:!1,inStage:!1,animating:!1}),r=inject("injectCarouselScope"),s=computed((()=>r.direction)),u=computed((()=>function(e){const t=["ms-","webkit-"];return ["transform","transition","animation"].forEach((l=>{const a=e[l];l&&a&&t.forEach((t=>{e[t+l]=a;}));})),e}({transform:`${"vertical"===s.value?"translateY":"translateX"}(${o.translate}px) scale(${o.scale})`})));const d=(e,t,l)=>{const a=r.type,n=r.items.value.length;if("card"!==a&&void 0!==l&&(o.animating=e===t||e===l),e!==t&&n>2&&r.loop&&(e=function(e,t,l){return 0===t&&e===l-1?-1:t===l-1&&0===e?l:e<t-1&&t-e>=l/2?l+1:e>t+1&&e-t>=l/2?-2:e}(e,t,n)),"card"===a)"vertical"===s.value&&console.warn("[Element Warn][Carousel]vertical direction is not supported in card mode"),o.inStage=Math.round(Math.abs(e-t))<=1,o.active=e===t,o.translate=function(e,t){const l=r.offsetWidth.value;return o.inStage?l*(1.17*(e-t)+1)/4:e<t?-1.83*l/4:3.83*l/4}(e,t),o.scale=o.active?1:.83;else {o.active=e===t;const l="vertical"===s.value;o.translate=function(e,t,l){return r[l?"offsetHeight":"offsetWidth"].value*(e-t)}(e,t,l);}o.ready=!0;};return onMounted((()=>{r.addItem&&r.addItem(Object.assign(Object.assign(Object.assign({uid:l.uid},t),toRefs(o)),{translateItem:d}));})),onUnmounted((()=>{r.removeItem&&r.removeItem(l.uid);})),{data:o,itemStyle:u,translateItem:d,type:r.type,handleItemClick:function(){if(r&&"card"===r.type){const e=r.items.value.map((e=>e.uid)).indexOf(l.uid);r.setActiveItem(e);}}}}});const gn={key:0,class:"el-carousel__mask"};fn.render=function(e,t,l,a,n,o){return withDirectives((openBlock(),createBlock("div",{class:["el-carousel__item",{"is-active":e.data.active,"el-carousel__item--card":"card"===e.type,"is-in-stage":e.data.inStage,"is-hover":e.data.hover,"is-animating":e.data.animating}],style:e.itemStyle,onClick:t[1]||(t[1]=(...t)=>e.handleItemClick&&e.handleItemClick(...t))},["card"===e.type?withDirectives((openBlock(),createBlock("div",gn,null,512)),[[vShow,!e.data.active]]):createCommentVNode("v-if",!0),renderSlot(e.$slots,"default")],6)),[[vShow,e.data.ready]])},fn.__file="packages/carousel/src/item.vue",fn.install=e=>{e.component(fn.name,fn);};const yn=()=>{const e=qe(),t=inject("elForm",{}),l=inject("elFormItem",{}),a=inject("CheckboxGroup",{}),o=computed((()=>a&&"ElCheckboxGroup"===(null==a?void 0:a.name))),i=computed((()=>l.size));return {isGroup:o,checkboxGroup:a,elForm:t,ELEMENT:e,elFormItemSize:i,elFormItem:l}},kn=t=>{const{model:a,isLimitExceeded:i}=(t=>{let a=!1;const{emit:o}=getCurrentInstance(),{isGroup:i,checkboxGroup:r}=yn(),s=ref(!1),u=computed((()=>{var e;return r?null===(e=r.modelValue)||void 0===e?void 0:e.value:t.modelValue}));return {model:computed({get(){var e;return i.value?u.value:null!==(e=t.modelValue)&&void 0!==e?e:a},set(e){var t;i.value&&Array.isArray(e)?(s.value=!1,void 0!==r.min&&e.length<r.min.value&&(s.value=!0),void 0!==r.max&&e.length>r.max.value&&(s.value=!0),!1===s.value&&(null===(t=null==r?void 0:r.changeEvent)||void 0===t||t.call(r,e))):(o(Kt,e),a=e);}}),isLimitExceeded:s}})(t),{focus:r,size:s,isChecked:u,checkboxSize:d}=((e,{model:t})=>{const{isGroup:a,checkboxGroup:o,elFormItemSize:i,ELEMENT:r}=yn(),s=ref(!1),u=computed((()=>{var e;return (null===(e=null==o?void 0:o.checkboxGroupSize)||void 0===e?void 0:e.value)||i.value||r.size}));return {isChecked:computed((()=>{const l=t.value;return "[object Boolean]"===Ne(l)?l:Array.isArray(l)?l.includes(e.label):null!=l?l===e.trueLabel:void 0})),focus:s,size:u,checkboxSize:computed((()=>{var t;const l=e.size||i.value||r.size;return a.value&&(null===(t=null==o?void 0:o.checkboxGroupSize)||void 0===t?void 0:t.value)||l}))}})(t,{model:a}),{isDisabled:c}=((e,{model:t,isChecked:l})=>{const{elForm:a,isGroup:o,checkboxGroup:i}=yn(),r=computed((()=>{var e,a;const n=null===(e=i.max)||void 0===e?void 0:e.value,o=null===(a=i.min)||void 0===a?void 0:a.value;return !(!n&&!o)&&t.value.length>=n&&!l.value||t.value.length<=o&&l.value}));return {isDisabled:computed((()=>{var t;const l=e.disabled||a.disabled;return o.value?(null===(t=i.disabled)||void 0===t?void 0:t.value)||l||r.value:e.disabled||a.disabled})),isLimitDisabled:r}})(t,{model:a,isChecked:u}),{handleChange:p}=((t,{isLimitExceeded:l})=>{const{elFormItem:a}=yn(),{emit:n}=getCurrentInstance();return watch((()=>t.modelValue),(e=>{var t;null===(t=a.formItemMitt)||void 0===t||t.emit("el.form.change",[e]);})),{handleChange:function(e){var a,o;if(l.value)return;const i=e.target.checked?null===(a=t.trueLabel)||void 0===a||a:null!==(o=t.falseLabel)&&void 0!==o&&o;n("change",i,e);}}})(t,{isLimitExceeded:i});return ((e,{model:t})=>{e.checked&&(Array.isArray(t.value)&&!t.value.includes(e.label)?t.value.push(e.label):t.value=e.trueLabel||!0);})(t,{model:a}),{isChecked:u,isDisabled:c,checkboxSize:d,model:a,handleChange:p,focus:r,size:s}};var Cn=defineComponent({name:"ElCheckbox",props:{modelValue:{type:[Boolean,Number,String],default:()=>{}},label:{type:[Boolean,Number,String]},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:{type:String,default:void 0},trueLabel:{type:[String,Number],default:void 0},falseLabel:{type:[String,Number],default:void 0},id:{type:String,default:void 0},controls:{type:String,default:void 0},border:Boolean,size:{type:String,validator:Ut}},emits:[Kt,"change"],setup:e=>kn(e)});const xn=createVNode("span",{class:"el-checkbox__inner"},null,-1),wn={key:0,class:"el-checkbox__label"};Cn.render=function(e,t,l,a,n,o){return openBlock(),createBlock("label",{id:e.id,class:["el-checkbox",[e.border&&e.checkboxSize?"el-checkbox--"+e.checkboxSize:"",{"is-disabled":e.isDisabled},{"is-bordered":e.border},{"is-checked":e.isChecked}]],"aria-controls":e.indeterminate?e.controls:null},[createVNode("span",{class:["el-checkbox__input",{"is-disabled":e.isDisabled,"is-checked":e.isChecked,"is-indeterminate":e.indeterminate,"is-focus":e.focus}],tabindex:!!e.indeterminate&&0,role:!!e.indeterminate&&"checkbox","aria-checked":!!e.indeterminate&&"mixed"},[xn,e.trueLabel||e.falseLabel?withDirectives((openBlock(),createBlock("input",{key:0,"onUpdate:modelValue":t[1]||(t[1]=t=>e.model=t),checked:e.isChecked,class:"el-checkbox__original",type:"checkbox","aria-hidden":e.indeterminate?"true":"false",name:e.name,disabled:e.isDisabled,"true-value":e.trueLabel,"false-value":e.falseLabel,onChange:t[2]||(t[2]=(...t)=>e.handleChange&&e.handleChange(...t)),onFocus:t[3]||(t[3]=t=>e.focus=!0),onBlur:t[4]||(t[4]=t=>e.focus=!1)},null,40,["checked","aria-hidden","name","disabled","true-value","false-value"])),[[vModelCheckbox,e.model]]):withDirectives((openBlock(),createBlock("input",{key:1,"onUpdate:modelValue":t[5]||(t[5]=t=>e.model=t),class:"el-checkbox__original",type:"checkbox","aria-hidden":e.indeterminate?"true":"false",disabled:e.isDisabled,value:e.label,name:e.name,onChange:t[6]||(t[6]=(...t)=>e.handleChange&&e.handleChange(...t)),onFocus:t[7]||(t[7]=t=>e.focus=!0),onBlur:t[8]||(t[8]=t=>e.focus=!1)},null,40,["aria-hidden","disabled","value","name"])),[[vModelCheckbox,e.model]])],10,["tabindex","role","aria-checked"]),e.$slots.default||e.label?(openBlock(),createBlock("span",wn,[renderSlot(e.$slots,"default"),e.$slots.default?createCommentVNode("v-if",!0):(openBlock(),createBlock(Fragment,{key:0},[createTextVNode(toDisplayString(e.label),1)],64))])):createCommentVNode("v-if",!0)],10,["id","aria-controls"])},Cn.__file="packages/checkbox/src/checkbox.vue",Cn.install=e=>{e.component(Cn.name,Cn);};const Sn=Cn,_n=()=>{const e=qe(),t=inject("elForm",{}),a=inject("elFormItem",{}),o=inject("RadioGroup",{}),i=ref(!1),r=computed((()=>"ElRadioGroup"===(null==o?void 0:o.name))),s=computed((()=>a.size||e.size));return {isGroup:r,focus:i,radioGroup:o,elForm:t,ELEMENT:e,elFormItemSize:s}},En=(e,{isGroup:t,radioGroup:l,elForm:a,model:o})=>{const i=computed((()=>t.value?l.disabled||e.disabled||a.disabled:e.disabled||a.disabled)),r=computed((()=>i.value||t.value&&o.value!==e.label?-1:0));return {isDisabled:i,tabIndex:r}};var Mn=defineComponent({name:"ElRadio",componentName:"ElRadio",props:{modelValue:{type:[String,Number,Boolean],default:""},label:{type:[String,Number,Boolean],default:""},disabled:Boolean,name:{type:String,default:""},border:Boolean,size:{type:String,validator:Ut}},emits:[Kt,"change"],setup(e,t){const{isGroup:a,radioGroup:o,elFormItemSize:i,ELEMENT:r,focus:s,elForm:u}=_n(),d=ref(),c=computed({get:()=>a.value?o.modelValue:e.modelValue,set(l){a.value?o.changeEvent(l):t.emit(Kt,l),d.value.checked=e.modelValue===e.label;}}),{tabIndex:p,isDisabled:h}=En(e,{isGroup:a,radioGroup:o,elForm:u,model:c}),v=computed((()=>{const t=e.size||i.value||r.size;return a.value&&o.radioGroupSize||t}));return {focus:s,isGroup:a,isDisabled:h,model:c,tabIndex:p,radioSize:v,handleChange:function(){nextTick((()=>{t.emit("change",c.value);}));},radioRef:d}}});const Tn=createVNode("span",{class:"el-radio__inner"},null,-1);Mn.render=function(e,t,l,a,n,o){return openBlock(),createBlock("label",{class:["el-radio",{["el-radio--"+(e.radioSize||"")]:e.border&&e.radioSize,"is-disabled":e.isDisabled,"is-focus":e.focus,"is-bordered":e.border,"is-checked":e.model===e.label}],role:"radio","aria-checked":e.model===e.label,"aria-disabled":e.isDisabled,tabindex:e.tabIndex,onKeydown:t[6]||(t[6]=withKeys(withModifiers((t=>e.model=e.isDisabled?e.model:e.label),["stop","prevent"]),["space"]))},[createVNode("span",{class:["el-radio__input",{"is-disabled":e.isDisabled,"is-checked":e.model===e.label}]},[Tn,withDirectives(createVNode("input",{ref:"radioRef","onUpdate:modelValue":t[1]||(t[1]=t=>e.model=t),class:"el-radio__original",value:e.label,type:"radio","aria-hidden":"true",name:e.name,disabled:e.isDisabled,tabindex:"-1",onFocus:t[2]||(t[2]=t=>e.focus=!0),onBlur:t[3]||(t[3]=t=>e.focus=!1),onChange:t[4]||(t[4]=(...t)=>e.handleChange&&e.handleChange(...t))},null,40,["value","name","disabled"]),[[vModelRadio,e.model]])],2),createVNode("span",{class:"el-radio__label",onKeydown:t[5]||(t[5]=withModifiers((()=>{}),["stop"]))},[renderSlot(e.$slots,"default",{},(()=>[createTextVNode(toDisplayString(e.label),1)]))],32)],42,["aria-checked","aria-disabled","tabindex"])},Mn.__file="packages/radio/src/radio.vue",Mn.install=e=>{e.component(Mn.name,Mn);};const Nn=Mn;var Dn;!function(e){e.CLICK="click",e.HOVER="hover";}(Dn||(Dn={}));const On=Symbol();var Pn=defineComponent({name:"ElCascaderNode",components:{ElCheckbox:Sn,ElRadio:Nn,NodeContent:{render(){const{node:e,panel:t}=this.$parent,{data:l,label:a}=e,{renderLabelFn:n}=t;return h("span",{class:"el-cascader-node__label"},n?n({node:e,data:l}):a)}}},props:{node:{type:Object,required:!0},menuId:String},emits:["expand"],setup(e,{emit:t}){const l=inject(On),a=computed((()=>l.isHoverMenu)),o=computed((()=>l.config.multiple)),i=computed((()=>l.config.checkStrictly)),r=computed((()=>{var e;return null===(e=l.checkedNodes[0])||void 0===e?void 0:e.uid})),s=computed((()=>e.node.isDisabled)),u=computed((()=>e.node.isLeaf)),d=computed((()=>i.value&&!u.value||!s.value)),c=computed((()=>h(l.expandingNode))),p=computed((()=>i.value&&l.checkedNodes.some(h))),h=t=>{var l;const{level:a,uid:n}=e.node;return (null===(l=null==t?void 0:t.pathNodes[a-1])||void 0===l?void 0:l.uid)===n},v=()=>{c.value||l.expandNode(e.node);},m=()=>{l.lazyLoad(e.node,(()=>{u.value||v();}));},f=()=>{const{node:t}=e;d.value&&!t.loading&&(t.loaded?v():m());},g=t=>{e.node.loaded?((t=>{const{node:a}=e;t!==a.checked&&l.handleCheckChange(a,t);})(t),!i.value&&v()):m();};return {panel:l,isHoverMenu:a,multiple:o,checkStrictly:i,checkedNodeId:r,isDisabled:s,isLeaf:u,expandable:d,inExpandingPath:c,inCheckedPath:p,handleHoverExpand:e=>{a.value&&(f(),!u.value&&t("expand",e));},handleExpand:f,handleClick:()=>{a.value&&!u.value||(!u.value||s.value||i.value||o.value?f():g(!0));},handleCheck:g}}});const Vn=createVNode("span",null,null,-1),In={key:2,class:"el-icon-check el-cascader-node__prefix"},Bn={key:0,class:"el-icon-loading el-cascader-node__postfix"},An={key:1,class:"el-icon-arrow-right el-cascader-node__postfix"};Pn.render=function(e,t,l,a,n,o){const i=resolveComponent("el-checkbox"),r=resolveComponent("el-radio"),c=resolveComponent("node-content");return openBlock(),createBlock("li",{id:`${e.menuId}-${e.node.uid}`,role:"menuitem","aria-haspopup":!e.isLeaf,"aria-owns":e.isLeaf?null:e.menuId,"aria-expanded":e.inExpandingPath,tabindex:e.expandable?-1:null,class:["el-cascader-node",e.checkStrictly&&"is-selectable",e.inExpandingPath&&"in-active-path",e.inCheckedPath&&"in-checked-path",e.node.checked&&"is-active",!e.expandable&&"is-disabled"],onMouseenter:t[3]||(t[3]=(...t)=>e.handleHoverExpand&&e.handleHoverExpand(...t)),onFocus:t[4]||(t[4]=(...t)=>e.handleHoverExpand&&e.handleHoverExpand(...t)),onClick:t[5]||(t[5]=(...t)=>e.handleClick&&e.handleClick(...t))},[createCommentVNode(" prefix "),e.multiple?(openBlock(),createBlock(i,{key:0,"model-value":e.node.checked,indeterminate:e.node.indeterminate,disabled:e.isDisabled,onClick:t[1]||(t[1]=withModifiers((()=>{}),["stop"])),"onUpdate:modelValue":e.handleCheck},null,8,["model-value","indeterminate","disabled","onUpdate:modelValue"])):e.checkStrictly?(openBlock(),createBlock(r,{key:1,"model-value":e.checkedNodeId,label:e.node.uid,disabled:e.isDisabled,"onUpdate:modelValue":e.handleCheck,onClick:t[2]||(t[2]=withModifiers((()=>{}),["stop"]))},{default:withCtx((()=>[createCommentVNode("\n        Add an empty element to avoid render label,\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\n      "),Vn])),_:1},8,["model-value","label","disabled","onUpdate:modelValue"])):e.isLeaf&&e.node.checked?(openBlock(),createBlock("i",In)):createCommentVNode("v-if",!0),createCommentVNode(" content "),createVNode(c),createCommentVNode(" postfix "),e.isLeaf?createCommentVNode("v-if",!0):(openBlock(),createBlock(Fragment,{key:3},[e.node.loading?(openBlock(),createBlock("i",Bn)):(openBlock(),createBlock("i",An))],64))],42,["id","aria-haspopup","aria-owns","aria-expanded","tabindex"])},Pn.__file="packages/cascader-panel/src/node.vue";var Ln=defineComponent({name:"ElCascaderMenu",components:{ElScrollbar:gl,ElCascaderNode:Pn},props:{nodes:{type:Array,required:!0},index:{type:Number,required:!0}},setup(t){const a=getCurrentInstance(),o=Re();let i=null,r=null;const s=inject(On),u=ref(null),d=computed((()=>!t.nodes.length)),c=computed((()=>`cascader-menu-${o}-${t.index}`)),p=()=>{r&&(clearTimeout(r),r=null);},h=()=>{u.value&&(u.value.innerHTML="",p());};return {panel:s,hoverZone:u,isEmpty:d,menuId:c,t:ga,handleExpand:e=>{i=e.target;},handleMouseMove:e=>{if(s.isHoverMenu&&i&&u.value)if(i.contains(e.target)){p();const t=a.vnode.el,{left:l}=t.getBoundingClientRect(),{offsetWidth:n,offsetHeight:o}=t,r=e.clientX-l,s=i.offsetTop,d=s+i.offsetHeight;u.value.innerHTML=`\n          <path style="pointer-events: auto;" fill="transparent" d="M${r} ${s} L${n} 0 V${s} Z" />\n          <path style="pointer-events: auto;" fill="transparent" d="M${r} ${d} L${n} ${o} V${d} Z" />\n        `;}else r||(r=window.setTimeout(h,s.config.hoverThreshold));},clearHoverZone:h}}});const zn={key:0,class:"el-cascader-menu__empty-text"},Fn={key:1,ref:"hoverZone",class:"el-cascader-menu__hover-zone"};Ln.render=function(e,t,l,a,n,o){const i=resolveComponent("el-cascader-node"),r=resolveComponent("el-scrollbar");return openBlock(),createBlock(r,{id:e.menuId,tag:"ul",role:"menu",class:"el-cascader-menu","wrap-class":"el-cascader-menu__wrap","view-class":["el-cascader-menu__list",e.isEmpty&&"is-empty"],onMousemove:e.handleMouseMove,onMouseleave:e.clearHoverZone},{default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.nodes,(t=>(openBlock(),createBlock(i,{key:t.uid,node:t,"menu-id":e.menuId,onExpand:e.handleExpand},null,8,["node","menu-id","onExpand"])))),128)),e.isEmpty?(openBlock(),createBlock("div",zn,toDisplayString(e.t("el.cascader.noData")),1)):e.panel.isHoverMenu?(openBlock(),createBlock("svg",Fn,null,512)):createCommentVNode("v-if",!0)])),_:1},8,["id","view-class","onMousemove","onMouseleave"])},Ln.__file="packages/cascader-panel/src/menu.vue";let Rn=0;class $n{constructor(e,t,l,a=!1){this.data=e,this.config=t,this.parent=l,this.root=a,this.uid=Rn++,this.checked=!1,this.indeterminate=!1,this.loading=!1;const{value:n,label:o,children:i}=t,r=e[i],s=(e=>{const t=[e];let{parent:l}=e;for(;l;)t.unshift(l),l=l.parent;return t})(this);this.level=a?0:l?l.level+1:1,this.value=e[n],this.label=e[o],this.pathNodes=s,this.pathValues=s.map((e=>e.value)),this.pathLabels=s.map((e=>e.label)),this.childrenData=r,this.children=(r||[]).map((e=>new $n(e,t,this))),this.loaded=!t.lazy||this.isLeaf||!Ge(r);}get isDisabled(){const{data:e,parent:t,config:l}=this,{disabled:a,checkStrictly:n}=l;return (_e(a)?a(e,this):!!e[a])||!n&&(null==t?void 0:t.isDisabled)}get isLeaf(){const{data:e,config:t,childrenData:l,loaded:a}=this,{lazy:n,leaf:o}=t,i=_e(o)?o(e,this):e[o];return void 0===i?!(n&&!a)&&!Array.isArray(l):!!i}get valueByOption(){return this.config.emitPath?this.pathValues:this.value}appendChild(e){const{childrenData:t,children:l}=this,a=new $n(e,this.config,this);return Array.isArray(t)?t.push(e):this.childrenData=[e],l.push(a),a}calcText(e,t){const l=e?this.pathLabels.join(t):this.label;return this.text=l,l}broadcast(e,...t){const l="onParent"+Ie(e);this.children.forEach((a=>{a&&(a.broadcast(e,...t),a[l]&&a[l](...t));}));}emit(e,...t){const{parent:l}=this,a="onChild"+Ie(e);l&&(l[a]&&l[a](...t),l.emit(e,...t));}onParentCheck(e){this.isDisabled||this.setCheckState(e);}onChildCheck(){const{children:e}=this,t=e.filter((e=>!e.isDisabled)),l=!!t.length&&t.every((e=>e.checked));this.setCheckState(l);}setCheckState(e){const t=this.children.length,l=this.children.reduce(((e,t)=>e+(t.checked?1:t.indeterminate?.5:0)),0);this.checked=this.loaded&&this.children.every((e=>e.loaded&&e.checked))&&e,this.indeterminate=this.loaded&&l!==t&&l>0;}doCheck(e){if(this.checked===e)return;const{checkStrictly:t,multiple:l}=this.config;t||!l?this.checked=e:(this.broadcast("check",e),this.setCheckState(e),this.emit("check"));}}const Hn=(e,t)=>e.reduce(((e,l)=>(l.isLeaf?e.push(l):(!t&&e.push(l),e=e.concat(Hn(l.children,t))),e)),[]);class Wn{constructor(e,t){this.config=t;const l=(e||[]).map((e=>new $n(e,this.config)));this.nodes=l,this.allNodes=Hn(l,!1),this.leafNodes=Hn(l,!0);}getNodes(){return this.nodes}getFlattedNodes(e){return e?this.leafNodes:this.allNodes}appendNode(e,t){const l=t?t.appendChild(e):new $n(e,this.config);t||this.nodes.push(l),this.allNodes.push(l),l.isLeaf&&this.leafNodes.push(l);}appendNodes(e,t){e.forEach((e=>this.appendNode(e,t)));}getNodeByValue(e,t=!1){if(!e&&0!==e)return null;return this.getFlattedNodes(t).filter((t=>t.value===e||isEqual_1(t.pathValues,e)))[0]||null}getSameNode(e){if(!e)return null;return this.getFlattedNodes(!1).filter((({value:t,level:l})=>e.value===t&&e.level===l))[0]||null}}function jn(e,t){if(Ce)return;if(!t)return void(e.scrollTop=0);const l=[];let a=t.offsetParent;for(;null!==a&&e!==a&&e.contains(a);)l.push(a),a=a.offsetParent;const n=t.offsetTop+l.reduce(((e,t)=>e+t.offsetTop),0),o=n+t.offsetHeight,i=e.scrollTop,r=i+e.clientHeight;n<i?e.scrollTop=n:o>r&&(e.scrollTop=o-e.clientHeight);}const Kn={modelValue:[Number,String,Array],options:{type:Array,default:()=>[]},props:{type:Object,default:()=>({})}},Yn={expandTrigger:Dn.CLICK,multiple:!1,checkStrictly:!1,emitPath:!0,lazy:!1,lazyLoad:xe,value:"value",label:"label",children:"children",leaf:"leaf",disabled:"disabled",hoverThreshold:500},qn=e=>!e.getAttribute("aria-owns"),Un=e=>{if(!e)return 0;const t=e.id.split("-");return Number(t[t.length-2])},Gn=e=>{e&&(e.focus(),!qn(e)&&e.click());};var Xn=defineComponent({name:"ElCascaderPanel",components:{ElCascaderMenu:Ln},props:Object.assign(Object.assign({},Kn),{border:{type:Boolean,default:!0},renderLabel:Function}),emits:[Kt,"change","close","expand-change"],setup(e,{emit:t,slots:r}){let s=!0,u=!1;const d=(e=>computed((()=>Object.assign(Object.assign({},Yn),e.props))))(e),c=ref(null),p=ref([]),h=ref(null),v=ref([]),m=ref(null),f=ref([]),g=computed((()=>d.value.expandTrigger===Dn.HOVER)),b=computed((()=>e.renderLabel||r.default)),y=(e,t)=>{const l=d.value;(e=e||new $n({},l,null,!0)).loading=!0;l.lazyLoad(e,(l=>{const a=e.root?null:e;l&&c.value.appendNodes(l,a),e.loading=!1,e.loaded=!0,t&&t(l);}));},k=(e,l)=>{var a;const{level:n}=e,o=v.value.slice(0,n);let i;e.isLeaf?i=e.pathNodes[n-2]:(i=e,o.push(e.children)),(null===(a=m.value)||void 0===a?void 0:a.uid)!==(null==i?void 0:i.uid)&&(m.value=e,v.value=o,!l&&t("expand-change",(null==e?void 0:e.pathValues)||[]));},C=(e,l,a=!0)=>{const{checkStrictly:n,multiple:o}=d.value,i=f.value[0];u=!0,!o&&(null==i||i.doCheck(!1)),e.doCheck(l),E(),a&&!o&&!n&&t("close");},w=e=>c.value.getFlattedNodes(e),_=e=>w(e).filter((e=>!1!==e.checked)),E=()=>{var e;const{checkStrictly:t,multiple:l}=d.value,a=((e,t)=>{const l=t.slice(0),a=l.map((e=>e.uid)),n=e.reduce(((e,t)=>{const n=a.indexOf(t.uid);return n>-1&&(e.push(t),l.splice(n,1),a.splice(n,1)),e}),[]);return n.push(...l),n})(f.value,_(!t)),n=a.map((e=>e.valueByOption));f.value=a,h.value=l?n:null!==(e=n[0])&&void 0!==e?e:null;},M=(t=!1,l=!1)=>{const{modelValue:a}=e,{lazy:n,multiple:o,checkStrictly:i}=d.value,r=!i;if(s&&!u&&(l||!isEqual_1(a,h.value)))if(n&&!t){const e=Qe(Xe($e(a))).map((e=>c.value.getNodeByValue(e))).filter((e=>!!e&&!e.loaded&&!e.loading));e.length?e.forEach((e=>{y(e,(()=>M(!1,l)));})):M(!0,l);}else {const e=Qe((o?$e(a):[a]).map((e=>c.value.getNodeByValue(e,r))));T(e,!1),h.value=a;}},T=(e,t=!0)=>{const{checkStrictly:l}=d.value,a=f.value,n=e.filter((e=>!!e&&(l||e.isLeaf))),o=c.value.getSameNode(m.value),i=t&&o||n[0];i?i.pathNodes.forEach((e=>k(e,!0))):m.value=null,a.forEach((e=>e.doCheck(!1))),n.forEach((e=>e.doCheck(!0))),f.value=n,nextTick(N);},N=()=>{Ce||p.value.forEach((e=>{const t=null==e?void 0:e.$el;if(t){jn(t.querySelector(".el-scrollbar__wrap"),t.querySelector(".el-cascader-node.is-active")||t.querySelector(".el-cascader-node.in-active-path"));}}));};return provide(On,reactive({config:d,expandingNode:m,checkedNodes:f,isHoverMenu:g,renderLabelFn:b,lazyLoad:y,expandNode:k,handleCheckChange:C})),watch([d,()=>e.options],(()=>{const{options:t}=e,l=d.value;u=!1,c.value=new Wn(t,l),v.value=[c.value.getNodes()],l.lazy&&Ge(e.options)?(s=!1,y(null,(()=>{s=!0,M(!1,!0);}))):M(!1,!0);}),{deep:!0,immediate:!0}),watch((()=>e.modelValue),(()=>{u=!1,M();})),watch(h,(l=>{isEqual_1(l,e.modelValue)||(t(Kt,l),t("change",l));})),onBeforeUpdate((()=>p.value=[])),onMounted((()=>!Ge(e.modelValue)&&M())),{menuList:p,menus:v,checkedNodes:f,handleKeyDown:e=>{const l=e.target,{code:a}=e;switch(a){case Tt.up:case Tt.down:const e=a===Tt.up?-1:1;Gn(((e,t)=>{const{parentNode:l}=e;if(!l)return null;const a=l.querySelectorAll('.el-cascader-node[tabindex="-1"]');return a[Array.prototype.indexOf.call(a,e)+t]||null})(l,e));break;case Tt.left:const n=p.value[Un(l)-1],o=null==n?void 0:n.$el.querySelector('.el-cascader-node[aria-expanded="true"]');Gn(o);break;case Tt.right:const i=p.value[Un(l)+1],r=null==i?void 0:i.$el.querySelector('.el-cascader-node[tabindex="-1"]');Gn(r);break;case Tt.enter:(e=>{if(!e)return;const t=e.querySelector("input");t?t.click():qn(e)&&e.click();})(l);break;case Tt.esc:case Tt.tab:t("close");}},handleCheckChange:C,getFlattedNodes:w,getCheckedNodes:_,clearCheckedNodes:()=>{f.value.forEach((e=>e.doCheck(!1))),E();},calculateCheckedValue:E,scrollToExpandingNode:N}}});Xn.render=function(e,t,l,a,n,o){const i=resolveComponent("el-cascader-menu");return openBlock(),createBlock("div",{class:["el-cascader-panel",e.border&&"is-bordered"],onKeydown:t[1]||(t[1]=(...t)=>e.handleKeyDown&&e.handleKeyDown(...t))},[(openBlock(!0),createBlock(Fragment,null,renderList(e.menus,((t,l)=>(openBlock(),createBlock(i,{key:l,ref:t=>e.menuList[l]=t,index:l,nodes:t},null,8,["index","nodes"])))),128))],34)},Xn.__file="packages/cascader-panel/src/index.vue",Xn.install=e=>{e.component(Xn.name,Xn);};const Qn=Xn;var Zn=defineComponent({name:"ElTag",props:{closable:Boolean,type:{type:String,default:""},hit:Boolean,disableTransitions:Boolean,color:{type:String,default:""},size:{type:String,validator:Ut},effect:{type:String,default:"light",validator:e=>-1!==["dark","light","plain"].indexOf(e)}},emits:["close","click"],setup(e,t){const l=qe(),a=computed((()=>e.size||l.size)),o=computed((()=>{const{type:t,hit:l,effect:n}=e;return ["el-tag",t?"el-tag--"+t:"",a.value?"el-tag--"+a.value:"",n?"el-tag--"+n:"",l&&"is-hit"]}));return {tagSize:a,classes:o,handleClose:e=>{e.stopPropagation(),t.emit("close",e);},handleClick:e=>{t.emit("click",e);}}}});Zn.render=function(e,t,l,a,n,o){return e.disableTransitions?(openBlock(),createBlock(Transition,{key:1,name:"el-zoom-in-center"},{default:withCtx((()=>[createVNode("span",{class:e.classes,style:{backgroundColor:e.color},onClick:t[4]||(t[4]=(...t)=>e.handleClick&&e.handleClick(...t))},[renderSlot(e.$slots,"default"),e.closable?(openBlock(),createBlock("i",{key:0,class:"el-tag__close el-icon-close",onClick:t[3]||(t[3]=(...t)=>e.handleClose&&e.handleClose(...t))})):createCommentVNode("v-if",!0)],6)])),_:3})):(openBlock(),createBlock("span",{key:0,class:e.classes,style:{backgroundColor:e.color},onClick:t[2]||(t[2]=(...t)=>e.handleClick&&e.handleClick(...t))},[renderSlot(e.$slots,"default"),e.closable?(openBlock(),createBlock("i",{key:0,class:"el-tag__close el-icon-close",onClick:t[1]||(t[1]=(...t)=>e.handleClose&&e.handleClose(...t))})):createCommentVNode("v-if",!0)],6))},Zn.__file="packages/tag/src/index.vue",Zn.install=e=>{e.component(Zn.name,Zn);};const Jn=Zn,eo={medium:36,small:32,mini:28},to={modifiers:[{name:"arrowPosition",enabled:!0,phase:"main",fn:({state:e})=>{const{modifiersData:t,elements:l}=e,{reference:a,arrow:n}=l;t.arrow.x=t.arrow.x-(a.clientWidth-n.clientWidth)/2+35;},requires:["arrow"]}]};var lo=defineComponent({name:"ElCascader",components:{ElCascaderPanel:Qn,ElInput:pl,ElPopper:Rl,ElScrollbar:gl,ElTag:Jn},directives:{Clickoutside:zt},props:Object.assign(Object.assign({},Kn),{size:{type:String,validator:Ut},placeholder:{type:String,default:()=>ga("el.cascader.placeholder")},disabled:Boolean,clearable:Boolean,filterable:Boolean,filterMethod:{type:Function,default:(e,t)=>e.text.includes(t)},separator:{type:String,default:" / "},showAllLevels:{type:Boolean,default:!0},collapseTags:Boolean,debounce:{type:Number,default:300},beforeFilter:{type:Function,default:()=>!0},popperClass:{type:String,default:""}}),emits:[Kt,"change","focus","blur","visible-change","expand-change","remove-tag"],setup(e,{emit:t}){let a=0,s=0;const u=qe(),d=inject("elForm",{}),c=inject("elFormItem",{}),p=ref(null),h=ref(null),v=ref(null),m=ref(null),f=ref(null),g=ref(!1),b=ref(!1),y=ref(!1),k=ref(""),C=ref(""),w=ref([]),S=ref([]),E=computed((()=>e.disabled||d.disabled)),M=computed((()=>e.size||c.size||u.size)),T=computed((()=>["small","mini"].includes(M.value)?"mini":"small")),N=computed((()=>!!e.props.multiple)),D=computed((()=>!e.filterable||N.value)),O=computed((()=>N.value?C.value:k.value)),P=computed((()=>{var e;return (null===(e=m.value)||void 0===e?void 0:e.checkedNodes)||[]})),V=computed((()=>!(!e.clearable||E.value||y.value||!b.value)&&!!P.value.length)),I=computed((()=>{const{showAllLevels:t,separator:l}=e,a=P.value;return a.length?N.value?" ":a[0].calcText(t,l):""})),B=computed({get:()=>e.modelValue,set(e){var l;t(Kt,e),t("change",e),null===(l=c.formItemMitt)||void 0===l||l.emit("el.form.change",[e]);}}),A=computed((()=>{var e;return null===(e=p.value)||void 0===e?void 0:e.popperRef})),L=l=>{if(!E.value&&(l=null!=l?l:!g.value)!==g.value){if(g.value=l,h.value.input.setAttribute("aria-expanded",l),l)z(),nextTick(m.value.scrollToExpandingNode);else if(e.filterable){const{value:e}=I;k.value=e,C.value=e;}t("visible-change",l);}},z=()=>{nextTick(p.value.update);},F=()=>{y.value=!1;},R=t=>{const{showAllLevels:l,separator:a}=e;return {node:t,key:t.uid,text:t.calcText(l,a),hitState:!1,closable:!E.value&&!t.isDisabled}},$=e=>{const{node:l}=e;l.doCheck(!1),m.value.calculateCheckedValue(),t("remove-tag",l.valueByOption);},H=()=>{const{filterMethod:t,showAllLevels:l,separator:a}=e,n=m.value.getFlattedNodes(!e.props.checkStrictly).filter((e=>!e.isDisabled&&(e.calcText(l,a),t(e,O.value))));N.value&&w.value.forEach((e=>{e.hitState=!1;})),y.value=!0,S.value=n,z();},W=()=>{var e;let t=null;t=y.value&&f.value?f.value.$el.querySelector(".el-cascader__suggestion-item"):null===(e=m.value)||void 0===e?void 0:e.$el.querySelector('.el-cascader-node[tabindex="-1"]'),t&&(t.focus(),!y.value&&t.click());},j=()=>{var e;const t=h.value.input,l=v.value,n=null===(e=f.value)||void 0===e?void 0:e.$el;if(!Ce&&t){if(n){n.querySelector(".el-cascader__suggestion-list").style.minWidth=t.offsetWidth+"px";}if(l){const{offsetHeight:e}=l,n=Math.max(e+6,a)+"px";t.style.height=n,z();}}},K=debounce_1((()=>{const{value:t}=O;if(!t)return;const l=e.beforeFilter(t);var a;Me(a=l)&&_e(a.then)&&_e(a.catch)?l.then(H).catch((()=>{})):!1!==l?H():F();}),e.debounce);return watch(y,z),watch([P,E],(()=>{if(!N.value)return;const t=P.value,l=[];if(t.length){const[a,...n]=t,o=n.length;l.push(R(a)),o&&(e.collapseTags?l.push({key:-1,text:"+ "+o,closable:!1}):n.forEach((e=>l.push(R(e)))));}w.value=l;})),watch(w,(()=>nextTick(j))),watch(I,(e=>k.value=e),{immediate:!0}),onMounted((()=>{const e=h.value.$el;a=(null==e?void 0:e.offsetHeight)||eo[M.value]||40,dt(e,j);})),onBeforeUnmount((()=>{ct(h.value.$el,j);})),{popperOptions:to,popper:p,popperPaneRef:A,input:h,tagWrapper:v,panel:m,suggestionPanel:f,popperVisible:g,inputHover:b,filtering:y,presentText:I,checkedValue:B,inputValue:k,searchInputValue:C,presentTags:w,suggestions:S,isDisabled:E,realSize:M,tagSize:T,multiple:N,readonly:D,clearBtnVisible:V,t:ga,togglePopperVisible:L,hideSuggestionPanel:F,deleteTag:$,focusFirstNode:W,getCheckedNodes:e=>m.value.getCheckedNodes(e),handleExpandChange:e=>{z(),t("expand-change",e);},handleKeyDown:e=>{switch(e.code){case Tt.enter:L();break;case Tt.down:L(!0),nextTick(W),event.preventDefault();break;case Tt.esc:case Tt.tab:L(!1);}},handleClear:()=>{m.value.clearCheckedNodes(),L(!1);},handleSuggestionClick:e=>{const{checked:t}=e;N.value?m.value.handleCheckChange(e,!t,!1):(!t&&m.value.handleCheckChange(e,!0,!1),L(!1));},handleDelete:()=>{const e=w.value,t=e[e.length-1];s=C.value?0:s+1,t&&s&&(t.hitState?$(t):t.hitState=!0);},handleInput:(e,t)=>{!g.value&&L(!0),(null==t?void 0:t.isComposing)||(e?K():F());}}}});const ao={key:0,ref:"tagWrapper",class:"el-cascader__tags"},no={key:0,class:"el-icon-check"},oo={class:"el-cascader__empty-text"};lo.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveComponent("el-tag"),p=resolveComponent("el-cascader-panel"),f=resolveComponent("el-scrollbar"),y=resolveComponent("el-popper"),k=resolveDirective("clickoutside");return openBlock(),createBlock(y,{ref:"popper",visible:e.popperVisible,"onUpdate:visible":t[16]||(t[16]=t=>e.popperVisible=t),"manual-mode":"",placement:"bottom-start","popper-class":"el-cascader__dropdown "+e.popperClass,"popper-options":e.popperOptions,"stop-popper-mouse-event":!1,transition:"el-zoom-in-top","gpu-acceleration":!1,effect:"light",pure:"",onAfterLeave:e.hideSuggestionPanel},{trigger:withCtx((()=>[withDirectives(createVNode("div",{class:["el-cascader",e.realSize&&"el-cascader--"+e.realSize,{"is-disabled":e.isDisabled}],onClick:t[10]||(t[10]=()=>e.togglePopperVisible(!e.readonly||void 0)),onKeydown:t[11]||(t[11]=(...t)=>e.handleKeyDown&&e.handleKeyDown(...t)),onMouseenter:t[12]||(t[12]=t=>e.inputHover=!0),onMouseleave:t[13]||(t[13]=t=>e.inputHover=!1)},[createVNode(i,{ref:"input",modelValue:e.inputValue,"onUpdate:modelValue":t[3]||(t[3]=t=>e.inputValue=t),modelModifiers:{trim:!0},placeholder:e.placeholder,readonly:e.readonly,disabled:e.isDisabled,"validate-event":!1,size:e.realSize,class:{"is-focus":e.popperVisible},onFocus:t[4]||(t[4]=t=>e.$emit("focus",t)),onBlur:t[5]||(t[5]=t=>e.$emit("blur",t)),onInput:e.handleInput},{suffix:withCtx((()=>[e.clearBtnVisible?(openBlock(),createBlock("i",{key:"clear",class:"el-input__icon el-icon-circle-close",onClick:t[1]||(t[1]=withModifiers(((...t)=>e.handleClear&&e.handleClear(...t)),["stop"]))})):(openBlock(),createBlock("i",{key:"arrow-down",class:["el-input__icon","el-icon-arrow-down",e.popperVisible&&"is-reverse"],onClick:t[2]||(t[2]=withModifiers((t=>e.togglePopperVisible()),["stop"]))},null,2))])),_:1},8,["modelValue","placeholder","readonly","disabled","size","class","onInput"]),e.multiple?(openBlock(),createBlock("div",ao,[(openBlock(!0),createBlock(Fragment,null,renderList(e.presentTags,(t=>(openBlock(),createBlock(r,{key:t.key,type:"info",size:e.tagSize,hit:t.hitState,closable:t.closable,"disable-transitions":"",onClose:l=>e.deleteTag(t)},{default:withCtx((()=>[createVNode("span",null,toDisplayString(t.text),1)])),_:2},1032,["size","hit","closable","onClose"])))),128)),e.filterable&&!e.isDisabled?withDirectives((openBlock(),createBlock("input",{key:0,"onUpdate:modelValue":t[6]||(t[6]=t=>e.searchInputValue=t),type:"text",class:"el-cascader__search-input",placeholder:e.presentText?"":e.placeholder,onInput:t[7]||(t[7]=t=>e.handleInput(e.searchInputValue,t)),onClick:t[8]||(t[8]=withModifiers((t=>e.togglePopperVisible(!0)),["stop"])),onKeydown:t[9]||(t[9]=withKeys(((...t)=>e.handleDelete&&e.handleDelete(...t)),["delete"]))},null,40,["placeholder"])),[[vModelText,e.searchInputValue,void 0,{trim:!0}]]):createCommentVNode("v-if",!0)],512)):createCommentVNode("v-if",!0)],34),[[k,()=>e.togglePopperVisible(!1),e.popperPaneRef]])])),default:withCtx((()=>[withDirectives(createVNode(p,{ref:"panel",modelValue:e.checkedValue,"onUpdate:modelValue":t[14]||(t[14]=t=>e.checkedValue=t),options:e.options,props:e.props,border:!1,"render-label":e.$slots.default,onExpandChange:e.handleExpandChange,onClose:t[15]||(t[15]=t=>e.togglePopperVisible(!1))},null,8,["modelValue","options","props","render-label","onExpandChange"]),[[vShow,!e.filtering]]),e.filterable?withDirectives((openBlock(),createBlock(f,{key:0,ref:"suggestionPanel",tag:"ul",class:"el-cascader__suggestion-panel","view-class":"el-cascader__suggestion-list"},{default:withCtx((()=>[e.suggestions.length?(openBlock(!0),createBlock(Fragment,{key:0},renderList(e.suggestions,(t=>(openBlock(),createBlock("li",{key:t.uid,class:["el-cascader__suggestion-item",t.checked&&"is-checked"],tabindex:-1,onClick:l=>e.handleSuggestionClick(t)},[createVNode("span",null,toDisplayString(t.text),1),t.checked?(openBlock(),createBlock("i",no)):createCommentVNode("v-if",!0)],10,["onClick"])))),128)):renderSlot(e.$slots,"empty",{key:1},(()=>[createVNode("li",oo,toDisplayString(e.t("el.cascader.noMatch")),1)]))])),_:1},512)),[[vShow,e.filtering]]):createCommentVNode("v-if",!0)])),_:1},8,["visible","popper-class","popper-options","onAfterLeave"])},lo.__file="packages/cascader/src/index.vue",lo.install=e=>{e.component(lo.name,lo);};var ro=defineComponent({name:"ElCheckboxButton",props:{modelValue:{type:[Boolean,Number,String],default:()=>{}},label:{type:[Boolean,Number,String]},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:{type:String,default:void 0},trueLabel:{type:[String,Number],default:void 0},falseLabel:{type:[String,Number],default:void 0}},emits:[Kt,"change"],setup(e){const{focus:t,isChecked:l,isDisabled:a,size:o,model:i,handleChange:r}=kn(e),{checkboxGroup:s}=yn();return {focus:t,isChecked:l,isDisabled:a,model:i,handleChange:r,activeStyle:computed((()=>{var e,t,l,a,n,o,i,r;return {backgroundColor:null!==(t=null===(e=null==s?void 0:s.fill)||void 0===e?void 0:e.value)&&void 0!==t?t:"",borderColor:null!==(a=null===(l=null==s?void 0:s.fill)||void 0===l?void 0:l.value)&&void 0!==a?a:"",color:null!==(o=null===(n=null==s?void 0:s.textColor)||void 0===n?void 0:n.value)&&void 0!==o?o:"",boxShadow:null!==(r="-1px 0 0 0 "+(null===(i=null==s?void 0:s.fill)||void 0===i?void 0:i.value))&&void 0!==r?r:""}})),size:o}}});ro.render=function(e,t,l,a,n,o){return openBlock(),createBlock("label",{class:["el-checkbox-button",[e.size?"el-checkbox-button--"+e.size:"",{"is-disabled":e.isDisabled},{"is-checked":e.isChecked},{"is-focus":e.focus}]],role:"checkbox","aria-checked":e.isChecked,"aria-disabled":e.isDisabled},[e.trueLabel||e.falseLabel?withDirectives((openBlock(),createBlock("input",{key:0,"onUpdate:modelValue":t[1]||(t[1]=t=>e.model=t),checked:e.isChecked,class:"el-checkbox-button__original",type:"checkbox",name:e.name,disabled:e.isDisabled,"true-value":e.trueLabel,"false-value":e.falseLabel,onChange:t[2]||(t[2]=(...t)=>e.handleChange&&e.handleChange(...t)),onFocus:t[3]||(t[3]=t=>e.focus=!0),onBlur:t[4]||(t[4]=t=>e.focus=!1)},null,40,["checked","name","disabled","true-value","false-value"])),[[vModelCheckbox,e.model]]):withDirectives((openBlock(),createBlock("input",{key:1,"onUpdate:modelValue":t[5]||(t[5]=t=>e.model=t),class:"el-checkbox-button__original",type:"checkbox",name:e.name,disabled:e.isDisabled,value:e.label,onChange:t[6]||(t[6]=(...t)=>e.handleChange&&e.handleChange(...t)),onFocus:t[7]||(t[7]=t=>e.focus=!0),onBlur:t[8]||(t[8]=t=>e.focus=!1)},null,40,["name","disabled","value"])),[[vModelCheckbox,e.model]]),e.$slots.default||e.label?(openBlock(),createBlock("span",{key:2,class:"el-checkbox-button__inner",style:e.isChecked?e.activeStyle:null},[renderSlot(e.$slots,"default",{},(()=>[createTextVNode(toDisplayString(e.label),1)]))],4)):createCommentVNode("v-if",!0)],10,["aria-checked","aria-disabled"])},ro.__file="packages/checkbox/src/checkbox-button.vue",ro.install=e=>{e.component(ro.name,ro);};var uo=defineComponent({name:"ElCheckboxGroup",props:{modelValue:{type:[Object,Boolean,Array],default:()=>{}},disabled:Boolean,min:{type:Number,default:void 0},max:{type:Number,default:void 0},size:{type:String,validator:Ut},fill:{type:String,default:void 0},textColor:{type:String,default:void 0}},emits:[Kt,"change"],setup(e,t){const{elFormItem:l,elFormItemSize:a,ELEMENT:i}=yn(),r=computed((()=>e.size||a.value||i.size)),s=e=>{t.emit(Kt,e),nextTick((()=>{t.emit("change",e);}));},u=computed({get:()=>e.modelValue,set(e){s(e);}});provide("CheckboxGroup",Object.assign(Object.assign({name:"ElCheckboxGroup",modelValue:u},toRefs(e)),{checkboxGroupSize:r,changeEvent:s})),watch((()=>e.modelValue),(e=>{var t;null===(t=l.formItemMitt)||void 0===t||t.emit("el.form.change",[e]);}));}});const co={class:"el-checkbox-group",role:"group","aria-label":"checkbox-group"};uo.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",co,[renderSlot(e.$slots,"default")])},uo.__file="packages/checkbox/src/checkbox-group.vue",uo.install=e=>{e.component(uo.name,uo);};const po=uo,ho=defineComponent({name:"ElCol",props:{tag:{type:String,default:"div"},span:{type:Number,default:24},offset:{type:Number,default:0},pull:{type:Number,default:0},push:{type:Number,default:0},xs:{type:[Number,Object],default:()=>({})},sm:{type:[Number,Object],default:()=>({})},md:{type:[Number,Object],default:()=>({})},lg:{type:[Number,Object],default:()=>({})},xl:{type:[Number,Object],default:()=>({})}},setup(e,{slots:t}){const{gutter:l}=inject("ElRow",{gutter:{value:0}}),a=computed((()=>l.value?{paddingLeft:l.value/2+"px",paddingRight:l.value/2+"px"}:{})),o=computed((()=>{const t=[];["span","offset","pull","push"].forEach((l=>{const a=e[l];"number"==typeof a&&a>0&&t.push("span"!==l?`el-col-${l}-${e[l]}`:"el-col-"+e[l]);}));return ["xs","sm","md","lg","xl"].forEach((l=>{if("number"==typeof e[l])t.push(`el-col-${l}-${e[l]}`);else if("object"==typeof e[l]){const a=e[l];Object.keys(a).forEach((e=>{t.push("span"!==e?`el-col-${l}-${e}-${a[e]}`:`el-col-${l}-${a[e]}`);}));}})),l.value&&t.push("is-guttered"),t}));return ()=>{var l;return h(e.tag,{class:["el-col",o.value],style:a.value},null===(l=t.default)||void 0===l?void 0:l.call(t))}}});ho.install=e=>{e.component(ho.name,ho);};var vo=defineComponent({name:"ElCollapse",props:{accordion:Boolean,modelValue:{type:[Array,String,Number],default:()=>[]}},emits:[Kt,"change"],setup(e,{emit:t}){const a=ref([].concat(e.modelValue)),n=ie(),i=l=>{a.value=[].concat(l);const n=e.accordion?a.value[0]:a.value;t(Kt,n),t("change",n);},r=t=>{if(e.accordion)i(!a.value[0]&&0!==a.value[0]||a.value[0]!==t?t:"");else {let e=a.value.slice(0);const l=e.indexOf(t);l>-1?e.splice(l,1):e.push(t),i(e);}};return watch((()=>e.modelValue),(()=>{a.value=[].concat(e.modelValue);})),n.on("item-click",r),onUnmounted((()=>{n.all.clear();})),provide("collapse",{activeNames:a,collapseMitt:n}),{activeNames:a,setActiveNames:i,handleItemClick:r}}});const mo={class:"el-collapse",role:"tablist","aria-multiselectable":"true"};vo.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",mo,[renderSlot(e.$slots,"default")])},vo.__file="packages/collapse/src/collapse.vue",vo.install=e=>{e.component(vo.name,vo);};var go=defineComponent({name:"ElCollapseTransition",setup:()=>({on:{beforeEnter(e){lt(e,"collapse-transition"),e.dataset||(e.dataset={}),e.dataset.oldPaddingTop=e.style.paddingTop,e.dataset.oldPaddingBottom=e.style.paddingBottom,e.style.height="0",e.style.paddingTop=0,e.style.paddingBottom=0;},enter(e){e.dataset.oldOverflow=e.style.overflow,0!==e.scrollHeight?(e.style.height=e.scrollHeight+"px",e.style.paddingTop=e.dataset.oldPaddingTop,e.style.paddingBottom=e.dataset.oldPaddingBottom):(e.style.height="",e.style.paddingTop=e.dataset.oldPaddingTop,e.style.paddingBottom=e.dataset.oldPaddingBottom),e.style.overflow="hidden";},afterEnter(e){at(e,"collapse-transition"),e.style.height="",e.style.overflow=e.dataset.oldOverflow;},beforeLeave(e){e.dataset||(e.dataset={}),e.dataset.oldPaddingTop=e.style.paddingTop,e.dataset.oldPaddingBottom=e.style.paddingBottom,e.dataset.oldOverflow=e.style.overflow,e.style.height=e.scrollHeight+"px",e.style.overflow="hidden";},leave(e){0!==e.scrollHeight&&(lt(e,"collapse-transition"),e.style.transitionProperty="height",e.style.height=0,e.style.paddingTop=0,e.style.paddingBottom=0);},afterLeave(e){at(e,"collapse-transition"),e.style.height="",e.style.overflow=e.dataset.oldOverflow,e.style.paddingTop=e.dataset.oldPaddingTop,e.style.paddingBottom=e.dataset.oldPaddingBottom;}}})});go.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,toHandlers(e.on),{default:withCtx((()=>[renderSlot(e.$slots,"default")])),_:3},16)},go.__file="packages/transition/collapse-transition/index.vue",go.install=e=>{e.component(go.name,go);};const bo=go;var yo=defineComponent({name:"ElCollapseItem",components:{ElCollapseTransition:bo},props:{title:{type:String,default:""},name:{type:[String,Number],default:()=>Re()},disabled:Boolean},setup(e){const t=inject("collapse"),a=null==t?void 0:t.collapseMitt,o=ref({height:"auto",display:"block"}),i=ref(0),r=ref(!1),s=ref(!1),u=ref(Re());return {isActive:computed((()=>(null==t?void 0:t.activeNames.value.indexOf(e.name))>-1)),contentWrapStyle:o,contentHeight:i,focusing:r,isClick:s,id:u,handleFocus:()=>{setTimeout((()=>{s.value?s.value=!1:r.value=!0;}),50);},handleHeaderClick:()=>{e.disabled||(null==a||a.emit("item-click",e.name),r.value=!1,s.value=!0);},handleEnterClick:()=>{null==a||a.emit("item-click",e.name);},collapse:t}}});const ko={class:"el-collapse-item__content"};yo.render=function(e,t,l,a,n,o){const i=resolveComponent("el-collapse-transition");return openBlock(),createBlock("div",{class:["el-collapse-item",{"is-active":e.isActive,"is-disabled":e.disabled}]},[createVNode("div",{role:"tab","aria-expanded":e.isActive,"aria-controls":"el-collapse-content-"+e.id,"aria-describedby":"el-collapse-content-"+e.id},[createVNode("div",{id:"el-collapse-head-"+e.id,class:["el-collapse-item__header",{focusing:e.focusing,"is-active":e.isActive}],role:"button",tabindex:e.disabled?-1:0,onClick:t[1]||(t[1]=(...t)=>e.handleHeaderClick&&e.handleHeaderClick(...t)),onKeyup:t[2]||(t[2]=withKeys(withModifiers(((...t)=>e.handleEnterClick&&e.handleEnterClick(...t)),["stop"]),["space","enter"])),onFocus:t[3]||(t[3]=(...t)=>e.handleFocus&&e.handleFocus(...t)),onBlur:t[4]||(t[4]=t=>e.focusing=!1)},[renderSlot(e.$slots,"title",{},(()=>[createTextVNode(toDisplayString(e.title),1)])),createVNode("i",{class:["el-collapse-item__arrow el-icon-arrow-right",{"is-active":e.isActive}]},null,2)],42,["id","tabindex"])],8,["aria-expanded","aria-controls","aria-describedby"]),createVNode(i,null,{default:withCtx((()=>[withDirectives(createVNode("div",{id:"el-collapse-content-"+e.id,class:"el-collapse-item__wrap",role:"tabpanel","aria-hidden":!e.isActive,"aria-labelledby":"el-collapse-head-"+e.id},[createVNode("div",ko,[renderSlot(e.$slots,"default")])],8,["id","aria-hidden","aria-labelledby"]),[[vShow,e.isActive]])])),_:3})],2)},yo.__file="packages/collapse/src/collapse-item.vue",yo.install=e=>{e.component(yo.name,yo);};const xo=function(e,t,l){return [e,t*l/((e=(2-t)*l)<1?e:2-e)||0,e/2]},wo=function(e,t){var l;"string"==typeof(l=e)&&-1!==l.indexOf(".")&&1===parseFloat(l)&&(e="100%");const a=function(e){return "string"==typeof e&&-1!==e.indexOf("%")}(e);return e=Math.min(t,Math.max(0,parseFloat(e+""))),a&&(e=parseInt(e*t+"",10)/100),Math.abs(e-t)<1e-6?1:e%t/parseFloat(t)},So={10:"A",11:"B",12:"C",13:"D",14:"E",15:"F"},_o={A:10,B:11,C:12,D:13,E:14,F:15},Eo=function(e){return 2===e.length?16*(_o[e[0].toUpperCase()]||+e[0])+(_o[e[1].toUpperCase()]||+e[1]):_o[e[1].toUpperCase()]||+e[1]},Mo=function(e,t,l){e=wo(e,255),t=wo(t,255),l=wo(l,255);const a=Math.max(e,t,l),n=Math.min(e,t,l);let o;const i=a,r=a-n,s=0===a?0:r/a;if(a===n)o=0;else {switch(a){case e:o=(t-l)/r+(t<l?6:0);break;case t:o=(l-e)/r+2;break;case l:o=(e-t)/r+4;}o/=6;}return {h:360*o,s:100*s,v:100*i}},To=function(e,t,l){e=6*wo(e,360),t=wo(t,100),l=wo(l,100);const a=Math.floor(e),n=e-a,o=l*(1-t),i=l*(1-n*t),r=l*(1-(1-n)*t),s=a%6,u=[l,i,o,o,r,l][s],d=[r,l,l,i,o,o][s],c=[o,o,r,l,l,i][s];return {r:Math.round(255*u),g:Math.round(255*d),b:Math.round(255*c)}};class No{constructor(e){this._hue=0,this._saturation=100,this._value=100,this._alpha=100,this.enableAlpha=!1,this.format="hex",this.value="",e=e||{};for(const t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);this.doOnChange();}set(e,t){if(1!==arguments.length||"object"!=typeof e)this["_"+e]=t,this.doOnChange();else for(const t in e)e.hasOwnProperty(t)&&this.set(t,e[t]);}get(e){return this["_"+e]}toRgb(){return To(this._hue,this._saturation,this._value)}fromString(e){if(!e)return this._hue=0,this._saturation=100,this._value=100,void this.doOnChange();const t=(e,t,l)=>{this._hue=Math.max(0,Math.min(360,e)),this._saturation=Math.max(0,Math.min(100,t)),this._value=Math.max(0,Math.min(100,l)),this.doOnChange();};if(-1!==e.indexOf("hsl")){const l=e.replace(/hsla|hsl|\(|\)/gm,"").split(/\s|,/g).filter((e=>""!==e)).map(((e,t)=>t>2?parseFloat(e):parseInt(e,10)));if(4===l.length?this._alpha=Math.floor(100*parseFloat(l[3])):3===l.length&&(this._alpha=100),l.length>=3){const{h:e,s:a,v:n}=function(e,t,l){l/=100;let a=t/=100;const n=Math.max(l,.01);return t*=(l*=2)<=1?l:2-l,a*=n<=1?n:2-n,{h:e,s:100*(0===l?2*a/(n+a):2*t/(l+t)),v:(l+t)/2*100}}(l[0],l[1],l[2]);t(e,a,n);}}else if(-1!==e.indexOf("hsv")){const l=e.replace(/hsva|hsv|\(|\)/gm,"").split(/\s|,/g).filter((e=>""!==e)).map(((e,t)=>t>2?parseFloat(e):parseInt(e,10)));4===l.length?this._alpha=Math.floor(100*parseFloat(l[3])):3===l.length&&(this._alpha=100),l.length>=3&&t(l[0],l[1],l[2]);}else if(-1!==e.indexOf("rgb")){const l=e.replace(/rgba|rgb|\(|\)/gm,"").split(/\s|,/g).filter((e=>""!==e)).map(((e,t)=>t>2?parseFloat(e):parseInt(e,10)));if(4===l.length?this._alpha=Math.floor(100*parseFloat(l[3])):3===l.length&&(this._alpha=100),l.length>=3){const{h:e,s:a,v:n}=Mo(l[0],l[1],l[2]);t(e,a,n);}}else if(-1!==e.indexOf("#")){const l=e.replace("#","").trim();if(!/^[0-9a-fA-F]{3}$|^[0-9a-fA-F]{6}$|^[0-9a-fA-F]{8}$/.test(l))return;let a,n,o;3===l.length?(a=Eo(l[0]+l[0]),n=Eo(l[1]+l[1]),o=Eo(l[2]+l[2])):6!==l.length&&8!==l.length||(a=Eo(l.substring(0,2)),n=Eo(l.substring(2,4)),o=Eo(l.substring(4,6))),8===l.length?this._alpha=Math.floor(Eo(l.substring(6))/255*100):3!==l.length&&6!==l.length||(this._alpha=100);const{h:i,s:r,v:s}=Mo(a,n,o);t(i,r,s);}}compare(e){return Math.abs(e._hue-this._hue)<2&&Math.abs(e._saturation-this._saturation)<1&&Math.abs(e._value-this._value)<1&&Math.abs(e._alpha-this._alpha)<1}doOnChange(){const{_hue:e,_saturation:t,_value:l,_alpha:a,format:n}=this;if(this.enableAlpha)switch(n){case"hsl":{const n=xo(e,t/100,l/100);this.value=`hsla(${e}, ${Math.round(100*n[1])}%, ${Math.round(100*n[2])}%, ${a/100})`;break}case"hsv":this.value=`hsva(${e}, ${Math.round(t)}%, ${Math.round(l)}%, ${a/100})`;break;default:{const{r:n,g:o,b:i}=To(e,t,l);this.value=`rgba(${n}, ${o}, ${i}, ${a/100})`;}}else switch(n){case"hsl":{const a=xo(e,t/100,l/100);this.value=`hsl(${e}, ${Math.round(100*a[1])}%, ${Math.round(100*a[2])}%)`;break}case"hsv":this.value=`hsv(${e}, ${Math.round(t)}%, ${Math.round(l)}%)`;break;case"rgb":{const{r:a,g:n,b:o}=To(e,t,l);this.value=`rgb(${a}, ${n}, ${o})`;break}default:this.value=function({r:e,g:t,b:l}){const a=function(e){e=Math.min(Math.round(e),255);const t=Math.floor(e/16),l=e%16;return ""+(So[t]||t)+(So[l]||l)};return isNaN(e)||isNaN(t)||isNaN(l)?"":"#"+a(e)+a(t)+a(l)}(To(e,t,l));}}}let Do=!1;function Oo(e,t){if(Ce)return;const l=function(e){var l;null===(l=t.drag)||void 0===l||l.call(t,e);},a=function(e){var n;et(document,"mousemove",l),et(document,"mouseup",a),document.onselectstart=null,document.ondragstart=null,Do=!1,null===(n=t.end)||void 0===n||n.call(t,e);};Je(e,"mousedown",(function(e){var n;Do||(document.onselectstart=()=>!1,document.ondragstart=()=>!1,Je(document,"mousemove",l),Je(document,"mouseup",a),Do=!0,null===(n=t.start)||void 0===n||n.call(t,e));}));}var Po=defineComponent({name:"ElSlPanel",props:{color:{type:Object,required:!0}},setup(t){const a=getCurrentInstance(),r=ref(0),s=ref(0),u=ref("hsl(0, 100%, 50%)"),d=computed((()=>({hue:t.color.get("hue"),value:t.color.get("value")})));function c(){const e=t.color.get("saturation"),l=t.color.get("value"),n=a.vnode.el;let{clientWidth:o,clientHeight:i}=n;s.value=e*o/100,r.value=(100-l)*i/100,u.value="hsl("+t.color.get("hue")+", 100%, 50%)";}function p(e){const l=a.vnode.el.getBoundingClientRect();let n=e.clientX-l.left,o=e.clientY-l.top;n=Math.max(0,n),n=Math.min(n,l.width),o=Math.max(0,o),o=Math.min(o,l.height),s.value=n,r.value=o,t.color.set({saturation:n/l.width*100,value:100-o/l.height*100});}return watch((()=>d.value),(()=>{c();})),onMounted((()=>{Oo(a.vnode.el,{drag:e=>{p(e);},end:e=>{p(e);}}),c();})),{cursorTop:r,cursorLeft:s,background:u,colorValue:d,handleDrag:p,update:c}}});const Vo=createVNode("div",{class:"el-color-svpanel__white"},null,-1),Io=createVNode("div",{class:"el-color-svpanel__black"},null,-1),Bo=createVNode("div",null,null,-1);Po.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:"el-color-svpanel",style:{backgroundColor:e.background}},[Vo,Io,createVNode("div",{class:"el-color-svpanel__cursor",style:{top:e.cursorTop+"px",left:e.cursorLeft+"px"}},[Bo],4)],4)},Po.__file="packages/color-picker/src/components/sv-panel.vue";var Ao=defineComponent({name:"ElColorHueSlider",props:{color:{type:Object,required:!0},vertical:Boolean},setup(t){const a=getCurrentInstance(),r=ref(null),s=ref(null),u=ref(0),d=ref(0),c=computed((()=>t.color.get("hue")));function p(e){const l=a.vnode.el.getBoundingClientRect();let n;if(t.vertical){let t=e.clientY-l.top;t=Math.min(t,l.height-r.value.offsetHeight/2),t=Math.max(r.value.offsetHeight/2,t),n=Math.round((t-r.value.offsetHeight/2)/(l.height-r.value.offsetHeight)*360);}else {let t=e.clientX-l.left;t=Math.min(t,l.width-r.value.offsetWidth/2),t=Math.max(r.value.offsetWidth/2,t),n=Math.round((t-r.value.offsetWidth/2)/(l.width-r.value.offsetWidth)*360);}t.color.set("hue",n);}function h(){u.value=function(){const e=a.vnode.el;if(t.vertical)return 0;const l=t.color.get("hue");return e?Math.round(l*(e.offsetWidth-r.value.offsetWidth/2)/360):0}(),d.value=function(){const e=a.vnode.el;if(!t.vertical)return 0;const l=t.color.get("hue");return e?Math.round(l*(e.offsetHeight-r.value.offsetHeight/2)/360):0}();}return watch((()=>c.value),(()=>{h();})),onMounted((()=>{const e={drag:e=>{p(e);},end:e=>{p(e);}};Oo(s.value,e),Oo(r.value,e),h();})),{bar:s,thumb:r,thumbLeft:u,thumbTop:d,hueValue:c,handleClick:function(e){e.target!==r.value&&p(e);},update:h}}});Ao.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-color-hue-slider",{"is-vertical":e.vertical}]},[createVNode("div",{ref:"bar",class:"el-color-hue-slider__bar",onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t))},null,512),createVNode("div",{ref:"thumb",class:"el-color-hue-slider__thumb",style:{left:e.thumbLeft+"px",top:e.thumbTop+"px"}},null,4)],2)},Ao.__file="packages/color-picker/src/components/hue-slider.vue";var Lo=defineComponent({name:"ElColorAlphaSlider",props:{color:{type:Object,required:!0},vertical:{type:Boolean,default:!1}},setup(t){const a=getCurrentInstance(),n=ref(null),r=ref(null),s=ref(0),u=ref(0),d=ref(null);function c(e){const l=a.vnode.el.getBoundingClientRect();if(t.vertical){let a=e.clientY-l.top;a=Math.max(n.value.offsetHeight/2,a),a=Math.min(a,l.height-n.value.offsetHeight/2),t.color.set("alpha",Math.round((a-n.value.offsetHeight/2)/(l.height-n.value.offsetHeight)*100));}else {let a=e.clientX-l.left;a=Math.max(n.value.offsetWidth/2,a),a=Math.min(a,l.width-n.value.offsetWidth/2),t.color.set("alpha",Math.round((a-n.value.offsetWidth/2)/(l.width-n.value.offsetWidth)*100));}}function p(){s.value=function(){if(t.vertical)return 0;const e=a.vnode.el,l=t.color.get("alpha");return e?Math.round(l*(e.offsetWidth-n.value.offsetWidth/2)/100):0}(),u.value=function(){const e=a.vnode.el;if(!t.vertical)return 0;const l=t.color.get("alpha");return e?Math.round(l*(e.offsetHeight-n.value.offsetHeight/2)/100):0}(),d.value=function(){if(t.color&&t.color.value){const{r:e,g:l,b:a}=t.color.toRgb();return `linear-gradient(to right, rgba(${e}, ${l}, ${a}, 0) 0%, rgba(${e}, ${l}, ${a}, 1) 100%)`}return null}();}return watch((()=>t.color.get("alpha")),(()=>{p();})),watch((()=>t.color.value),(()=>{p();})),onMounted((()=>{const e={drag:e=>{c(e);},end:e=>{c(e);}};Oo(r.value,e),Oo(n.value,e),p();})),{thumb:n,bar:r,thumbLeft:s,thumbTop:u,background:d,handleClick:function(e){e.target!==n.value&&c(e);},update:p}}});Lo.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-color-alpha-slider",{"is-vertical":e.vertical}]},[createVNode("div",{ref:"bar",class:"el-color-alpha-slider__bar",style:{background:e.background},onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t))},null,4),createVNode("div",{ref:"thumb",class:"el-color-alpha-slider__thumb",style:{left:e.thumbLeft+"px",top:e.thumbTop+"px"}},null,4)],2)},Lo.__file="packages/color-picker/src/components/alpha-slider.vue";var zo=defineComponent({props:{colors:{type:Array,required:!0},color:{type:Object,required:!0}},setup(e){const{currentColor:t}=Ho(),a=ref(n(e.colors,e.color));function n(e,t){return e.map((e=>{const l=new No;return l.enableAlpha=!0,l.format="rgba",l.fromString(e),l.selected=l.value===t.value,l}))}return watch((()=>t.value),(e=>{const t=new No;t.fromString(e),a.value.forEach((e=>{e.selected=t.compare(e);}));})),watchEffect((()=>{a.value=n(e.colors,e.color);})),{rgbaColors:a,handleSelect:function(t){e.color.fromString(e.colors[t]);}}}});const Fo={class:"el-color-predefine"},Ro={class:"el-color-predefine__colors"};zo.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",Fo,[createVNode("div",Ro,[(openBlock(!0),createBlock(Fragment,null,renderList(e.rgbaColors,((t,l)=>(openBlock(),createBlock("div",{key:e.colors[l],class:["el-color-predefine__color-selector",{selected:t.selected,"is-alpha":t._alpha<100}],onClick:t=>e.handleSelect(l)},[createVNode("div",{style:{"background-color":t.value}},null,4)],10,["onClick"])))),128))])])},zo.__file="packages/color-picker/src/components/predefine.vue";const $o=Symbol(),Ho=()=>inject($o);var Wo=defineComponent({name:"ElColorPicker",components:{ElPopper:Rl,ElInput:pl,SvPanel:Po,HueSlider:Ao,AlphaSlider:Lo,ElButton:da,Predefine:zo},directives:{ClickOutside:zt},props:{modelValue:String,showAlpha:Boolean,colorFormat:String,disabled:Boolean,size:{type:String,validator:Ut},popperClass:String,predefine:Array},emits:["change","active-change",Kt],setup(e,{emit:t}){const r=qe(),s=inject("elForm",{}),u=inject("elFormItem",{}),d=ref(null),c=ref(null),p=ref(null),h=ref(null),v=reactive(new No({enableAlpha:e.showAlpha,format:e.colorFormat})),m=ref(!1),f=ref(!1),g=ref(""),b=computed((()=>e.modelValue||f.value?function(e,t){if(!(e instanceof No))throw Error("color should be instance of _color Class");const{r:l,g:a,b:n}=e.toRgb();return t?`rgba(${l}, ${a}, ${n}, ${e.get("alpha")/100})`:`rgb(${l}, ${a}, ${n})`}(v,e.showAlpha):"transparent")),y=computed((()=>e.size||u.size||r.size)),k=computed((()=>e.disabled||s.disabled)),C=computed((()=>e.modelValue||f.value?v.value:""));watch((()=>e.modelValue),(e=>{e?e&&e!==v.value&&v.fromString(e):f.value=!1;})),watch((()=>C.value),(e=>{g.value=e,t("active-change",e);})),watch((()=>v.value),(()=>{e.modelValue||f.value||(f.value=!0);}));const w=debounce_1((function(e){m.value=e;}),100);function E(){nextTick((()=>{e.modelValue?v.fromString(e.modelValue):f.value=!1;}));}return onMounted((()=>{e.modelValue&&(v.fromString(e.modelValue),g.value=C.value);})),watch((()=>m.value),(()=>{nextTick((()=>{var e,t,l;null===(e=d.value)||void 0===e||e.update(),null===(t=c.value)||void 0===t||t.update(),null===(l=p.value)||void 0===l||l.update();}));})),provide($o,{currentColor:C}),{color:v,colorDisabled:k,colorSize:y,displayedColor:b,showPanelColor:f,showPicker:m,customInput:g,handleConfirm:function(){v.fromString(g.value);},hide:function(){w(!1),E();},handleTrigger:function(){k.value||w(!m.value);},clear:function(){var l;w(!1),t(Kt,null),t("change",null),null!==e.modelValue&&(null===(l=u.formItemMitt)||void 0===l||l.emit("el.form.change",null)),E();},confirmValue:function(){var l;const a=v.value;t(Kt,a),t("change",a),null===(l=u.formItemMitt)||void 0===l||l.emit("el.form.change",a),w(!1),nextTick((()=>{const t=new No({enableAlpha:e.showAlpha,format:e.colorFormat});t.fromString(e.modelValue),v.compare(t)||E();}));},t:ga,hue:d,svPanel:c,alpha:p,popper:h}}});const jo={class:"el-color-dropdown__main-wrapper"},Ko={class:"el-color-dropdown__btns"},Yo={class:"el-color-dropdown__value"},qo={key:0,class:"el-color-picker__mask"},Uo={key:0,class:"el-color-picker__empty el-icon-close"},Go={class:"el-color-picker__icon el-icon-arrow-down"};Wo.render=function(e,t,l,a,n,o){const i=resolveComponent("hue-slider"),r=resolveComponent("sv-panel"),c=resolveComponent("alpha-slider"),p=resolveComponent("predefine"),y=resolveComponent("el-input"),k=resolveComponent("el-button"),C=resolveComponent("el-popper"),x=resolveDirective("click-outside");return openBlock(),createBlock(C,{ref:"popper",visible:e.showPicker,"onUpdate:visible":t[3]||(t[3]=t=>e.showPicker=t),effect:"light","manual-mode":"",trigger:"click","show-arrow":!1,offset:0,transition:"el-zoom-in-top","gpu-acceleration":!1,"popper-class":"el-color-picker__panel el-color-dropdown "+e.popperClass,"stop-popper-mouse-event":!1},{default:withCtx((()=>[withDirectives(createVNode("div",null,[createVNode("div",jo,[createVNode(i,{ref:"hue",class:"hue-slider",color:e.color,vertical:""},null,8,["color"]),createVNode(r,{ref:"svPanel",color:e.color},null,8,["color"])]),e.showAlpha?(openBlock(),createBlock(c,{key:0,ref:"alpha",color:e.color},null,8,["color"])):createCommentVNode("v-if",!0),e.predefine?(openBlock(),createBlock(p,{key:1,ref:"predefine",color:e.color,colors:e.predefine},null,8,["color","colors"])):createCommentVNode("v-if",!0),createVNode("div",Ko,[createVNode("span",Yo,[createVNode(y,{modelValue:e.customInput,"onUpdate:modelValue":t[1]||(t[1]=t=>e.customInput=t),"validate-event":!1,size:"mini",onKeyup:withKeys(e.handleConfirm,["enter"]),onBlur:e.handleConfirm},null,8,["modelValue","onKeyup","onBlur"])]),createVNode(k,{size:"mini",type:"text",class:"el-color-dropdown__link-btn",onClick:e.clear},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.colorpicker.clear")),1)])),_:1},8,["onClick"]),createVNode(k,{plain:"",size:"mini",class:"el-color-dropdown__btn",onClick:e.confirmValue},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.colorpicker.confirm")),1)])),_:1},8,["onClick"])])],512),[[x,e.hide]])])),trigger:withCtx((()=>[createVNode("div",{class:["el-color-picker",e.colorDisabled?"is-disabled":"",e.colorSize?"el-color-picker--"+e.colorSize:""]},[e.colorDisabled?(openBlock(),createBlock("div",qo)):createCommentVNode("v-if",!0),createVNode("div",{class:"el-color-picker__trigger",onClick:t[2]||(t[2]=(...t)=>e.handleTrigger&&e.handleTrigger(...t))},[createVNode("span",{class:["el-color-picker__color",{"is-alpha":e.showAlpha}]},[createVNode("span",{class:"el-color-picker__color-inner",style:{backgroundColor:e.displayedColor}},null,4),e.modelValue||e.showPanelColor?createCommentVNode("v-if",!0):(openBlock(),createBlock("span",Uo))],2),withDirectives(createVNode("span",Go,null,512),[[vShow,e.modelValue||e.showPanelColor]])])],2)])),_:1},8,["visible","popper-class"])},Wo.__file="packages/color-picker/src/index.vue",Wo.install=e=>{e.component(Wo.name,Wo);};var Qo=defineComponent({name:"ElContainer",props:{direction:{type:String,default:""}},setup:(e,{slots:t})=>({isVertical:computed((()=>{if("vertical"===e.direction)return !0;if("horizontal"===e.direction)return !1;if(t&&t.default){return t.default().some((e=>{const t=e.type.name;return "ElHeader"===t||"ElFooter"===t}))}return !1}))})});Qo.render=function(e,t,l,a,n,o){return openBlock(),createBlock("section",{class:["el-container",{"is-vertical":e.isVertical}]},[renderSlot(e.$slots,"default")],2)},Qo.__file="packages/container/src/container.vue",Qo.install=e=>{e.component(Qo.name,Qo);};const Zo=Qo;var Jo=defineComponent({props:{date:{type:Object},minDate:{type:Object},maxDate:{type:Object},parsedValue:{type:[Object,Array]},selectionMode:{type:String,default:"day"},showWeekNumber:{type:Boolean,default:!1},disabledDate:{type:Function},cellClassName:{type:Function},rangeState:{type:Object,default:()=>({endDate:null,selecting:!1})}},emits:["changerange","pick","select"],setup(e,t){const a=ref(null),o=ref(null),i=ref([[],[],[],[],[],[]]),r=e.date.$locale().weekStart||7,s=e.date.locale("en").localeData().weekdaysShort().map((e=>e.toLowerCase())),u=computed((()=>r>3?7-r:-r)),d=computed((()=>{const t=e.date.startOf("month");return t.subtract(t.day()||7,"day")})),c=computed((()=>s.concat(s).slice(r,r+7))),p=computed((()=>{var t;const l=e.date.startOf("month"),a=l.day()||7,n=l.daysInMonth(),o=l.subtract(1,"month").daysInMonth(),r=u.value,s=i.value;let c=1;const p="dates"===e.selectionMode?$e(e.parsedValue):[],h=dayjs_min().startOf("day");for(let l=0;l<6;l++){const i=s[l];e.showWeekNumber&&(i[0]||(i[0]={type:"week",text:d.value.add(7*l+1,"day").week()}));for(let s=0;s<7;s++){let u=i[e.showWeekNumber?s+1:s];u||(u={row:l,column:s,type:"normal",inRange:!1,start:!1,end:!1});const v=7*l+s,m=d.value.add(v-r,"day");u.type="normal";const f=e.rangeState.endDate||e.maxDate||e.rangeState.selecting&&e.minDate;u.inRange=e.minDate&&m.isSameOrAfter(e.minDate,"day")&&f&&m.isSameOrBefore(f,"day")||e.minDate&&m.isSameOrBefore(e.minDate,"day")&&f&&m.isSameOrAfter(f,"day"),(null===(t=e.minDate)||void 0===t?void 0:t.isSameOrAfter(f))?(u.start=f&&m.isSame(f,"day"),u.end=e.minDate&&m.isSame(e.minDate,"day")):(u.start=e.minDate&&m.isSame(e.minDate,"day"),u.end=f&&m.isSame(f,"day"));if(m.isSame(h,"day")&&(u.type="today"),l>=0&&l<=1){const e=a+r<0?7+a+r:a+r;s+7*l>=e?u.text=c++:(u.text=o-(e-s%7)+1+7*l,u.type="prev-month");}else c<=n?u.text=c++:(u.text=c++-n,u.type="next-month");const g=m.toDate();u.selected=p.find((e=>e.valueOf()===m.valueOf())),u.disabled=e.disabledDate&&e.disabledDate(g),u.customClass=e.cellClassName&&e.cellClassName(g),i[e.showWeekNumber?s+1:s]=u;}if("week"===e.selectionMode){const t=e.showWeekNumber?1:0,l=e.showWeekNumber?7:6,a=v(i[t+1]);i[t].inRange=a,i[t].start=a,i[l].inRange=a,i[l].end=a;}}return s})),h=(t,l)=>{const a=7*t+(l-(e.showWeekNumber?1:0))-u.value;return d.value.add(a,"day")},v=t=>{if("week"!==e.selectionMode)return !1;let l=e.date.startOf("day");if("prev-month"===t.type&&(l=l.subtract(1,"month")),"next-month"===t.type&&(l=l.add(1,"month")),l=l.date(parseInt(t.text,10)),e.parsedValue&&!Array.isArray(e.parsedValue)){const t=(e.parsedValue.day()-r+7)%7-1;return e.parsedValue.subtract(t,"day").isSame(l,"day")}return !1};return {handleMouseMove:l=>{if(!e.rangeState.selecting)return;let n=l.target;if("SPAN"===n.tagName&&(n=n.parentNode.parentNode),"DIV"===n.tagName&&(n=n.parentNode),"TD"!==n.tagName)return;const i=n.parentNode.rowIndex-1,r=n.cellIndex;p.value[i][r].disabled||i===a.value&&r===o.value||(a.value=i,o.value=r,t.emit("changerange",{selecting:!0,endDate:h(i,r)}));},t:ga,rows:p,isWeekActive:v,getCellClasses:t=>{let l=[];return "normal"!==t.type&&"today"!==t.type||t.disabled?l.push(t.type):(l.push("available"),"today"===t.type&&l.push("today")),"day"!==e.selectionMode||"normal"!==t.type&&"today"!==t.type||!((t,l)=>!!l&&dayjs_min(l).isSame(e.date.date(Number(t.text)),"day"))(t,e.parsedValue)||l.push("current"),!t.inRange||"normal"!==t.type&&"today"!==t.type&&"week"!==e.selectionMode||(l.push("in-range"),t.start&&l.push("start-date"),t.end&&l.push("end-date")),t.disabled&&l.push("disabled"),t.selected&&l.push("selected"),t.customClass&&l.push(t.customClass),l.join(" ")},WEEKS:c,handleClick:l=>{let a=l.target;if("SPAN"===a.tagName&&(a=a.parentNode.parentNode),"DIV"===a.tagName&&(a=a.parentNode),"TD"!==a.tagName)return;const n=a.parentNode.rowIndex-1,o=a.cellIndex,i=p.value[n][o];if(i.disabled||"week"===i.type)return;const r=h(n,o);if("range"===e.selectionMode)e.rangeState.selecting?(r>=e.minDate?t.emit("pick",{minDate:e.minDate,maxDate:r}):t.emit("pick",{minDate:r,maxDate:e.minDate}),t.emit("select",!1)):(t.emit("pick",{minDate:r,maxDate:null}),t.emit("select",!0));else if("day"===e.selectionMode)t.emit("pick",r);else if("week"===e.selectionMode){const e=r.week(),l=r.year()+"w"+e;t.emit("pick",{year:r.year(),week:e,value:l,date:r.startOf("week")});}else if("dates"===e.selectionMode){const l=i.selected?$e(e.parsedValue).filter((e=>e.valueOf()!==r.valueOf())):$e(e.parsedValue).concat([r]);t.emit("pick",l);}}}}});const ei={key:0};Jo.render=function(e,t,l,a,n,o){return openBlock(),createBlock("table",{cellspacing:"0",cellpadding:"0",class:["el-date-table",{"is-week-mode":"week"===e.selectionMode}],onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t)),onMousemove:t[2]||(t[2]=(...t)=>e.handleMouseMove&&e.handleMouseMove(...t))},[createVNode("tbody",null,[createVNode("tr",null,[e.showWeekNumber?(openBlock(),createBlock("th",ei,toDisplayString(e.t("el.datepicker.week")),1)):createCommentVNode("v-if",!0),(openBlock(!0),createBlock(Fragment,null,renderList(e.WEEKS,((t,l)=>(openBlock(),createBlock("th",{key:l},toDisplayString(e.t("el.datepicker.weeks."+t)),1)))),128))]),(openBlock(!0),createBlock(Fragment,null,renderList(e.rows,((t,l)=>(openBlock(),createBlock("tr",{key:l,class:["el-date-table__row",{current:e.isWeekActive(t[1])}]},[(openBlock(!0),createBlock(Fragment,null,renderList(t,((t,l)=>(openBlock(),createBlock("td",{key:l,class:e.getCellClasses(t)},[createVNode("div",null,[createVNode("span",null,toDisplayString(t.text),1)])],2)))),128))],2)))),128))])],34)},Jo.__file="packages/date-picker/src/date-picker-com/basic-date-table.vue";var ti=defineComponent({props:{disabledDate:{type:Function},selectionMode:{type:String,default:"month"},minDate:{type:Object},maxDate:{type:Object},date:{type:Object},parsedValue:{type:Object},rangeState:{type:Object,default:()=>({endDate:null,selecting:!1})}},emits:["changerange","pick","select"],setup(e,t){const a=ref(e.date.locale("en").localeData().monthsShort().map((e=>e.toLowerCase()))),o=ref([[],[],[]]),i=ref(null),r=ref(null),s=computed((()=>{var t;const l=o.value,a=dayjs_min().startOf("month");for(let n=0;n<3;n++){const o=l[n];for(let l=0;l<4;l++){let i=o[l];i||(i={row:n,column:l,type:"normal",inRange:!1,start:!1,end:!1}),i.type="normal";const r=4*n+l,s=e.date.startOf("year").month(r),u=e.rangeState.endDate||e.maxDate||e.rangeState.selecting&&e.minDate;i.inRange=e.minDate&&s.isSameOrAfter(e.minDate,"month")&&u&&s.isSameOrBefore(u,"month")||e.minDate&&s.isSameOrBefore(e.minDate,"month")&&u&&s.isSameOrAfter(u,"month"),(null===(t=e.minDate)||void 0===t?void 0:t.isSameOrAfter(u))?(i.start=u&&s.isSame(u,"month"),i.end=e.minDate&&s.isSame(e.minDate,"month")):(i.start=e.minDate&&s.isSame(e.minDate,"month"),i.end=u&&s.isSame(u,"month"));a.isSame(s)&&(i.type="today"),i.text=r;let d=s.toDate();i.disabled=e.disabledDate&&e.disabledDate(d),o[l]=i;}}return l}));return {handleMouseMove:l=>{if(!e.rangeState.selecting)return;let a=l.target;if("A"===a.tagName&&(a=a.parentNode.parentNode),"DIV"===a.tagName&&(a=a.parentNode),"TD"!==a.tagName)return;const n=a.parentNode.rowIndex,o=a.cellIndex;s.value[n][o].disabled||n===i.value&&o===r.value||(i.value=n,r.value=o,t.emit("changerange",{selecting:!0,endDate:e.date.startOf("year").month(4*n+o)}));},handleMonthTableClick:l=>{let a=l.target;if("A"===a.tagName&&(a=a.parentNode.parentNode),"DIV"===a.tagName&&(a=a.parentNode),"TD"!==a.tagName)return;if(tt(a,"disabled"))return;const n=a.cellIndex,o=4*a.parentNode.rowIndex+n,i=e.date.startOf("year").month(o);"range"===e.selectionMode?e.rangeState.selecting?(i>=e.minDate?t.emit("pick",{minDate:e.minDate,maxDate:i}):t.emit("pick",{minDate:i,maxDate:e.minDate}),t.emit("select",!1)):(t.emit("pick",{minDate:i,maxDate:null}),t.emit("select",!0)):t.emit("pick",o);},rows:s,getCellStyle:t=>{const l={},a=e.date.year(),n=new Date,o=t.text;return l.disabled=!!e.disabledDate&&((e,t)=>{const l=dayjs_min().startOf("month").month(t).year(e),a=l.daysInMonth();return Ka(a).map((e=>l.add(e,"day").toDate()))})(a,o).every(e.disabledDate),l.current=$e(e.parsedValue).findIndex((e=>e.year()===a&&e.month()===o))>=0,l.today=n.getFullYear()===a&&n.getMonth()===o,t.inRange&&(l["in-range"]=!0,t.start&&(l["start-date"]=!0),t.end&&(l["end-date"]=!0)),l},t:ga,months:a}}});const li={class:"cell"};ti.render=function(e,t,l,a,n,o){return openBlock(),createBlock("table",{class:"el-month-table",onClick:t[1]||(t[1]=(...t)=>e.handleMonthTableClick&&e.handleMonthTableClick(...t)),onMousemove:t[2]||(t[2]=(...t)=>e.handleMouseMove&&e.handleMouseMove(...t))},[createVNode("tbody",null,[(openBlock(!0),createBlock(Fragment,null,renderList(e.rows,((t,l)=>(openBlock(),createBlock("tr",{key:l},[(openBlock(!0),createBlock(Fragment,null,renderList(t,((t,l)=>(openBlock(),createBlock("td",{key:l,class:e.getCellStyle(t)},[createVNode("div",null,[createVNode("a",li,toDisplayString(e.t("el.datepicker.months."+e.months[t.text])),1)])],2)))),128))])))),128))])],32)},ti.__file="packages/date-picker/src/date-picker-com/basic-month-table.vue";var ai=defineComponent({props:{disabledDate:{type:Function},parsedValue:{type:Object},date:{type:Object}},emits:["pick"],setup:(e,t)=>({startYear:computed((()=>10*Math.floor(e.date.year()/10))),getCellStyle:t=>{const l={},a=dayjs_min();return l.disabled=!!e.disabledDate&&(e=>{const t=dayjs_min(String(e)).startOf("year"),l=t.endOf("year").dayOfYear();return Ka(l).map((e=>t.add(e,"day").toDate()))})(t).every(e.disabledDate),l.current=$e(e.parsedValue).findIndex((e=>e.year()===t))>=0,l.today=a.year()===t,l},handleYearTableClick:e=>{const l=e.target;if("A"===l.tagName){if(tt(l.parentNode,"disabled"))return;const e=l.textContent||l.innerText;t.emit("pick",Number(e));}}})});const ni={class:"cell"},oi={class:"cell"},ii={class:"cell"},ri={class:"cell"},si={class:"cell"},ui={class:"cell"},di={class:"cell"},ci={class:"cell"},pi={class:"cell"},hi={class:"cell"},vi=createVNode("td",null,null,-1),mi=createVNode("td",null,null,-1);ai.render=function(e,t,l,a,n,o){return openBlock(),createBlock("table",{class:"el-year-table",onClick:t[1]||(t[1]=(...t)=>e.handleYearTableClick&&e.handleYearTableClick(...t))},[createVNode("tbody",null,[createVNode("tr",null,[createVNode("td",{class:["available",e.getCellStyle(e.startYear+0)]},[createVNode("a",ni,toDisplayString(e.startYear),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+1)]},[createVNode("a",oi,toDisplayString(e.startYear+1),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+2)]},[createVNode("a",ii,toDisplayString(e.startYear+2),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+3)]},[createVNode("a",ri,toDisplayString(e.startYear+3),1)],2)]),createVNode("tr",null,[createVNode("td",{class:["available",e.getCellStyle(e.startYear+4)]},[createVNode("a",si,toDisplayString(e.startYear+4),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+5)]},[createVNode("a",ui,toDisplayString(e.startYear+5),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+6)]},[createVNode("a",di,toDisplayString(e.startYear+6),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+7)]},[createVNode("a",ci,toDisplayString(e.startYear+7),1)],2)]),createVNode("tr",null,[createVNode("td",{class:["available",e.getCellStyle(e.startYear+8)]},[createVNode("a",pi,toDisplayString(e.startYear+8),1)],2),createVNode("td",{class:["available",e.getCellStyle(e.startYear+9)]},[createVNode("a",hi,toDisplayString(e.startYear+9),1)],2),vi,mi])])])},ai.__file="packages/date-picker/src/date-picker-com/basic-year-table.vue";var fi=defineComponent({components:{DateTable:Jo,ElInput:pl,ElButton:da,TimePickPanel:Pa,MonthTable:ti,YearTable:ai},directives:{clickoutside:zt},props:{visible:{type:Boolean,default:!1},parsedValue:{type:[Object,Array]},format:{type:String,default:""},type:{type:String,required:!0}},emits:["pick","set-picker-option"],setup(e,t){const a=ref(dayjs_min()),i=computed((()=>a.value.month())),r=computed((()=>a.value.year())),s=ref([]),u=ref(null),d=ref(null),c=t=>!(s.value.length>0)||(s.value,e.format,!0),p=e=>{if(b.value)return e.millisecond(0);if(P){return dayjs_min(P).year(e.year()).month(e.month()).date(e.date())}return e.startOf("day")},h=(e,...l)=>{if(e)if(Array.isArray(e)){const a=e.map(p);t.emit("pick",a,...l);}else t.emit("pick",p(e),...l);else t.emit("pick",e,...l);u.value=null,d.value=null;},v=ref("date"),m=computed((()=>{const e=ga("el.datepicker.year");if("year"===v.value){const t=10*Math.floor(r.value/10);return e?t+" "+e+" - "+(t+9)+" "+e:t+" - "+(t+9)}return r.value+" "+e})),f=computed((()=>["week","month","year","dates"].includes(e.type)?e.type:"day"));watch((()=>f.value),(e=>{["month","year"].includes(e)?v.value=e:v.value="date";}),{immediate:!0});const g=computed((()=>!!N.length)),b=computed((()=>"datetime"===e.type||"datetimerange"===e.type)),y=computed((()=>b.value||"dates"===f.value)),k=computed((()=>qa(e.format))),C=computed((()=>Ya(e.format))),x=computed((()=>d.value?d.value:e.parsedValue||V?(e.parsedValue||a.value).format(k.value):void 0)),w=computed((()=>u.value?u.value:e.parsedValue||V?(e.parsedValue||a.value).format(C.value):void 0)),S=ref(!1),E=()=>dayjs_min(V),M=e=>{const l={year:{38:-4,40:4,37:-1,39:1,offset:(e,t)=>e.setFullYear(e.getFullYear()+t)},month:{38:-4,40:4,37:-1,39:1,offset:(e,t)=>e.setMonth(e.getMonth()+t)},week:{38:-1,40:1,37:-1,39:1,offset:(e,t)=>e.setDate(e.getDate()+7*t)},day:{38:-7,40:7,37:-1,39:1,offset:(e,t)=>e.setDate(e.getDate()+t)}},n=a.value.toDate();for(;Math.abs(a.value.diff(n,"year",!0))<1;){const o=l[f.value];if(o.offset(n,o[e]),D&&D(n))continue;const i=dayjs_min(n);a.value=i,t.emit("pick",i,!0);break}};t.emit("set-picker-option",["isValidValue",e=>e.isValid()&&(!D||!D(e.toDate()))]),t.emit("set-picker-option",["formatToString",t=>"dates"===f.value?t.map((t=>t.format(e.format))):t.format(e.format)]),t.emit("set-picker-option",["parseUserInput",t=>dayjs_min(t,e.format)]),t.emit("set-picker-option",["handleKeydown",t=>{const{code:l,keyCode:n}=t,o=[Tt.up,Tt.down,Tt.left,Tt.right];e.visible&&!S.value&&(o.includes(l)&&(M(n),t.stopPropagation(),t.preventDefault()),l===Tt.enter&&null===u.value&&null===d.value&&h(a,!1));}]);const T=inject("EP_PICKER_BASE"),{shortcuts:N,disabledDate:D,cellClassName:O,defaultTime:P,defaultValue:V,arrowControl:I}=T.props;return watch((()=>e.parsedValue),(e=>{if(e){if("dates"===f.value)return;if(Array.isArray(e))return;a.value=e;}else a.value=E();}),{immediate:!0}),{handleTimePick:(t,l,n)=>{const o=e.parsedValue?e.parsedValue.hour(t.hour()).minute(t.minute()).second(t.second()):t;a.value=o,h(a.value,!0),n||(S.value=l);},handleTimePickClose:()=>{S.value=!1;},onTimePickerInputFocus:()=>{S.value=!0;},timePickerVisible:S,visibleTime:x,visibleDate:w,showTime:b,changeToNow:()=>{const e=dayjs_min().toDate();D&&D(e)||!c()||(a.value=dayjs_min(),h(a.value));},onConfirm:()=>{if("dates"===f.value)h(e.parsedValue);else {let t=e.parsedValue;if(!t){const e=dayjs_min(P),l=E();t=e.year(l.year()).month(l.month()).date(l.date());}a.value=t,h(t);}},footerVisible:y,handleYearPick:e=>{"year"===f.value?(a.value=a.value.startOf("year").year(e),h(a.value)):(a.value=a.value.year(e),v.value="month");},showMonthPicker:()=>{v.value="month";},showYearPicker:()=>{v.value="year";},handleMonthPick:e=>{a.value=a.value.startOf("month").month(e),"month"===f.value?h(a.value):v.value="date";},hasShortcuts:g,shortcuts:N,arrowControl:I,disabledDate:D,cellClassName:O,selectionMode:f,handleShortcutClick:e=>{e.value?h(dayjs_min(e.value)):e.onClick&&e.onClick(t);},prevYear_:()=>{"year"===v.value?a.value=a.value.subtract(10,"year"):a.value=a.value.subtract(1,"year");},nextYear_:()=>{"year"===v.value?a.value=a.value.add(10,"year"):a.value=a.value.add(1,"year");},prevMonth_:()=>{a.value=a.value.subtract(1,"month");},nextMonth_:()=>{a.value=a.value.add(1,"month");},innerDate:a,t:ga,yearLabel:m,currentView:v,month:i,handleDatePick:t=>{if("day"===f.value){let l=e.parsedValue?e.parsedValue.year(t.year()).month(t.month()).date(t.date()):t;c()||(l=s.value[0][0].year(t.year()).month(t.month()).date(t.date())),a.value=l,h(l,b.value);}else "week"===f.value?h(t.date):"dates"===f.value&&h(t,!0);},handleVisibleTimeChange:e=>{const t=dayjs_min(e,k.value);t.isValid()&&c()&&(a.value=t.year(a.value.year()).month(a.value.month()).date(a.value.date()),d.value=null,S.value=!1,h(a.value,!0));},handleVisibleDateChange:e=>{const t=dayjs_min(e,C.value);if(t.isValid()){if(D&&D(t.toDate()))return;a.value=t.hour(a.value.hour()).minute(a.value.minute()).second(a.value.second()),u.value=null,h(a.value,!0);}},timeFormat:k,userInputTime:d,userInputDate:u}}});const gi={class:"el-picker-panel__body-wrapper"},bi={key:0,class:"el-picker-panel__sidebar"},yi={class:"el-picker-panel__body"},ki={key:0,class:"el-date-picker__time-header"},Ci={class:"el-date-picker__editor-wrap"},xi={class:"el-date-picker__editor-wrap"},wi={class:"el-picker-panel__content"},Si={class:"el-picker-panel__footer"};fi.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveComponent("time-pick-panel"),p=resolveComponent("date-table"),y=resolveComponent("year-table"),k=resolveComponent("month-table"),C=resolveComponent("el-button"),x=resolveDirective("clickoutside");return openBlock(),createBlock("div",{class:["el-picker-panel el-date-picker",[{"has-sidebar":e.$slots.sidebar||e.hasShortcuts,"has-time":e.showTime}]]},[createVNode("div",gi,[renderSlot(e.$slots,"sidebar",{class:"el-picker-panel__sidebar"}),e.hasShortcuts?(openBlock(),createBlock("div",bi,[(openBlock(!0),createBlock(Fragment,null,renderList(e.shortcuts,((t,l)=>(openBlock(),createBlock("button",{key:l,type:"button",class:"el-picker-panel__shortcut",onClick:l=>e.handleShortcutClick(t)},toDisplayString(t.text),9,["onClick"])))),128))])):createCommentVNode("v-if",!0),createVNode("div",yi,[e.showTime?(openBlock(),createBlock("div",ki,[createVNode("span",Ci,[createVNode(i,{placeholder:e.t("el.datepicker.selectDate"),"model-value":e.visibleDate,size:"small",onInput:t[1]||(t[1]=t=>e.userInputDate=t),onChange:e.handleVisibleDateChange},null,8,["placeholder","model-value","onChange"])]),withDirectives(createVNode("span",xi,[createVNode(i,{placeholder:e.t("el.datepicker.selectTime"),"model-value":e.visibleTime,size:"small",onFocus:e.onTimePickerInputFocus,onInput:t[2]||(t[2]=t=>e.userInputTime=t),onChange:e.handleVisibleTimeChange},null,8,["placeholder","model-value","onFocus","onChange"]),createVNode(r,{visible:e.timePickerVisible,format:e.timeFormat,"time-arrow-control":e.arrowControl,"parsed-value":e.innerDate,onPick:e.handleTimePick},null,8,["visible","format","time-arrow-control","parsed-value","onPick"])],512),[[x,e.handleTimePickClose]])])):createCommentVNode("v-if",!0),withDirectives(createVNode("div",{class:["el-date-picker__header",{"el-date-picker__header--bordered":"year"===e.currentView||"month"===e.currentView}]},[createVNode("button",{type:"button","aria-label":e.t("el.datepicker.prevYear"),class:"el-picker-panel__icon-btn el-date-picker__prev-btn el-icon-d-arrow-left",onClick:t[3]||(t[3]=(...t)=>e.prevYear_&&e.prevYear_(...t))},null,8,["aria-label"]),withDirectives(createVNode("button",{type:"button","aria-label":e.t("el.datepicker.prevMonth"),class:"el-picker-panel__icon-btn el-date-picker__prev-btn el-icon-arrow-left",onClick:t[4]||(t[4]=(...t)=>e.prevMonth_&&e.prevMonth_(...t))},null,8,["aria-label"]),[[vShow,"date"===e.currentView]]),createVNode("span",{role:"button",class:"el-date-picker__header-label",onClick:t[5]||(t[5]=(...t)=>e.showYearPicker&&e.showYearPicker(...t))},toDisplayString(e.yearLabel),1),withDirectives(createVNode("span",{role:"button",class:["el-date-picker__header-label",{active:"month"===e.currentView}],onClick:t[6]||(t[6]=(...t)=>e.showMonthPicker&&e.showMonthPicker(...t))},toDisplayString(e.t("el.datepicker.month"+(e.month+1))),3),[[vShow,"date"===e.currentView]]),createVNode("button",{type:"button","aria-label":e.t("el.datepicker.nextYear"),class:"el-picker-panel__icon-btn el-date-picker__next-btn el-icon-d-arrow-right",onClick:t[7]||(t[7]=(...t)=>e.nextYear_&&e.nextYear_(...t))},null,8,["aria-label"]),withDirectives(createVNode("button",{type:"button","aria-label":e.t("el.datepicker.nextMonth"),class:"el-picker-panel__icon-btn el-date-picker__next-btn el-icon-arrow-right",onClick:t[8]||(t[8]=(...t)=>e.nextMonth_&&e.nextMonth_(...t))},null,8,["aria-label"]),[[vShow,"date"===e.currentView]])],2),[[vShow,"time"!==e.currentView]]),createVNode("div",wi,["date"===e.currentView?(openBlock(),createBlock(p,{key:0,"selection-mode":e.selectionMode,date:e.innerDate,"parsed-value":e.parsedValue,"disabled-date":e.disabledDate,onPick:e.handleDatePick},null,8,["selection-mode","date","parsed-value","disabled-date","onPick"])):createCommentVNode("v-if",!0),"year"===e.currentView?(openBlock(),createBlock(y,{key:1,date:e.innerDate,"disabled-date":e.disabledDate,"parsed-value":e.parsedValue,onPick:e.handleYearPick},null,8,["date","disabled-date","parsed-value","onPick"])):createCommentVNode("v-if",!0),"month"===e.currentView?(openBlock(),createBlock(k,{key:2,date:e.innerDate,"parsed-value":e.parsedValue,"disabled-date":e.disabledDate,onPick:e.handleMonthPick},null,8,["date","parsed-value","disabled-date","onPick"])):createCommentVNode("v-if",!0)])])]),withDirectives(createVNode("div",Si,[withDirectives(createVNode(C,{size:"mini",type:"text",class:"el-picker-panel__link-btn",onClick:e.changeToNow},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.now")),1)])),_:1},8,["onClick"]),[[vShow,"dates"!==e.selectionMode]]),createVNode(C,{plain:"",size:"mini",class:"el-picker-panel__link-btn",onClick:e.onConfirm},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.confirm")),1)])),_:1},8,["onClick"])],512),[[vShow,e.footerVisible&&"date"===e.currentView]])],2)},fi.__file="packages/date-picker/src/date-picker-com/panel-date-pick.vue";var _i=defineComponent({directives:{clickoutside:zt},components:{TimePickPanel:Pa,DateTable:Jo,ElInput:pl,ElButton:da},props:{unlinkPanels:Boolean,parsedValue:{type:Array},type:{type:String,required:!0}},emits:["pick","set-picker-option"],setup(e,t){const a=ref(dayjs_min()),i=ref(dayjs_min().add(1,"month")),r=ref(null),s=ref(null),u=ref({min:null,max:null}),d=ref({min:null,max:null}),c=computed((()=>a.value.year()+" "+ga("el.datepicker.year")+" "+ga("el.datepicker.month"+(a.value.month()+1)))),p=computed((()=>i.value.year()+" "+ga("el.datepicker.year")+" "+ga("el.datepicker.month"+(i.value.month()+1)))),h=computed((()=>a.value.year())),v=computed((()=>a.value.month())),m=computed((()=>i.value.year())),f=computed((()=>i.value.month())),g=computed((()=>!!z.length)),b=computed((()=>null!==u.value.min?u.value.min:r.value?r.value.format(w.value):"")),y=computed((()=>null!==u.value.max?u.value.max:s.value||r.value?(s.value||r.value).format(w.value):"")),k=computed((()=>null!==d.value.min?d.value.min:r.value?r.value.format(x.value):"")),C=computed((()=>null!==d.value.max?d.value.max:s.value||r.value?(s.value||r.value).format(x.value):"")),x=computed((()=>qa($))),w=computed((()=>Ya($))),S=computed((()=>{const t=(v.value+1)%12,l=v.value+1>=12?1:0;return e.unlinkPanels&&new Date(h.value+l,t)<new Date(m.value,f.value)})),E=computed((()=>e.unlinkPanels&&12*m.value+f.value-(12*h.value+v.value+1)>=12)),M=e=>Array.isArray(e)&&e&&e[0]&&e[1]&&e[0].valueOf()<=e[1].valueOf(),T=ref({endDate:null,selecting:!1}),N=computed((()=>!(r.value&&s.value&&!T.value.selecting&&M([r.value,s.value])))),D=computed((()=>"datetime"===e.type||"datetimerange"===e.type)),O=(e=!1)=>{M([r.value,s.value])&&t.emit("pick",[r.value,s.value],e);},P=(e,t)=>{if(e){if(H){return dayjs_min(H[t]||H).year(e.year()).month(e.month()).date(e.date())}return e}},V=ref(!1),I=ref(!1),B=()=>{r.value=null,s.value=null,a.value=A()[0],i.value=a.value.add(1,"month"),t.emit("pick",null);},A=()=>{let t;if(Array.isArray(W)){const t=dayjs_min(W[0]);let l=dayjs_min(W[1]);return e.unlinkPanels||(l=t.add(1,"month")),[t,l]}return t=W?dayjs_min(W):dayjs_min(),[t,t.add(1,"month")]};t.emit("set-picker-option",["isValidValue",M]),t.emit("set-picker-option",["parseUserInput",e=>Array.isArray(e)?e.map((e=>dayjs_min(e,$))):dayjs_min(e,$)]),t.emit("set-picker-option",["formatToString",e=>Array.isArray(e)?e.map((e=>e.format($))):e.format($)]),t.emit("set-picker-option",["handleClear",B]);const L=inject("EP_PICKER_BASE"),{shortcuts:z,disabledDate:F,cellClassName:R,format:$,defaultTime:H,defaultValue:W,arrowControl:j}=L.props;return watch((()=>e.parsedValue),(t=>{if(t&&2===t.length)if(r.value=t[0],s.value=t[1],a.value=r.value,e.unlinkPanels&&s.value){const e=r.value.year(),t=r.value.month(),l=s.value.year(),a=s.value.month();i.value=e===l&&t===a?s.value.add(1,"month"):s.value;}else i.value=a.value.add(1,"month");else {const e=A();a.value=e[0],i.value=e[1];}}),{immediate:!0}),{shortcuts:z,disabledDate:F,cellClassName:R,minTimePickerVisible:V,maxTimePickerVisible:I,handleMinTimeClose:()=>{V.value=!1;},handleMaxTimeClose:()=>{I.value=!1;},handleShortcutClick:e=>{e.value?t.emit("pick",[dayjs_min(e.value[0]),dayjs_min(e.value[1])]):e.onClick&&e.onClick(t);},rangeState:T,minDate:r,maxDate:s,handleRangePick:(e,t=!0)=>{const l=P(e.minDate,0),a=P(e.maxDate,1);s.value===a&&r.value===l||(s.value=a,r.value=l,t&&!D.value&&O());},onSelect:e=>{T.value.selecting=e,e||(T.value.endDate=null);},handleChangeRange:e=>{T.value=e;},btnDisabled:N,enableYearArrow:E,enableMonthArrow:S,rightPrevMonth:()=>{i.value=i.value.subtract(1,"month");},rightPrevYear:()=>{i.value=i.value.subtract(1,"year");},rightNextMonth:()=>{e.unlinkPanels?i.value=i.value.add(1,"month"):(a.value=a.value.add(1,"month"),i.value=a.value.add(1,"month"));},rightNextYear:()=>{e.unlinkPanels?i.value=i.value.add(1,"year"):(a.value=a.value.add(1,"year"),i.value=a.value.add(1,"month"));},leftPrevMonth:()=>{a.value=a.value.subtract(1,"month"),e.unlinkPanels||(i.value=a.value.add(1,"month"));},leftPrevYear:()=>{a.value=a.value.subtract(1,"year"),e.unlinkPanels||(i.value=a.value.add(1,"month"));},leftNextMonth:()=>{a.value=a.value.add(1,"month");},leftNextYear:()=>{a.value=a.value.add(1,"year");},hasShortcuts:g,leftLabel:c,rightLabel:p,leftDate:a,rightDate:i,showTime:D,t:ga,minVisibleDate:b,maxVisibleDate:y,minVisibleTime:k,maxVisibleTime:C,arrowControl:j,handleDateInput:(t,l)=>{u.value[l]=t;const n=dayjs_min(t,w.value);if(n.isValid()){if(F&&F(n.toDate()))return;"min"===l?(a.value=n,r.value=(r.value||a.value).year(n.year()).month(n.month()).date(n.date()),e.unlinkPanels||(i.value=n.add(1,"month"),s.value=r.value.add(1,"month"))):(i.value=n,s.value=(s.value||i.value).year(n.year()).month(n.month()).date(n.date()),e.unlinkPanels||(a.value=n.subtract(1,"month"),r.value=s.value.subtract(1,"month")));}},handleDateChange:(e,t)=>{u.value[t]=null;},handleTimeInput:(e,t)=>{d.value[t]=e;const l=dayjs_min(e,x.value);l.isValid()&&("min"===t?(V.value=!0,r.value=(r.value||a.value).hour(l.hour()).minute(l.minute()).second(l.second()),s.value&&!s.value.isBefore(r.value)||(s.value=r.value)):(I.value=!0,s.value=(s.value||i.value).hour(l.hour()).minute(l.minute()).second(l.second()),i.value=s.value,s.value&&s.value.isBefore(r.value)&&(r.value=s.value)));},handleTimeChange:(e,t)=>{d.value[t]=null,"min"===t?(a.value=r.value,V.value=!1):(i.value=s.value,I.value=!1);},handleMinTimePick:(e,t,l)=>{d.value.min||(e&&(a.value=e,r.value=(r.value||a.value).hour(e.hour()).minute(e.minute()).second(e.second())),l||(V.value=t),s.value&&!s.value.isBefore(r.value)||(s.value=r.value));},handleMaxTimePick:(e,t,l)=>{d.value.max||(e&&(i.value=e,s.value=(s.value||i.value).hour(e.hour()).minute(e.minute()).second(e.second())),l||(I.value=t),s.value&&s.value.isBefore(r.value)&&(r.value=s.value));},handleClear:B,handleConfirm:O,timeFormat:x}}});const Ei={class:"el-picker-panel__body-wrapper"},Mi={key:0,class:"el-picker-panel__sidebar"},Ti={class:"el-picker-panel__body"},Ni={key:0,class:"el-date-range-picker__time-header"},Di={class:"el-date-range-picker__editors-wrap"},Oi={class:"el-date-range-picker__time-picker-wrap"},Pi={class:"el-date-range-picker__time-picker-wrap"},Vi=createVNode("span",{class:"el-icon-arrow-right"},null,-1),Ii={class:"el-date-range-picker__editors-wrap is-right"},Bi={class:"el-date-range-picker__time-picker-wrap"},Ai={class:"el-date-range-picker__time-picker-wrap"},Li={class:"el-picker-panel__content el-date-range-picker__content is-left"},zi={class:"el-date-range-picker__header"},Fi={class:"el-picker-panel__content el-date-range-picker__content is-right"},Ri={class:"el-date-range-picker__header"},$i={key:0,class:"el-picker-panel__footer"};_i.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveComponent("time-pick-panel"),p=resolveComponent("date-table"),b=resolveComponent("el-button"),y=resolveDirective("clickoutside");return openBlock(),createBlock("div",{class:["el-picker-panel el-date-range-picker",[{"has-sidebar":e.$slots.sidebar||e.hasShortcuts,"has-time":e.showTime}]]},[createVNode("div",Ei,[renderSlot(e.$slots,"sidebar",{class:"el-picker-panel__sidebar"}),e.hasShortcuts?(openBlock(),createBlock("div",Mi,[(openBlock(!0),createBlock(Fragment,null,renderList(e.shortcuts,((t,l)=>(openBlock(),createBlock("button",{key:l,type:"button",class:"el-picker-panel__shortcut",onClick:l=>e.handleShortcutClick(t)},toDisplayString(t.text),9,["onClick"])))),128))])):createCommentVNode("v-if",!0),createVNode("div",Ti,[e.showTime?(openBlock(),createBlock("div",Ni,[createVNode("span",Di,[createVNode("span",Oi,[createVNode(i,{size:"small",disabled:e.rangeState.selecting,placeholder:e.t("el.datepicker.startDate"),class:"el-date-range-picker__editor","model-value":e.minVisibleDate,onInput:t[1]||(t[1]=t=>e.handleDateInput(t,"min")),onChange:t[2]||(t[2]=t=>e.handleDateChange(t,"min"))},null,8,["disabled","placeholder","model-value"])]),withDirectives(createVNode("span",Pi,[createVNode(i,{size:"small",class:"el-date-range-picker__editor",disabled:e.rangeState.selecting,placeholder:e.t("el.datepicker.startTime"),"model-value":e.minVisibleTime,onFocus:t[3]||(t[3]=t=>e.minTimePickerVisible=!0),onInput:t[4]||(t[4]=t=>e.handleTimeInput(t,"min")),onChange:t[5]||(t[5]=t=>e.handleTimeChange(t,"min"))},null,8,["disabled","placeholder","model-value"]),createVNode(r,{visible:e.minTimePickerVisible,format:e.timeFormat,"datetime-role":"start","time-arrow-control":e.arrowControl,"parsed-value":e.leftDate,onPick:e.handleMinTimePick},null,8,["visible","format","time-arrow-control","parsed-value","onPick"])],512),[[y,e.handleMinTimeClose]])]),Vi,createVNode("span",Ii,[createVNode("span",Bi,[createVNode(i,{size:"small",class:"el-date-range-picker__editor",disabled:e.rangeState.selecting,placeholder:e.t("el.datepicker.endDate"),"model-value":e.maxVisibleDate,readonly:!e.minDate,onInput:t[6]||(t[6]=t=>e.handleDateInput(t,"max")),onChange:t[7]||(t[7]=t=>e.handleDateChange(t,"max"))},null,8,["disabled","placeholder","model-value","readonly"])]),withDirectives(createVNode("span",Ai,[createVNode(i,{size:"small",class:"el-date-range-picker__editor",disabled:e.rangeState.selecting,placeholder:e.t("el.datepicker.endTime"),"model-value":e.maxVisibleTime,readonly:!e.minDate,onFocus:t[8]||(t[8]=t=>e.minDate&&(e.maxTimePickerVisible=!0)),onInput:t[9]||(t[9]=t=>e.handleTimeInput(t,"max")),onChange:t[10]||(t[10]=t=>e.handleTimeChange(t,"max"))},null,8,["disabled","placeholder","model-value","readonly"]),createVNode(r,{"datetime-role":"end",visible:e.maxTimePickerVisible,format:e.timeFormat,"time-arrow-control":e.arrowControl,"parsed-value":e.rightDate,onPick:e.handleMaxTimePick},null,8,["visible","format","time-arrow-control","parsed-value","onPick"])],512),[[y,e.handleMaxTimeClose]])])])):createCommentVNode("v-if",!0),createVNode("div",Li,[createVNode("div",zi,[createVNode("button",{type:"button",class:"el-picker-panel__icon-btn el-icon-d-arrow-left",onClick:t[11]||(t[11]=(...t)=>e.leftPrevYear&&e.leftPrevYear(...t))}),createVNode("button",{type:"button",class:"el-picker-panel__icon-btn el-icon-arrow-left",onClick:t[12]||(t[12]=(...t)=>e.leftPrevMonth&&e.leftPrevMonth(...t))}),e.unlinkPanels?(openBlock(),createBlock("button",{key:0,type:"button",disabled:!e.enableYearArrow,class:[{"is-disabled":!e.enableYearArrow},"el-picker-panel__icon-btn el-icon-d-arrow-right"],onClick:t[13]||(t[13]=(...t)=>e.leftNextYear&&e.leftNextYear(...t))},null,10,["disabled"])):createCommentVNode("v-if",!0),e.unlinkPanels?(openBlock(),createBlock("button",{key:1,type:"button",disabled:!e.enableMonthArrow,class:[{"is-disabled":!e.enableMonthArrow},"el-picker-panel__icon-btn el-icon-arrow-right"],onClick:t[14]||(t[14]=(...t)=>e.leftNextMonth&&e.leftNextMonth(...t))},null,10,["disabled"])):createCommentVNode("v-if",!0),createVNode("div",null,toDisplayString(e.leftLabel),1)]),createVNode(p,{"selection-mode":"range",date:e.leftDate,"min-date":e.minDate,"max-date":e.maxDate,"range-state":e.rangeState,"disabled-date":e.disabledDate,"cell-class-name":e.cellClassName,onChangerange:e.handleChangeRange,onPick:e.handleRangePick,onSelect:e.onSelect},null,8,["date","min-date","max-date","range-state","disabled-date","cell-class-name","onChangerange","onPick","onSelect"])]),createVNode("div",Fi,[createVNode("div",Ri,[e.unlinkPanels?(openBlock(),createBlock("button",{key:0,type:"button",disabled:!e.enableYearArrow,class:[{"is-disabled":!e.enableYearArrow},"el-picker-panel__icon-btn el-icon-d-arrow-left"],onClick:t[15]||(t[15]=(...t)=>e.rightPrevYear&&e.rightPrevYear(...t))},null,10,["disabled"])):createCommentVNode("v-if",!0),e.unlinkPanels?(openBlock(),createBlock("button",{key:1,type:"button",disabled:!e.enableMonthArrow,class:[{"is-disabled":!e.enableMonthArrow},"el-picker-panel__icon-btn el-icon-arrow-left"],onClick:t[16]||(t[16]=(...t)=>e.rightPrevMonth&&e.rightPrevMonth(...t))},null,10,["disabled"])):createCommentVNode("v-if",!0),createVNode("button",{type:"button",class:"el-picker-panel__icon-btn el-icon-d-arrow-right",onClick:t[17]||(t[17]=(...t)=>e.rightNextYear&&e.rightNextYear(...t))}),createVNode("button",{type:"button",class:"el-picker-panel__icon-btn el-icon-arrow-right",onClick:t[18]||(t[18]=(...t)=>e.rightNextMonth&&e.rightNextMonth(...t))}),createVNode("div",null,toDisplayString(e.rightLabel),1)]),createVNode(p,{"selection-mode":"range",date:e.rightDate,"min-date":e.minDate,"max-date":e.maxDate,"range-state":e.rangeState,"disabled-date":e.disabledDate,"cell-class-name":e.cellClassName,onChangerange:e.handleChangeRange,onPick:e.handleRangePick,onSelect:e.onSelect},null,8,["date","min-date","max-date","range-state","disabled-date","cell-class-name","onChangerange","onPick","onSelect"])])])]),e.showTime?(openBlock(),createBlock("div",$i,[createVNode(b,{size:"mini",type:"text",class:"el-picker-panel__link-btn",onClick:e.handleClear},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.clear")),1)])),_:1},8,["onClick"]),createVNode(b,{plain:"",size:"mini",class:"el-picker-panel__link-btn",disabled:e.btnDisabled,onClick:t[19]||(t[19]=t=>e.handleConfirm(!1))},{default:withCtx((()=>[createTextVNode(toDisplayString(e.t("el.datepicker.confirm")),1)])),_:1},8,["disabled"])])):createCommentVNode("v-if",!0)],2)},_i.__file="packages/date-picker/src/date-picker-com/panel-date-range.vue";var Hi=defineComponent({components:{MonthTable:ti},props:{unlinkPanels:Boolean,parsedValue:{type:Array}},emits:["pick","set-picker-option"],setup(e,t){const a=ref(dayjs_min()),i=ref(dayjs_min().add(1,"year")),r=computed((()=>!!b.length)),s=computed((()=>`${a.value.year()} ${ga("el.datepicker.year")}`)),u=computed((()=>`${i.value.year()} ${ga("el.datepicker.year")}`)),d=computed((()=>a.value.year())),c=computed((()=>i.value.year()===a.value.year()?a.value.year()+1:i.value.year())),p=computed((()=>e.unlinkPanels&&c.value>d.value+1)),h=ref(null),v=ref(null),m=ref({endDate:null,selecting:!1}),f=(e=!1)=>{var l;l=[h.value,v.value],Array.isArray(l)&&l&&l[0]&&l[1]&&l[0].valueOf()<=l[1].valueOf()&&t.emit("pick",[h.value,v.value],e);};t.emit("set-picker-option",["formatToString",e=>e.map((e=>e.format(k)))]);const g=inject("EP_PICKER_BASE"),{shortcuts:b,disabledDate:y,format:k,defaultValue:C}=g.props;return watch((()=>e.parsedValue),(t=>{if(t&&2===t.length)if(h.value=t[0],v.value=t[1],a.value=h.value,e.unlinkPanels&&v.value){const e=h.value.year(),t=v.value.year();i.value=e===t?v.value.add(1,"year"):v.value;}else i.value=a.value.add(1,"year");else {const t=(()=>{let t;if(Array.isArray(C)){const t=dayjs_min(C[0]);let l=dayjs_min(C[1]);return e.unlinkPanels||(l=t.add(1,"year")),[t,l]}return t=C?dayjs_min(C):dayjs_min(),[t,t.add(1,"year")]})();a.value=t[0],i.value=t[1];}}),{immediate:!0}),{shortcuts:b,disabledDate:y,onSelect:e=>{m.value.selecting=e,e||(m.value.endDate=null);},handleRangePick:(e,t=!0)=>{const l=e.minDate,a=e.maxDate;v.value===a&&h.value===l||(v.value=a,h.value=l,t&&f());},rangeState:m,handleChangeRange:e=>{m.value=e;},minDate:h,maxDate:v,enableYearArrow:p,leftLabel:s,rightLabel:u,leftNextYear:()=>{a.value=a.value.add(1,"year");},leftPrevYear:()=>{a.value=a.value.subtract(1,"year"),e.unlinkPanels||(i.value=i.value.subtract(1,"year"));},rightNextYear:()=>{e.unlinkPanels||(a.value=a.value.add(1,"year")),i.value=i.value.add(1,"year");},rightPrevYear:()=>{i.value=i.value.subtract(1,"year");},t:ga,leftDate:a,rightDate:i,hasShortcuts:r,handleShortcutClick:e=>{e.value?t.emit("pick",[dayjs_min(e.value[0]),dayjs_min(e.value[1])]):e.onClick&&e.onClick(t);}}}});const Wi={class:"el-picker-panel__body-wrapper"},ji={key:0,class:"el-picker-panel__sidebar"},Ki={class:"el-picker-panel__body"},Yi={class:"el-picker-panel__content el-date-range-picker__content is-left"},qi={class:"el-date-range-picker__header"},Ui={class:"el-picker-panel__content el-date-range-picker__content is-right"},Gi={class:"el-date-range-picker__header"};Hi.render=function(e,t,l,a,n,o){const i=resolveComponent("month-table");return openBlock(),createBlock("div",{class:["el-picker-panel el-date-range-picker",[{"has-sidebar":e.$slots.sidebar||e.hasShortcuts}]]},[createVNode("div",Wi,[renderSlot(e.$slots,"sidebar",{class:"el-picker-panel__sidebar"}),e.hasShortcuts?(openBlock(),createBlock("div",ji,[(openBlock(!0),createBlock(Fragment,null,renderList(e.shortcuts,((t,l)=>(openBlock(),createBlock("button",{key:l,type:"button",class:"el-picker-panel__shortcut",onClick:l=>e.handleShortcutClick(t)},toDisplayString(t.text),9,["onClick"])))),128))])):createCommentVNode("v-if",!0),createVNode("div",Ki,[createVNode("div",Yi,[createVNode("div",qi,[createVNode("button",{type:"button",class:"el-picker-panel__icon-btn el-icon-d-arrow-left",onClick:t[1]||(t[1]=(...t)=>e.leftPrevYear&&e.leftPrevYear(...t))}),e.unlinkPanels?(openBlock(),createBlock("button",{key:0,type:"button",disabled:!e.enableYearArrow,class:[{"is-disabled":!e.enableYearArrow},"el-picker-panel__icon-btn el-icon-d-arrow-right"],onClick:t[2]||(t[2]=(...t)=>e.leftNextYear&&e.leftNextYear(...t))},null,10,["disabled"])):createCommentVNode("v-if",!0),createVNode("div",null,toDisplayString(e.leftLabel),1)]),createVNode(i,{"selection-mode":"range",date:e.leftDate,"min-date":e.minDate,"max-date":e.maxDate,"range-state":e.rangeState,"disabled-date":e.disabledDate,onChangerange:e.handleChangeRange,onPick:e.handleRangePick,onSelect:e.onSelect},null,8,["date","min-date","max-date","range-state","disabled-date","onChangerange","onPick","onSelect"])]),createVNode("div",Ui,[createVNode("div",Gi,[e.unlinkPanels?(openBlock(),createBlock("button",{key:0,type:"button",disabled:!e.enableYearArrow,class:[{"is-disabled":!e.enableYearArrow},"el-picker-panel__icon-btn el-icon-d-arrow-left"],onClick:t[3]||(t[3]=(...t)=>e.rightPrevYear&&e.rightPrevYear(...t))},null,10,["disabled"])):createCommentVNode("v-if",!0),createVNode("button",{type:"button",class:"el-picker-panel__icon-btn el-icon-d-arrow-right",onClick:t[4]||(t[4]=(...t)=>e.rightNextYear&&e.rightNextYear(...t))}),createVNode("div",null,toDisplayString(e.rightLabel),1)]),createVNode(i,{"selection-mode":"range",date:e.rightDate,"min-date":e.minDate,"max-date":e.maxDate,"range-state":e.rangeState,"disabled-date":e.disabledDate,onChangerange:e.handleChangeRange,onPick:e.handleRangePick,onSelect:e.onSelect},null,8,["date","min-date","max-date","range-state","disabled-date","onChangerange","onPick","onSelect"])])])])],2)},Hi.__file="packages/date-picker/src/date-picker-com/panel-month-range.vue",dayjs_min.extend(localeData),dayjs_min.extend(advancedFormat),dayjs_min.extend(customParseFormat),dayjs_min.extend(weekOfYear),dayjs_min.extend(weekYear),dayjs_min.extend(dayOfYear),dayjs_min.extend(isSameOrAfter),dayjs_min.extend(isSameOrBefore);const Xi=defineComponent({name:"ElDatePicker",install:null,props:Object.assign(Object.assign({},ya),{type:{type:String,default:"date"}}),emits:["update:modelValue"],setup(e,t){const l=ba[e.type]||"YYYY-MM-DD";return ()=>h(xa,Object.assign(Object.assign({format:l},e),{type:e.type,"onUpdate:modelValue":e=>t.emit("update:modelValue",e)}),{default:t=>{return h("daterange"===(l=e.type)||"datetimerange"===l?_i:"monthrange"===l?Hi:fi,t);var l;}})}});Xi.install=e=>{e.component(Xi.name,Xi);};var Qi=defineComponent({name:"ElOverlay",props:{mask:{type:Boolean,default:!0},overlayClass:{type:[String,Array,Object]},zIndex:{type:Number}},emits:["click"],setup(e,{slots:t,emit:l}){let a=!1,n=!1;const o=e=>{a&&n&&l("click",e),a=n=!1;};return ()=>e.mask?createVNode("div",{class:["el-overlay",e.overlayClass],style:{zIndex:e.zIndex},onClick:o,onMousedown:t=>{e.mask&&(a=t.target===t.currentTarget);},onMouseup:t=>{e.mask&&(n=t.target===t.currentTarget);}},[renderSlot(t,"default")],bl.STYLE|bl.CLASS|bl.PROPS,["onClick","onMouseup","onMousedown"]):h("div",{style:{zIndex:e.zIndex,position:"fixed",top:"0px",right:"0px",bottom:"0px",left:"0px"}},[renderSlot(t,"default")])}});Qi.__file="packages/overlay/src/index.vue";function Zi(e,t,a){const r=ref(!1),s=ref(!1),u=ref(null),d=ref(null),c=ref(null),p=ref(!1),h=ref(e.zIndex||Ol.nextZIndex()),v=ref(null),m=computed((()=>{const t={};return e.fullscreen||(t.marginTop=e.top,e.width&&(t.width=We(e.width)?e.width+"px":e.width)),t}));function f(){Ke(c),Ke(d),e.openDelay&&e.openDelay>0?d.value=window.setTimeout((()=>{d.value=null,k();}),e.openDelay):k();}function g(){Ke(d),Ke(c),e.closeDelay&&e.closeDelay>0?c.value=window.setTimeout((()=>{c.value=null,C();}),e.closeDelay):C();}function b(e){e||(s.value=!0,r.value=!1);}function y(){e.beforeClose?e.beforeClose(b):g();}function k(){Ce||(r.value=!0);}function C(){r.value=!1;}return e.lockScroll&&Et(r),e.closeOnPressEscape&&It({handleClose:y},r),Mt(r),watch((()=>e.modelValue),(l=>{l?(s.value=!1,f(),p.value=!0,t.emit("open"),h.value=e.zIndex?h.value++:Ol.nextZIndex(),nextTick((()=>{a.value&&(a.value.scrollTop=0);}))):r.value&&g();})),onMounted((()=>{e.modelValue&&(r.value=!0,p.value=!0,f());})),{afterEnter:function(){t.emit("opened");},afterLeave:function(){t.emit("closed"),t.emit(Kt,!1),e.destroyOnClose&&(p.value=!1);},beforeLeave:function(){t.emit("close");},handleClose:y,onModalClick:function(){e.closeOnClickModal&&y();},closed:s,dialogRef:u,style:m,rendered:p,modalRef:v,visible:r,zIndex:h}}var Ji=defineComponent({name:"ElDialog",components:{"el-overlay":Qi},directives:{TrapFocus:Ht},props:{appendToBody:{type:Boolean,default:!1},beforeClose:{type:Function},destroyOnClose:{type:Boolean,default:!1},center:{type:Boolean,default:!1},customClass:{type:String,default:""},closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},fullscreen:{type:Boolean,default:!1},lockScroll:{type:Boolean,default:!0},modal:{type:Boolean,default:!0},showClose:{type:Boolean,default:!0},title:{type:String,default:""},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:0},top:{type:String,default:"15vh"},modelValue:{type:Boolean,required:!0},modalClass:String,width:{type:[String,Number],default:"50%",validator:e=>!!We(e)||["px","rem","em","vw","%","vmin","vmax"].some((t=>e.endsWith(t)))},zIndex:{type:Number}},emits:["open","opened","close","closed",Kt],setup(e,t){const a=ref(null);return Object.assign(Object.assign({},Zi(e,t,a)),{dialogRef:a})}});const er={class:"el-dialog__header"},tr={class:"el-dialog__title"},lr=createVNode("i",{class:"el-dialog__close el-icon el-icon-close"},null,-1),ar={key:0,class:"el-dialog__body"},nr={key:1,class:"el-dialog__footer"};Ji.render=function(e,t,l,a,n,o){const i=resolveComponent("el-overlay"),r=resolveDirective("trap-focus");return openBlock(),createBlock(Teleport,{to:"body",disabled:!e.appendToBody},[createVNode(Transition,{name:"dialog-fade",onAfterEnter:e.afterEnter,onAfterLeave:e.afterLeave,onBeforeLeave:e.beforeLeave},{default:withCtx((()=>[withDirectives(createVNode(i,{mask:e.modal,"overlay-class":e.modalClass,"z-index":e.zIndex,onClick:e.onModalClick},{default:withCtx((()=>[withDirectives(createVNode("div",{ref:"dialogRef",class:["el-dialog",{"is-fullscreen":e.fullscreen,"el-dialog--center":e.center},e.customClass],"aria-modal":"true",role:"dialog","aria-label":e.title||"dialog",style:e.style,onClick:t[2]||(t[2]=withModifiers((()=>{}),["stop"]))},[createVNode("div",er,[renderSlot(e.$slots,"title",{},(()=>[createVNode("span",tr,toDisplayString(e.title),1)])),e.showClose?(openBlock(),createBlock("button",{key:0,"aria-label":"close",class:"el-dialog__headerbtn",type:"button",onClick:t[1]||(t[1]=(...t)=>e.handleClose&&e.handleClose(...t))},[lr])):createCommentVNode("v-if",!0)]),e.rendered?(openBlock(),createBlock("div",ar,[renderSlot(e.$slots,"default")])):createCommentVNode("v-if",!0),e.$slots.footer?(openBlock(),createBlock("div",nr,[renderSlot(e.$slots,"footer")])):createCommentVNode("v-if",!0)],14,["aria-label"]),[[r]])])),_:3},8,["mask","overlay-class","z-index","onClick"]),[[vShow,e.visible]])])),_:1},8,["onAfterEnter","onAfterLeave","onBeforeLeave"])],8,["disabled"])},Ji.__file="packages/dialog/src/index.vue",Ji.install=e=>{e.component(Ji.name,Ji);};const or=Ji;var ir=defineComponent({name:"ElDivider",props:{direction:{type:String,default:"horizontal",validator:e=>-1!==["horizontal","vertical"].indexOf(e)},contentPosition:{type:String,default:"center",validator:e=>-1!==["left","center","right"].indexOf(e)}}});ir.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-divider","el-divider--"+e.direction]},[e.$slots.default&&"vertical"!==e.direction?(openBlock(),createBlock("div",{key:0,class:["el-divider__text","is-"+e.contentPosition]},[renderSlot(e.$slots,"default")],2)):createCommentVNode("v-if",!0)],2)},ir.__file="packages/divider/src/index.vue",ir.install=e=>{e.component(ir.name,ir);};var sr=defineComponent({name:"ElDrawer",components:{[Qi.name]:Qi},directives:{TrapFocus:Ht},props:{modelValue:{type:Boolean,required:!0},appendToBody:{type:Boolean,default:!1},beforeClose:Function,customClass:{type:String,default:""},direction:{type:String,default:"rtl",validator:e=>-1!==["ltr","rtl","ttb","btt"].indexOf(e)},showClose:{type:Boolean,default:!0},size:{type:[String,Number],default:"30%"},title:{type:String,default:""},closeOnClickModal:{type:Boolean,default:!0},withHeader:{type:Boolean,default:!0},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:0},zIndex:Number,modal:{type:Boolean,default:!0},modalFade:{type:Boolean,default:!0},modalClass:String,lockScroll:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},destroyOnClose:{type:Boolean,default:!1}},emits:["open","opened","close","closed","update:modelValue"],setup(e,t){const a=ref(null);return Object.assign(Object.assign({},Zi(e,t,a)),{drawerRef:a,isHorizontal:computed((()=>"rtl"===e.direction||"ltr"===e.direction)),drawerSize:computed((()=>"number"==typeof e.size?e.size+"px":e.size))})}});const ur={key:0,id:"el-drawer__title",class:"el-drawer__header"},dr=createVNode("i",{class:"el-drawer__close el-icon el-icon-close"},null,-1),cr={key:1,class:"el-drawer__body"};sr.render=function(e,t,l,a,n,o){const i=resolveComponent("el-overlay"),r=resolveDirective("trap-focus");return openBlock(),createBlock(Teleport,{to:"body",disabled:!e.appendToBody},[createVNode(Transition,{name:"el-drawer-fade",onAfterEnter:e.afterEnter,onAfterLeave:e.afterLeave,onBeforeLeave:e.beforeLeave},{default:withCtx((()=>[withDirectives(createVNode(i,{mask:e.modal,"overlay-class":e.modalClass,"z-index":e.zIndex,onClick:e.onModalClick},{default:withCtx((()=>[withDirectives(createVNode("div",{ref:"drawerRef","aria-modal":"true","aria-labelledby":"el-drawer__title","aria-label":e.title,class:["el-drawer",e.direction,e.customClass],style:e.isHorizontal?"width: "+e.drawerSize:"height: "+e.drawerSize,role:"dialog",onClick:t[2]||(t[2]=withModifiers((()=>{}),["stop"]))},[e.withHeader?(openBlock(),createBlock("header",ur,[renderSlot(e.$slots,"title",{},(()=>[createVNode("span",{role:"heading",title:e.title},toDisplayString(e.title),9,["title"])])),e.showClose?(openBlock(),createBlock("button",{key:0,"aria-label":"close "+(e.title||"drawer"),class:"el-drawer__close-btn",type:"button",onClick:t[1]||(t[1]=(...t)=>e.handleClose&&e.handleClose(...t))},[dr],8,["aria-label"])):createCommentVNode("v-if",!0)])):createCommentVNode("v-if",!0),e.rendered?(openBlock(),createBlock("section",cr,[renderSlot(e.$slots,"default")])):createCommentVNode("v-if",!0)],14,["aria-label"]),[[r]])])),_:1},8,["mask","overlay-class","z-index","onClick"]),[[vShow,e.visible]])])),_:1},8,["onAfterEnter","onAfterLeave","onBeforeLeave"])],8,["disabled"])},sr.__file="packages/drawer/src/index.vue",sr.install=e=>{e.component(sr.name,sr);};const hr=()=>{const e=qe(),t=inject("elDropdown",{}),l=computed((()=>null==t?void 0:t.dropdownSize));return {ELEMENT:e,elDropdown:t,_elDropdownSize:l}},vr=(e,t,a)=>{const n=ref(null),o=ref(null),i=ref(null),r=ref("dropdown-menu-"+Re());function s(){var e;t.setAttribute("tabindex","-1"),null===(e=o.value)||void 0===e||e.forEach((e=>{e.setAttribute("tabindex","-1");}));}function u(e){s(),null==e||e.setAttribute("tabindex","0");}function d(e){const t=e.code;[Tt.up,Tt.down].includes(t)?(s(),u(n.value[0]),n.value[0].focus(),e.preventDefault(),e.stopPropagation()):t===Tt.enter?a.handleClick():[Tt.tab,Tt.esc].includes(t)&&a.hide();}function c(e){const t=e.code,l=e.target,i=o.value.indexOf(l),r=o.value.length-1;let d;[Tt.up,Tt.down].includes(t)?(d=t===Tt.up?0!==i?i-1:0:i<r?i+1:r,s(),u(n.value[d]),n.value[d].focus(),e.preventDefault(),e.stopPropagation()):t===Tt.enter?(p(),l.click(),a.props.hideOnClick&&a.hide()):[Tt.tab,Tt.esc].includes(t)&&(a.hide(),p());}function p(){t.focus();}i.value=null==e?void 0:e.subTree.el,n.value=i.value.querySelectorAll("[tabindex='-1']"),o.value=[].slice.call(n.value),Je(t,"keydown",d),Je(i.value,"keydown",c,!0),i.value.setAttribute("id",r.value),t.setAttribute("aria-haspopup","list"),t.setAttribute("aria-controls",r.value),a.props.splitButton||(t.setAttribute("role","button"),t.setAttribute("tabindex",a.props.tabindex),lt(t,"el-dropdown-selfdefine"));};var mr=defineComponent({name:"ElDropdown",components:{ElButton:da,ElButtonGroup:ha,ElScrollbar:gl,ElPopper:Rl},props:{trigger:{type:String,default:"hover"},type:String,size:{type:String,default:""},splitButton:Boolean,hideOnClick:{type:Boolean,default:!0},placement:{type:String,default:"bottom"},showTimeout:{type:Number,default:150},hideTimeout:{type:Number,default:150},tabindex:{type:Number,default:0},effect:{type:String,default:"light"},maxHeight:{type:[Number,String],default:""}},emits:["visible-change","click","command"],setup(t,{emit:a}){const r=getCurrentInstance(),{ELEMENT:s}=hr(),u=ref(null),d=ref(!1),c=ref(null),p=computed((()=>{return "max-height: "+(e=t.maxHeight,Ee(e)?e:We(e)?e+"px":(Le("Util","binding value must be a string or number"),""));var e;}));watch((()=>d.value),(e=>{var t,l;e&&(null===(l=null===(t=m.value)||void 0===t?void 0:t.focus)||void 0===l||l.call(t)),e||function(){var e,t;null===(t=null===(e=m.value)||void 0===e?void 0:e.blur)||void 0===t||t.call(e);}(),a("visible-change",e);}));const h=ref(!1);watch((()=>h.value),(e=>{const t=m.value;t&&(e?lt(t,"focusing"):at(t,"focusing"));}));const v=ref(null),m=computed((()=>{var e,l,a,n;const o=null!==(a=null===(l=null===(e=v.value)||void 0===e?void 0:e.$refs.triggerRef)||void 0===l?void 0:l.children[0])&&void 0!==a?a:{};return t.splitButton?null===(n=o.children)||void 0===n?void 0:n[1]:o}));function f(){var e;(null===(e=m.value)||void 0===e?void 0:e.disabled)||(d.value?b():g());}function g(){var e;(null===(e=m.value)||void 0===e?void 0:e.disabled)||(u.value&&clearTimeout(u.value),u.value=window.setTimeout((()=>{d.value=!0;}),["click","contextmenu"].includes(t.trigger)?0:t.showTimeout));}function b(){var e;(null===(e=m.value)||void 0===e?void 0:e.disabled)||(y(),t.tabindex>=0&&k(m.value),clearTimeout(u.value),u.value=window.setTimeout((()=>{d.value=!1;}),["click","contextmenu"].includes(t.trigger)?0:t.hideTimeout));}function y(){var e;null===(e=m.value)||void 0===e||e.setAttribute("tabindex","-1");}function k(e){y(),null==e||e.setAttribute("tabindex","0");}const C=computed((()=>t.size||s.size));provide("elDropdown",{instance:r,dropdownSize:C,visible:d,handleClick:f,commandHandler:function(...e){a("command",...e);},show:g,hide:b,trigger:computed((()=>t.trigger)),hideOnClick:computed((()=>t.hideOnClick)),triggerElm:m}),onMounted((()=>{t.splitButton||(Je(m.value,"focus",(()=>{h.value=!0;})),Je(m.value,"blur",(()=>{h.value=!1;})),Je(m.value,"click",(()=>{h.value=!1;}))),"hover"===t.trigger?(Je(m.value,"mouseenter",g),Je(m.value,"mouseleave",b)):"click"===t.trigger?Je(m.value,"click",f):"contextmenu"===t.trigger&&Je(m.value,"contextmenu",(e=>{e.preventDefault(),f();})),Object.assign(r,{handleClick:f,hide:b,resetTabindex:k});}));return {visible:d,scrollbar:c,wrapStyle:p,dropdownSize:C,handlerMainButtonClick:e=>{a("click",e),b();},triggerVnode:v}}});const fr=createVNode("i",{class:"el-dropdown__icon el-icon-arrow-down"},null,-1);mr.render=function(e,t,l,a,n,o){const i=resolveComponent("el-scrollbar"),r=resolveComponent("el-button"),p=resolveComponent("el-button-group"),v=resolveComponent("el-popper");return openBlock(),createBlock(v,{ref:"triggerVnode",visible:e.visible,"onUpdate:visible":t[1]||(t[1]=t=>e.visible=t),placement:e.placement,effect:e.effect,pure:"","manual-mode":!0,trigger:[e.trigger],"popper-class":"el-dropdown__popper","append-to-body":"",transition:"el-zoom-in-top","stop-popper-mouse-event":!1,"gpu-acceleration":!1},{default:withCtx((()=>[createVNode(i,{ref:"scrollbar",tag:"ul","wrap-style":e.wrapStyle,"view-class":"el-dropdown__list"},{default:withCtx((()=>[renderSlot(e.$slots,"dropdown")])),_:3},8,["wrap-style"])])),trigger:withCtx((()=>[createVNode("div",{class:["el-dropdown",e.dropdownSize?"el-dropdown--"+e.dropdownSize:""]},[e.splitButton?(openBlock(),createBlock(p,{key:1},{default:withCtx((()=>[createVNode(r,{size:e.dropdownSize,type:e.type,onClick:e.handlerMainButtonClick},{default:withCtx((()=>[renderSlot(e.$slots,"default")])),_:3},8,["size","type","onClick"]),createVNode(r,{size:e.dropdownSize,type:e.type,class:"el-dropdown__caret-button"},{default:withCtx((()=>[fr])),_:1},8,["size","type"])])),_:1})):renderSlot(e.$slots,"default",{key:0})],2)])),_:1},8,["visible","placement","effect","trigger"])},mr.__file="packages/dropdown/src/dropdown.vue",mr.install=e=>{e.component(mr.name,mr);};var br=defineComponent({name:"ElDropdownItem",props:{command:{type:[Object,String,Number],default:()=>({})},disabled:Boolean,divided:Boolean,icon:String},setup(t){const{elDropdown:l}=hr(),a=getCurrentInstance();return {handleClick:function(e){var n,o;t.disabled||(l.hideOnClick.value&&(null===(n=l.handleClick)||void 0===n||n.call(l)),null===(o=l.commandHandler)||void 0===o||o.call(l,t.command,a,e));}}}});br.render=function(e,t,l,a,n,o){return openBlock(),createBlock("li",{class:["el-dropdown-menu__item",{"is-disabled":e.disabled,"el-dropdown-menu__item--divided":e.divided}],"aria-disabled":e.disabled,tabindex:e.disabled?null:-1,onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t))},[e.icon?(openBlock(),createBlock("i",{key:0,class:e.icon},null,2)):createCommentVNode("v-if",!0),renderSlot(e.$slots,"default")],10,["aria-disabled","tabindex"])},br.__file="packages/dropdown/src/dropdown-item.vue",br.install=e=>{e.component(br.name,br);};var kr=defineComponent({name:"ElDropdownMenu",directives:{ClickOutside:zt},setup(){const{_elDropdownSize:t,elDropdown:l}=hr(),a=t.value;function n(){var e;null===(e=l.hide)||void 0===e||e.call(l);}return onMounted((()=>{const t=getCurrentInstance();vr(t,l.triggerElm.value,l.instance);})),{size:a,show:function(){var e;["click","contextmenu"].includes(l.trigger.value)||null===(e=l.show)||void 0===e||e.call(l);},hide:function(){["click","contextmenu"].includes(l.trigger.value)||n();},innerHide:n,triggerElm:l.triggerElm}}});kr.render=function(e,t,l,a,n,o){const i=resolveDirective("clickOutside");return withDirectives((openBlock(),createBlock("ul",{class:[[e.size&&"el-dropdown-menu--"+e.size],"el-dropdown-menu"],onMouseenter:t[1]||(t[1]=withModifiers(((...t)=>e.show&&e.show(...t)),["stop"])),onMouseleave:t[2]||(t[2]=withModifiers(((...t)=>e.hide&&e.hide(...t)),["stop"]))},[renderSlot(e.$slots,"default")],34)),[[i,e.innerHide,e.triggerElm]])},kr.__file="packages/dropdown/src/dropdown-menu.vue",kr.install=e=>{e.component(kr.name,kr);};let xr=0;var wr=defineComponent({name:"ImgEmpty",setup:()=>({id:++xr})});const Sr={viewBox:"0 0 79 86",version:"1.1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"},_r=createVNode("stop",{"stop-color":"#FCFCFD",offset:"0%"},null,-1),Er=createVNode("stop",{"stop-color":"#EEEFF3",offset:"100%"},null,-1),Mr=createVNode("stop",{"stop-color":"#FCFCFD",offset:"0%"},null,-1),Tr=createVNode("stop",{"stop-color":"#E9EBEF",offset:"100%"},null,-1),Nr={id:"Illustrations",stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd"},Dr={id:"B-type",transform:"translate(-1268.000000, -535.000000)"},Or={id:"Group-2",transform:"translate(1268.000000, 535.000000)"},Pr=createVNode("path",{id:"Oval-Copy-2",d:"M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z",fill:"#F7F8FC"},null,-1),Vr=createVNode("polygon",{id:"Rectangle-Copy-14",fill:"#E5E7E9",transform:"translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) ",points:"13 58 53 58 42 45 2 45"},null,-1),Ir={id:"Group-Copy",transform:"translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)"},Br=createVNode("polygon",{id:"Rectangle-Copy-10",fill:"#E5E7E9",transform:"translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) ",points:"2.84078316e-14 3 18 3 23 7 5 7"},null,-1),Ar=createVNode("polygon",{id:"Rectangle-Copy-11",fill:"#EDEEF2",points:"-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43"},null,-1),Lr=createVNode("polygon",{id:"Rectangle-Copy-13",fill:"#F8F9FB",transform:"translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) ",points:"24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12"},null,-1),zr={id:"Rectangle-Copy-17",transform:"translate(53.000000, 45.000000)"},Fr=createVNode("polygon",{id:"Rectangle-Copy-18",fill:"#F8F9FB",transform:"translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) ",points:"62 45 79 45 70 58 53 58"},null,-1);wr.render=function(e,t,l,a,n,o){return openBlock(),createBlock("svg",Sr,[createVNode("defs",null,[createVNode("linearGradient",{id:"linearGradient-1-"+e.id,x1:"38.8503086%",y1:"0%",x2:"61.1496914%",y2:"100%"},[_r,Er],8,["id"]),createVNode("linearGradient",{id:"linearGradient-2-"+e.id,x1:"0%",y1:"9.5%",x2:"100%",y2:"90.5%"},[Mr,Tr],8,["id"]),createVNode("rect",{id:"path-3-"+e.id,x:"0",y:"0",width:"17",height:"36"},null,8,["id"])]),createVNode("g",Nr,[createVNode("g",Dr,[createVNode("g",Or,[Pr,Vr,createVNode("g",Ir,[Br,Ar,createVNode("rect",{id:"Rectangle-Copy-12",fill:`url(#linearGradient-1-${e.id})`,transform:"translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) ",x:"38",y:"7",width:"17",height:"36"},null,8,["fill"]),Lr]),createVNode("rect",{id:"Rectangle-Copy-15",fill:`url(#linearGradient-2-${e.id})`,x:"13",y:"45",width:"40",height:"36"},null,8,["fill"]),createVNode("g",zr,[createVNode("mask",{id:"mask-4-"+e.id,fill:"white"},[createVNode("use",{"xlink:href":"#path-3-"+e.id},null,8,["xlink:href"])],8,["id"]),createVNode("use",{id:"Mask",fill:"#E0E3E9",transform:"translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) ","xlink:href":"#path-3-"+e.id},null,8,["xlink:href"]),createVNode("polygon",{id:"Rectangle-Copy",fill:"#D5D7DE",mask:`url(#mask-4-${e.id})`,transform:"translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) ",points:"7 0 24 0 20 18 -1.70530257e-13 16"},null,8,["mask"])]),Fr])])])])},wr.__file="packages/empty/src/img-empty.vue";var Rr=defineComponent({name:"ElEmpty",components:{[wr.name]:wr},props:{image:{type:String,default:""},imageSize:Number,description:{type:String,default:""}},setup:e=>({emptyDescription:computed((()=>e.description||ga("el.table.emptyText"))),imageStyle:computed((()=>({width:e.imageSize?e.imageSize+"px":""})))})});const $r={class:"el-empty"},Hr={class:"el-empty__description"},Wr={key:1},jr={key:0,class:"el-empty__bottom"};Rr.render=function(e,t,l,a,n,o){const i=resolveComponent("img-empty");return openBlock(),createBlock("div",$r,[createVNode("div",{class:"el-empty__image",style:e.imageStyle},[e.image?(openBlock(),createBlock("img",{key:0,src:e.image,ondragstart:"return false"},null,8,["src"])):renderSlot(e.$slots,"image",{key:1},(()=>[createVNode(i)]))],4),createVNode("div",Hr,[e.$slots.description?renderSlot(e.$slots,"description",{key:0}):(openBlock(),createBlock("p",Wr,toDisplayString(e.emptyDescription),1))]),e.$slots.default?(openBlock(),createBlock("div",jr,[renderSlot(e.$slots,"default")])):createCommentVNode("v-if",!0)])},Rr.__file="packages/empty/src/index.vue",Rr.install=e=>{e.component(Rr.name,Rr);};var Yr=defineComponent({name:"ElFooter",props:{height:{type:String,default:"60px"}}});Yr.render=function(e,t,l,a,n,o){return openBlock(),createBlock("footer",{class:"el-footer",style:{height:e.height}},[renderSlot(e.$slots,"default")],4)},Yr.__file="packages/container/src/footer.vue",Yr.install=e=>{e.component(Yr.name,Yr);};const qr=Yr;var Ur=defineComponent({name:"ElLabelWrap",props:{isAutoWidth:Boolean,updateAll:Boolean},setup(e,{slots:t}){const a=ref(null),n=inject("elForm"),s=inject("elFormItem"),u=ref(0);watch(u,((t,l)=>{e.updateAll&&(n.registerLabelWidth(t,l),s.updateComputedLabelWidth(t));}));const d=(l="update")=>{nextTick((()=>{t.default&&e.isAutoWidth&&("update"===l?u.value=(()=>{var e;if(null===(e=a.value)||void 0===e?void 0:e.firstElementChild){const e=window.getComputedStyle(a.value.firstElementChild).width;return Math.ceil(parseFloat(e))}return 0})():"remove"===l&&n.deregisterLabelWidth(u.value));}));},c=()=>d("update");return onMounted((()=>{dt(a.value.firstElementChild,c),c();})),onUpdated(c),onBeforeUnmount((()=>{d("remove"),ct(a.value.firstElementChild,c);})),function(){var l,o;if(!t)return null;if(e.isAutoWidth){const e=n.autoLabelWidth,o={};if(e&&"auto"!==e){const t=parseInt(e,10)-u.value;t&&(o.marginLeft=t+"px");}return h("div",{ref:a,class:["el-form-item__label-wrap"],style:o},null===(l=t.default)||void 0===l?void 0:l.call(t))}return h(Fragment,{ref:a},null===(o=t.default)||void 0===o?void 0:o.call(t))}}}),Gr=defineComponent({name:"ElFormItem",componentName:"ElFormItem",components:{LabelWrap:Ur},props:{label:String,labelWidth:String,prop:String,required:{type:Boolean,default:void 0},rules:[Object,Array],error:String,validateStatus:String,for:String,inlineMessage:{type:[String,Boolean],default:""},showMessage:{type:Boolean,default:!0},size:{types:String,validator:Ut}},setup(t){const s=ie(),u=qe(),d=inject("elForm",{}),c=ref(""),p=ref(""),h=ref(!1),v=ref(""),m=getCurrentInstance(),f=computed((()=>{let e=m.parent;for(;e&&"ElForm"!==e.type.name;){if("ElFormItem"===e.type.name)return !0;e=e.parent;}return !1}));let g=void 0;watch((()=>t.error),(e=>{p.value=e,c.value=e?"error":"";}),{immediate:!0}),watch((()=>t.validateStatus),(e=>{c.value=e;}));const b=computed((()=>t.for||t.prop)),y=computed((()=>{if("top"===d.labelPosition)return {};const e=t.labelWidth||d.labelWidth;return e?{width:e}:{}})),k=computed((()=>{if("top"===d.labelPosition||d.inline)return {};if(!t.label&&!t.labelWidth&&f.value)return {};const e=t.labelWidth||d.labelWidth,l={};return "auto"===e?"auto"===t.labelWidth?l.marginLeft=v.value:"auto"===d.labelWidth&&(l.marginLeft=d.autoLabelWidth):l.marginLeft=e,l})),C=computed((()=>{const e=d.model;if(!e||!t.prop)return;let l=t.prop;return -1!==l.indexOf(":")&&(l=l.replace(/:/,".")),Fe(e,l,!0).v})),E=computed((()=>{let e=D(),t=!1;return e&&e.length&&e.every((e=>!e.required||(t=!0,!1))),t})),M=computed((()=>t.size||d.size)),T=computed((()=>M.value||u.size)),N=(e,l=xe)=>{h.value=!1;const a=O(e);if((!a||0===a.length)&&void 0===t.required)return void l();c.value="validating";const n={};a&&a.length>0&&a.forEach((e=>{delete e.trigger;})),n[t.prop]=a;const o=new Schema(n),i={};i[t.prop]=C.value,o.validate(i,{firstFields:!0},((e,a)=>{var n;c.value=e?"error":"success",p.value=e?e[0].message:"",l(p.value,a),null===(n=d.emit)||void 0===n||n.call(d,"validate",t.prop,!e,p.value||null);}));},D=()=>{const e=d.rules,l=t.rules,a=void 0!==t.required?{required:!!t.required}:[],n=Fe(e,t.prop||"",!1),o=e?n.o[t.prop||""]||n.v:[];return [].concat(l||o||[]).concat(a)},O=e=>D().filter((t=>!t.trigger||""===e||(Array.isArray(t.trigger)?t.trigger.indexOf(e)>-1:t.trigger===e))).map((e=>Object.assign({},e))),P=()=>{N("blur");},V=()=>{h.value?h.value=!1:N("change");},I=()=>{(D().length||void 0!==t.required)&&(s.on("el.form.blur",P),s.on("el.form.change",V));},B=reactive(Object.assign(Object.assign({},toRefs(t)),{size:T,validateState:c,removeValidateEvents:()=>{s.off("el.form.blur",P),s.off("el.form.change",V);},addValidateEvents:I,resetField:()=>{c.value="",p.value="";let e=d.model,l=C.value,a=t.prop;-1!==a.indexOf(":")&&(a=a.replace(/:/,"."));let n=Fe(e,a,!0);h.value=!0,Array.isArray(l)?n.o[n.k]=[].concat(g):n.o[n.k]=g,nextTick((()=>{h.value=!1;}));},clearValidate:()=>{c.value="",p.value="",h.value=!1;},validate:N,formItemMitt:s,updateComputedLabelWidth:e=>{v.value=e?e+"px":"";}}));onMounted((()=>{var e;if(t.prop){null===(e=d.formMitt)||void 0===e||e.emit(Gt,B);let t=C.value;g=Array.isArray(t)?[...t]:t,I();}})),onBeforeUnmount((()=>{var e;null===(e=d.formMitt)||void 0===e||e.emit(Xt,B);})),provide("elFormItem",B);return {formItemClass:computed((()=>[{"el-form-item--feedback":d.statusIcon,"is-error":"error"===c.value,"is-validating":"validating"===c.value,"is-success":"success"===c.value,"is-required":E.value||t.required,"is-no-asterisk":d.hideRequiredAsterisk},T.value?"el-form-item--"+T.value:""])),shouldShowError:computed((()=>"error"===c.value&&t.showMessage&&d.showMessage)),elForm:d,labelStyle:y,contentStyle:k,validateMessage:p,labelFor:b}}});Gr.render=function(e,t,l,a,n,o){const i=resolveComponent("LabelWrap");return openBlock(),createBlock("div",{class:["el-form-item",e.formItemClass]},[createVNode(i,{"is-auto-width":"auto"===e.labelStyle.width,"update-all":"auto"===e.elForm.labelWidth},{default:withCtx((()=>[e.label||e.$slots.label?(openBlock(),createBlock("label",{key:0,for:e.labelFor,class:"el-form-item__label",style:e.labelStyle},[renderSlot(e.$slots,"label",{},(()=>[createTextVNode(toDisplayString(e.label+e.elForm.labelSuffix),1)]))],12,["for"])):createCommentVNode("v-if",!0)])),_:1},8,["is-auto-width","update-all"]),createVNode("div",{class:"el-form-item__content",style:e.contentStyle},[renderSlot(e.$slots,"default"),createVNode(Transition,{name:"el-zoom-in-top"},{default:withCtx((()=>[e.shouldShowError?renderSlot(e.$slots,"error",{key:0,error:e.validateMessage},(()=>[createVNode("div",{class:["el-form-item__error",{"el-form-item__error--inline":"boolean"==typeof e.inlineMessage?e.inlineMessage:e.elForm.inlineMessage||!1}]},toDisplayString(e.validateMessage),3)])):createCommentVNode("v-if",!0)])),_:1})],4)],2)},Gr.__file="packages/form/src/form-item.vue",Gr.install=e=>{e.component(Gr.name,Gr);};const Xr=Gr;var Qr=defineComponent({name:"ElHeader",props:{height:{type:String,default:"60px"}}});Qr.render=function(e,t,l,a,n,o){return openBlock(),createBlock("header",{class:"el-header",style:{height:e.height}},[renderSlot(e.$slots,"default")],4)},Qr.__file="packages/container/src/header.vue",Qr.install=e=>{e.component(Qr.name,Qr);};const Zr=Qr;var Jr=defineComponent({name:"ElIcon",props:{name:{type:String,default:""}}});Jr.render=function(e,t,l,a,n,o){return openBlock(),createBlock("i",{class:"el-icon-"+e.name},null,2)},Jr.__file="packages/icon/src/index.vue",Jr.install=e=>{e.component(Jr.name,Jr);};const es=Jr,ts={CONTAIN:{name:"contain",icon:"el-icon-full-screen"},ORIGINAL:{name:"original",icon:"el-icon-c-scale-to-original"}},ls=!Ce&&window.navigator.userAgent.match(/firefox/i)?"DOMMouseScroll":"mousewheel";var as=defineComponent({name:"ElImageViewer",props:{urlList:{type:Array,default:[]},zIndex:{type:Number,default:2e3},initialIndex:{type:Number,default:0},infinite:{type:Boolean,default:!0},hideOnClickModal:{type:Boolean,default:!1}},emits:["close","switch"],setup(e,{emit:t}){let a=null,r=null,s=null;const u=ref(!0),d=ref(e.initialIndex),c=ref(null),p=ref(null),h=ref(ts.CONTAIN);let v=ref({scale:1,deg:0,offsetX:0,offsetY:0,enableTransition:!1});const m=computed((()=>{const{urlList:t}=e;return t.length<=1})),f=computed((()=>0===d.value)),g=computed((()=>0===d.value)),b=computed((()=>e.urlList[d.value])),y=computed((()=>{const{scale:e,deg:t,offsetX:l,offsetY:a,enableTransition:n}=v.value,o={transform:`scale(${e}) rotate(${t}deg)`,transition:n?"transform .3s":"",marginLeft:l+"px",marginTop:a+"px"};return h.value.name===ts.CONTAIN.name&&(o.maxWidth=o.maxHeight="100%"),o}));function k(){et(document,"keydown",a),et(document,ls,r),a=null,r=null,t("close");}function C(){v.value={scale:1,deg:0,offsetX:0,offsetY:0,enableTransition:!1};}function w(){if(u.value)return;const e=Object.keys(ts),t=Object.values(ts),l=h.value.name,a=(t.findIndex((e=>e.name===l))+1)%e.length;h.value=ts[e[a]],C();}function S(){if(f.value&&!e.infinite)return;const t=e.urlList.length;d.value=(d.value-1+t)%t;}function _(){if(g.value&&!e.infinite)return;const t=e.urlList.length;d.value=(d.value+1)%t;}function E(e,t={}){if(u.value)return;const{zoomRate:l,rotateDeg:a,enableTransition:n}=Object.assign({zoomRate:.2,rotateDeg:90,enableTransition:!0},t);switch(e){case"zoomOut":v.value.scale>.2&&(v.value.scale=parseFloat((v.value.scale-l).toFixed(3)));break;case"zoomIn":v.value.scale=parseFloat((v.value.scale+l).toFixed(3));break;case"clocelise":v.value.deg+=a;break;case"anticlocelise":v.value.deg-=a;}v.value.enableTransition=n;}return watch(b,(()=>{nextTick((()=>{p.value.complete||(u.value=!0);}));})),watch(d,(e=>{C(),t("switch",e);})),onMounted((()=>{var e,t;a=je((e=>{switch(e.code){case Tt.esc:k();break;case Tt.space:w();break;case Tt.left:S();break;case Tt.up:E("zoomIn");break;case Tt.right:_();break;case Tt.down:E("zoomOut");}})),r=je((e=>{E((e.wheelDelta?e.wheelDelta:-e.detail)>0?"zoomIn":"zoomOut",{zoomRate:.015,enableTransition:!1});})),Je(document,"keydown",a),Je(document,ls,r),null===(t=null===(e=c.value)||void 0===e?void 0:e.focus)||void 0===t||t.call(e);})),{index:d,wrapper:c,img:p,isSingle:m,isFirst:f,isLast:g,currentImg:b,imgStyle:y,mode:h,handleActions:E,prev:S,next:_,hide:k,toggleMode:w,handleImgLoad:function(){u.value=!1;},handleImgError:function(e){u.value=!1,e.target.alt=ga("el.image.error");},handleMouseDown:function(e){if(u.value||0!==e.button)return;const{offsetX:t,offsetY:l}=v.value,a=e.pageX,n=e.pageY;s=je((e=>{v.value=Object.assign(Object.assign({},v.value),{offsetX:t+e.pageX-a,offsetY:l+e.pageY-n});})),Je(document,"mousemove",s),Je(document,"mouseup",(()=>{et(document,"mousemove",s);})),e.preventDefault();}}}});const ns=createVNode("i",{class:"el-icon-close"},null,-1),os=createVNode("i",{class:"el-icon-arrow-left"},null,-1),is=createVNode("i",{class:"el-icon-arrow-right"},null,-1),rs={class:"el-image-viewer__btn el-image-viewer__actions"},ss={class:"el-image-viewer__actions__inner"},us=createVNode("i",{class:"el-image-viewer__actions__divider"},null,-1),ds=createVNode("i",{class:"el-image-viewer__actions__divider"},null,-1),cs={class:"el-image-viewer__canvas"};as.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,{name:"viewer-fade"},{default:withCtx((()=>[createVNode("div",{ref:"wrapper",tabindex:-1,class:"el-image-viewer__wrapper",style:{zIndex:e.zIndex}},[createVNode("div",{class:"el-image-viewer__mask",onClick:t[1]||(t[1]=withModifiers((t=>e.hideOnClickModal&&e.hide()),["self"]))}),createCommentVNode(" CLOSE "),createVNode("span",{class:"el-image-viewer__btn el-image-viewer__close",onClick:t[2]||(t[2]=(...t)=>e.hide&&e.hide(...t))},[ns]),createCommentVNode(" ARROW "),e.isSingle?createCommentVNode("v-if",!0):(openBlock(),createBlock(Fragment,{key:0},[createVNode("span",{class:["el-image-viewer__btn el-image-viewer__prev",{"is-disabled":!e.infinite&&e.isFirst}],onClick:t[3]||(t[3]=(...t)=>e.prev&&e.prev(...t))},[os],2),createVNode("span",{class:["el-image-viewer__btn el-image-viewer__next",{"is-disabled":!e.infinite&&e.isLast}],onClick:t[4]||(t[4]=(...t)=>e.next&&e.next(...t))},[is],2)],64)),createCommentVNode(" ACTIONS "),createVNode("div",rs,[createVNode("div",ss,[createVNode("i",{class:"el-icon-zoom-out",onClick:t[5]||(t[5]=t=>e.handleActions("zoomOut"))}),createVNode("i",{class:"el-icon-zoom-in",onClick:t[6]||(t[6]=t=>e.handleActions("zoomIn"))}),us,createVNode("i",{class:e.mode.icon,onClick:t[7]||(t[7]=(...t)=>e.toggleMode&&e.toggleMode(...t))},null,2),ds,createVNode("i",{class:"el-icon-refresh-left",onClick:t[8]||(t[8]=t=>e.handleActions("anticlocelise"))}),createVNode("i",{class:"el-icon-refresh-right",onClick:t[9]||(t[9]=t=>e.handleActions("clocelise"))})])]),createCommentVNode(" CANVAS "),createVNode("div",cs,[(openBlock(!0),createBlock(Fragment,null,renderList(e.urlList,((l,a)=>withDirectives((openBlock(),createBlock("img",{ref:"img",key:l,src:e.currentImg,style:e.imgStyle,class:"el-image-viewer__img",onLoad:t[10]||(t[10]=(...t)=>e.handleImgLoad&&e.handleImgLoad(...t)),onError:t[11]||(t[11]=(...t)=>e.handleImgError&&e.handleImgError(...t)),onMousedown:t[12]||(t[12]=(...t)=>e.handleMouseDown&&e.handleMouseDown(...t))},null,44,["src"])),[[vShow,a===e.index]]))),128))])],4)])),_:1})},as.__file="packages/image-viewer/src/index.vue",as.install=e=>{e.component(Image.name,Image);};const ps=as,hs=()=>void 0!==document.documentElement.style.objectFit,vs="none",ms="contain",fs="cover",gs="fill",bs="scale-down";let ys="";var ks=defineComponent({name:"ElImage",components:{ImageViewer:ps},inheritAttrs:!1,props:{hideOnClickModal:{type:Boolean,default:!1},src:{type:String,default:""},fit:{type:String,default:""},lazy:{type:Boolean,default:!1},scrollContainer:{type:[String,Object],default:null},previewSrcList:{type:Array,default:()=>[]},zIndex:{type:Number,default:2e3}},emits:["error"],setup(e,{emit:t}){const a=wt(),s=ref(!1),u=ref(!0),d=ref(0),c=ref(0),p=ref(!1),h=ref(null);let v=null,m=null;const f=computed((()=>{const{fit:t}=e;return !Ce&&t?hs()?{"object-fit":t}:function(e){const t=d.value,l=c.value;if(!h.value)return {};const{clientWidth:a,clientHeight:n}=h.value;if(!(t&&l&&a&&n))return {};const o=t/l,i=a/n;if(e===bs){e=t<a&&l<n?vs:ms;}switch(e){case vs:return {width:"auto",height:"auto"};case ms:return o<i?{width:"auto"}:{height:"auto"};case fs:return o<i?{height:"auto"}:{width:"auto"};default:return {}}}(t):{}})),g=computed((()=>{const{fit:t}=e;return !Ce&&!hs()&&t!==gs})),b=computed((()=>{const{previewSrcList:t}=e;return Array.isArray(t)&&t.length>0})),y=computed((()=>{const{src:t,previewSrcList:l}=e;let a=0;const n=l.indexOf(t);return n>=0&&(a=n),a}));const k=()=>{if(Ce)return;const t=a.value;u.value=!0,s.value=!1;const l=new Image;l.onload=e=>function(e,t){d.value=t.width,c.value=t.height,u.value=!1,s.value=!1;}(0,l),l.onerror=C,Object.keys(t).forEach((e=>{const a=t[e];l.setAttribute(e,a);})),l.src=e.src;};function C(e){u.value=!1,s.value=!0,t("error",e);}function w(){((e,t)=>{if(Ce||!e||!t)return !1;const l=e.getBoundingClientRect();let a;return a=[window,document,document.documentElement,null,void 0].includes(t)?{top:0,right:window.innerWidth,bottom:window.innerHeight,left:0}:t.getBoundingClientRect(),l.top<a.bottom&&l.bottom>a.top&&l.right>a.left&&l.left<a.right})(h.value,v)&&(k(),_());}function S(){if(Ce)return;const{scrollContainer:t}=e;var l;v=(l=t)&&1===l.nodeType?t:Ee(t)&&""!==t?document.querySelector(t):it(h.value),v&&(m=throttle_1(w,200),Je(v,"scroll",m),setTimeout((()=>w()),100));}function _(){!Ce&&v&&m&&(et(v,"scroll",m),v=null,m=null);}return watch((()=>e.src),(()=>{k();})),onMounted((()=>{e.lazy?nextTick(S):k();})),onBeforeUnmount((()=>{e.lazy&&_();})),{attrs:a,loading:u,hasLoadError:s,showViewer:p,imgWidth:d,imgHeight:c,imageStyle:f,alignCenter:g,preview:b,imageIndex:y,clickHandler:function(){b.value&&(ys=document.body.style.overflow,document.body.style.overflow="hidden",p.value=!0);},closeViewer:function(){document.body.style.overflow=ys,p.value=!1;},container:h,handleError:C,t:ga}}});const Cs=createVNode("div",{class:"el-image__placeholder"},null,-1),xs={class:"el-image__error"};ks.render=function(e,t,l,a,n,o){const i=resolveComponent("image-viewer");return openBlock(),createBlock("div",{ref:"container",class:["el-image",e.$attrs.class],style:e.$attrs.style},[e.loading?renderSlot(e.$slots,"placeholder",{key:0},(()=>[Cs])):e.hasLoadError?renderSlot(e.$slots,"error",{key:1},(()=>[createVNode("div",xs,toDisplayString(e.t("el.image.error")),1)])):(openBlock(),createBlock("img",mergeProps({key:2,class:"el-image__inner"},e.attrs,{src:e.src,style:e.imageStyle,class:{"el-image__inner--center":e.alignCenter,"el-image__preview":e.preview},onClick:t[1]||(t[1]=(...t)=>e.clickHandler&&e.clickHandler(...t))}),null,16,["src"])),e.preview?(openBlock(),createBlock(Fragment,{key:3},[e.showViewer?(openBlock(),createBlock(i,{key:0,"z-index":e.zIndex,"initial-index":e.imageIndex,"url-list":e.previewSrcList,"hide-on-click-modal":e.hideOnClickModal,onClose:e.closeViewer},null,8,["z-index","initial-index","url-list","hide-on-click-modal","onClose"])):createCommentVNode("v-if",!0)],64)):createCommentVNode("v-if",!0)],6)},ks.__file="packages/image/src/index.vue",ks.install=e=>{e.component(ks.name,ks);};/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function Ss(e,t,l,a){return new(l||(l=Promise))((function(n,o){function i(e){try{s(a.next(e));}catch(e){o(e);}}function r(e){try{s(a.throw(e));}catch(e){o(e);}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t);}))).then(i,r);}s((a=a.apply(e,t||[])).next());}))}var Ps=defineComponent({name:"ElInputNumber",components:{ElInput:pl},directives:{RepeatClick:Ft},props:{step:{type:Number,default:1},stepStrictly:{type:Boolean,default:!1},max:{type:Number,default:1/0},min:{type:Number,default:-1/0},modelValue:{required:!0,validator:e=>"Number"===De(e)||void 0===e},disabled:{type:Boolean,default:!1},size:{type:String,validator:Ut},controls:{type:Boolean,default:!0},controlsPosition:{type:String,default:""},name:String,label:String,placeholder:String,precision:{type:Number,validator:e=>e>=0&&e===parseInt(e+"",10)}},emits:["update:modelValue","change","input","blur","focus"],setup(e,{emit:t}){const r=qe(),s=inject("elForm",{}),u=inject("elFormItem",{}),d=ref(null),c=reactive({currentValue:e.modelValue,userInput:null}),p=computed((()=>x(e.modelValue)<e.min)),h=computed((()=>C(e.modelValue)>e.max)),v=computed((()=>{const t=k(e.step);return void 0!==e.precision?(t>e.precision&&console.warn("[Element Warn][InputNumber]precision should not be less than the decimal places of step"),e.precision):Math.max(k(e.modelValue),t)})),m=computed((()=>e.controls&&"right"===e.controlsPosition)),f=computed((()=>e.size||u.size||r.size)),g=computed((()=>e.disabled||s.disabled)),b=computed((()=>{if(null!==c.userInput)return c.userInput;let t=c.currentValue;return "number"==typeof t&&void 0!==e.precision&&(t=t.toFixed(e.precision)),t})),y=(e,t)=>(void 0===t&&(t=v.value),parseFloat(Math.round(e*Math.pow(10,t))/Math.pow(10,t)+"")),k=e=>{if(void 0===e)return 0;const t=e.toString(),l=t.indexOf(".");let a=0;return -1!==l&&(a=t.length-l-1),a},C=t=>{if("number"!=typeof t&&void 0!==t)return c.currentValue;const l=Math.pow(10,v.value);return y((l*t+l*e.step)/l)},x=t=>{if("number"!=typeof t&&void 0!==t)return c.currentValue;const l=Math.pow(10,v.value);return y((l*t-l*e.step)/l)},w=l=>{const a=c.currentValue;"number"==typeof l&&void 0!==e.precision&&(l=y(l,e.precision)),void 0!==l&&l>=e.max&&(l=e.max),void 0!==l&&l<=e.min&&(l=e.min),a!==l&&(c.userInput=null,t("update:modelValue",l),t("input",l),t("change",l,a),c.currentValue=l);};return watch((()=>e.modelValue),(l=>{let a=void 0===l?l:Number(l);if(void 0!==a){if(isNaN(a))return;if(e.stepStrictly){const t=k(e.step),l=Math.pow(10,t);a=Math.round(a/e.step)*l*e.step/l;}void 0!==e.precision&&(a=y(a,e.precision));}void 0!==a&&a>=e.max&&(a=e.max,t("update:modelValue",a)),void 0!==a&&a<=e.min&&(a=e.min,t("update:modelValue",a)),c.currentValue=a,c.userInput=null;}),{immediate:!0}),onMounted((()=>{let l=d.value.input;l.setAttribute("role","spinbutton"),l.setAttribute("aria-valuemax",e.max),l.setAttribute("aria-valuemin",e.min),l.setAttribute("aria-valuenow",c.currentValue),l.setAttribute("aria-disabled",g.value),"Number"!==De(e.modelValue)&&void 0!==e.modelValue&&t("update:modelValue",void 0);})),onUpdated((()=>{d.value.input.setAttribute("aria-valuenow",c.currentValue);})),{input:d,displayValue:b,handleInput:e=>c.userInput=e,handleInputChange:e=>{const t=""===e?void 0:Number(e);isNaN(t)&&""!==e||w(t),c.userInput=null;},controlsAtRight:m,decrease:()=>{if(g.value||p.value)return;const t=e.modelValue||0,l=x(t);w(l);},increase:()=>{if(g.value||h.value)return;const t=e.modelValue||0,l=C(t);w(l);},inputNumberSize:f,inputNumberDisabled:g,maxDisabled:h,minDisabled:p}}});Ps.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveDirective("repeat-click");return openBlock(),createBlock("div",{class:["el-input-number",e.inputNumberSize?"el-input-number--"+e.inputNumberSize:"",{"is-disabled":e.inputNumberDisabled},{"is-without-controls":!e.controls},{"is-controls-right":e.controlsAtRight}],onDragstart:t[5]||(t[5]=withModifiers((()=>{}),["prevent"]))},[e.controls?withDirectives((openBlock(),createBlock("span",{key:0,class:["el-input-number__decrease",{"is-disabled":e.minDisabled}],role:"button",onKeydown:t[1]||(t[1]=withKeys(((...t)=>e.decrease&&e.decrease(...t)),["enter"]))},[createVNode("i",{class:"el-icon-"+(e.controlsAtRight?"arrow-down":"minus")},null,2)],34)),[[r,e.decrease]]):createCommentVNode("v-if",!0),e.controls?withDirectives((openBlock(),createBlock("span",{key:1,class:["el-input-number__increase",{"is-disabled":e.maxDisabled}],role:"button",onKeydown:t[2]||(t[2]=withKeys(((...t)=>e.increase&&e.increase(...t)),["enter"]))},[createVNode("i",{class:"el-icon-"+(e.controlsAtRight?"arrow-up":"plus")},null,2)],34)),[[r,e.increase]]):createCommentVNode("v-if",!0),createVNode(i,{ref:"input","model-value":e.displayValue,placeholder:e.placeholder,disabled:e.inputNumberDisabled,size:e.inputNumberSize,max:e.max,min:e.min,name:e.name,label:e.label,onKeydown:[withKeys(withModifiers(e.increase,["prevent"]),["up"]),withKeys(withModifiers(e.decrease,["prevent"]),["down"])],onBlur:t[3]||(t[3]=t=>e.$emit("blur",t)),onFocus:t[4]||(t[4]=t=>e.$emit("focus",t)),onInput:e.handleInput,onChange:e.handleInputChange},null,8,["model-value","placeholder","disabled","size","max","min","name","label","onKeydown","onInput","onChange"])],34)},Ps.__file="packages/input-number/src/index.vue",Ps.install=e=>{e.component(Ps.name,Ps);};const Vs=Ps;var Is=defineComponent({name:"ElLink",props:{type:{type:String,default:"default",validator:e=>["default","primary","success","warning","info","danger"].includes(e)},underline:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},href:{type:String,default:""},icon:{type:String,default:""}},emits:["click"],setup:(e,{emit:t})=>({handleClick:function(l){e.disabled||t("click",l);}})});const Bs={key:1,class:"el-link--inner"};Is.render=function(e,t,l,a,n,o){return openBlock(),createBlock("a",{class:["el-link",e.type?"el-link--"+e.type:"",e.disabled&&"is-disabled",e.underline&&!e.disabled&&"is-underline"],href:e.disabled?null:e.href,onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t))},[e.icon?(openBlock(),createBlock("i",{key:0,class:e.icon},null,2)):createCommentVNode("v-if",!0),e.$slots.default?(openBlock(),createBlock("span",Bs,[renderSlot(e.$slots,"default")])):createCommentVNode("v-if",!0),e.$slots.icon?renderSlot(e.$slots,"icon",{key:2}):createCommentVNode("v-if",!0)],10,["href"])},Is.__file="packages/link/src/index.vue",Is.install=e=>{e.component(Is.name,Is);};const Ls={parent:null,background:"",spinner:!1,text:null,fullscreen:!0,body:!1,lock:!1,customClass:""},zs={fullscreenLoading:null},Fs=(e,t,l)=>{"absolute"!==l.originalPosition.value&&"fixed"!==l.originalPosition.value?lt(t,"el-loading-parent--relative"):at(t,"el-loading-parent--relative"),e.fullscreen&&e.lock?lt(t,"el-loading-parent--hidden"):at(t,"el-loading-parent--hidden");},Rs=function(e={}){if(Ce)return;"string"==typeof(e=Object.assign(Object.assign({},Ls),e)).target&&(e.target=document.querySelector(e.target)),e.target=e.target||document.body,e.target!==document.body?e.fullscreen=!1:e.body=!0,e.fullscreen&&zs.fullscreenLoading&&zs.fullscreenLoading.close();const t=e.body?document.body:e.target;e.parent=t;const n=function({options:e,globalLoadingOption:t}){let n=null,o=null;const i=ref(!1),r=reactive(Object.assign(Object.assign({},e),{originalPosition:"",originalOverflow:"",visible:!1}));function s(){const e=r.parent;if(!e.vLoadingAddClassList){let t=e.getAttribute("loading-number");t=Number.parseInt(t)-1,t?e.setAttribute("loading-number",t.toString()):(at(e,"el-loading-parent--relative"),e.removeAttribute("loading-number")),at(e,"el-loading-parent--hidden");}n.el&&n.el.parentNode&&n.el.parentNode.removeChild(n.el);}const u=Object.assign(Object.assign({},toRefs(r)),{setText:function(e){r.text=e;},close:function(){r.parent.vLoadingAddClassList=null,r.fullscreen&&(t.fullscreenLoading=void 0),i.value=!0,clearTimeout(o),o=window.setTimeout((()=>{i.value&&(i.value=!1,s());}),400),r.visible=!1;},handleAfterLeave:function(){i.value&&(i.value=!1,s());}}),c={name:"ElLoading",setup:()=>u,render(){const e=h("svg",{class:"circular",viewBox:"25 25 50 50"},[h("circle",{class:"path",cx:"50",cy:"50",r:"20",fill:"none"})]),t=h("i",{class:this.spinner}),l=h("p",{class:"el-loading-text"},[this.text]);return h(Transition,{name:"el-loading-fade",onAfterLeave:this.handleAfterLeave},{default:withCtx((()=>[withDirectives(createVNode("div",{style:{backgroundColor:this.background||""},class:["el-loading-mask",this.customClass,this.fullscreen?"is-fullscreen":""]},[h("div",{class:"el-loading-spinner"},[this.spinner?t:e,this.text?l:null])]),[[vShow,this.visible]])]))})}};return n=createVNode(c),render(n,document.createElement("div")),Object.assign(Object.assign({},u),{vm:n,get $el(){return n.el}})}({options:e,globalLoadingOption:zs});((e,t,l)=>{Ss(void 0,void 0,void 0,(function*(){const a={};e.fullscreen?(l.originalPosition.value=nt(document.body,"position"),l.originalOverflow.value=nt(document.body,"overflow"),a.zIndex=String(Ol.nextZIndex())):e.body?(l.originalPosition.value=nt(document.body,"position"),yield nextTick(),["top","left"].forEach((t=>{const l="top"===t?"scrollTop":"scrollLeft";a[t]=e.target.getBoundingClientRect()[t]+document.body[l]+document.documentElement[l]-parseInt(nt(document.body,"margin-"+t),10)+"px";})),["height","width"].forEach((t=>{a[t]=e.target.getBoundingClientRect()[t]+"px";}))):l.originalPosition.value=nt(t,"position"),Object.keys(a).forEach((e=>{l.$el.style[e]=a[e];}));}));})(e,t,n),Fs(e,t,n),e.parent.vLoadingAddClassList=()=>{Fs(e,t,n);};let o=t.getAttribute("loading-number");return o=o?Number.parseInt(o)+1:1,t.setAttribute("loading-number",o.toString()),t.appendChild(n.$el),nextTick().then((()=>{n.visible.value=!e.hasOwnProperty("visible")||e.visible;})),e.fullscreen&&(zs.fullscreenLoading=n),n},$s=(e,t)=>{const l=e.getAttribute("element-loading-text"),a=e.getAttribute("element-loading-spinner"),n=e.getAttribute("element-loading-background"),o=e.getAttribute("element-loading-custom-class"),i=t.instance;e.instance=Rs({text:i&&i[l]||l,spinner:i&&i[a]||a,background:i&&i[n]||n,customClass:i&&i[o]||o,fullscreen:!!t.modifiers.fullscreen,target:t.modifiers.fullscreen?null:e,body:!!t.modifiers.body,visible:!0,lock:!!t.modifiers.lock});},Hs={mounted(e,t){t.value&&$s(e,t);},updated(e,t){const l=e.instance;t.oldValue!==t.value&&(t.value?$s(e,t):l.close());},unmounted(e){var t;null===(t=null==e?void 0:e.instance)||void 0===t||t.close();}};var Ws={install(e){e.directive("loading",Hs),e.config.globalProperties.$loading=Rs;},directive:Hs,service:Rs},js=defineComponent({name:"ElMain"});const Ks={class:"el-main"};js.render=function(e,t,l,a,n,o){return openBlock(),createBlock("main",Ks,[renderSlot(e.$slots,"default")])},js.__file="packages/container/src/main.vue",js.install=e=>{e.component(js.name,js);};const Ys=js;class qs{constructor(e,t){this.parent=e,this.domNode=t,this.subIndex=0,this.subIndex=0,this.init();}init(){this.subMenuItems=this.domNode.querySelectorAll("li"),this.addListeners();}gotoSubIndex(e){e===this.subMenuItems.length?e=0:e<0&&(e=this.subMenuItems.length-1),this.subMenuItems[e].focus(),this.subIndex=e;}addListeners(){const e=this.parent.domNode;Array.prototype.forEach.call(this.subMenuItems,(t=>{t.addEventListener("keydown",(t=>{let l=!1;switch(t.code){case Tt.down:this.gotoSubIndex(this.subIndex+1),l=!0;break;case Tt.up:this.gotoSubIndex(this.subIndex-1),l=!0;break;case Tt.tab:Pt(e,"mouseleave");break;case Tt.enter:case Tt.space:l=!0,t.currentTarget.click();}return l&&(t.preventDefault(),t.stopPropagation()),!1}));}));}}class Us{constructor(e){this.domNode=e,this.submenu=null,this.submenu=null,this.init();}init(){this.domNode.setAttribute("tabindex","0");const e=this.domNode.querySelector(".el-menu");e&&(this.submenu=new qs(this,e)),this.addListeners();}addListeners(){this.domNode.addEventListener("keydown",(e=>{let t=!1;switch(e.code){case Tt.down:Pt(e.currentTarget,"mouseenter"),this.submenu&&this.submenu.gotoSubIndex(0),t=!0;break;case Tt.up:Pt(e.currentTarget,"mouseenter"),this.submenu&&this.submenu.gotoSubIndex(this.submenu.subMenuItems.length-1),t=!0;break;case Tt.tab:Pt(e.currentTarget,"mouseleave");break;case Tt.enter:case Tt.space:t=!0,e.currentTarget.click();}t&&e.preventDefault();}));}}class Gs{constructor(e){this.domNode=e,this.init();}init(){const e=this.domNode.childNodes;[].filter.call(e,(e=>1===e.nodeType)).forEach((e=>{new Us(e);}));}}var Xs=defineComponent({name:"ElMenuCollapseTransition",setup:()=>({on:{beforeEnter(e){e.style.opacity=.2;},enter(e){lt(e,"el-opacity-transition"),e.style.opacity=1;},afterEnter(e){at(e,"el-opacity-transition"),e.style.opacity="";},beforeLeave(e){e.dataset||(e.dataset={}),tt(e,"el-menu--collapse")?(at(e,"el-menu--collapse"),e.dataset.oldOverflow=e.style.overflow,e.dataset.scrollWidth=e.clientWidth,lt(e,"el-menu--collapse")):(lt(e,"el-menu--collapse"),e.dataset.oldOverflow=e.style.overflow,e.dataset.scrollWidth=e.clientWidth,at(e,"el-menu--collapse")),e.style.width=e.scrollWidth+"px",e.style.overflow="hidden";},leave(e){lt(e,"horizontal-collapse-transition"),e.style.width=e.dataset.scrollWidth+"px";}}})});function Qs(e=""){const t=ref("");return e?(t.value=function(e,t=.2){let{red:l,green:a,blue:n}=function(e){let t=e.replace("#","");if(/^[0-9a-fA-F]{3}$/.test(t)){const e=t.split("");for(let t=2;t>=0;t--)e.splice(t,0,e[t]);t=e.join("");}return /^[0-9a-fA-F]{6}$/.test(t)?{red:parseInt(t.slice(0,2),16),green:parseInt(t.slice(2,4),16),blue:parseInt(t.slice(4,6),16)}:{red:255,green:255,blue:255}}(e);return t>0?(l*=1-t,a*=1-t,n*=1-t):(l+=(255-l)*t,a+=(255-a)*t,n+=(255-n)*t),`rgb(${Math.round(l)}, ${Math.round(a)}, ${Math.round(n)})`}(e),t):t}Xs.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,mergeProps({mode:"out-in"},toHandlers(e.on)),{default:withCtx((()=>[renderSlot(e.$slots,"default")])),_:3},16)},Xs.__file="packages/menu/src/menu-collapse-transition.vue";var Zs=defineComponent({name:"ElMenu",componentName:"ElMenu",components:{ElMenuCollapseTransition:Xs},props:{mode:{type:String,default:"vertical"},defaultActive:{type:String,default:""},defaultOpeneds:Array,uniqueOpened:Boolean,router:Boolean,menuTrigger:{type:String,default:"hover"},collapse:Boolean,backgroundColor:{type:String},textColor:{type:String},activeTextColor:{type:String},collapseTransition:{type:Boolean,default:!0}},emits:["close","open","select"],setup(t,a){const r=ref(t.defaultOpeneds&&!t.collapse?t.defaultOpeneds.slice(0):[]),s=getCurrentInstance(),u=ref(t.defaultActive),d=ref({}),c=ref({}),p=ref(!1),h=ie(),v=s.appContext.config.globalProperties.$router,m=Qs(t.backgroundColor),f=computed((()=>"horizontal"===t.mode||"vertical"===t.mode&&t.collapse)),g=()=>{const e=u.value,l=d.value[e];if(!l||"horizontal"===t.mode||t.collapse)return;l.indexPath.forEach((e=>{let t=c.value[e];t&&k(e,null==t?void 0:t.indexPath);}));},b=e=>{c.value[e.index]=e;},y=e=>{delete c.value[e.index];},k=(e,l)=>{r.value.includes(e)||(t.uniqueOpened&&(r.value=r.value.filter((e=>-1!==(isRef(l)?l.value:l).indexOf(e)))),r.value.push(e));},x=e=>{const t=r.value.indexOf(e);-1!==t&&r.value.splice(t,1);},w=e=>{const{index:t,indexPath:l}=e;r.value.includes(t)?(x(t),a.emit("close",t,l.value)):(k(t,l),a.emit("open",t,l.value));},_=e=>{const{index:l,indexPath:n}=e,o=null!==e.index,i=u.value;o&&(u.value=e.index),a.emit("select",l,n.value,e),("horizontal"===t.mode||t.collapse)&&(r.value=[]),t.router&&v&&o&&E(e,(e=>{if(u.value=i,e){if("NavigationDuplicated"===e.name)return;console.error(e);}}));},E=(e,t)=>{let l=e.route||e.index;try{null==v||v.push(l,(()=>null),t);}catch(e){console.error(e);}},M=e=>{const l=d.value,a=l[e]||l[u.value]||l[t.defaultActive];a?(u.value=a.index,g()):p.value?p.value=!1:u.value=null;};return watch((()=>t.defaultActive),(e=>{d[e]||(u.value=""),M(e);})),watch(d.value,(()=>{M();})),watch((()=>t.collapse),((e,l)=>{e!==l&&(p.value=!0),e&&(r.value=[]),h.emit("rootMenu:toggle-collapse",Boolean(t.collapse));})),provide("rootMenu",{props:t,openedMenus:r,items:d,submenus:c,hoverBackground:m,activeIndex:u,isMenuPopup:f,methods:{addMenuItem:e=>{d.value[e.index]=e;},removeMenuItem:e=>{delete d.value[e.index];},addSubMenu:b,removeSubMenu:y,openMenu:k,closeMenu:x},rootMenuEmit:h.emit,rootMenuOn:h.on}),provide("subMenu:"+s.uid,{addSubMenu:b,removeSubMenu:y}),onMounted((()=>{g(),h.on("menuItem:item-click",_),h.on("submenu:submenu-click",w),"horizontal"===t.mode&&new Gs(s.vnode.el);})),{hoverBackground:m,isMenuPopup:f,props:t,open:e=>{const{indexPath:t}=c.value[e.toString()];t.forEach((e=>k(e,t)));},close:e=>{x(e);}}}});Zs.render=function(e,t,l,a,n,o){const i=resolveComponent("el-menu-collapse-transition");return e.props.collapseTransition?(openBlock(),createBlock(i,{key:0},{default:withCtx((()=>[(openBlock(),createBlock("ul",{key:+e.props.collapse,role:"menubar",style:{backgroundColor:e.props.backgroundColor||""},class:{"el-menu":!0,"el-menu--horizontal":"horizontal"===e.mode,"el-menu--collapse":e.props.collapse}},[renderSlot(e.$slots,"default")],6))])),_:3})):(openBlock(),createBlock("ul",{key:+e.props.collapse,role:"menubar",style:{backgroundColor:e.props.backgroundColor||""},class:{"el-menu":!0,"el-menu--horizontal":"horizontal"===e.mode,"el-menu--collapse":e.props.collapse}},[renderSlot(e.$slots,"default")],6))},Zs.__file="packages/menu/src/menu.vue",Zs.install=e=>{e.component(Zs.name,Zs);};function eu(e,t){const l=inject("rootMenu"),a=computed((()=>{let l=e.parent;const a=[t];for(;"ElMenu"!==l.type.name;)l.props.index&&a.unshift(l.props.index),l=l.parent;return a}));return {parentMenu:computed((()=>{let t=e.parent;for(;t&&-1===["ElMenu","ElSubmenu"].indexOf(t.type.name);)t=t.parent;return t})),paddingStyle:computed((()=>{let t=e.parent;if("vertical"!==l.props.mode)return {};let a=20;if(l.props.collapse)a=20;else for(;t&&"ElMenu"!==t.type.name;)"ElSubmenu"===t.type.name&&(a+=20),t=t.parent;return {paddingLeft:a+"px"}})),indexPath:a}}var tu=defineComponent({name:"ElTooltip",components:{ElPopper:Rl},props:{effect:{type:String,default:"dark"},class:{type:String,default:""},content:{type:String,default:""},disabled:{type:Boolean,default:!1},enterable:{type:Boolean,default:!0},hideAfter:{type:Number,default:200},manual:{type:Boolean,default:!1},modelValue:{type:Boolean,validator:e=>"boolean"==typeof e,default:void 0},offset:{type:Number,default:12},openDelay:{type:Number,default:0},placement:{type:String,default:"bottom"},popperOptions:{type:Object,default:()=>null},showAfter:{type:Number,default:0},transition:{type:String,default:"el-fade-in-linear"},trigger:{type:[String,Array],default:()=>["hover"]},visibleArrow:{type:Boolean,default:!0},stopPopperMouseEvent:{type:Boolean,default:!0}},emits:[Kt],setup(e,t){e.manual&&void 0===e.modelValue&&Ae("[ElTooltip]","You need to pass a v-model to el-tooltip when `manual` is true");const a=ref(null);return {popper:a,onUpdateVisible:e=>{t.emit(Kt,e);},updatePopper:()=>a.value.update()}},render(){const{$slots:e,content:t,disabled:l,effect:a,enterable:n,hideAfter:o,manual:i,offset:r,openDelay:s,onUpdateVisible:u,placement:d,popperOptions:c,showAfter:p,transition:h$1,trigger:v,visibleArrow:m,stopPopperMouseEvent:f}=this;return h(Rl,{ref:"popper",appendToBody:!0,class:this.class,disabled:l,effect:a,enterable:n,hideAfter:o,manualMode:i,offset:r,placement:d,showAfter:s||p,showArrow:m,stopPopperMouseEvent:f,transition:h$1,trigger:v,popperOptions:c,visible:this.modelValue,"onUpdate:visible":u},{default:()=>e.content?e.content():t,trigger:()=>e.default()})}});tu.install=e=>{e.component(tu.name,tu);};var lu=defineComponent({name:"ElMenuItem",componentName:"ElMenuItem",components:{ElTooltip:tu},props:{index:{default:null,validator:e=>"string"==typeof e||null===e},route:[String,Object],disabled:Boolean},emits:["click"],setup(t,{emit:l,slots:a}){const o=getCurrentInstance(),s=inject("rootMenu"),{parentMenu:u,paddingStyle:d,indexPath:c}=eu(o,t.index),{addSubMenu:p,removeSubMenu:h}=inject("subMenu:"+u.value.uid),v=computed((()=>t.index===s.activeIndex.value)),m=computed((()=>s.hoverBackground.value)),f=computed((()=>s.props.backgroundColor||"")),g=computed((()=>s.props.activeTextColor||"")),b=computed((()=>s.props.textColor||"")),y=computed((()=>s.props.mode)),k=computed((()=>"ElMenu"!==u.value.type.name)),C=computed((()=>{const e={color:v.value?g.value:b.value,borderBottomColor:""};return "horizontal"!==y.value||k.value||(e.borderBottomColor=v.value?s.props.activeTextColor?g.value:"":"transparent"),e}));return onMounted((()=>{p({index:t.index,indexPath:c,active:v}),s.methods.addMenuItem({index:t.index,indexPath:c,active:v});})),onBeforeUnmount((()=>{h({index:t.index,indexPath:c,active:v}),s.methods.removeMenuItem({index:t.index,indexPath:c,active:v});})),{parentMenu:u,rootMenu:s,slots:a,paddingStyle:d,itemStyle:C,backgroundColor:f,active:v,handleClick:()=>{t.disabled||(s.rootMenuEmit("menuItem:item-click",{index:t.index,indexPath:c,route:t.route}),l("click",{index:t.index,indexPath:c.value}));},onMouseEnter:()=>{("horizontal"!==y.value||s.props.backgroundColor)&&(o.vnode.el.style.backgroundColor=m.value);},onMouseLeave:()=>{("horizontal"!==y.value||s.props.backgroundColor)&&(o.vnode.el.style.backgroundColor=f.value);}}}});const au={style:{position:"absolute",left:"0",top:"0",height:"100%",width:"100%",display:"inline-block","box-sizing":"border-box",padding:"0 20px"}};lu.render=function(e,t,l,a,n,o){const i=resolveComponent("el-tooltip");return openBlock(),createBlock("li",{class:["el-menu-item",{"is-active":e.active,"is-disabled":e.disabled}],role:"menuitem",tabindex:"-1",style:[e.paddingStyle,e.itemStyle,{backgroundColor:e.backgroundColor}],onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t)),onMouseenter:t[2]||(t[2]=(...t)=>e.onMouseEnter&&e.onMouseEnter(...t)),onFocus:t[3]||(t[3]=(...t)=>e.onMouseEnter&&e.onMouseEnter(...t)),onBlur:t[4]||(t[4]=(...t)=>e.onMouseLeave&&e.onMouseLeave(...t)),onMouseleave:t[5]||(t[5]=(...t)=>e.onMouseLeave&&e.onMouseLeave(...t))},["ElMenu"===e.parentMenu.type.name&&e.rootMenu.props.collapse&&e.slots.title?(openBlock(),createBlock(i,{key:0,effect:"dark",placement:"right"},{content:withCtx((()=>[renderSlot(e.$slots,"title")])),default:withCtx((()=>[createVNode("div",au,[renderSlot(e.$slots,"default")])])),_:3})):(openBlock(),createBlock(Fragment,{key:1},[renderSlot(e.$slots,"default"),renderSlot(e.$slots,"title")],64))],38)},lu.__file="packages/menu/src/menuItem.vue",lu.install=e=>{e.component(lu.name,lu);};var ou=defineComponent({name:"ElMenuItemGroup",componentName:"ElMenuItemGroup",props:{title:{type:String}},setup(t,{slots:l}){const o=reactive({paddingLeft:20}),i=getCurrentInstance(),r=computed((()=>{let e=20,t=i.parent;if(s.collapse)return 20;for(;t&&"ElMenu"!==t.type.name;)"ElSubmenu"===t.type.name&&(e+=20),t=t.parent;return e})),{props:s}=inject("rootMenu");return {data:o,levelPadding:r,props:t,slots:l}}});const iu={class:"el-menu-item-group"};ou.render=function(e,t,l,a,n,o){return openBlock(),createBlock("li",iu,[createVNode("div",{class:"el-menu-item-group__title",style:{paddingLeft:e.levelPadding+"px"}},[e.slots.title?renderSlot(e.$slots,"title",{key:1}):(openBlock(),createBlock(Fragment,{key:0},[createTextVNode(toDisplayString(e.title),1)],64))],4),createVNode("ul",null,[renderSlot(e.$slots,"default")])])},ou.__file="packages/menu/src/menuItemGroup.vue",ou.install=e=>{e.component(ou.name,ou);};const su={success:"success",info:"info",warning:"warning",error:"error"};var uu=defineComponent({name:"ElMessage",props:{customClass:{type:String,default:""},center:{type:Boolean,default:!1},dangerouslyUseHTMLString:{type:Boolean,default:!1},duration:{type:Number,default:3e3},iconClass:{type:String,default:""},id:{type:String,default:""},message:{type:[String,Object],default:""},onClose:{type:Function,required:!0},showClose:{type:Boolean,default:!1},type:{type:String,default:"info"},offset:{type:Number,default:20},zIndex:{type:Number,default:0}},emits:["destroy"],setup(e){const t=computed((()=>{const t=e.type;return t&&su[t]?"el-message__icon el-icon-"+su[t]:""})),a=computed((()=>({top:e.offset+"px",zIndex:e.zIndex}))),o=ref(!1);let s=null;function u(){e.duration>0&&(s=setTimeout((()=>{o.value&&d();}),e.duration));}function d(){o.value=!1;}function c({code:e}){e===Tt.esc?o.value&&d():u();}return onMounted((()=>{u(),o.value=!0,Je(document,"keydown",c);})),onBeforeUnmount((()=>{et(document,"keydown",c);})),{typeClass:t,customStyle:a,visible:o,close:d,clearTimer:function(){clearTimeout(s),s=null;},startTimer:u}}});const du={key:0,class:"el-message__content"};uu.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,{name:"el-message-fade",onBeforeLeave:e.onClose,onAfterLeave:t[4]||(t[4]=t=>e.$emit("destroy"))},{default:withCtx((()=>[withDirectives(createVNode("div",{id:e.id,class:["el-message",e.type&&!e.iconClass?"el-message--"+e.type:"",e.center?"is-center":"",e.showClose?"is-closable":"",e.customClass],style:e.customStyle,role:"alert",onMouseenter:t[2]||(t[2]=(...t)=>e.clearTimer&&e.clearTimer(...t)),onMouseleave:t[3]||(t[3]=(...t)=>e.startTimer&&e.startTimer(...t))},[e.type||e.iconClass?(openBlock(),createBlock("i",{key:0,class:[e.typeClass,e.iconClass]},null,2)):createCommentVNode("v-if",!0),renderSlot(e.$slots,"default",{},(()=>[e.dangerouslyUseHTMLString?(openBlock(),createBlock(Fragment,{key:1},[createCommentVNode(" Caution here, message could've been compromised, never use user's input as message "),createCommentVNode("  eslint-disable-next-line "),createVNode("p",{class:"el-message__content",innerHTML:e.message},null,8,["innerHTML"])],64)):(openBlock(),createBlock("p",du,toDisplayString(e.message),1))])),e.showClose?(openBlock(),createBlock("div",{key:1,class:"el-message__closeBtn el-icon-close",onClick:t[1]||(t[1]=withModifiers(((...t)=>e.close&&e.close(...t)),["stop"]))})):createCommentVNode("v-if",!0)],46,["id"]),[[vShow,e.visible]])])),_:3},8,["onBeforeLeave"])},uu.__file="packages/message/src/index.vue";const cu=[];let pu=1;const hu=function(e={}){if(Ce)return;"string"==typeof e&&(e={message:e});let t=e,l=e.offset||20;cu.forEach((({vm:e})=>{l+=(e.el.offsetHeight||0)+16;})),l+=16;const a="message_"+pu++,n=t.onClose;t=Object.assign(Object.assign({},t),{onClose:()=>{!function(e,t){const l=cu.findIndex((({vm:t})=>{const{id:l}=t.component.props;return e===l}));if(-1===l)return;const{vm:a}=cu[l];if(!a)return;null==t||t(a);const n=a.el.offsetHeight;cu.splice(l,1);const o=cu.length;if(o<1)return;for(let e=l;e<o;e++){const t=parseInt(cu[e].vm.el.style.top,10)-n-16;cu[e].vm.component.props.offset=t;}}(a,n);},offset:l,id:a,zIndex:Ol.nextZIndex()});const o=document.createElement("div");o.className="container_"+a;const i=t.message,r=createVNode(uu,t,isVNode(t.message)?{default:()=>i}:null);return r.props.onDestroy=()=>{render(null,o);},render(r,o),cu.push({vm:r}),document.body.appendChild(o.firstElementChild),{close:()=>r.component.proxy.visible=!1}};["success","warning","info","error"].forEach((e=>{hu[e]=t=>("string"==typeof t?t={message:t,type:e}:t.type=e,hu(t));})),hu.closeAll=function(){for(let e=cu.length-1;e>=0;e--){cu[e].vm.component.ctx.close();}};const vu=hu;vu.install=e=>{e.config.globalProperties.$message=vu;};const mu={success:"success",info:"info",warning:"warning",error:"error"};var fu=defineComponent({name:"ElMessageBox",components:{ElButton:da,ElInput:pl,ElOverlay:Qi},directives:{TrapFocus:Ht},props:{beforeClose:{type:Function,default:void 0},callback:Function,cancelButtonText:{type:String},cancelButtonClass:String,center:Boolean,closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},closeOnHashChange:{type:Boolean,default:!0},confirmButtonText:{type:String},confirmButtonClass:String,container:{type:String,default:"body"},customClass:String,dangerouslyUseHTMLString:Boolean,distinguishCancelAndClose:Boolean,iconClass:String,inputPattern:{type:Object,default:()=>{},validator:e=>e instanceof RegExp||"undefined"===e},inputPlaceholder:{type:String},inputType:{type:String,default:"text"},inputValue:{type:String},inputValidator:{type:Function,default:null},inputErrorMessage:String,lockScroll:{type:Boolean,default:!0},message:{type:[String,Object],validator:e=>Ee(e)||isVNode(e)},modalFade:{type:Boolean,default:!0},modalClass:String,modal:{type:Boolean,default:!0},roundButton:Boolean,showCancelButton:Boolean,showConfirmButton:{type:Boolean,default:!0},showClose:{type:Boolean,default:!0},type:String,title:String,showInput:Boolean,zIndex:Number},emits:["vanish","action"],setup(e,{emit:t}){const s=ref(!1),u=reactive({action:"",inputValue:e.inputValue,confirmButtonLoading:!1,cancelButtonLoading:!1,cancelButtonText:e.cancelButtonText,confirmButtonDisabled:!1,confirmButtonText:e.confirmButtonText,editorErrorMessage:"",validateError:!1,zIndex:Ol.nextZIndex()}),d=computed((()=>e.iconClass||(e.type&&mu[e.type]?"el-icon-"+mu[e.type]:""))),c=computed((()=>!!e.message)),p=ref(null),h=ref(null),v=computed((()=>"el-button--primary "+e.confirmButtonClass));function m(){s.value&&(s.value=!1,nextTick((()=>{u.action&&t("action",u.action);})));}watch((()=>u.inputValue),(t=>Ss(this,void 0,void 0,(function*(){yield nextTick(),"prompt"===e.type&&null!==t&&g();}))),{immediate:!0}),watch((()=>s.value),(t=>{t&&("alert"!==e.type&&"confirm"!==e.type||nextTick().then((()=>{var e,t,l;null===(l=null===(t=null===(e=h.value)||void 0===e?void 0:e.$el)||void 0===t?void 0:t.focus)||void 0===l||l.call(t);})),u.zIndex=Ol.nextZIndex()),"prompt"===e.type&&(t?nextTick().then((()=>{p.value&&p.value.$el&&b().focus();})):(u.editorErrorMessage="",u.validateError=!1));})),onMounted((()=>Ss(this,void 0,void 0,(function*(){yield nextTick(),e.closeOnHashChange&&Je(window,"hashchange",m);})))),onBeforeUnmount((()=>{e.closeOnHashChange&&et(window,"hashchange",m);}));const f=t=>{var l;("prompt"!==e.type||"confirm"!==t||g())&&(u.action=t,e.beforeClose?null===(l=e.beforeClose)||void 0===l||l.call(e,t,u,m):m());},g=()=>{if("prompt"===e.type){const t=e.inputPattern;if(t&&!t.test(u.inputValue||""))return u.editorErrorMessage=e.inputErrorMessage||ga("el.messagebox.error"),u.validateError=!0,!1;const l=e.inputValidator;if("function"==typeof l){const t=l(u.inputValue);if(!1===t)return u.editorErrorMessage=e.inputErrorMessage||ga("el.messagebox.error"),u.validateError=!0,!1;if("string"==typeof t)return u.editorErrorMessage=t,u.validateError=!0,!1}}return u.editorErrorMessage="",u.validateError=!1,!0},b=()=>{const e=p.value.$refs;return e.input||e.textarea},y=()=>{f("close");};return e.closeOnPressEscape?It({handleClose:y},s):((e,t,l)=>{const a=e=>{l(e)&&e.stopImmediatePropagation();};watch((()=>e.value),(e=>{e?Je(document,t,a,!0):et(document,t,a,!0);}),{immediate:!0});})(s,"keydown",(e=>e.code===Tt.esc)),e.lockScroll&&Et(s),Mt(s),{state:u,visible:s,hasMessage:c,icon:d,confirmButtonClasses:v,inputRef:p,confirmRef:h,doClose:m,handleClose:y,handleWrapperClick:()=>{e.closeOnClickModal&&f(e.distinguishCancelAndClose?"close":"cancel");},handleInputEnter:()=>{if("textarea"!==e.inputType)return f("confirm")},handleAction:f,t:ga}}});const gu={key:0,class:"el-message-box__header"},bu={class:"el-message-box__title"},yu=createVNode("i",{class:"el-message-box__close el-icon-close"},null,-1),ku={class:"el-message-box__content"},Cu={class:"el-message-box__container"},xu={key:1,class:"el-message-box__message"},wu={key:0},Su={class:"el-message-box__input"},_u={class:"el-message-box__btns"};fu.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input"),r=resolveComponent("el-button"),y=resolveComponent("el-overlay"),k=resolveDirective("trap-focus");return openBlock(),createBlock(Transition,{name:"fade-in-linear",onAfterLeave:t[8]||(t[8]=t=>e.$emit("vanish"))},{default:withCtx((()=>[withDirectives(createVNode(y,{"z-index":e.state.zIndex,"overlay-class":["is-message-box",e.modalClass],mask:e.modal,onClick:withModifiers(e.handleWrapperClick,["self"])},{default:withCtx((()=>[withDirectives(createVNode("div",{ref:"root","aria-label":e.title||"dialog","aria-modal":"true",class:["el-message-box",e.customClass,{"el-message-box--center":e.center}]},[null!==e.title&&void 0!==e.title?(openBlock(),createBlock("div",gu,[createVNode("div",bu,[e.icon&&e.center?(openBlock(),createBlock("div",{key:0,class:["el-message-box__status",e.icon]},null,2)):createCommentVNode("v-if",!0),createVNode("span",null,toDisplayString(e.title),1)]),e.showClose?(openBlock(),createBlock("button",{key:0,type:"button",class:"el-message-box__headerbtn","aria-label":"Close",onClick:t[1]||(t[1]=t=>e.handleAction(e.distinguishCancelAndClose?"close":"cancel")),onKeydown:t[2]||(t[2]=withKeys((t=>e.handleAction(e.distinguishCancelAndClose?"close":"cancel")),["enter"]))},[yu],32)):createCommentVNode("v-if",!0)])):createCommentVNode("v-if",!0),createVNode("div",ku,[createVNode("div",Cu,[e.icon&&!e.center&&e.hasMessage?(openBlock(),createBlock("div",{key:0,class:["el-message-box__status",e.icon]},null,2)):createCommentVNode("v-if",!0),e.hasMessage?(openBlock(),createBlock("div",xu,[renderSlot(e.$slots,"default",{},(()=>[e.dangerouslyUseHTMLString?(openBlock(),createBlock("p",{key:1,innerHTML:e.message},null,8,["innerHTML"])):(openBlock(),createBlock("p",wu,toDisplayString(e.message),1))]))])):createCommentVNode("v-if",!0)]),withDirectives(createVNode("div",Su,[createVNode(i,{ref:"inputRef",modelValue:e.state.inputValue,"onUpdate:modelValue":t[3]||(t[3]=t=>e.state.inputValue=t),type:e.inputType,placeholder:e.inputPlaceholder,class:{invalid:e.state.validateError},onKeydown:withKeys(withModifiers(e.handleInputEnter,["prevent"]),["enter"])},null,8,["modelValue","type","placeholder","class","onKeydown"]),createVNode("div",{class:"el-message-box__errormsg",style:{visibility:e.state.editorErrorMessage?"visible":"hidden"}},toDisplayString(e.state.editorErrorMessage),5)],512),[[vShow,e.showInput]])]),createVNode("div",_u,[e.showCancelButton?(openBlock(),createBlock(r,{key:0,loading:e.state.cancelButtonLoading,class:[e.cancelButtonClass],round:e.roundButton,size:"small",onClick:t[4]||(t[4]=t=>e.handleAction("cancel")),onKeydown:t[5]||(t[5]=withKeys((t=>e.handleAction("cancel")),["enter"]))},{default:withCtx((()=>[createTextVNode(toDisplayString(e.state.cancelButtonText||e.t("el.messagebox.cancel")),1)])),_:1},8,["loading","class","round"])):createCommentVNode("v-if",!0),withDirectives(createVNode(r,{ref:"confirmRef",loading:e.state.confirmButtonLoading,class:[e.confirmButtonClasses],round:e.roundButton,disabled:e.state.confirmButtonDisabled,size:"small",onClick:t[6]||(t[6]=t=>e.handleAction("confirm")),onKeydown:t[7]||(t[7]=withKeys((t=>e.handleAction("confirm")),["enter"]))},{default:withCtx((()=>[createTextVNode(toDisplayString(e.state.confirmButtonText||e.t("el.messagebox.confirm")),1)])),_:1},8,["loading","class","round","disabled"]),[[vShow,e.showConfirmButton]])])],10,["aria-label"]),[[k]])])),_:1},8,["z-index","overlay-class","mask","onClick"]),[[vShow,e.visible]])])),_:1})},fu.__file="packages/message-box/src/index.vue";const Du={success:"success",info:"info",warning:"warning",error:"error"};var Ou=defineComponent({name:"ElNotification",props:{customClass:{type:String,default:""},dangerouslyUseHTMLString:{type:Boolean,default:!1},duration:{type:Number,default:4500},iconClass:{type:String,default:""},id:{type:String,default:""},message:{type:[String,Object],default:""},offset:{type:Number,default:0},onClick:{type:Function,default:()=>{}},onClose:{type:Function,required:!0},position:{type:String,default:"top-right"},showClose:{type:Boolean,default:!0},title:{type:String,default:""},type:{type:String,default:""},zIndex:{type:Number,default:0}},emits:["destroy"],setup(e){const t=ref(!1);let a=null;const o=computed((()=>{const t=e.type;return t&&Du[t]?"el-icon-"+Du[t]:""})),s=computed((()=>e.position.indexOf("right")>1?"right":"left")),u=computed((()=>e.position.startsWith("top")?"top":"bottom")),d=computed((()=>({[u.value]:e.offset+"px"})));function c(){e.duration>0&&(a=setTimeout((()=>{t.value&&h();}),e.duration));}function p(){clearTimeout(a),a=null;}function h(){t.value=!1;}function v({code:e}){e===Tt.delete||e===Tt.backspace?p():e===Tt.esc?t.value&&h():c();}return onMounted((()=>{c(),t.value=!0,Je(document,"keydown",v);})),onBeforeUnmount((()=>{et(document,"keydown",v);})),{horizontalClass:s,typeClass:o,positionStyle:d,visible:t,close:h,clearTimer:p,startTimer:c}}});const Pu={key:0};Ou.render=function(e,t,l,a,n,o){return openBlock(),createBlock(Transition,{name:"el-notification-fade",onBeforeLeave:e.onClose,onAfterLeave:t[5]||(t[5]=t=>e.$emit("destroy"))},{default:withCtx((()=>[withDirectives(createVNode("div",{id:e.id,class:["el-notification",e.customClass,e.horizontalClass],style:e.positionStyle,role:"alert",onMouseenter:t[2]||(t[2]=(...t)=>e.clearTimer&&e.clearTimer(...t)),onMouseleave:t[3]||(t[3]=(...t)=>e.startTimer&&e.startTimer(...t)),onClick:t[4]||(t[4]=(...t)=>e.onClick&&e.onClick(...t))},[e.type||e.iconClass?(openBlock(),createBlock("i",{key:0,class:["el-notification__icon",[e.typeClass,e.iconClass]]},null,2)):createCommentVNode("v-if",!0),createVNode("div",{class:["el-notification__group",{"is-with-icon":e.typeClass||e.iconClass}]},[createVNode("h2",{class:"el-notification__title",textContent:toDisplayString(e.title)},null,8,["textContent"]),withDirectives(createVNode("div",{class:"el-notification__content",style:e.title?null:"margin: 0"},[renderSlot(e.$slots,"default",{},(()=>[e.dangerouslyUseHTMLString?(openBlock(),createBlock(Fragment,{key:1},[createCommentVNode(" Caution here, message could've been compromized, nerver use user's input as message "),createCommentVNode(" eslint-disable-next-line "),createVNode("p",{innerHTML:e.message},null,8,["innerHTML"])],64)):(openBlock(),createBlock("p",Pu,toDisplayString(e.message),1))]))],4),[[vShow,e.message]]),e.showClose?(openBlock(),createBlock("div",{key:0,class:"el-notification__closeBtn el-icon-close",onClick:t[1]||(t[1]=withModifiers(((...t)=>e.close&&e.close(...t)),["stop"]))})):createCommentVNode("v-if",!0)],2)],46,["id"]),[[vShow,e.visible]])])),_:3},8,["onBeforeLeave"])},Ou.__file="packages/notification/src/index.vue";const Vu={"top-left":[],"top-right":[],"bottom-left":[],"bottom-right":[]};let Iu=1;const Bu=function(e={}){if(Ce)return;const t=e.position||"top-right";let l=e.offset||0;Vu[t].forEach((({vm:e})=>{l+=(e.el.offsetHeight||0)+16;})),l+=16;const a="notification_"+Iu++,n=e.onClose;e=Object.assign(Object.assign({},e),{onClose:()=>{!function(e,t,l){const a=Vu[t],n=a.findIndex((({vm:t})=>{const{id:l}=t.component.props;return e===l}));if(-1===n)return;const{vm:o}=a[n];if(!o)return;null==l||l(o);const i=o.el.offsetHeight;a.splice(n,1);const r=a.length;if(r<1)return;for(let e=n;e<r;e++){const l=t.split("-")[0],n=parseInt(a[e].vm.el.style[l],10)-i-16;a[e].vm.component.props.offset=n;}}(a,t,n);},offset:l,id:a,zIndex:Ol.nextZIndex()});const o=document.createElement("div"),i=createVNode(Ou,e,isVNode(e.message)?{default:()=>e.message}:null);return i.props.onDestroy=()=>{render(null,o);},render(i,o),Vu[t].push({vm:i}),document.body.appendChild(o.firstElementChild),{close:()=>{i.component.proxy.visible=!1;}}};["success","warning","info","error"].forEach((e=>{Object.assign(Bu,{[e]:(t={})=>(("string"==typeof t||isVNode(t))&&(t={message:t}),t.type=e,Bu(t))});}));const Au=Bu;Au.install=e=>{e.config.globalProperties.$notify=Au;};const Lu="elOptionQueryChange",zu="elOptionGroupQueryChange";function Fu(t,l){const a=inject("ElSelect"),i=inject("ElSelectGroup",{disabled:!1}),r=computed((()=>"[object object]"===Object.prototype.toString.call(t.value).toLowerCase())),s=computed((()=>a.props.multiple?v(a.props.modelValue,t.value):m(t.value,a.props.modelValue))),u=computed((()=>{if(a.props.multiple){const e=a.props.modelValue||[];return !s.value&&e.length>=a.props.multipleLimit&&a.props.multipleLimit>0}return !1})),d=computed((()=>t.label||(r.value?"":t.value))),c=computed((()=>t.value||t.label||"")),p=computed((()=>t.disabled||l.groupDisabled||u.value)),h=getCurrentInstance(),v=(e=[],t)=>{if(r.value){const l=a.props.valueKey;return e&&e.some((e=>ze(e,l)===ze(t,l)))}return e&&e.indexOf(t)>-1},m=(e,t)=>{if(r.value){const{valueKey:l}=a.props;return ze(e,l)===ze(t,l)}return e===t};return watch((()=>d.value),(()=>{t.created||a.props.remote||a.setSelected();})),watch((()=>t.value),((e,l)=>{const{remote:n,valueKey:o}=a.props;if(!t.created&&!n){if(o&&"object"==typeof e&&"object"==typeof l&&e[o]===l[o])return;a.setSelected();}})),watch((()=>i.disabled),(()=>{l.groupDisabled=i.disabled;}),{immediate:!0}),a.selectEmitter.on(Lu,(e=>{const n=new RegExp(((e="")=>String(e).replace(/[|\\{}()[\]^$+*?.]/g,"\\$&"))(e),"i");l.visible=n.test(d.value)||t.created,l.visible||a.filteredOptionsCount--;})),{select:a,currentLabel:d,currentValue:c,itemSelected:s,isDisabled:p,hoverItem:()=>{t.disabled||i.disabled||(a.hoverIndex=a.optionsArray.indexOf(h));}}}var Ru=defineComponent({name:"ElOption",componentName:"ElOption",props:{value:{required:!0,type:[String,Number,Boolean,Object]},label:[String,Number],created:Boolean,disabled:{type:Boolean,default:!1}},setup(t){const l=reactive({index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}),{currentLabel:n,itemSelected:o,isDisabled:i,select:s,hoverItem:u}=Fu(t,l),{visible:d,hover:c}=toRefs(l),p=getCurrentInstance().proxy;return s.onOptionCreate(p),onBeforeUnmount((()=>{const{selected:e}=s;let l=s.props.multiple?e:[e];const a=s.cachedOptions.has(t.value),n=l.some((e=>e.value===p.value));a&&!n&&s.cachedOptions.delete(t.value),s.onOptionDestroy(t.value);})),{currentLabel:n,itemSelected:o,isDisabled:i,select:s,hoverItem:u,visible:d,hover:c,selectOptionClick:function(){!0!==t.disabled&&!0!==l.groupDisabled&&s.handleOptionSelect(p,!0);}}}});Ru.render=function(e,t,l,a,n,o){return withDirectives((openBlock(),createBlock("li",{class:["el-select-dropdown__item",{selected:e.itemSelected,"is-disabled":e.isDisabled,hover:e.hover}],onMouseenter:t[1]||(t[1]=(...t)=>e.hoverItem&&e.hoverItem(...t)),onClick:t[2]||(t[2]=withModifiers(((...t)=>e.selectOptionClick&&e.selectOptionClick(...t)),["stop"]))},[renderSlot(e.$slots,"default",{},(()=>[createVNode("span",null,toDisplayString(e.currentLabel),1)]))],34)),[[vShow,e.visible]])},Ru.__file="packages/select/src/option.vue";var $u=defineComponent({name:"ElSelectDropdown",componentName:"ElSelectDropdown",setup(){const e=inject("ElSelect"),t=computed((()=>e.props.popperClass)),a=computed((()=>e.props.multiple)),o=ref("");function s(){var t;o.value=(null===(t=e.selectWrapper)||void 0===t?void 0:t.getBoundingClientRect().width)+"px";}return onMounted((()=>{dt(e.selectWrapper,s);})),onBeforeUnmount((()=>{ct(e.selectWrapper,s);})),{minWidth:o,popperClass:t,isMultiple:a}}});$u.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-select-dropdown",[{"is-multiple":e.isMultiple},e.popperClass]],style:{minWidth:e.minWidth}},[renderSlot(e.$slots,"default")],6)},$u.__file="packages/select/src/select-dropdown.vue";const Hu=(e,t,a)=>{const i=qe(),r=ref(null),s=ref(null),u=ref(null),d=ref(null),c=ref(null),p=ref(null),h=ref(-1),v=inject("elForm",{}),m=inject("elFormItem",{}),f=computed((()=>!e.filterable||e.multiple||!(!Ce&&!isNaN(Number(document.DOCUMENT_NODE)))&&!(!Ce&&navigator.userAgent.indexOf("Edge")>-1)&&!t.visible)),g=computed((()=>e.disabled||v.disabled)),b=computed((()=>{const l=e.multiple?Array.isArray(e.modelValue)&&e.modelValue.length>0:void 0!==e.modelValue&&null!==e.modelValue&&""!==e.modelValue;return e.clearable&&!g.value&&t.inputHovering&&l})),y=computed((()=>e.remote&&e.filterable?"":t.visible?"arrow-up is-reverse":"arrow-up")),k=computed((()=>e.remote?300:0)),C=computed((()=>e.loading?e.loadingText||ga("el.select.loading"):(!e.remote||""!==t.query||0!==t.options.size)&&(e.filterable&&t.query&&t.options.size>0&&0===t.filteredOptionsCount?e.noMatchText||ga("el.select.noMatch"):0===t.options.size?e.noDataText||ga("el.select.noData"):null))),w=computed((()=>Array.from(t.options.values()))),S=computed((()=>Array.from(t.cachedOptions.values()))),E=computed((()=>{const l=w.value.filter((e=>!e.created)).some((e=>e.currentLabel===t.query));return e.filterable&&e.allowCreate&&""!==t.query&&!l})),M=computed((()=>e.size||m.size||i.size)),T=computed((()=>["small","mini"].indexOf(M.value)>-1?"mini":"small")),N=computed((()=>t.visible&&!1!==C.value));watch((()=>g.value),(()=>{nextTick((()=>{D();}));})),watch((()=>e.placeholder),(e=>{t.cachedPlaceHolder=t.currentPlaceholder=e;})),watch((()=>e.modelValue),((l,a)=>{var n;e.multiple&&(D(),l&&l.length>0||s.value&&""!==t.query?t.currentPlaceholder="":t.currentPlaceholder=t.cachedPlaceHolder,e.filterable&&!e.reserveKeyword&&(t.query="",O(t.query))),I(),e.filterable&&!e.multiple&&(t.inputLength=20),isEqual_1(l,a)||null===(n=m.formItemMitt)||void 0===n||n.emit("el.form.change",l);}),{flush:"post"}),watch((()=>t.visible),(l=>{var n,o;l?(null===(o=null===(n=u.value)||void 0===n?void 0:n.update)||void 0===o||o.call(n),e.filterable&&(t.filteredOptionsCount=t.optionsCount,t.query=e.remote?"":t.selectedLabel,e.multiple?s.value.focus():t.selectedLabel&&(t.currentPlaceholder=t.selectedLabel,t.selectedLabel=""),e.multiple||e.remote?O(t.query):(t.selectEmitter.emit("elOptionQueryChange",""),t.selectEmitter.emit("elOptionGroupQueryChange")))):(s.value&&s.value.blur(),t.query="",t.previousQuery=null,t.selectedLabel="",t.inputLength=20,t.menuVisibleOnFocus=!1,A(),nextTick((()=>{s.value&&""===s.value.value&&0===t.selected.length&&(t.currentPlaceholder=t.cachedPlaceHolder);})),e.multiple||(t.selected&&(e.filterable&&e.allowCreate&&t.createdSelected&&t.createdLabel?t.selectedLabel=t.createdLabel:t.selectedLabel=t.selected.currentLabel,e.filterable&&(t.query=t.selectedLabel)),e.filterable&&(t.currentPlaceholder=t.cachedPlaceHolder))),a.emit("visible-change",l);})),watch((()=>t.options.entries()),(()=>{var l,a,n;if(Ce)return;null===(a=null===(l=u.value)||void 0===l?void 0:l.update)||void 0===a||a.call(l),e.multiple&&D();const o=(null===(n=c.value)||void 0===n?void 0:n.querySelectorAll("input"))||[];-1===[].indexOf.call(o,document.activeElement)&&I(),e.defaultFirstOption&&(e.filterable||e.remote)&&t.filteredOptionsCount&&V();}),{flush:"post"}),watch((()=>t.hoverIndex),(e=>{"number"==typeof e&&e>-1&&(h.value=w.value[e]||{}),w.value.forEach((e=>{e.hover=h.value===e;}));}));const D=()=>{e.collapseTags&&!e.filterable||nextTick((()=>{var e,l;if(!r.value)return;const a=r.value.$el.childNodes,n=[].filter.call(a,(e=>"INPUT"===e.tagName))[0],o=d.value,i=t.initialInputHeight||40;n.style.height=0===t.selected.length?i+"px":Math.max(o?o.clientHeight+(o.clientHeight>i?6:0):0,i)+"px",t.visible&&!1!==C.value&&(null===(l=null===(e=u.value)||void 0===e?void 0:e.update)||void 0===l||l.call(e));}));},O=l=>{t.previousQuery===l||t.isOnComposition||(null!==t.previousQuery||"function"!=typeof e.filterMethod&&"function"!=typeof e.remoteMethod?(t.previousQuery=l,nextTick((()=>{var e,l;t.visible&&(null===(l=null===(e=u.value)||void 0===e?void 0:e.update)||void 0===l||l.call(e));})),t.hoverIndex=-1,e.multiple&&e.filterable&&nextTick((()=>{const l=15*s.value.length+20;t.inputLength=e.collapseTags?Math.min(50,l):l,P(),D();})),e.remote&&"function"==typeof e.remoteMethod?(t.hoverIndex=-1,e.remoteMethod(l)):"function"==typeof e.filterMethod?(e.filterMethod(l),t.selectEmitter.emit("elOptionGroupQueryChange")):(t.filteredOptionsCount=t.optionsCount,t.selectEmitter.emit("elOptionQueryChange",l),t.selectEmitter.emit("elOptionGroupQueryChange")),e.defaultFirstOption&&(e.filterable||e.remote)&&t.filteredOptionsCount&&V()):t.previousQuery=l);},P=()=>{""!==t.currentPlaceholder&&(t.currentPlaceholder=s.value?"":t.cachedPlaceHolder);},V=()=>{t.hoverIndex=-1;let e=!1;for(let l=t.options.size-1;l>=0;l--)if(w.value[l].created){e=!0,t.hoverIndex=l;break}if(!e)for(let e=0;e!==t.options.size;++e){const l=w.value[e];if(t.query){if(!l.disabled&&!l.groupDisabled&&l.visible){t.hoverIndex=e;break}}else if(l.itemSelected){t.hoverIndex=e;break}}},I=()=>{var l;if(!e.multiple){const a=B(e.modelValue);return (null===(l=a.props)||void 0===l?void 0:l.created)?(t.createdLabel=a.props.value,t.createdSelected=!0):t.createdSelected=!1,t.selectedLabel=a.currentLabel,t.selected=a,void(e.filterable&&(t.query=t.selectedLabel))}const a=[];Array.isArray(e.modelValue)&&e.modelValue.forEach((e=>{a.push(B(e));})),t.selected=a,nextTick((()=>{D();}));},B=l=>{let a;const n="object"===De(l).toLowerCase(),o="null"===De(l).toLowerCase(),i="undefined"===De(l).toLowerCase();for(let o=t.cachedOptions.size-1;o>=0;o--){const t=S.value[o];if(n?ze(t.value,e.valueKey)===ze(l,e.valueKey):t.value===l){a={value:l,currentLabel:t.currentLabel,isDisabled:t.isDisabled};break}}if(a)return a;const r={value:l,currentLabel:n||o||i?"":l};return e.multiple&&(r.hitState=!1),r},A=()=>{setTimeout((()=>{e.multiple?t.selected.length>0?t.hoverIndex=Math.min.apply(null,t.selected.map((e=>w.value.indexOf(e)))):t.hoverIndex=-1:t.hoverIndex=w.value.indexOf(t.selected);}),300);},L=()=>{var e;t.inputWidth=null===(e=r.value)||void 0===e?void 0:e.$el.getBoundingClientRect().width;},z=debounce_1((()=>{e.filterable&&t.query!==t.selectedLabel&&(t.query=t.selectedLabel,O(t.query));}),k.value),F=debounce_1((e=>{O(e.target.value);}),k.value),R=t=>{isEqual_1(e.modelValue,t)||a.emit("change",t);},$=l=>{l.stopPropagation();const n=e.multiple?[]:"";if("string"!=typeof n)for(const e of t.selected)e.isDisabled&&n.push(e.value);a.emit(Kt,n),R(n),t.visible=!1,a.emit("clear");},H=(l,n)=>{if(e.multiple){const n=(e.modelValue||[]).slice(),o=W(n,l.value);o>-1?n.splice(o,1):(e.multipleLimit<=0||n.length<e.multipleLimit)&&n.push(l.value),a.emit(Kt,n),R(n),l.created&&(t.query="",O(""),t.inputLength=20),e.filterable&&s.value.focus();}else a.emit(Kt,l.value),R(l.value),t.visible=!1;t.isSilentBlur=n,j(),t.visible||nextTick((()=>{K(l);}));},W=(t=[],l)=>{if(!Me(l))return t.indexOf(l);const a=e.valueKey;let n=-1;return t.some(((e,t)=>ze(e,a)===ze(l,a)&&(n=t,!0))),n},j=()=>{t.softFocus=!0;const e=s.value||r.value;e&&e.focus();},K=e=>{var t,l,a,n;const o=Array.isArray(e)?e[0]:e;let i=null;if(null==o?void 0:o.value){const e=w.value.filter((e=>e.value===o.value));e.length>0&&(i=e[0].$el);}if(u.value&&i){const e=null===(a=null===(l=null===(t=u.value)||void 0===t?void 0:t.popperRef)||void 0===l?void 0:l.querySelector)||void 0===a?void 0:a.call(l,".el-select-dropdown__wrap");e&&jn(e,i);}null===(n=p.value)||void 0===n||n.handleScroll();},Y=e=>{if(!Array.isArray(t.selected))return;const l=t.selected[t.selected.length-1];return l?!0===e||!1===e?(l.hitState=e,e):(l.hitState=!l.hitState,l.hitState):void 0},q=()=>{e.automaticDropdown||g.value||(t.menuVisibleOnFocus?t.menuVisibleOnFocus=!1:t.visible=!t.visible,t.visible&&(s.value||r.value).focus());},U=computed((()=>w.value.filter((e=>e.visible)).every((e=>e.disabled)))),G=e=>{if(t.visible){if(0!==t.options.size&&0!==t.filteredOptionsCount&&!U.value){"next"===e?(t.hoverIndex++,t.hoverIndex===t.options.size&&(t.hoverIndex=0)):"prev"===e&&(t.hoverIndex--,t.hoverIndex<0&&(t.hoverIndex=t.options.size-1));const l=w.value[t.hoverIndex];!0!==l.disabled&&!0!==l.groupDisabled&&l.visible||G(e),nextTick((()=>K(h.value)));}}else t.visible=!0;};return {optionsArray:w,selectSize:M,handleResize:()=>{var t,l;L(),null===(l=null===(t=u.value)||void 0===t?void 0:t.update)||void 0===l||l.call(t),e.multiple&&D();},debouncedOnInputChange:z,debouncedQueryChange:F,deletePrevTag:t=>{if(t.target.value.length<=0&&!Y()){const t=e.modelValue.slice();t.pop(),a.emit(Kt,t),R(t);}},deleteTag:(l,n)=>{const o=t.selected.indexOf(n);if(o>-1&&!g.value){const t=e.modelValue.slice();t.splice(o,1),a.emit(Kt,t),R(t),a.emit("remove-tag",n.value);}l.stopPropagation();},deleteSelected:$,handleOptionSelect:H,scrollToOption:K,readonly:f,resetInputHeight:D,showClose:b,iconClass:y,showNewOption:E,collapseTagSize:T,setSelected:I,managePlaceholder:P,selectDisabled:g,emptyText:C,toggleLastOptionHitState:Y,resetInputState:e=>{e.code!==Tt.backspace&&Y(!1),t.inputLength=15*s.value.length+20,D();},handleComposition:e=>{const l=e.target.value;if("compositionend"===e.type)t.isOnComposition=!1,nextTick((()=>O(l)));else {const e=l[l.length-1]||"";t.isOnComposition=!qt(e);}},onOptionCreate:e=>{t.optionsCount++,t.filteredOptionsCount++,t.options.set(e.value,e),t.cachedOptions.set(e.value,e);},onOptionDestroy:e=>{t.optionsCount--,t.filteredOptionsCount--,t.options.delete(e);},handleMenuEnter:()=>{nextTick((()=>K(t.selected)));},handleFocus:l=>{t.softFocus?t.softFocus=!1:((e.automaticDropdown||e.filterable)&&(t.visible=!0,e.filterable&&(t.menuVisibleOnFocus=!0)),a.emit("focus",l));},blur:()=>{t.visible=!1,r.value.blur();},handleBlur:e=>{nextTick((()=>{t.isSilentBlur?t.isSilentBlur=!1:a.emit("blur",e);})),t.softFocus=!1;},handleClearClick:e=>{$(e);},handleClose:()=>{t.visible=!1;},toggleMenu:q,selectOption:()=>{t.visible?w.value[t.hoverIndex]&&H(w.value[t.hoverIndex],void 0):q();},getValueKey:t=>Me(t.value)?ze(t.value,e.valueKey):t.value,navigateOptions:G,dropMenuVisible:N,reference:r,input:s,popper:u,tags:d,selectWrapper:c,scrollbar:p}};var Wu=defineComponent({name:"ElSelect",componentName:"ElSelect",components:{ElInput:pl,ElSelectMenu:$u,ElOption:Ru,ElTag:Jn,ElScrollbar:gl,ElPopper:Rl},directives:{ClickOutside:zt},props:{name:String,id:String,modelValue:[Array,String,Number,Boolean,Object],autocomplete:{type:String,default:"off"},automaticDropdown:Boolean,size:{type:String,validator:Ut},disabled:Boolean,clearable:Boolean,filterable:Boolean,allowCreate:Boolean,loading:Boolean,popperClass:{type:String,default:""},remote:Boolean,loadingText:String,noMatchText:String,noDataText:String,remoteMethod:Function,filterMethod:Function,multiple:Boolean,multipleLimit:{type:Number,default:0},placeholder:{type:String},defaultFirstOption:Boolean,reserveKeyword:Boolean,valueKey:{type:String,default:"value"},collapseTags:Boolean,popperAppendToBody:{type:Boolean,default:!0},clearIcon:{type:String,default:"el-icon-circle-close"}},emits:[Kt,"change","remove-tag","clear","visible-change","focus","blur"],setup(e,t){const l=function(e){const t=ie();return reactive({options:new Map,cachedOptions:new Map,createdLabel:null,createdSelected:!1,selected:e.multiple?[]:{},inputLength:20,inputWidth:0,initialInputHeight:0,optionsCount:0,filteredOptionsCount:0,visible:!1,softFocus:!1,selectedLabel:"",hoverIndex:-1,query:"",previousQuery:null,inputHovering:!1,cachedPlaceHolder:"",currentPlaceholder:ga("el.select.placeholder"),menuVisibleOnFocus:!1,isOnComposition:!1,isSilentBlur:!1,selectEmitter:t})}(e),{optionsArray:o,selectSize:s,readonly:u,handleResize:d,collapseTagSize:c,debouncedOnInputChange:p,debouncedQueryChange:h,deletePrevTag:v,deleteTag:m,deleteSelected:f,handleOptionSelect:g,scrollToOption:b,setSelected:y,resetInputHeight:k,managePlaceholder:C,showClose:_,selectDisabled:E,iconClass:M,showNewOption:T,emptyText:N,toggleLastOptionHitState:D,resetInputState:O,handleComposition:P,onOptionCreate:V,onOptionDestroy:I,handleMenuEnter:B,handleFocus:A,blur:L,handleBlur:z,handleClearClick:F,handleClose:R,toggleMenu:$,selectOption:H,getValueKey:W,navigateOptions:j,dropMenuVisible:K,reference:Y,input:q,popper:U,tags:G,selectWrapper:X,scrollbar:Q}=Hu(e,l,t),{focus:Z}=(J=Y,{focus:()=>{var e,t;null===(t=null===(e=J.value)||void 0===e?void 0:e.focus)||void 0===t||t.call(e);}});var J;const{inputWidth:ee,selected:te,inputLength:le,filteredOptionsCount:ae,visible:ne,softFocus:oe,selectedLabel:re,hoverIndex:se,query:ue,inputHovering:de,currentPlaceholder:ce,menuVisibleOnFocus:pe,isOnComposition:he,isSilentBlur:ve,options:me,cachedOptions:fe,optionsCount:ge}=toRefs(l);provide("ElSelect",reactive({props:e,options:me,optionsArray:o,cachedOptions:fe,optionsCount:ge,filteredOptionsCount:ae,hoverIndex:se,handleOptionSelect:g,selectEmitter:l.selectEmitter,onOptionCreate:V,onOptionDestroy:I,selectWrapper:X,selected:te,setSelected:y})),onMounted((()=>{if(l.cachedPlaceHolder=ce.value=e.placeholder||ga("el.select.placeholder"),e.multiple&&Array.isArray(e.modelValue)&&e.modelValue.length>0&&(ce.value=""),dt(X.value,d),Y.value&&Y.value.$el){const e={medium:36,small:32,mini:28},t=Y.value.input;l.initialInputHeight=t.getBoundingClientRect().height||e[s.value];}e.remote&&e.multiple&&k(),nextTick((()=>{Y.value.$el&&(ee.value=Y.value.$el.getBoundingClientRect().width);})),y();})),onBeforeUnmount((()=>{ct(X.value,d);})),e.multiple&&!Array.isArray(e.modelValue)&&t.emit(Kt,[]),!e.multiple&&Array.isArray(e.modelValue)&&t.emit(Kt,"");const be=computed((()=>{var e;return null===(e=U.value)||void 0===e?void 0:e.popperRef}));return {selectSize:s,readonly:u,handleResize:d,collapseTagSize:c,debouncedOnInputChange:p,debouncedQueryChange:h,deletePrevTag:v,deleteTag:m,deleteSelected:f,handleOptionSelect:g,scrollToOption:b,inputWidth:ee,selected:te,inputLength:le,filteredOptionsCount:ae,visible:ne,softFocus:oe,selectedLabel:re,hoverIndex:se,query:ue,inputHovering:de,currentPlaceholder:ce,menuVisibleOnFocus:pe,isOnComposition:he,isSilentBlur:ve,options:me,resetInputHeight:k,managePlaceholder:C,showClose:_,selectDisabled:E,iconClass:M,showNewOption:T,emptyText:N,toggleLastOptionHitState:D,resetInputState:O,handleComposition:P,handleMenuEnter:B,handleFocus:A,blur:L,handleBlur:z,handleClearClick:F,handleClose:R,toggleMenu:$,selectOption:H,getValueKey:W,navigateOptions:j,dropMenuVisible:K,focus:Z,reference:Y,input:q,popper:U,popperPaneRef:be,tags:G,selectWrapper:X,scrollbar:Q}}});const ju={class:"select-trigger"},Ku={key:0},Yu={class:"el-select__tags-text"},qu={key:1,class:"el-select-dropdown__empty"};Wu.render=function(e,t,l,a,n,o){const i=resolveComponent("el-tag"),r=resolveComponent("el-input"),f=resolveComponent("el-option"),y=resolveComponent("el-scrollbar"),k=resolveComponent("el-select-menu"),C=resolveComponent("el-popper"),x=resolveDirective("click-outside");return withDirectives((openBlock(),createBlock("div",{ref:"selectWrapper",class:["el-select",[e.selectSize?"el-select--"+e.selectSize:""]],onClick:t[26]||(t[26]=withModifiers(((...t)=>e.toggleMenu&&e.toggleMenu(...t)),["stop"]))},[createVNode(C,{ref:"popper",visible:e.dropMenuVisible,"onUpdate:visible":t[25]||(t[25]=t=>e.dropMenuVisible=t),placement:"bottom-start","append-to-body":e.popperAppendToBody,"popper-class":"el-select__popper "+e.popperClass,"manual-mode":"",effect:"light",pure:"",trigger:"click",transition:"el-zoom-in-top","stop-popper-mouse-event":!1,"gpu-acceleration":!1,onBeforeEnter:e.handleMenuEnter},{trigger:withCtx((()=>[createVNode("div",ju,[e.multiple?(openBlock(),createBlock("div",{key:0,ref:"tags",class:"el-select__tags",style:{"max-width":e.inputWidth-32+"px",width:"100%"}},[e.collapseTags&&e.selected.length?(openBlock(),createBlock("span",Ku,[createVNode(i,{closable:!e.selectDisabled&&!e.selected[0].isDisabled,size:e.collapseTagSize,hit:e.selected[0].hitState,type:"info","disable-transitions":"",onClose:t[1]||(t[1]=t=>e.deleteTag(t,e.selected[0]))},{default:withCtx((()=>[createVNode("span",{class:"el-select__tags-text",style:{"max-width":e.inputWidth-123+"px"}},toDisplayString(e.selected[0].currentLabel),5)])),_:1},8,["closable","size","hit"]),e.selected.length>1?(openBlock(),createBlock(i,{key:0,closable:!1,size:e.collapseTagSize,type:"info","disable-transitions":""},{default:withCtx((()=>[createVNode("span",Yu,"+ "+toDisplayString(e.selected.length-1),1)])),_:1},8,["size"])):createCommentVNode("v-if",!0)])):createCommentVNode("v-if",!0),createCommentVNode(" <div> "),e.collapseTags?createCommentVNode("v-if",!0):(openBlock(),createBlock(Transition,{key:1,onAfterLeave:e.resetInputHeight},{default:withCtx((()=>[createVNode("span",null,[(openBlock(!0),createBlock(Fragment,null,renderList(e.selected,(t=>(openBlock(),createBlock(i,{key:e.getValueKey(t),closable:!e.selectDisabled&&!t.isDisabled,size:e.collapseTagSize,hit:t.hitState,type:"info","disable-transitions":"",onClose:l=>e.deleteTag(l,t)},{default:withCtx((()=>[createVNode("span",{class:"el-select__tags-text",style:{"max-width":e.inputWidth-75+"px"}},toDisplayString(t.currentLabel),5)])),_:2},1032,["closable","size","hit","onClose"])))),128))])])),_:1},8,["onAfterLeave"])),createCommentVNode(" </div> "),e.filterable?withDirectives((openBlock(),createBlock("input",{key:2,ref:"input","onUpdate:modelValue":t[2]||(t[2]=t=>e.query=t),type:"text",class:["el-select__input",[e.selectSize?"is-"+e.selectSize:""]],disabled:e.selectDisabled,autocomplete:e.autocomplete,style:{"flex-grow":"1",width:e.inputLength/(e.inputWidth-32)+"%","max-width":e.inputWidth-42+"px"},onFocus:t[3]||(t[3]=(...t)=>e.handleFocus&&e.handleFocus(...t)),onBlur:t[4]||(t[4]=(...t)=>e.handleBlur&&e.handleBlur(...t)),onKeyup:t[5]||(t[5]=(...t)=>e.managePlaceholder&&e.managePlaceholder(...t)),onKeydown:[t[6]||(t[6]=(...t)=>e.resetInputState&&e.resetInputState(...t)),t[7]||(t[7]=withKeys(withModifiers((t=>e.navigateOptions("next")),["prevent"]),["down"])),t[8]||(t[8]=withKeys(withModifiers((t=>e.navigateOptions("prev")),["prevent"]),["up"])),t[9]||(t[9]=withKeys(withModifiers((t=>e.visible=!1),["stop","prevent"]),["esc"])),t[10]||(t[10]=withKeys(withModifiers(((...t)=>e.selectOption&&e.selectOption(...t)),["stop","prevent"]),["enter"])),t[11]||(t[11]=withKeys(((...t)=>e.deletePrevTag&&e.deletePrevTag(...t)),["delete"])),t[12]||(t[12]=withKeys((t=>e.visible=!1),["tab"]))],onCompositionstart:t[13]||(t[13]=(...t)=>e.handleComposition&&e.handleComposition(...t)),onCompositionupdate:t[14]||(t[14]=(...t)=>e.handleComposition&&e.handleComposition(...t)),onCompositionend:t[15]||(t[15]=(...t)=>e.handleComposition&&e.handleComposition(...t)),onInput:t[16]||(t[16]=(...t)=>e.debouncedQueryChange&&e.debouncedQueryChange(...t))},null,46,["disabled","autocomplete"])),[[vModelText,e.query]]):createCommentVNode("v-if",!0)],4)):createCommentVNode("v-if",!0),createVNode(r,{id:e.id,ref:"reference",modelValue:e.selectedLabel,"onUpdate:modelValue":t[18]||(t[18]=t=>e.selectedLabel=t),type:"text",placeholder:e.currentPlaceholder,name:e.name,autocomplete:e.autocomplete,size:e.selectSize,disabled:e.selectDisabled,readonly:e.readonly,"validate-event":!1,class:{"is-focus":e.visible},tabindex:e.multiple&&e.filterable?"-1":null,onFocus:e.handleFocus,onBlur:e.handleBlur,onInput:e.debouncedOnInputChange,onPaste:e.debouncedOnInputChange,onKeydown:[t[19]||(t[19]=withKeys(withModifiers((t=>e.navigateOptions("next")),["stop","prevent"]),["down"])),t[20]||(t[20]=withKeys(withModifiers((t=>e.navigateOptions("prev")),["stop","prevent"]),["up"])),withKeys(withModifiers(e.selectOption,["stop","prevent"]),["enter"]),t[21]||(t[21]=withKeys(withModifiers((t=>e.visible=!1),["stop","prevent"]),["esc"])),t[22]||(t[22]=withKeys((t=>e.visible=!1),["tab"]))],onMouseenter:t[23]||(t[23]=t=>e.inputHovering=!0),onMouseleave:t[24]||(t[24]=t=>e.inputHovering=!1)},createSlots({suffix:withCtx((()=>[withDirectives(createVNode("i",{class:["el-select__caret","el-input__icon","el-icon-"+e.iconClass]},null,2),[[vShow,!e.showClose]]),e.showClose?(openBlock(),createBlock("i",{key:0,class:"el-select__caret el-input__icon "+e.clearIcon,onClick:t[17]||(t[17]=(...t)=>e.handleClearClick&&e.handleClearClick(...t))},null,2)):createCommentVNode("v-if",!0)])),_:2},[e.$slots.prefix?{name:"prefix",fn:withCtx((()=>[renderSlot(e.$slots,"prefix")]))}:void 0]),1032,["id","modelValue","placeholder","name","autocomplete","size","disabled","readonly","class","tabindex","onFocus","onBlur","onInput","onPaste","onKeydown"])])])),default:withCtx((()=>[createVNode(k,null,{default:withCtx((()=>[withDirectives(createVNode(y,{ref:"scrollbar",tag:"ul","wrap-class":"el-select-dropdown__wrap","view-class":"el-select-dropdown__list",class:{"is-empty":!e.allowCreate&&e.query&&0===e.filteredOptionsCount}},{default:withCtx((()=>[e.showNewOption?(openBlock(),createBlock(f,{key:0,value:e.query,created:!0},null,8,["value"])):createCommentVNode("v-if",!0),renderSlot(e.$slots,"default")])),_:3},8,["class"]),[[vShow,e.options.size>0&&!e.loading]]),e.emptyText&&(!e.allowCreate||e.loading||e.allowCreate&&0===e.options.size)?(openBlock(),createBlock(Fragment,{key:0},[e.$slots.empty?renderSlot(e.$slots,"empty",{key:0}):(openBlock(),createBlock("p",qu,toDisplayString(e.emptyText),1))],64)):createCommentVNode("v-if",!0)])),_:1})])),_:1},8,["visible","append-to-body","popper-class","onBeforeEnter"])],2)),[[x,e.handleClose,e.popperPaneRef]])},Wu.__file="packages/select/src/select.vue",Wu.install=e=>{e.component(Wu.name,Wu);};const Uu=Wu,Gu=Ru;Gu.install=e=>{e.component(Gu.name,Gu);};var Xu=defineComponent({name:"ElOptionGroup",componentName:"ElOptionGroup",props:{label:String,disabled:{type:Boolean,default:!1}},setup(e){const t=ref(!0);provide("ElSelectGroup",reactive(Object.assign({},toRefs(e))));const n=inject("ElSelect");return n.selectEmitter.on(zu,(()=>{var e;t.value=null===(e=null==n?void 0:n.options)||void 0===e?void 0:e.some((e=>!0===e.visible));})),{visible:t}}});const Qu={class:"el-select-group__wrap"},Zu={class:"el-select-group__title"},Ju={class:"el-select-group"};Xu.render=function(e,t,l,a,n,o){return withDirectives((openBlock(),createBlock("ul",Qu,[createVNode("li",Zu,toDisplayString(e.label),1),createVNode("li",null,[createVNode("ul",Ju,[renderSlot(e.$slots,"default")])])],512)),[[vShow,e.visible]])},Xu.__file="packages/select/src/option-group.vue",Xu.install=e=>{e.component(Xu.name,Xu);};var td=defineComponent({name:"ElPageHeader",props:{title:{type:String,default:()=>ga("el.pageHeader.title")},content:{type:String,default:""}},emits:["back"],setup:(e,{emit:t})=>({handleClick:function(){t("back");}})});const ld={class:"el-page-header"},ad=createVNode("i",{class:"el-icon-back"},null,-1),nd={class:"el-page-header__title"},od={class:"el-page-header__content"};td.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",ld,[createVNode("div",{class:"el-page-header__left",onClick:t[1]||(t[1]=(...t)=>e.handleClick&&e.handleClick(...t))},[ad,createVNode("div",nd,[renderSlot(e.$slots,"title",{},(()=>[createTextVNode(toDisplayString(e.title),1)]))])]),createVNode("div",od,[renderSlot(e.$slots,"content",{},(()=>[createTextVNode(toDisplayString(e.content),1)]))])])},td.__file="packages/page-header/src/index.vue",td.install=e=>{e.component(td.name,td);};const id=td;var rd=defineComponent({name:"Prev",props:{disabled:Boolean,currentPage:{type:Number,default:1},prevText:{type:String,default:""}},setup:e=>({internalDisabled:computed((()=>e.disabled||e.currentPage<=1))})});const sd={key:0},ud={key:1,class:"el-icon el-icon-arrow-left"};rd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("button",{type:"button",class:"btn-prev",disabled:e.internalDisabled,onClick:t[1]||(t[1]=withModifiers((()=>{}),["self","prevent"]))},[e.prevText?(openBlock(),createBlock("span",sd,toDisplayString(e.prevText),1)):(openBlock(),createBlock("i",ud))],8,["disabled"])},rd.__file="packages/pagination/src/prev.vue";var dd=defineComponent({name:"Next",props:{disabled:Boolean,currentPage:{type:Number,default:1},pageCount:{type:Number,default:50},nextText:{type:String,default:""}},setup:e=>({internalDisabled:computed((()=>e.disabled||e.currentPage===e.pageCount||0===e.pageCount))})});const cd={key:0},pd={key:1,class:"el-icon el-icon-arrow-right"};dd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("button",{type:"button",class:"btn-next",disabled:e.internalDisabled,onClick:t[1]||(t[1]=withModifiers((()=>{}),["self","prevent"]))},[e.nextText?(openBlock(),createBlock("span",cd,toDisplayString(e.nextText),1)):(openBlock(),createBlock("i",pd))],8,["disabled"])},dd.__file="packages/pagination/src/next.vue";const hd=()=>{const e=inject("pagination",{});return {pagination:e,pageCount:e.pageCount,disabled:e.disabled,currentPage:e.currentPage}};var vd=defineComponent({name:"Sizes",components:{ElSelect:Uu,ElOption:Gu},props:{pageSize:Number,pageSizes:{type:Array,default:()=>[10,20,30,40,50,100]},popperClass:{type:String,default:""},disabled:Boolean},emits:["page-size-change"],setup(e,{emit:t}){const{pagination:a}=hd(),i=ref(e.pageSize);watch((()=>e.pageSizes),((l,a)=>{if(!isEqual_1(l,a)&&Array.isArray(l)){const a=l.indexOf(e.pageSize)>-1?e.pageSize:e.pageSizes[0];t("page-size-change",a);}})),watch((()=>e.pageSize),(e=>{i.value=e;}));const r=computed((()=>e.pageSizes));return {t:ga,innerPagesizes:r,innerPageSize:i,handleChange:function(e){e!==i.value&&(i.value=e,null==a||a.handleSizesChange(Number(e)));}}}});const md={class:"el-pagination__sizes"};vd.render=function(e,t,l,a,n,o){const i=resolveComponent("el-option"),r=resolveComponent("el-select");return openBlock(),createBlock("span",md,[createVNode(r,{"model-value":e.innerPageSize,disabled:e.disabled,"popper-class":e.popperClass,size:"mini",onChange:e.handleChange},{default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.innerPagesizes,(t=>(openBlock(),createBlock(i,{key:t,value:t,label:t+e.t("el.pagination.pagesize")},null,8,["value","label"])))),128))])),_:1},8,["model-value","disabled","popper-class","onChange"])])},vd.__file="packages/pagination/src/sizes.vue";var fd=defineComponent({components:{ElInput:pl},setup(){const{pagination:e,pageCount:t,disabled:a,currentPage:o}=hd(),i=ref(null),r=computed((()=>{var e;return null!==(e=i.value)&&void 0!==e?e:o.value}));return {t:ga,userInput:i,pageCount:t,disabled:a,handleInput:function(e){i.value=Number(e);},handleChange:function(t){null==e||e.changeEvent(Number(t)),i.value=null;},innerValue:r}}});const gd={class:"el-pagination__jump"};fd.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input");return openBlock(),createBlock("span",gd,[createTextVNode(toDisplayString(e.t("el.pagination.goto"))+" ",1),createVNode(i,{size:"mini",class:"el-pagination__editor is-in-pagination",min:1,max:e.pageCount,disabled:e.disabled,"model-value":e.innerValue,type:"number","onUpdate:modelValue":e.handleInput,onChange:e.handleChange},null,8,["max","disabled","model-value","onUpdate:modelValue","onChange"]),createTextVNode(" "+toDisplayString(e.t("el.pagination.pageClassifier")),1)])},fd.__file="packages/pagination/src/jumper.vue";var bd=defineComponent({name:"Total",props:{total:{type:Number,default:1e3}},setup:()=>({t:ga})});const yd={class:"el-pagination__total"};bd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("span",yd,toDisplayString(e.t("el.pagination.total",{total:e.total})),1)},bd.__file="packages/pagination/src/total.vue";var kd=defineComponent({name:"ElPager",props:{currentPage:{type:Number,default:1},pageCount:{type:Number},pagerCount:{type:Number,default:7},disabled:Boolean},emits:["change"],setup(e,{emit:t}){const a=ref(!1),o=ref(!1),i=ref("el-icon-more"),r=ref("el-icon-more"),s=computed((()=>{const t=e.pagerCount,l=(t-1)/2,a=Number(e.currentPage),n=Number(e.pageCount);let o=!1,i=!1;n>t&&(a>t-l&&(o=!0),a<n-l&&(i=!0));const r=[];if(o&&!i){for(let e=n-(t-2);e<n;e++)r.push(e);}else if(!o&&i)for(let e=2;e<t;e++)r.push(e);else if(o&&i){const e=Math.floor(t/2)-1;for(let t=a-e;t<=a+e;t++)r.push(t);}else for(let e=2;e<n;e++)r.push(e);return r}));return watchEffect((()=>{const t=(e.pagerCount-1)/2;a.value=!1,o.value=!1,e.pageCount>e.pagerCount&&(e.currentPage>e.pagerCount-t&&(a.value=!0),e.currentPage<e.pageCount-t&&(o.value=!0));})),watchEffect((()=>{a.value||(r.value="el-icon-more");})),watchEffect((()=>{o.value||(i.value="el-icon-more");})),{showPrevMore:a,showNextMore:o,quicknextIconClass:i,quickprevIconClass:r,pagers:s,onMouseenter:function(t){e.disabled||("left"===t?r.value="el-icon-d-arrow-left":i.value="el-icon-d-arrow-right");},onPagerClick:function(l){const a=l.target;if("ul"===a.tagName.toLowerCase()||e.disabled)return;let n=Number(a.textContent);const o=e.pageCount,i=e.currentPage,r=e.pagerCount-2;a.className.includes("more")&&(a.className.includes("quickprev")?n=i-r:a.className.includes("quicknext")&&(n=i+r)),isNaN(n)||(n<1&&(n=1),n>o&&(n=o)),n!==i&&t("change",n);}}}});kd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("ul",{class:"el-pager",onClick:t[5]||(t[5]=(...t)=>e.onPagerClick&&e.onPagerClick(...t))},[e.pageCount>0?(openBlock(),createBlock("li",{key:0,class:[{active:1===e.currentPage,disabled:e.disabled},"number"]}," 1 ",2)):createCommentVNode("v-if",!0),e.showPrevMore?(openBlock(),createBlock("li",{key:1,class:["el-icon more btn-quickprev",[e.quickprevIconClass,{disabled:e.disabled}]],onMouseenter:t[1]||(t[1]=t=>e.onMouseenter("left")),onMouseleave:t[2]||(t[2]=t=>e.quickprevIconClass="el-icon-more")},null,34)):createCommentVNode("v-if",!0),(openBlock(!0),createBlock(Fragment,null,renderList(e.pagers,(t=>(openBlock(),createBlock("li",{key:t,class:[{active:e.currentPage===t,disabled:e.disabled},"number"]},toDisplayString(t),3)))),128)),e.showNextMore?(openBlock(),createBlock("li",{key:2,class:["el-icon more btn-quicknext",[e.quicknextIconClass,{disabled:e.disabled}]],onMouseenter:t[3]||(t[3]=t=>e.onMouseenter("right")),onMouseleave:t[4]||(t[4]=t=>e.quicknextIconClass="el-icon-more")},null,34)):createCommentVNode("v-if",!0),e.pageCount>1?(openBlock(),createBlock("li",{key:3,class:[{active:e.currentPage===e.pageCount,disabled:e.disabled},"number"]},toDisplayString(e.pageCount),3)):createCommentVNode("v-if",!0)])},kd.__file="packages/pagination/src/pager.vue";const Cd=e=>Number.isNaN(e)?10:e;const xd=defineComponent({name:"ElPagination",components:{Prev:rd,Next:dd,Sizes:vd,Jumper:fd,Total:bd,Pager:kd},props:{pageSize:{type:Number,default:10},small:Boolean,total:{type:Number},pageCount:{type:Number},pagerCount:{type:Number,validator:e=>(0|e)===e&&e>4&&e<22&&e%2==1,default:7},currentPage:{type:Number,default:1},layout:{type:String,default:"prev, pager, next, jumper, ->, total"},pageSizes:{type:Array,default:()=>[10,20,30,40,50,100]},popperClass:{type:String,default:""},prevText:{type:String,default:""},nextText:{type:String,default:""},background:Boolean,disabled:Boolean,hideOnSinglePage:Boolean},emits:["size-change","current-change","prev-click","next-click","update:currentPage","update:pageSize"],setup(e,{emit:t}){const a=ref(-1),i=ref(!1),r=ref(Cd(e.pageSize)),s=computed((()=>"number"==typeof e.total?Math.max(1,Math.ceil(e.total/r.value)):"number"==typeof e.pageCount?Math.max(1,e.pageCount):null)),u=ref(p(e.currentPage));function d(){(u.value!==a.value||i.value)&&(a.value=u.value,i.value=!1,t("update:currentPage",u.value),t("current-change",u.value));}function c(e){u.value=p(e),i.value=!0,d();}function p(e){let t;"string"==typeof e&&(e=parseInt(e,10));return "number"==typeof s.value?e<1?t=1:e>s.value&&(t=s.value):(isNaN(e)||e<1)&&(t=1),(void 0===t&&isNaN(e)||0===t)&&(t=1),void 0===t?e:t}return watch((()=>e.currentPage),(e=>{u.value=p(e);})),watch((()=>e.pageSize),(e=>{r.value=Cd(e);})),watch((()=>s.value),(e=>{const t=u.value;e>0&&0===t?u.value=1:t>e&&(u.value=0===e?1:e,d());})),provide("pagination",{pageCount:computed((()=>e.pageCount)),disabled:computed((()=>e.disabled)),currentPage:computed((()=>u.value)),changeEvent:c,handleSizesChange:function(e){i.value=!0,r.value=e,t("update:pageSize",e),t("size-change",e);}}),{internalCurrentPage:u,internalPageSize:r,lastEmittedPage:a,userChangePageSize:i,internalPageCount:s,getValidCurrentPage:p,emitChange:d,handleCurrentChange:c,prev:function(){if(e.disabled)return;const l=u.value-1;u.value=p(l),t("prev-click",u.value),d();},next:function(){if(e.disabled)return;const l=u.value+1;u.value=p(l),t("next-click",u.value),d();}}},render(){var e,t,l;const a=this.layout;if(!a)return null;if(this.hideOnSinglePage&&(!this.internalPageCount||1===this.internalPageCount))return null;const n=h("div",{class:["el-pagination",{"is-background":this.background,"el-pagination--small":this.small}]}),o=[],i=[],r=h("div",{class:"el-pagination__rightwrapper"},i),s={prev:h(rd,{disabled:this.disabled,currentPage:this.internalCurrentPage,prevText:this.prevText,onClick:this.prev}),jumper:h(fd),pager:h(kd,{currentPage:this.internalCurrentPage,pageCount:this.internalPageCount,pagerCount:this.pagerCount,onChange:this.handleCurrentChange,disabled:this.disabled}),next:h(dd,{disabled:this.disabled,currentPage:this.internalCurrentPage,pageCount:this.internalPageCount,nextText:this.nextText,onClick:this.next}),sizes:h(vd,{pageSize:this.pageSize,pageSizes:this.pageSizes,popperClass:this.popperClass,disabled:this.disabled}),slot:null!==(l=null===(t=null===(e=this.$slots)||void 0===e?void 0:e.default)||void 0===t?void 0:t.call(e))&&void 0!==l?l:null,total:h(bd,{total:this.total})},u=a.split(",").map((e=>e.trim()));let d=!1;return u.forEach((e=>{"->"!==e?d?i.push(s[e]):o.push(s[e]):d=!0;})),d&&i.length>0&&o.unshift(r),h(n,{},o)}});xd.install=e=>{e.component(xd.name,xd);};var wd=defineComponent({name:"ElPopconfirm",components:{ElButton:da,ElPopper:Rl},props:{title:{type:String},confirmButtonText:{type:String},cancelButtonText:{type:String},confirmButtonType:{type:String,default:"primary"},cancelButtonType:{type:String,default:"text"},icon:{type:String,default:"el-icon-question"},iconColor:{type:String,default:"#f90"},hideIcon:{type:Boolean,default:!1}},emits:["confirm","cancel"],setup(e,{emit:t}){const a=ref(!1),o=computed((()=>e.confirmButtonText||ga("el.popconfirm.confirmButtonText"))),i=computed((()=>e.cancelButtonText||ga("el.popconfirm.cancelButtonText")));return {visible:a,confirm:()=>{a.value=!1,t("confirm");},cancel:()=>{a.value=!1,t("cancel");},confirmButtonText_:o,cancelButtonText_:i}}});const Sd={class:"el-popconfirm"},_d={class:"el-popconfirm__main"},Ed={class:"el-popconfirm__action"};wd.render=function(e,t,l,a,n,o){const i=resolveComponent("el-button"),r=resolveComponent("el-popper");return openBlock(),createBlock(r,{visible:e.visible,"onUpdate:visible":t[1]||(t[1]=t=>e.visible=t),trigger:"click",effect:"light","popper-class":"el-popover","append-to-body":""},{trigger:withCtx((()=>[renderSlot(e.$slots,"reference")])),default:withCtx((()=>[createVNode("div",Sd,[createVNode("p",_d,[e.hideIcon?createCommentVNode("v-if",!0):(openBlock(),createBlock("i",{key:0,class:[e.icon,"el-popconfirm__icon"],style:{color:e.iconColor}},null,6)),createTextVNode(" "+toDisplayString(e.title),1)]),createVNode("div",Ed,[createVNode(i,{size:"mini",type:e.cancelButtonType,onClick:e.cancel},{default:withCtx((()=>[createTextVNode(toDisplayString(e.cancelButtonText_),1)])),_:1},8,["type","onClick"]),createVNode(i,{size:"mini",type:e.confirmButtonType,onClick:e.confirm},{default:withCtx((()=>[createTextVNode(toDisplayString(e.confirmButtonText_),1)])),_:1},8,["type","onClick"])])])])),_:1},8,["visible"])},wd.__file="packages/popconfirm/src/index.vue",wd.install=e=>{e.component(wd.name,wd);};const Md=wd;const Td=["update:visible","after-enter","after-leave","show","hide"],Nd={key:0,class:"el-popover__title",role:"title"};var Dd=defineComponent({name:"ElPopover",components:{ElPopper:Rl},props:Object.assign(Object.assign({},Il),{content:{type:String},trigger:{type:String,default:"click"},title:{type:String},transition:{type:String,default:"fade-in-linear"},width:{type:[String,Number],default:150},appendToBody:{type:Boolean,default:!0}}),emits:Td,setup(e,t){e.visible&&!t.slots.reference&&Le("ElPopover","\n        You cannot init popover without given reference\n      ");return function(e,t){const a=ref(Ol.nextZIndex()),i=computed((()=>Ee(e.width)?e.width:e.width+"px")),r=computed((()=>({width:i.value,zIndex:a.value}))),s=Bl(e,t);return watch(s.visibility,(e=>{e&&(a.value=Ol.nextZIndex()),t.emit(e?"show":"hide");})),Object.assign(Object.assign({},s),{popperStyle:r})}(e,t)},render(){const{$slots:e}=this,t=e.reference?e.reference():null,l=(a=this.title,n="div",o=Nd,i=toDisplayString(this.title),r=bl.TEXT,a?wl(n,o,i,r,s):createCommentVNode("v-if",!0));var a,n,o,i,r,s;const u=renderSlot(e,"default",{},(()=>[createTextVNode(toDisplayString(this.content),bl.TEXT)])),{events:p,onAfterEnter:h,onAfterLeave:b,onPopperMouseEnter:y,onPopperMouseLeave:k,popperStyle:C,popperId:x,popperClass:w,showArrow:S,transition:_,visibility:E}=this,T=[this.content?"el-popover--plain":"","el-popover",w].join(" ");let N=Al({effect:Vl.LIGHT,name:_,popperClass:T,popperStyle:C,popperId:x,visibility:E,onMouseenter:y,onMouseleave:k,onAfterEnter:h,onAfterLeave:b,stopPopperMouseEvent:!1},[l,u,zl(S)]);const D=t?Ll(t,Object.assign({ariaDescribedby:x,ref:"triggerRef"},p)):createCommentVNode("v-if",!0);return wl(Fragment,null,["click"===this.trigger?withDirectives(D,[[zt,this.hide]]):D,createVNode(Teleport,{disabled:!this.appendToBody,to:"body"},[N],bl.PROPS,["disabled"])])}});Dd.__file="packages/popover/src/index.vue";const Od=(e,t,l)=>{const a=t.arg||t.value,n=l.dirs[0].instance.$refs[a];n&&(n.triggerRef=e,Object.entries(n.events).map((([t,l])=>{Je(e,t.toLowerCase().slice(2),l);})));};var Pd={mounted(e,t,l){Od(e,t,l);},updated(e,t,l){Od(e,t,l);}};Dd.install=e=>{e.component(Dd.name,Dd),e.directive("popover",Pd);},Dd.directive=Pd;const Vd=Dd;var Id=defineComponent({name:"ElProgress",props:{type:{type:String,default:"line",validator:e=>["line","circle","dashboard"].indexOf(e)>-1},percentage:{type:Number,default:0,required:!0,validator:e=>e>=0&&e<=100},status:{type:String,default:"",validator:e=>["","success","exception","warning"].indexOf(e)>-1},strokeWidth:{type:Number,default:6},strokeLinecap:{type:String,default:"round"},textInside:{type:Boolean,default:!1},width:{type:Number,default:126},showText:{type:Boolean,default:!0},color:{type:[String,Array,Function],default:""},format:{type:Function,default:e=>e+"%"}},setup(e){const t=computed((()=>({width:e.percentage+"%",backgroundColor:m(e.percentage)}))),l=computed((()=>(e.strokeWidth/e.width*100).toFixed(1))),a=computed((()=>"circle"===e.type||"dashboard"===e.type?parseInt(""+(50-parseFloat(l.value)/2),10):0)),o=computed((()=>{const t=a.value,l="dashboard"===e.type;return `\n          M 50 50\n          m 0 ${l?"":"-"}${t}\n          a ${t} ${t} 0 1 1 0 ${l?"-":""}${2*t}\n          a ${t} ${t} 0 1 1 0 ${l?"":"-"}${2*t}\n          `})),i=computed((()=>2*Math.PI*a.value)),r=computed((()=>"dashboard"===e.type?.75:1)),s=computed((()=>-1*i.value*(1-r.value)/2+"px")),u=computed((()=>({strokeDasharray:`${i.value*r.value}px, ${i.value}px`,strokeDashoffset:s.value}))),d=computed((()=>({strokeDasharray:`${i.value*r.value*(e.percentage/100)}px, ${i.value}px`,strokeDashoffset:s.value,transition:"stroke-dasharray 0.6s ease 0s, stroke 0.6s ease"}))),c=computed((()=>{let t;if(e.color)t=m(e.percentage);else switch(e.status){case"success":t="#13ce66";break;case"exception":t="#ff4949";break;case"warning":t="#e6a23c";break;default:t="#20a0ff";}return t})),p=computed((()=>"warning"===e.status?"el-icon-warning":"line"===e.type?"success"===e.status?"el-icon-circle-check":"el-icon-circle-close":"success"===e.status?"el-icon-check":"el-icon-close")),h=computed((()=>"line"===e.type?12+.4*e.strokeWidth:.111111*e.width+2)),v=computed((()=>e.format(e.percentage))),m=t=>{var l;const{color:a}=e;if("function"==typeof a)return a(t);if("string"==typeof a)return a;{const e=100/a.length,n=a.map(((t,l)=>"string"==typeof t?{color:t,percentage:(l+1)*e}:t)).sort(((e,t)=>e.percentage-t.percentage));for(let e=0;e<n.length;e++)if(n[e].percentage>t)return n[e].color;return null===(l=n[n.length-1])||void 0===l?void 0:l.color}},f=computed((()=>({percentage:e.percentage})));return {barStyle:t,relativeStrokeWidth:l,radius:a,trackPath:o,perimeter:i,rate:r,strokeDashoffset:s,trailPathStyle:u,circlePathStyle:d,stroke:c,iconClass:p,progressTextSize:h,content:v,getCurrentColor:m,slotData:f}}});const Bd={key:0,class:"el-progress-bar"},Ad={key:0,class:"el-progress-bar__innerText"},Ld={viewBox:"0 0 100 100"},zd={key:0};Id.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-progress",["el-progress--"+e.type,e.status?"is-"+e.status:"",{"el-progress--without-text":!e.showText,"el-progress--text-inside":e.textInside}]],role:"progressbar","aria-valuenow":e.percentage,"aria-valuemin":"0","aria-valuemax":"100"},["line"===e.type?(openBlock(),createBlock("div",Bd,[createVNode("div",{class:"el-progress-bar__outer",style:{height:e.strokeWidth+"px"}},[createVNode("div",{class:"el-progress-bar__inner",style:e.barStyle},[(e.showText||e.$slots.default)&&e.textInside?(openBlock(),createBlock("div",Ad,[renderSlot(e.$slots,"default",e.slotData,(()=>[createVNode("span",null,toDisplayString(e.content),1)]))])):createCommentVNode("v-if",!0)],4)],4)])):(openBlock(),createBlock("div",{key:1,class:"el-progress-circle",style:{height:e.width+"px",width:e.width+"px"}},[(openBlock(),createBlock("svg",Ld,[createVNode("path",{class:"el-progress-circle__track",d:e.trackPath,stroke:"#e5e9f2","stroke-width":e.relativeStrokeWidth,fill:"none",style:e.trailPathStyle},null,12,["d","stroke-width"]),createVNode("path",{class:"el-progress-circle__path",d:e.trackPath,stroke:e.stroke,fill:"none","stroke-linecap":e.strokeLinecap,"stroke-width":e.percentage?e.relativeStrokeWidth:0,style:e.circlePathStyle},null,12,["d","stroke","stroke-linecap","stroke-width"])]))],4)),!e.showText&&!e.$slots.default||e.textInside?createCommentVNode("v-if",!0):(openBlock(),createBlock("div",{key:2,class:"el-progress__text",style:{fontSize:e.progressTextSize+"px"}},[renderSlot(e.$slots,"default",e.slotData,(()=>[e.status?(openBlock(),createBlock("i",{key:1,class:e.iconClass},null,2)):(openBlock(),createBlock("span",zd,toDisplayString(e.content),1))]))],4))],10,["aria-valuenow"])},Id.__file="packages/progress/src/index.vue",Id.install=e=>{e.component(Id.name,Id);};const Fd=Id;var Rd=defineComponent({name:"ElRadioButton",props:{label:{type:[String,Number,Boolean],default:""},disabled:Boolean,name:{type:String,default:""}},setup(e){const{isGroup:t,radioGroup:l,elFormItemSize:a,ELEMENT:o,focus:i,elForm:r}=_n(),s=computed((()=>l.radioGroupSize||a.value||o.size)),u=computed({get:()=>l.modelValue,set(e){l.changeEvent(e);}}),{isDisabled:d,tabIndex:c}=En(e,{model:u,elForm:r,radioGroup:l,isGroup:t});return {isGroup:t,size:s,isDisabled:d,tabIndex:c,value:u,focus:i,activeStyle:computed((()=>({backgroundColor:l.fill||"",borderColor:l.fill||"",boxShadow:l.fill?"-1px 0 0 0 "+l.fill:"",color:l.textColor||""})))}}});Rd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("label",{class:["el-radio-button",[e.size?"el-radio-button--"+e.size:"",{"is-active":e.value===e.label,"is-disabled":e.isDisabled,"is-focus":e.focus}]],role:"radio","aria-checked":e.value===e.label,"aria-disabled":e.isDisabled,tabindex:e.tabIndex,onKeydown:t[5]||(t[5]=withKeys(withModifiers((t=>e.value=e.isDisabled?e.value:e.label),["stop","prevent"]),["space"]))},[withDirectives(createVNode("input",{"onUpdate:modelValue":t[1]||(t[1]=t=>e.value=t),class:"el-radio-button__orig-radio",value:e.label,type:"radio",name:e.name,disabled:e.isDisabled,tabindex:"-1",onFocus:t[2]||(t[2]=t=>e.focus=!0),onBlur:t[3]||(t[3]=t=>e.focus=!1)},null,40,["value","name","disabled"]),[[vModelRadio,e.value]]),createVNode("span",{class:"el-radio-button__inner",style:e.value===e.label?e.activeStyle:null,onKeydown:t[4]||(t[4]=withModifiers((()=>{}),["stop"]))},[renderSlot(e.$slots,"default",{},(()=>[createTextVNode(toDisplayString(e.label),1)]))],36)],42,["aria-checked","aria-disabled","tabindex"])},Rd.__file="packages/radio/src/radio-button.vue",Rd.install=e=>{e.component(Rd.name,Rd);};var Hd=defineComponent({name:"ElRadioGroup",componentName:"ElRadioGroup",props:{modelValue:{type:[String,Number,Boolean],default:""},size:{type:String,validator:Ut},fill:{type:String,default:""},textColor:{type:String,default:""},disabled:Boolean},emits:[Kt,"change"],setup(e,t){const r=ref(null),s=inject("elFormItem",{}),u=computed((()=>e.size||s.size));provide("RadioGroup",reactive(Object.assign(Object.assign({name:"ElRadioGroup"},toRefs(e)),{radioGroupSize:u,changeEvent:e=>{t.emit(Kt,e),nextTick((()=>{t.emit("change",e);}));}}))),watch((()=>e.modelValue),(e=>{var t;null===(t=s.formItemMitt)||void 0===t||t.emit("el.form.change",[e]);}));return onMounted((()=>{const e=r.value.querySelectorAll("[type=radio]"),t=e[0];!Array.from(e).some((e=>e.checked))&&t&&(t.tabIndex=0);})),{handleKeydown:e=>{const t=e.target,l="INPUT"===t.nodeName?"[type=radio]":"[role=radio]",a=r.value.querySelectorAll(l),n=a.length,o=Array.from(a).indexOf(t),i=r.value.querySelectorAll("[role=radio]");let s=null;switch(e.code){case Tt.left:case Tt.up:e.stopPropagation(),e.preventDefault(),s=0===o?n-1:o-1;break;case Tt.right:case Tt.down:e.stopPropagation(),e.preventDefault(),s=o===n-1?0:o+1;}null!==s&&(i[s].click(),i[s].focus());},radioGroupSize:u,radioGroup:r}}});Hd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{ref:"radioGroup",class:"el-radio-group",role:"radiogroup",onKeydown:t[1]||(t[1]=(...t)=>e.handleKeydown&&e.handleKeydown(...t))},[renderSlot(e.$slots,"default")],544)},Hd.__file="packages/radio/src/radio-group.vue",Hd.install=e=>{e.component(Hd.name,Hd);};const Wd=Hd;var jd=defineComponent({name:"ElRate",props:{modelValue:{type:Number,default:0},lowThreshold:{type:Number,default:2},highThreshold:{type:Number,default:4},max:{type:Number,default:5},colors:{type:[Array,Object],default:()=>["#F7BA2A","#F7BA2A","#F7BA2A"]},voidColor:{type:String,default:"#C6D1DE"},disabledVoidColor:{type:String,default:"#EFF2F7"},iconClasses:{type:[Array,Object],default:()=>["el-icon-star-on","el-icon-star-on","el-icon-star-on"]},voidIconClass:{type:String,default:"el-icon-star-off"},disabledVoidIconClass:{type:String,default:"el-icon-star-on"},disabled:{type:Boolean,default:!1},allowHalf:{type:Boolean,default:!1},showText:{type:Boolean,default:!1},showScore:{type:Boolean,default:!1},textColor:{type:String,default:"#1f2d3d"},texts:{type:Array,default:()=>["Extremely bad","Disappointed","Fair","Satisfied","Surprise"]},scoreTemplate:{type:String,default:"{value}"}},emits:["update:modelValue","change"],setup(e,{emit:t}){const a=inject("elForm",{}),i=ref(e.modelValue),r=computed((()=>e.disabled||a.disabled)),s=computed((()=>{let t="";return e.showScore?t=e.scoreTemplate.replace(/\{\s*value\s*\}/,r.value?""+e.modelValue:""+i.value):e.showText&&(t=e.texts[Math.ceil(i.value)-1]),t}));function u(e,t){const l=Object.keys(t).filter((l=>{const a=t[l];return !!Me(a)&&a.excluded?e<l:e<=l})).sort(((e,t)=>e-t)),a=t[l[0]];return Me(a)?a.value:a||""}const d=computed((()=>100*e.modelValue-100*Math.floor(e.modelValue))),c=computed((()=>Se(e.colors)?{[e.lowThreshold]:e.colors[0],[e.highThreshold]:{value:e.colors[1],excluded:!0},[e.max]:e.colors[2]}:e.colors)),p=computed((()=>u(i.value,c.value))),h=computed((()=>{let t="";return r.value?t=d.value+"%":e.allowHalf&&(t="50%"),{color:p.value,width:t}})),v=computed((()=>Se(e.iconClasses)?{[e.lowThreshold]:e.iconClasses[0],[e.highThreshold]:{value:e.iconClasses[1],excluded:!0},[e.max]:e.iconClasses[2]}:e.iconClasses)),m=computed((()=>u(e.modelValue,v.value))),f=computed((()=>r.value?e.disabledVoidIconClass:e.voidIconClass)),g=computed((()=>u(i.value,v.value))),b=computed((()=>{let t=Array(e.max),l=i.value;return t.fill(g.value,0,l),t.fill(f.value,l,e.max),t})),y=ref(!0);watch((()=>e.modelValue),(t=>{i.value=t,y.value=e.modelValue!==Math.floor(e.modelValue);}));const k=ref(-1);return e.modelValue||t("update:modelValue",0),{hoverIndex:k,currentValue:i,rateDisabled:r,text:s,decimalStyle:h,decimalIconClass:m,classes:b,showDecimalIcon:function(t){let l=r.value&&d.value>0&&t-1<e.modelValue&&t>e.modelValue,a=e.allowHalf&&y.value&&t-.5<=i.value&&t>i.value;return l||a},getIconStyle:function(t){const l=r.value?e.disabledVoidColor:e.voidColor;return {color:t<=i.value?p.value:l}},selectValue:function(l){r.value||(e.allowHalf&&y.value?(t("update:modelValue",i.value),t("change",this.currentValue)):(t("update:modelValue",l),t("change",l)));},handleKey:function(l){if(r.value)return;let a=i.value;const n=l.code;return n===Tt.up||n===Tt.right?(e.allowHalf?a+=.5:a+=1,l.stopPropagation(),l.preventDefault()):n!==Tt.left&&n!==Tt.down||(e.allowHalf?a-=.5:a-=1,l.stopPropagation(),l.preventDefault()),a=a<0?0:a,a=a>e.max?e.max:a,t("update:modelValue",a),t("change",a),a},setCurrentValue:function(t,l){if(!r.value){if(e.allowHalf){let e=l.target;tt(e,"el-rate__item")&&(e=e.querySelector(".el-rate__icon")),tt(e,"el-rate__decimal")&&(e=e.parentNode),y.value=2*l.offsetX<=e.clientWidth,i.value=y.value?t-.5:t;}else i.value=t;k.value=t;}},resetCurrentValue:function(){r.value||(e.allowHalf&&(y.value=e.modelValue!==Math.floor(e.modelValue)),i.value=e.modelValue,k.value=-1);}}}});jd.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:"el-rate",role:"slider","aria-valuenow":e.currentValue,"aria-valuetext":e.text,"aria-valuemin":"0","aria-valuemax":e.max,tabindex:"0",onKeydown:t[2]||(t[2]=(...t)=>e.handleKey&&e.handleKey(...t))},[(openBlock(!0),createBlock(Fragment,null,renderList(e.max,((l,a)=>(openBlock(),createBlock("span",{key:a,class:"el-rate__item",style:{cursor:e.rateDisabled?"auto":"pointer"},onMousemove:t=>e.setCurrentValue(l,t),onMouseleave:t[1]||(t[1]=(...t)=>e.resetCurrentValue&&e.resetCurrentValue(...t)),onClick:t=>e.selectValue(l)},[createVNode("i",{class:[[e.classes[l-1],{hover:e.hoverIndex===l}],"el-rate__icon"],style:e.getIconStyle(l)},[e.showDecimalIcon(l)?(openBlock(),createBlock("i",{key:0,class:[e.decimalIconClass,"el-rate__decimal"],style:e.decimalStyle},null,6)):createCommentVNode("v-if",!0)],6)],44,["onMousemove","onClick"])))),128)),e.showText||e.showScore?(openBlock(),createBlock("span",{key:0,class:"el-rate__text",style:{color:e.textColor}},toDisplayString(e.text),5)):createCommentVNode("v-if",!0)],40,["aria-valuenow","aria-valuetext","aria-valuemax"])},jd.__file="packages/rate/src/index.vue",jd.install=e=>{e.component(jd.name,jd);};const Yd=defineComponent({name:"ElRow",props:{tag:{type:String,default:"div"},gutter:{type:Number,default:0},type:{type:String,default:""},justify:{type:String,default:"start"},align:{type:String,default:"top"}},setup(e,{slots:t}){const l=computed((()=>e.gutter));provide("ElRow",{gutter:l});const a=computed((()=>{const t={marginLeft:"",marginRight:""};return e.gutter&&(t.marginLeft=`-${e.gutter/2}px`,t.marginRight=t.marginLeft),t}));return ()=>{var l;return h(e.tag,{class:["el-row","start"!==e.justify?"is-justify-"+e.justify:"","top"!==e.align?"is-align-"+e.align:"","flex"===e.type?"el-row--flex":""],style:a.value},null===(l=t.default)||void 0===l?void 0:l.call(t))}}});Yd.install=e=>{e.component(Yd.name,Yd);};const qd=(e,t,a)=>{const{disabled:i,min:r,max:s,step:u,showTooltip:d,precision:c,sliderSize:p,formatTooltip:h,emitChange:v,resetSize:m,updateDragging:f}=inject("SliderProvider"),{tooltip:g,tooltipVisible:b,formatValue:y,displayTooltip:k,hideTooltip:C}=((e,t,a)=>{const o=ref(null),i=ref(!1),r=computed((()=>t.value instanceof Function)),s=computed((()=>r.value&&t.value(e.modelValue)||e.modelValue)),u=debounce_1((()=>{a.value&&(i.value=!0);}),50),d=debounce_1((()=>{a.value&&(i.value=!1);}),50);return {tooltip:o,tooltipVisible:i,formatValue:s,displayTooltip:u,hideTooltip:d}})(e,h,d),w=computed((()=>(e.modelValue-r.value)/(s.value-r.value)*100+"%")),S=computed((()=>e.vertical?{bottom:w.value}:{left:w.value})),E=e=>{let t,l;return e.type.startsWith("touch")?(l=e.touches[0].clientY,t=e.touches[0].clientX):(l=e.clientY,t=e.clientX),{clientX:t,clientY:l}},M=l=>{t.dragging=!0,t.isClick=!0;const{clientX:a,clientY:n}=E(l);e.vertical?t.startY=n:t.startX=a,t.startPosition=parseFloat(w.value),t.newPosition=t.startPosition;},T=l=>{if(t.dragging){let a;t.isClick=!1,k(),m();const{clientX:n,clientY:o}=E(l);e.vertical?(t.currentY=o,a=(t.startY-t.currentY)/p.value*100):(t.currentX=n,a=(t.currentX-t.startX)/p.value*100),t.newPosition=t.startPosition+a,D(t.newPosition);}},N=()=>{t.dragging&&(setTimeout((()=>{t.dragging=!1,t.hovering||C(),t.isClick||(D(t.newPosition),v());}),0),et(window,"mousemove",T),et(window,"touchmove",T),et(window,"mouseup",N),et(window,"touchend",N),et(window,"contextmenu",N));},D=l=>Ss(void 0,void 0,void 0,(function*(){if(null===l||isNaN(l))return;l<0?l=0:l>100&&(l=100);const n=100/((s.value-r.value)/u.value);let o=Math.round(l/n)*n*(s.value-r.value)*.01+r.value;o=parseFloat(o.toFixed(c.value)),a(Kt,o),t.dragging||e.modelValue===t.oldValue||(t.oldValue=e.modelValue),yield nextTick(),t.dragging&&k(),g.value.updatePopper();}));return watch((()=>t.dragging),(e=>{f(e);})),{tooltip:g,tooltipVisible:b,showTooltip:d,wrapperStyle:S,formatValue:y,handleMouseEnter:()=>{t.hovering=!0,k();},handleMouseLeave:()=>{t.hovering=!1,t.dragging||C();},onButtonDown:e=>{i.value||(e.preventDefault(),M(e),Je(window,"mousemove",T),Je(window,"touchmove",T),Je(window,"mouseup",N),Je(window,"touchend",N),Je(window,"contextmenu",N));},onLeftKeyDown:()=>{i.value||(t.newPosition=parseFloat(w.value)-u.value/(s.value-r.value)*100,D(t.newPosition),v());},onRightKeyDown:()=>{i.value||(t.newPosition=parseFloat(w.value)+u.value/(s.value-r.value)*100,D(t.newPosition),v());},setPosition:D}};var Ud=defineComponent({name:"ElSliderButton",components:{ElTooltip:tu},props:{modelValue:{type:Number,default:0},vertical:{type:Boolean,default:!1},tooltipClass:{type:String,default:""}},emits:[Kt],setup(e,{emit:t}){const l=reactive({hovering:!1,dragging:!1,isClick:!1,startX:0,currentX:0,startY:0,currentY:0,startPosition:0,newPosition:0,oldValue:e.modelValue}),{tooltip:n,showTooltip:o,tooltipVisible:i,wrapperStyle:r,formatValue:s,handleMouseEnter:u,handleMouseLeave:d,onButtonDown:c,onLeftKeyDown:p,onRightKeyDown:h,setPosition:v}=qd(e,l,t),{hovering:m,dragging:f}=toRefs(l);return {tooltip:n,tooltipVisible:i,showTooltip:o,wrapperStyle:r,formatValue:s,handleMouseEnter:u,handleMouseLeave:d,onButtonDown:c,onLeftKeyDown:p,onRightKeyDown:h,setPosition:v,hovering:m,dragging:f}}});Ud.render=function(e,t,l,a,n,o){const i=resolveComponent("el-tooltip");return openBlock(),createBlock("div",{ref:"button",class:["el-slider__button-wrapper",{hover:e.hovering,dragging:e.dragging}],style:e.wrapperStyle,tabindex:"0",onMouseenter:t[2]||(t[2]=(...t)=>e.handleMouseEnter&&e.handleMouseEnter(...t)),onMouseleave:t[3]||(t[3]=(...t)=>e.handleMouseLeave&&e.handleMouseLeave(...t)),onMousedown:t[4]||(t[4]=(...t)=>e.onButtonDown&&e.onButtonDown(...t)),onTouchstart:t[5]||(t[5]=(...t)=>e.onButtonDown&&e.onButtonDown(...t)),onFocus:t[6]||(t[6]=(...t)=>e.handleMouseEnter&&e.handleMouseEnter(...t)),onBlur:t[7]||(t[7]=(...t)=>e.handleMouseLeave&&e.handleMouseLeave(...t)),onKeydown:[t[8]||(t[8]=withKeys(((...t)=>e.onLeftKeyDown&&e.onLeftKeyDown(...t)),["left"])),t[9]||(t[9]=withKeys(((...t)=>e.onRightKeyDown&&e.onRightKeyDown(...t)),["right"])),t[10]||(t[10]=withKeys(withModifiers(((...t)=>e.onLeftKeyDown&&e.onLeftKeyDown(...t)),["prevent"]),["down"])),t[11]||(t[11]=withKeys(withModifiers(((...t)=>e.onRightKeyDown&&e.onRightKeyDown(...t)),["prevent"]),["up"]))]},[createVNode(i,{ref:"tooltip",modelValue:e.tooltipVisible,"onUpdate:modelValue":t[1]||(t[1]=t=>e.tooltipVisible=t),placement:"top","stop-popper-mouse-event":!1,"popper-class":e.tooltipClass,disabled:!e.showTooltip,manual:""},{content:withCtx((()=>[createVNode("span",null,toDisplayString(e.formatValue),1)])),default:withCtx((()=>[createVNode("div",{class:["el-slider__button",{hover:e.hovering,dragging:e.dragging}]},null,2)])),_:1},8,["modelValue","popper-class","disabled"])],38)},Ud.__file="packages/slider/src/button.vue";var Gd=defineComponent({name:"ElMarker",props:{mark:{type:[String,Object],default:()=>{}}},setup:e=>({label:computed((()=>"string"==typeof e.mark?e.mark:e.mark.label))}),render(){var e;return h("div",{class:"el-slider__marks-text",style:null===(e=this.mark)||void 0===e?void 0:e.style},this.label)}});Gd.__file="packages/slider/src/marker.vue";var Xd=defineComponent({name:"ElSlider",components:{ElInputNumber:Vs,SliderButton:Ud,SliderMarker:Gd},props:{modelValue:{type:[Number,Array],default:0},min:{type:Number,default:0},max:{type:Number,default:100},step:{type:Number,default:1},showInput:{type:Boolean,default:!1},showInputControls:{type:Boolean,default:!0},inputSize:{type:String,default:"small"},showStops:{type:Boolean,default:!1},showTooltip:{type:Boolean,default:!0},formatTooltip:{type:Function,default:void 0},disabled:{type:Boolean,default:!1},range:{type:Boolean,default:!1},vertical:{type:Boolean,default:!1},height:{type:String,default:""},debounce:{type:Number,default:300},label:{type:String,default:void 0},tooltipClass:{type:String,default:void 0},marks:Object},emits:[Kt,"change"],setup(e,{emit:t}){const o=reactive({firstValue:0,secondValue:0,oldValue:0,dragging:!1,sliderSize:1}),{elFormItem:i,slider:r,firstButton:s,secondButton:u,sliderDisabled:d,minValue:c,maxValue:p,runwayStyle:h,barStyle:v,resetSize:m,emitChange:f,onSliderClick:g}=((e,t,a)=>{const o=inject("elForm",{}),i=inject("elFormItem",{}),r=ref(null),s=ref(null),u=ref(null),d={firstButton:s,secondButton:u},c=computed((()=>e.disabled||o.disabled||!1)),p=computed((()=>Math.min(t.firstValue,t.secondValue))),h=computed((()=>Math.max(t.firstValue,t.secondValue))),v=computed((()=>e.range?100*(h.value-p.value)/(e.max-e.min)+"%":100*(t.firstValue-e.min)/(e.max-e.min)+"%")),m=computed((()=>e.range?100*(p.value-e.min)/(e.max-e.min)+"%":"0%")),f=computed((()=>e.vertical?{height:e.height}:{})),g=computed((()=>e.vertical?{height:v.value,bottom:m.value}:{width:v.value,left:m.value})),b=()=>{r.value&&(t.sliderSize=r.value["client"+(e.vertical?"Height":"Width")]);},y=l=>{const a=e.min+l*(e.max-e.min)/100;if(!e.range)return void s.value.setPosition(l);let n;n=Math.abs(p.value-a)<Math.abs(h.value-a)?t.firstValue<t.secondValue?"firstButton":"secondButton":t.firstValue>t.secondValue?"firstButton":"secondButton",d[n].value.setPosition(l);},k=()=>Ss(void 0,void 0,void 0,(function*(){yield nextTick(),a("change",e.range?[p.value,h.value]:e.modelValue);}));return {elFormItem:i,slider:r,firstButton:s,secondButton:u,sliderDisabled:c,minValue:p,maxValue:h,runwayStyle:f,barStyle:g,resetSize:b,setPosition:y,emitChange:k,onSliderClick:l=>{if(!c.value&&!t.dragging){if(b(),e.vertical){const e=r.value.getBoundingClientRect().bottom;y((e-l.clientY)/t.sliderSize*100);}else {const e=r.value.getBoundingClientRect().left;y((l.clientX-e)/t.sliderSize*100);}k();}}}})(e,o,t),{stops:b,getStopStyle:y}=((e,t,l,a)=>({stops:computed((()=>{if(!e.showStops||e.min>e.max)return [];if(0===e.step)return console.warn("[Element Warn][Slider]step should not be 0."),[];const n=(e.max-e.min)/e.step,o=100*e.step/(e.max-e.min),i=Array.from({length:n-1}).map(((e,t)=>(t+1)*o));return e.range?i.filter((t=>t<100*(l.value-e.min)/(e.max-e.min)||t>100*(a.value-e.min)/(e.max-e.min))):i.filter((l=>l>100*(t.firstValue-e.min)/(e.max-e.min)))})),getStopStyle:t=>e.vertical?{bottom:t+"%"}:{left:t+"%"}}))(e,o,c,p),k=(e=>computed((()=>e.marks?Object.keys(e.marks).map(parseFloat).sort(((e,t)=>e-t)).filter((t=>t<=e.max&&t>=e.min)).map((t=>({point:t,position:100*(t-e.min)/(e.max-e.min),mark:e.marks[t]}))):[])))(e);Qd(e,o,c,p,t,i);const C=computed((()=>{let t=[e.min,e.max,e.step].map((e=>{let t=(""+e).split(".")[1];return t?t.length:0}));return Math.max.apply(null,t)})),{sliderWrapper:E}=Zd(e,o,m),{firstValue:M,secondValue:T,oldValue:N,dragging:D,sliderSize:O}=toRefs(o);return provide("SliderProvider",Object.assign(Object.assign({},toRefs(e)),{sliderSize:O,disabled:d,precision:C,emitChange:f,resetSize:m,updateDragging:e=>{o.dragging=e;}})),{firstValue:M,secondValue:T,oldValue:N,dragging:D,sliderSize:O,slider:r,firstButton:s,secondButton:u,sliderDisabled:d,runwayStyle:h,barStyle:v,emitChange:f,onSliderClick:g,getStopStyle:y,stops:b,markList:k,sliderWrapper:E}}});const Qd=(e,t,l,a,n,i)=>{const r=e=>{n(Kt,e);},s=()=>e.range?![l.value,a.value].every(((e,l)=>e===t.oldValue[l])):e.modelValue!==t.oldValue,u=()=>{var n,o;if(e.min>e.max)return void Ae("Slider","min should not be greater than max.");const u=e.modelValue;e.range&&Array.isArray(u)?u[1]<e.min?r([e.min,e.min]):u[0]>e.max?r([e.max,e.max]):u[0]<e.min?r([e.min,u[1]]):u[1]>e.max?r([u[0],e.max]):(t.firstValue=u[0],t.secondValue=u[1],s()&&(null===(n=i.formItemMitt)||void 0===n||n.emit("el.form.change",[l.value,a.value]),t.oldValue=u.slice())):e.range||"number"!=typeof u||isNaN(u)||(u<e.min?r(e.min):u>e.max?r(e.max):(t.firstValue=u,s()&&(null===(o=i.formItemMitt)||void 0===o||o.emit("el.form.change",u),t.oldValue=u)));};watch((()=>t.dragging),(e=>{e||u();})),watch((()=>t.firstValue),(t=>{e.range?r([l.value,a.value]):r(t);})),watch((()=>t.secondValue),(()=>{e.range&&r([l.value,a.value]);})),watch((()=>e.modelValue),((e,l)=>{t.dragging||Array.isArray(e)&&Array.isArray(l)&&e.every(((e,t)=>e===l[t]))||u();})),watch((()=>[e.min,e.max]),(()=>{u();}));},Zd=(e,t,a)=>{const n=ref(null);return onMounted((()=>Ss(void 0,void 0,void 0,(function*(){let l;e.range?(Array.isArray(e.modelValue)?(t.firstValue=Math.max(e.min,e.modelValue[0]),t.secondValue=Math.min(e.max,e.modelValue[1])):(t.firstValue=e.min,t.secondValue=e.max),t.oldValue=[t.firstValue,t.secondValue],l=`${t.firstValue}-${t.secondValue}`):("number"!=typeof e.modelValue||isNaN(e.modelValue)?t.firstValue=e.min:t.firstValue=Math.min(e.max,Math.max(e.min,e.modelValue)),t.oldValue=t.firstValue,l=t.firstValue),n.value.setAttribute("aria-valuetext",l),n.value.setAttribute("aria-label",e.label?e.label:`slider between ${e.min} and ${e.max}`),Je(window,"resize",a),yield nextTick(),a();})))),onBeforeUnmount((()=>{et(window,"resize",a);})),{sliderWrapper:n}},Jd={key:1},ec={class:"el-slider__marks"};Xd.render=function(e,t,l,a,n,o){const i=resolveComponent("el-input-number"),r=resolveComponent("slider-button"),c=resolveComponent("slider-marker");return openBlock(),createBlock("div",{ref:"sliderWrapper",class:["el-slider",{"is-vertical":e.vertical,"el-slider--with-input":e.showInput}],role:"slider","aria-valuemin":e.min,"aria-valuemax":e.max,"aria-orientation":e.vertical?"vertical":"horizontal","aria-disabled":e.sliderDisabled},[e.showInput&&!e.range?(openBlock(),createBlock(i,{key:0,ref:"input",modelValue:e.firstValue,"onUpdate:modelValue":t[1]||(t[1]=t=>e.firstValue=t),class:"el-slider__input",step:e.step,disabled:e.sliderDisabled,controls:e.showInputControls,min:e.min,max:e.max,debounce:e.debounce,size:e.inputSize,onChange:e.emitChange},null,8,["modelValue","step","disabled","controls","min","max","debounce","size","onChange"])):createCommentVNode("v-if",!0),createVNode("div",{ref:"slider",class:["el-slider__runway",{"show-input":e.showInput,disabled:e.sliderDisabled}],style:e.runwayStyle,onClick:t[4]||(t[4]=(...t)=>e.onSliderClick&&e.onSliderClick(...t))},[createVNode("div",{class:"el-slider__bar",style:e.barStyle},null,4),createVNode(r,{ref:"firstButton",modelValue:e.firstValue,"onUpdate:modelValue":t[2]||(t[2]=t=>e.firstValue=t),vertical:e.vertical,"tooltip-class":e.tooltipClass},null,8,["modelValue","vertical","tooltip-class"]),e.range?(openBlock(),createBlock(r,{key:0,ref:"secondButton",modelValue:e.secondValue,"onUpdate:modelValue":t[3]||(t[3]=t=>e.secondValue=t),vertical:e.vertical,"tooltip-class":e.tooltipClass},null,8,["modelValue","vertical","tooltip-class"])):createCommentVNode("v-if",!0),e.showStops?(openBlock(),createBlock("div",Jd,[(openBlock(!0),createBlock(Fragment,null,renderList(e.stops,((t,l)=>(openBlock(),createBlock("div",{key:l,class:"el-slider__stop",style:e.getStopStyle(t)},null,4)))),128))])):createCommentVNode("v-if",!0),e.markList.length>0?(openBlock(),createBlock(Fragment,{key:2},[createVNode("div",null,[(openBlock(!0),createBlock(Fragment,null,renderList(e.markList,((t,l)=>(openBlock(),createBlock("div",{key:l,style:e.getStopStyle(t.position),class:"el-slider__stop el-slider__marks-stop"},null,4)))),128))]),createVNode("div",ec,[(openBlock(!0),createBlock(Fragment,null,renderList(e.markList,((t,l)=>(openBlock(),createBlock(c,{key:l,mark:t.mark,style:e.getStopStyle(t.position)},null,8,["mark","style"])))),128))])],64)):createCommentVNode("v-if",!0)],6)],10,["aria-valuemin","aria-valuemax","aria-orientation","aria-disabled"])},Xd.__file="packages/slider/src/index.vue",Xd.install=e=>{e.component(Xd.name,Xd);};var lc=defineComponent({name:"ElStep",props:{title:{type:String,default:""},icon:{type:String,default:""},description:{type:String,default:""},status:{type:String,default:"",validator:e=>["","wait","process","finish","error","success"].includes(e)}},setup(t){const s=ref(-1),u=ref({}),d=ref(""),c=inject("ElSteps"),p=getCurrentInstance();onMounted((()=>{watch([()=>c.props.active,()=>c.props.processStatus,()=>c.props.finishStatus],(([e])=>{S(e);}),{immediate:!0});})),onBeforeUnmount((()=>{c.steps.value=c.steps.value.filter((e=>e.uid!==p.uid));}));const h=computed((()=>t.status||d.value)),v=computed((()=>{const e=c.steps.value[s.value-1];return e?e.currentStatus:"wait"})),m=computed((()=>c.props.alignCenter)),f=computed((()=>"vertical"===c.props.direction)),g=computed((()=>c.props.simple)),b=computed((()=>c.steps.value.length)),y=computed((()=>{var e;return (null===(e=c.steps.value[b.value-1])||void 0===e?void 0:e.uid)===p.uid})),k=computed((()=>g.value?"":c.props.space)),C=computed((()=>{const e={flexBasis:"number"==typeof k.value?k.value+"px":k.value?k.value:100/(b.value-(m.value?0:1))+"%"};return f.value||y.value&&(e.maxWidth=100/b.value+"%"),e})),x=e=>{s.value=e;},w=e=>{let t=100;const l={};l.transitionDelay=150*s.value+"ms",e===c.props.processStatus?t=0:"wait"===e&&(t=0,l.transitionDelay=-150*s.value+"ms"),l.borderWidth=t&&!g.value?"1px":0,l["vertical"===c.props.direction?"height":"width"]=t+"%",u.value=l;},S=e=>{e>s.value?d.value=c.props.finishStatus:e===s.value&&"error"!==v.value?d.value=c.props.processStatus:d.value="wait";const t=c.steps.value[b.value-1];t&&t.calcProgress(d.value);},E=reactive({uid:computed((()=>p.uid)),currentStatus:h,setIndex:x,calcProgress:w});return c.steps.value=[...c.steps.value,E],{index:s,lineStyle:u,currentStatus:h,isCenter:m,isVertical:f,isSimple:g,isLast:y,space:k,style:C,parent:c,setIndex:x,calcProgress:w,updateStatus:S}}});const ac={class:"el-step__line"},nc={key:1,class:"el-step__icon-inner"},oc={class:"el-step__main"},ic={key:0,class:"el-step__arrow"};lc.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{style:e.style,class:["el-step",e.isSimple?"is-simple":"is-"+e.parent.props.direction,e.isLast&&!e.space&&!e.isCenter&&"is-flex",e.isCenter&&!e.isVertical&&!e.isSimple&&"is-center"]},[createCommentVNode(" icon & line "),createVNode("div",{class:["el-step__head","is-"+e.currentStatus]},[createVNode("div",ac,[createVNode("i",{class:"el-step__line-inner",style:e.lineStyle},null,4)]),createVNode("div",{class:["el-step__icon","is-"+(e.icon?"icon":"text")]},["success"!==e.currentStatus&&"error"!==e.currentStatus?renderSlot(e.$slots,"icon",{key:0},(()=>[e.icon?(openBlock(),createBlock("i",{key:0,class:["el-step__icon-inner",e.icon]},null,2)):createCommentVNode("v-if",!0),e.icon||e.isSimple?createCommentVNode("v-if",!0):(openBlock(),createBlock("div",nc,toDisplayString(e.index+1),1))])):(openBlock(),createBlock("i",{key:1,class:["el-step__icon-inner","is-status","el-icon-"+("success"===e.currentStatus?"check":"close")]},null,2))],2)],2),createCommentVNode(" title & description "),createVNode("div",oc,[createVNode("div",{class:["el-step__title","is-"+e.currentStatus]},[renderSlot(e.$slots,"title",{},(()=>[createTextVNode(toDisplayString(e.title),1)]))],2),e.isSimple?(openBlock(),createBlock("div",ic)):(openBlock(),createBlock("div",{key:1,class:["el-step__description","is-"+e.currentStatus]},[renderSlot(e.$slots,"description",{},(()=>[createTextVNode(toDisplayString(e.description),1)]))],2))])],6)},lc.__file="packages/steps/src/item.vue",lc.install=e=>{e.component(lc.name,lc);};var sc=defineComponent({name:"ElSteps",props:{space:{type:[Number,String],default:""},active:{type:Number,default:0},direction:{type:String,default:"horizontal",validator:e=>["horizontal","vertical"].includes(e)},alignCenter:{type:Boolean,default:!1},simple:{type:Boolean,default:!1},finishStatus:{type:String,default:"finish",validator:e=>["wait","process","finish","error","success"].includes(e)},processStatus:{type:String,default:"process",validator:e=>["wait","process","finish","error","success"].includes(e)}},emits:["change"],setup(e,{emit:t}){const a=ref([]);return watch(a,(()=>{a.value.forEach(((e,t)=>{e.setIndex(t);}));})),provide("ElSteps",{props:e,steps:a}),watch((()=>e.active),((e,l)=>{t("change",e,l);})),{steps:a}}});sc.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-steps",e.simple?"el-steps--simple":"el-steps--"+e.direction]},[renderSlot(e.$slots,"default")],2)},sc.__file="packages/steps/src/index.vue",sc.install=e=>{e.component(sc.name,sc);};var dc=defineComponent({name:"ElSubmenu",componentName:"ElSubmenu",props:{index:{type:String,required:!0},showTimeout:{type:Number,default:300},hideTimeout:{type:Number,default:300},popperClass:String,disabled:Boolean,popperAppendToBody:{type:Boolean,default:void 0}},setup(t){const o=reactive({popperJS:null,timeout:null,items:{},submenus:{},currentPlacement:"",mouseInChild:!1,opened:!1}),s=ref(null),u=ref(null),d=getCurrentInstance(),{paddingStyle:c,indexPath:p,parentMenu:h}=eu(d,t.index),{openedMenus:v,isMenuPopup:m,hoverBackground:f,methods:g,props:b,methods:{closeMenu:y},rootMenuOn:k,rootMenuEmit:C}=inject("rootMenu"),{addSubMenu:x,removeSubMenu:w,handleMouseleave:E}=inject("subMenu:"+h.value.uid),M=computed((()=>"horizontal"===A.value&&T.value||"vertical"===A.value&&!b.collapse?"el-icon-arrow-down":"el-icon-arrow-right")),T=computed((()=>{let e=!0,t=d.parent;for(;t&&"ElMenu"!==t.type.name;){if(["ElSubmenu","ElMenuItemGroup"].includes(t.type.name)){e=!1;break}t=t.parent;}return e})),N=computed((()=>void 0===t.popperAppendToBody?T.value:Boolean(t.popperAppendToBody))),D=computed((()=>b.collapse?"el-zoom-in-left":"el-zoom-in-top")),O=computed((()=>v.value.includes(t.index))),P=computed((()=>{let e=!1;const t=o.submenus,l=o.items;return Object.keys(l).forEach((t=>{l[t].active&&(e=!0);})),Object.keys(t).forEach((l=>{t[l].active&&(e=!0);})),e})),V=computed((()=>b.backgroundColor||"")),I=computed((()=>b.activeTextColor||"")),B=computed((()=>b.textColor||"")),A=computed((()=>b.mode)),L=computed((()=>"horizontal"!==A.value?{color:B.value}:{borderBottomColor:P.value?b.activeTextColor?I.value:"":"transparent",color:P.value?I.value:B.value})),z=ie(),F=e=>{var t;e?W():null===(t=u.value)||void 0===t||t.doDestroy();},R=e=>{o.submenus[e.index]=e;},$=e=>{delete o.submenus[e.index];},H=(e=!1)=>{"click"===b.menuTrigger&&"horizontal"===b.mode||!b.collapse&&"vertical"===b.mode||(z.emit("submenu:mouse-leave-child"),clearTimeout(o.timeout),o.timeout=setTimeout((()=>{!o.mouseInChild&&y(t.index);}),t.hideTimeout),N.value&&e&&"ElSubmenu"===d.parent.type.name&&E(!0));},W=()=>{o.currentPlacement="horizontal"===A.value&&T.value?"bottom-start":"right-start";};return provide("subMenu:"+d.uid,{addSubMenu:R,removeSubMenu:$,handleMouseleave:H}),onBeforeMount((()=>{k("rootMenu:toggle-collapse",(e=>{F(e);})),z.on("submenu:mouse-enter-child",(()=>{o.mouseInChild=!0,clearTimeout(o.timeout);})),z.on("submenu:mouse-leave-child",(()=>{o.mouseInChild=!1,clearTimeout(o.timeout);}));})),onMounted((()=>{g.addSubMenu({index:t.index,indexPath:p,active:P}),x({index:t.index,indexPath:p,active:P}),W();})),onBeforeUnmount((()=>{w({index:t.index,indexPath:p,active:P}),g.removeSubMenu({index:t.index,indexPath:p,active:P});})),{data:o,props:t,mode:A,active:P,isMenuPopup:m,opened:O,paddingStyle:c,titleStyle:L,backgroundColor:V,rootProps:b,menuTransitionName:D,submenuTitleIcon:M,appendToBody:N,handleClick:()=>{const e=t.disabled;"hover"===b.menuTrigger&&"horizontal"===b.mode||b.collapse&&"vertical"===b.mode||e||C("submenu:submenu-click",{index:t.index,indexPath:p});},handleMouseenter:(e,l=t.showTimeout)=>{if(!("ActiveXObject"in window)&&"focus"===e.type&&!e.relatedTarget)return;const a=t.disabled;"click"===b.menuTrigger&&"horizontal"===b.mode||!b.collapse&&"vertical"===b.mode||a||(z.emit("submenu:mouse-enter-child"),clearTimeout(o.timeout),o.timeout=setTimeout((()=>{g.openMenu(t.index,p);}),l),N.value&&h.value.vnode.el.dispatchEvent(new MouseEvent("mouseenter")));},handleMouseleave:H,handleTitleMouseenter:()=>{var e;if("horizontal"===A.value&&!b.backgroundColor)return;const t=(null===(e=u.value)||void 0===e?void 0:e.triggerRef)||s.value;t&&(t.style.backgroundColor=f.value);},handleTitleMouseleave:()=>{var e;if("horizontal"===A.value&&!b.backgroundColor)return;const t=(null===(e=u.value)||void 0===e?void 0:e.triggerRef)||s.value;t&&(t.style.backgroundColor=b.backgroundColor||"");},addItem:e=>{o.items[e.index]=e;},removeItem:e=>{delete o.items[e.index];},addSubMenu:R,removeSubMenu:$,popperVnode:u,verticalTitleRef:s}},render(){var e,t;const l=[null===(t=(e=this.$slots).title)||void 0===t?void 0:t.call(e),h("i",{class:["el-submenu__icon-arrow",this.submenuTitleIcon]},null)],a={backgroundColor:this.rootProps.backgroundColor||""},n=this.isMenuPopup?h(Rl,{ref:"popperVNode",manualMode:!0,visible:this.opened,"onUpdate:visible":e=>this.opened=e,effect:"light",pure:!0,offset:6,showArrow:!1,popperClass:this.popperClass,placement:this.data.currentPlacement,appendToBody:this.appendToBody},{default:()=>h(Transition,{name:this.menuTransitionName},{default:()=>{var e,t;return withDirectives(h("div",{ref:"menu",class:["el-menu--"+this.mode,this.popperClass],onMouseenter:e=>this.handleMouseenter(e,100),onMouseleave:()=>this.handleMouseleave(!0),onFocus:e=>this.handleMouseenter(e,100)},[h("ul",{class:["el-menu el-menu--popup","el-menu--popup-"+this.data.currentPlacement],style:a},[null===(t=(e=this.$slots).default)||void 0===t?void 0:t.call(e)])]),[[vShow,this.opened]])}}),trigger:()=>h("div",{class:"el-submenu__title",style:[this.paddingStyle,this.titleStyle,{backgroundColor:this.backgroundColor}],onClick:this.handleClick,onMouseenter:this.handleTitleMouseenter,onMouseleave:this.handleTitleMouseleave},l)}):h(Fragment,{},[h("div",{class:"el-submenu__title",style:[this.paddingStyle,this.titleStyle,{backgroundColor:this.backgroundColor}],ref:"verticalTitleRef",onClick:this.handleClick,onMouseenter:this.handleTitleMouseenter,onMouseleave:this.handleTitleMouseleave},l),h(bo,{},{default:()=>{var e,t;return withDirectives(h("ul",{role:"menu",class:"el-menu el-menu--inline",style:a},[null===(t=(e=this.$slots).default)||void 0===t?void 0:t.call(e)]),[[vShow,this.opened]])}})]);return h("li",{class:["el-submenu",{"is-active":this.active,"is-opened":this.opened,"is-disabled":this.disabled}],role:"menuitem",ariaHaspopup:!0,ariaExpanded:this.opened,onMouseenter:this.handleMouseenter,onMouseleave:()=>this.handleMouseleave(!0),onFocus:this.handleMouseenter},[n])}});dc.__file="packages/menu/src/submenu.vue",dc.install=e=>{e.component(dc.name,dc);};var pc=defineComponent({name:"ElSwitch",props:{modelValue:{type:[Boolean,String,Number],default:!1},value:{type:[Boolean,String,Number],default:!1},disabled:{type:Boolean,default:!1},width:{type:Number,default:40},activeIconClass:{type:String,default:""},inactiveIconClass:{type:String,default:""},activeText:{type:String,default:""},inactiveText:{type:String,default:""},activeColor:{type:String,default:""},inactiveColor:{type:String,default:""},activeValue:{type:[Boolean,String,Number],default:!0},inactiveValue:{type:[Boolean,String,Number],default:!1},name:{type:String,default:""},validateEvent:{type:Boolean,default:!0},id:String,loading:{type:Boolean,default:!1}},emits:["update:modelValue","change","input"],setup(e,t){const a=inject("elForm",{}),r=inject("elFormItem",{}),s=ref(!1!==e.modelValue),u=ref(null),d=ref(null);watch((()=>e.modelValue),(()=>{s.value=!0;})),watch((()=>e.value),(()=>{s.value=!1;}));const c=computed((()=>s.value?e.modelValue:e.value)),p=computed((()=>c.value===e.activeValue));~[e.activeValue,e.inactiveValue].indexOf(c.value)||(t.emit("update:modelValue",e.inactiveValue),t.emit("change",e.inactiveValue),t.emit("input",e.inactiveValue)),watch(p,(()=>{var t;u.value.checked=p.value,(e.activeColor||e.inactiveColor)&&m(),e.validateEvent&&(null===(t=r.formItemMitt)||void 0===t||t.emit("el.form.change",[c.value]));}));const h=computed((()=>e.disabled||e.loading||(a||{}).disabled)),v=()=>{const l=p.value?e.inactiveValue:e.activeValue;t.emit("update:modelValue",l),t.emit("change",l),t.emit("input",l),nextTick((()=>{u.value.checked=p.value;}));},m=()=>{const t=p.value?e.activeColor:e.inactiveColor,l=d.value;l.style.borderColor=t,l.style.backgroundColor=t,l.children[0].style.color=t;};return onMounted((()=>{(e.activeValue||e.inactiveValue)&&m(),u.value.checked=p.value;})),{input:u,core:d,switchDisabled:h,checked:p,handleChange:v,switchValue:()=>{!h.value&&v();}}}});const hc={class:"el-switch__action"},vc={key:0,class:"el-icon-loading"};pc.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-switch",{"is-disabled":e.switchDisabled,"is-checked":e.checked}],role:"switch","aria-checked":e.checked,"aria-disabled":e.switchDisabled,onClick:t[3]||(t[3]=withModifiers(((...t)=>e.switchValue&&e.switchValue(...t)),["prevent"]))},[createVNode("input",{id:e.id,ref:"input",class:"el-switch__input",type:"checkbox",name:e.name,"true-value":e.activeValue,"false-value":e.inactiveValue,disabled:e.switchDisabled,onChange:t[1]||(t[1]=(...t)=>e.handleChange&&e.handleChange(...t)),onKeydown:t[2]||(t[2]=withKeys(((...t)=>e.switchValue&&e.switchValue(...t)),["enter"]))},null,40,["id","name","true-value","false-value","disabled"]),e.inactiveIconClass||e.inactiveText?(openBlock(),createBlock("span",{key:0,class:["el-switch__label","el-switch__label--left",e.checked?"":"is-active"]},[e.inactiveIconClass?(openBlock(),createBlock("i",{key:0,class:[e.inactiveIconClass]},null,2)):createCommentVNode("v-if",!0),!e.inactiveIconClass&&e.inactiveText?(openBlock(),createBlock("span",{key:1,"aria-hidden":e.checked},toDisplayString(e.inactiveText),9,["aria-hidden"])):createCommentVNode("v-if",!0)],2)):createCommentVNode("v-if",!0),createVNode("span",{ref:"core",class:"el-switch__core",style:{width:(e.width||40)+"px"}},[createVNode("div",hc,[e.loading?(openBlock(),createBlock("i",vc)):createCommentVNode("v-if",!0)])],4),e.activeIconClass||e.activeText?(openBlock(),createBlock("span",{key:1,class:["el-switch__label","el-switch__label--right",e.checked?"is-active":""]},[e.activeIconClass?(openBlock(),createBlock("i",{key:0,class:[e.activeIconClass]},null,2)):createCommentVNode("v-if",!0),!e.activeIconClass&&e.activeText?(openBlock(),createBlock("span",{key:1,"aria-hidden":!e.checked},toDisplayString(e.activeText),9,["aria-hidden"])):createCommentVNode("v-if",!0)],2)):createCommentVNode("v-if",!0)],10,["aria-checked","aria-disabled"])},pc.__file="packages/switch/src/index.vue",pc.install=e=>{e.component(pc.name,pc);};var fc=defineComponent({name:"ElTabPane",props:{label:{type:String,default:""},name:{type:String,default:""},closable:Boolean,disabled:Boolean,lazy:Boolean},setup(t){const a=ref(null),o=ref(!1),i=inject("rootTabs"),r=inject("updatePaneState");if(!i||!r)throw new Error("ElTabPane must use with ElTabs");const s=computed((()=>t.closable||i.props.closable)),u=computed((()=>{const e=i.currentName.value===(t.name||a.value);return e&&(o.value=!0),e})),d=computed((()=>t.name||a.value)),c=computed((()=>!t.lazy||o.value||u.value)),p=getCurrentInstance();return r({uid:p.uid,instance:p,props:t,paneName:d,active:u,index:a,isClosable:s}),{index:a,loaded:o,isClosable:s,active:u,paneName:d,shouldBeRender:c}}});fc.render=function(e,t,l,a,n,o){return e.shouldBeRender?withDirectives((openBlock(),createBlock("div",{key:0,id:"pane-"+e.paneName,class:"el-tab-pane",role:"tabpanel","aria-hidden":!e.active,"aria-labelledby":"tab-"+e.paneName},[renderSlot(e.$slots,"default")],8,["id","aria-hidden","aria-labelledby"])),[[vShow,e.active]]):createCommentVNode("v-if",!0)},fc.__file="packages/tabs/src/tab-pane.vue",fc.install=e=>{e.component(fc.name,fc);};const bc=function(e){let t=e.target;for(;t&&"HTML"!==t.tagName.toUpperCase();){if("TD"===t.tagName.toUpperCase())return t;t=t.parentNode;}return null},yc=function(e){return null!==e&&"object"==typeof e},kc=function(e,t,l,a,n){if(!t&&!a&&(!n||Array.isArray(n)&&!n.length))return e;l="string"==typeof l?"descending"===l?-1:1:l&&l<0?-1:1;const o=a?null:function(l,a){return n?(Array.isArray(n)||(n=[n]),n.map((function(t){return "string"==typeof t?ze(l,t):t(l,a,e)}))):("$key"!==t&&yc(l)&&"$value"in l&&(l=l.$value),[yc(l)?ze(l,t):l])};return e.map((function(e,t){return {value:e,index:t,key:o?o(e,t):null}})).sort((function(e,t){let n=function(e,t){if(a)return a(e.value,t.value);for(let l=0,a=e.key.length;l<a;l++){if(e.key[l]<t.key[l])return -1;if(e.key[l]>t.key[l])return 1}return 0}(e,t);return n||(n=e.index-t.index),n*l})).map((e=>e.value))},Cc=function(e,t){let l=null;return e.columns.forEach((function(e){e.id===t&&(l=e);})),l},xc=function(e,t){const l=(t.className||"").match(/el-table_[^\s]+/gm);return l?Cc(e,l[0]):null},wc=(e,t)=>{if(!e)throw new Error("row is required when get row identity");if("string"==typeof t){if(t.indexOf(".")<0)return e[t];const l=t.split(".");let a=e;for(let e=0;e<l.length;e++)a=a[l[e]];return a}if("function"==typeof t)return t.call(null,e)},Sc=function(e,t){const l={};return (e||[]).forEach(((e,a)=>{l[wc(e,t)]={row:e,index:a};})),l};function _c(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function Ec(e){return void 0!==e&&(e=parseInt(e,10),isNaN(e)&&(e=null)),e}function Mc(e){return "number"==typeof e?e:"string"==typeof e?/^\d+(?:px)?$/.test(e)?parseInt(e,10):e:null}function Tc(e,t,l){let a=!1;const n=e.indexOf(t),o=-1!==n,i=()=>{e.push(t),a=!0;},r=()=>{e.splice(n,1),a=!0;};return "boolean"==typeof l?l&&!o?i():!l&&o&&r():o?r():i(),a}function Nc(e,t,l="children",a="hasChildren"){const n=e=>!(Array.isArray(e)&&e.length);function o(e,i,r){t(e,i,r),i.forEach((e=>{if(e[a])return void t(e,null,r+1);const i=e[l];n(i)||o(e,i,r+1);}));}e.forEach((e=>{if(e[a])return void t(e,null,0);const i=e[l];n(i)||o(e,i,0);}));}let Dc;const Oc=e=>{const t=[];return e.forEach((e=>{e.children?t.push.apply(t,Oc(e.children)):t.push(e);})),t};function Pc(){const t=getCurrentInstance(),a=ref(null),i=ref([]),r=ref([]),s=ref(!1),u=ref([]),d=ref([]),c=ref([]),p=ref([]),h=ref([]),v=ref([]),m=ref([]),f=ref([]),g=ref(0),b=ref(0),y=ref(0),k=ref(!1),C=ref([]),x=ref(!1),w=ref(!1),S=ref(null),_=ref({}),E=ref(null),M=ref(null),T=ref(null),N=ref(null),D=ref(null);watch(i,(()=>t.state&&P(!1)),{deep:!0});const O=()=>{p.value=u.value.filter((e=>!0===e.fixed||"left"===e.fixed)),h.value=u.value.filter((e=>"right"===e.fixed)),p.value.length>0&&u.value[0]&&"selection"===u.value[0].type&&!u.value[0].fixed&&(u.value[0].fixed=!0,p.value.unshift(u.value[0]));const e=u.value.filter((e=>!e.fixed));d.value=[].concat(p.value).concat(e).concat(h.value);const t=Oc(e),l=Oc(p.value),a=Oc(h.value);g.value=t.length,b.value=l.length,y.value=a.length,c.value=[].concat(l).concat(t).concat(a),s.value=p.value.length>0||h.value.length>0;},P=(e,l=!1)=>{e&&O(),l?t.state.doLayout():t.state.debouncedUpdateLayout();},V=(e,t,l)=>{M.value&&M.value!==e&&(M.value.order=null),M.value=e,T.value=t,N.value=l;},I=()=>{let e=unref(r);Object.keys(_.value).forEach((t=>{const l=_.value[t];if(!l||0===l.length)return;const a=Cc({columns:c.value},t);a&&a.filterMethod&&(e=e.filter((e=>l.some((t=>a.filterMethod.call(null,t,e,a))))));})),E.value=e;},B=()=>{i.value=((e,t)=>{const l=t.sortingColumn;return l&&"string"!=typeof l.sortable?kc(e,t.sortProp,t.sortOrder,l.sortMethod,l.sortBy):e})(E.value,{sortingColumn:M.value,sortProp:T.value,sortOrder:N.value});},{setExpandRowKeys:A,toggleRowExpansion:L,updateExpandRows:z,states:F,isRowExpanded:R}=function(t){const a=getCurrentInstance(),n=ref(!1),o=ref([]);return {updateExpandRows:()=>{const e=t.data.value||[],l=t.rowKey.value;if(n.value)o.value=e.slice();else if(l){const t=Sc(o.value,l);o.value=e.reduce(((e,a)=>{const n=wc(a,l);return t[n]&&e.push(a),e}),[]);}else o.value=[];},toggleRowExpansion:(e,t)=>{Tc(o.value,e,t)&&(a.emit("expand-change",e,o.value.slice()),a.store.scheduleLayout());},setExpandRowKeys:e=>{a.store.assertRowKey();const l=t.data.value||[],n=t.rowKey.value,i=Sc(l,n);o.value=e.reduce(((e,t)=>{const l=i[t];return l&&e.push(l.row),e}),[]);},isRowExpanded:e=>{const l=t.rowKey.value;return l?!!Sc(o.value,l)[wc(e,l)]:-1!==o.value.indexOf(e)},states:{expandRows:o,defaultExpandAll:n}}}({data:i,rowKey:a}),{updateTreeExpandKeys:$,toggleTreeExpansion:H,loadOrToggle:W,states:j}=function(t){const a=ref([]),i=ref({}),r=ref(16),s=ref(!1),u=ref({}),d=ref("hasChildren"),c=ref("children"),p=getCurrentInstance(),h=computed((()=>{if(!t.rowKey.value)return {};const e=t.data.value||[];return m(e)})),v=computed((()=>{const e=t.rowKey.value,l=Object.keys(u.value),a={};return l.length?(l.forEach((t=>{if(u.value[t].length){const l={children:[]};u.value[t].forEach((t=>{const n=wc(t,e);l.children.push(n),t[d.value]&&!a[n]&&(a[n]={children:[]});})),a[t]=l;}})),a):a})),m=e=>{const l=t.rowKey.value,a={};return Nc(e,((e,t,n)=>{const o=wc(e,l);Array.isArray(t)?a[o]={children:t.map((e=>wc(e,l))),level:n}:s.value&&(a[o]={children:[],lazy:!0,level:n});}),c.value,d.value),a},f=()=>{var e,t;const l=h.value,n=v.value,o=Object.keys(l),r={};if(o.length){const t=unref(i),u=null===(e=p.store)||void 0===e?void 0:e.states.defaultExpandAll.value,d=[],c=(e,t)=>{const l=u||a.value&&-1!==a.value.indexOf(t);return !!(e&&e.expanded||l)};o.forEach((e=>{const a=t[e],n=Object.assign({},l[e]);if(n.expanded=c(a,e),n.lazy){const{loaded:t=!1,loading:l=!1}=a||{};n.loaded=!!t,n.loading=!!l,d.push(e);}r[e]=n;}));const h=Object.keys(n);s.value&&h.length&&d.length&&h.forEach((e=>{const l=t[e],a=n[e].children;if(-1!==d.indexOf(e)){if(0!==r[e].children.length)throw new Error("[ElTable]children must be an empty array.");r[e].children=a;}else {const{loaded:t=!1,loading:n=!1}=l||{};r[e]={lazy:!0,loaded:!!t,loading:!!n,expanded:c(l,e),children:a,level:""};}}));}i.value=r,null===(t=p.store)||void 0===t||t.updateTableScrollY();};watch((()=>h.value),f),watch((()=>v.value),f);const g=(e,l)=>{p.store.assertRowKey();const a=t.rowKey.value,n=wc(e,a),o=n&&i.value[n];if(n&&o&&"expanded"in o){const t=o.expanded;l=void 0===l?!o.expanded:l,i.value[n].expanded=l,t!==l&&p.emit("expand-change",e,l),p.store.updateTableScrollY();}},b=(e,t,l)=>{const{load:a}=p.props;a&&!i.value[t].loaded&&(i.value[t].loading=!0,a(e,l,(l=>{if(!Array.isArray(l))throw new Error("[ElTable] data must be an array");i.value[t].loading=!1,i.value[t].loaded=!0,i.value[t].expanded=!0,l.length&&(u.value[t]=l),p.emit("expand-change",e,!0);})));};return {loadData:b,loadOrToggle:e=>{p.store.assertRowKey();const l=t.rowKey.value,a=wc(e,l),n=i.value[a];s.value&&n&&"loaded"in n&&!n.loaded?b(e,a,n):g(e,void 0);},toggleTreeExpansion:g,updateTreeExpandKeys:e=>{a.value=e,f();},updateTreeData:f,normalize:m,states:{expandRowKeys:a,treeData:i,indent:r,lazy:s,lazyTreeNodeMap:u,lazyColumnIdentifier:d,childrenColumnName:c}}}({data:i,rowKey:a}),{updateCurrentRowData:K,updateCurrentRow:Y,setCurrentRowKey:q,states:U}=function(t){const a=getCurrentInstance(),n=ref(null),o=ref(null),i=()=>{n.value=null;},r=e=>{const{data:l=[],rowKey:a}=t;let n=null;a.value&&(n=Ue(unref(l),(t=>wc(t,a.value)===e))),o.value=n;};return {setCurrentRowKey:e=>{a.store.assertRowKey(),n.value=e,r(e);},restoreCurrentRowKey:i,setCurrentRowByKey:r,updateCurrentRow:e=>{const t=o.value;if(e&&e!==t)return o.value=e,void a.emit("current-change",o.value,t);!e&&t&&(o.value=null,a.emit("current-change",null,t));},updateCurrentRowData:()=>{const e=t.rowKey.value,l=t.data.value||[],s=o.value;if(-1===l.indexOf(s)&&s){if(e){const t=wc(s,e);r(t);}else o.value=null;null===o.value&&a.emit("current-change",null,s);}else n.value&&(r(n.value),i());},states:{_currentRowKey:n,currentRow:o}}}({data:i,rowKey:a});return {assertRowKey:()=>{if(!a.value)throw new Error("[ElTable] prop row-key is required")},updateColumns:O,scheduleLayout:P,isSelected:e=>C.value.indexOf(e)>-1,clearSelection:()=>{k.value=!1;C.value.length&&(C.value=[],t.emit("selection-change",[]));},cleanSelection:()=>{let e;if(a.value){e=[];const t=Sc(C.value,a.value),l=Sc(i.value,a.value);for(const a in t)t.hasOwnProperty(a)&&!l[a]&&e.push(t[a].row);}else e=C.value.filter((e=>-1===i.value.indexOf(e)));if(e.length){const l=C.value.filter((t=>-1===e.indexOf(t)));C.value=l,t.emit("selection-change",l.slice());}},toggleRowSelection:(e,l,a=!0)=>{if(Tc(C.value,e,l)){const l=(C.value||[]).slice();a&&t.emit("select",l,e),t.emit("selection-change",l);}},_toggleAllSelection:()=>{const e=w.value?!k.value:!(k.value||C.value.length);k.value=e;let l=!1;i.value.forEach(((t,a)=>{S.value?S.value.call(null,t,a)&&Tc(C.value,t,e)&&(l=!0):Tc(C.value,t,e)&&(l=!0);})),l&&t.emit("selection-change",C.value?C.value.slice():[]),t.emit("select-all",C.value);},updateSelectionByRowKey:()=>{const e=Sc(C.value,a.value);i.value.forEach((t=>{const l=wc(t,a.value),n=e[l];n&&(C.value[n.index]=t);}));},updateAllSelected:()=>{var e;if(0===(null===(e=i.value)||void 0===e?void 0:e.length))return void(k.value=!1);let t;a.value&&(t=Sc(C.value,a.value));let l=!0,n=0;for(let e=0,r=(i.value||[]).length;e<r;e++){const r=i.value[e],s=S.value&&S.value.call(null,r,e);if(o=r,t?t[wc(o,a.value)]:-1!==C.value.indexOf(o))n++;else if(!S.value||s){l=!1;break}}var o;0===n&&(l=!1),k.value=l;},updateFilters:(e,t)=>{Array.isArray(e)||(e=[e]);const l={};return e.forEach((e=>{_.value[e.id]=t,l[e.columnKey||e.id]=t;})),l},updateCurrentRow:Y,updateSort:V,execFilter:I,execSort:B,execQuery:e=>{e&&e.filter||I(),B();},clearFilter:e=>{const{tableHeader:l,fixedTableHeader:a,rightFixedTableHeader:n}=t.refs;let o={};l&&(o=Object.assign(o,l.filterPanels)),a&&(o=Object.assign(o,a.filterPanels)),n&&(o=Object.assign(o,n.filterPanels));const i=Object.keys(o);if(i.length)if("string"==typeof e&&(e=[e]),Array.isArray(e)){const l=e.map((e=>function(e,t){let l=null;for(let a=0;a<e.columns.length;a++){const n=e.columns[a];if(n.columnKey===t){l=n;break}}return l}({columns:c.value},e)));i.forEach((e=>{const t=l.find((t=>t.id===e));t&&(t.filteredValue=[]);})),t.store.commit("filterChange",{column:l,values:[],silent:!0,multi:!0});}else i.forEach((e=>{const t=c.value.find((t=>t.id===e));t&&(t.filteredValue=[]);})),_.value={},t.store.commit("filterChange",{column:{},values:[],silent:!0});},clearSort:()=>{M.value&&(V(null,null,null),t.store.commit("changeSortCondition",{silent:!0}));},toggleRowExpansion:L,setExpandRowKeysAdapter:e=>{A(e),$(e);},setCurrentRowKey:q,toggleRowExpansionAdapter:(e,t)=>{c.value.some((({type:e})=>"expand"===e))?L(e,t):H(e,t);},isRowExpanded:R,updateExpandRows:z,updateCurrentRowData:K,loadOrToggle:W,states:Object.assign(Object.assign(Object.assign({rowKey:a,data:i,_data:r,isComplex:s,_columns:u,originColumns:d,columns:c,fixedColumns:p,rightFixedColumns:h,leafColumns:v,fixedLeafColumns:m,rightFixedLeafColumns:f,leafColumnsLength:g,fixedLeafColumnsLength:b,rightFixedLeafColumnsLength:y,isAllSelected:k,selection:C,reserveSelection:x,selectOnIndeterminate:w,selectable:S,filters:_,filteredData:E,sortingColumn:M,sortProp:T,sortOrder:N,hoverRow:D},F),j),U)}}function Vc(e,t){return e.map((e=>{var l;return e.id===t.id?t:((null===(l=e.children)||void 0===l?void 0:l.length)&&(e.children=Vc(e.children,t)),e)}))}function Ic(e){e.forEach((e=>{var t,l;e.no=null===(t=e.getColumnIndex)||void 0===t?void 0:t.call(e),(null===(l=e.children)||void 0===l?void 0:l.length)&&Ic(e.children);})),e.sort(((e,t)=>e.no-t.no));}function Bc(){const t=getCurrentInstance(),l={setData(e,l){const a=unref(e.data)!==l;e.data.value=l,e._data.value=l,t.store.execQuery(),t.store.updateCurrentRowData(),t.store.updateExpandRows(),unref(e.reserveSelection)?(t.store.assertRowKey(),t.store.updateSelectionByRowKey()):a?t.store.clearSelection():t.store.cleanSelection(),t.store.updateAllSelected(),t.$ready&&t.store.scheduleLayout();},insertColumn(e,l,a){const n=unref(e._columns);let o=[];a?(a&&!a.children&&(a.children=[]),a.children.push(l),o=Vc(n,a)):(n.push(l),o=n),Ic(o),e._columns.value=o,"selection"===l.type&&(e.selectable.value=l.selectable,e.reserveSelection.value=l.reserveSelection),t.$ready&&(t.store.updateColumns(),t.store.scheduleLayout());},removeColumn(e,l,a){const n=unref(e._columns)||[];if(a)a.children.splice(a.children.findIndex((e=>e.id===l.id)),1),0===a.children.length&&delete a.children,e._columns.value=Vc(n,a);else {const t=n.indexOf(l);t>-1&&(n.splice(t,1),e._columns.value=n);}t.$ready&&(t.store.updateColumns(),t.store.scheduleLayout());},sort(e,l){const{prop:a,order:n,init:o}=l;if(a){const l=Ue(unref(e.columns),(e=>e.property===a));l&&(l.order=n,t.store.updateSort(l,a,n),t.store.commit("changeSortCondition",{init:o}));}},changeSortCondition(e,l){const{sortingColumn:a,sortProp:n,sortOrder:o}=e;null===unref(o)&&(e.sortingColumn.value=null,e.sortProp.value=null);t.store.execQuery({filter:!0}),l&&(l.silent||l.init)||t.emit("sort-change",{column:unref(a),prop:unref(n),order:unref(o)}),t.store.updateTableScrollY();},filterChange(e,l){const{column:a,values:n,silent:o}=l,i=t.store.updateFilters(a,n);t.store.execQuery(),o||t.emit("filter-change",i),t.store.updateTableScrollY();},toggleAllSelection(){t.store.toggleAllSelection();},rowSelectedChanged(e,l){t.store.toggleRowSelection(l),t.store.updateAllSelected();},setHoverRow(e,t){e.hoverRow.value=t;},setCurrentRow(e,l){t.store.updateCurrentRow(l);}},a=Pc();return Object.assign(Object.assign({},a),{mutations:l,commit:function(e,...l){const a=t.store.mutations;if(!a[e])throw new Error("Action not found: "+e);a[e].apply(t,[t.store.states].concat(l));},updateTableScrollY:function(){nextTick((()=>t.layout.updateScrollY.apply(t.layout)));}})}class Ac{constructor(e){this.observers=[],this.table=null,this.store=null,this.columns=[],this.fit=!0,this.showHeader=!0,this.height=ref(null),this.scrollX=ref(!1),this.scrollY=ref(!1),this.bodyWidth=ref(null),this.fixedWidth=ref(null),this.rightFixedWidth=ref(null),this.tableHeight=ref(null),this.headerHeight=ref(44),this.appendHeight=ref(0),this.footerHeight=ref(44),this.viewportHeight=ref(null),this.bodyHeight=ref(null),this.fixedBodyHeight=ref(null),this.gutterWidth=_t();for(const t in e)e.hasOwnProperty(t)&&(isRef(this[t])?this[t].value=e[t]:this[t]=e[t]);if(!this.table)throw new Error("table is required for Table Layout");if(!this.store)throw new Error("store is required for Table Layout")}updateScrollY(){if(null===this.height.value)return !1;const e=this.table.refs.bodyWrapper;if(this.table.vnode.el&&e){const t=e.querySelector(".el-table__body"),l=this.scrollY.value,a=t.offsetHeight>this.bodyHeight.value;return this.scrollY.value=a,l!==a}return !1}setHeight(e,t="height"){if(Ce)return;const l=this.table.vnode.el;if(e=Mc(e),this.height.value=Number(e),!l&&(e||0===e))return nextTick((()=>this.setHeight(e,t)));"number"==typeof e?(l.style[t]=e+"px",this.updateElsHeight()):"string"==typeof e&&(l.style[t]=e,this.updateElsHeight());}setMaxHeight(e){this.setHeight(e,"max-height");}getFlattenColumns(){const e=[];return this.table.store.states.columns.value.forEach((t=>{t.isColumnGroup?e.push.apply(e,t.columns):e.push(t);})),e}updateElsHeight(){if(!this.table.$ready)return nextTick((()=>this.updateElsHeight()));const{headerWrapper:e,appendWrapper:t,footerWrapper:l}=this.table.refs,a=t,n=e,o=l;if(this.appendHeight.value=a?a.offsetHeight:0,this.showHeader&&!n)return;const i=n?n.querySelector(".el-table__header tr"):null,r=this.headerDisplayNone(i),s=this.headerHeight.value=this.showHeader?n.offsetHeight:0;if(this.showHeader&&!r&&n.offsetWidth>0&&(this.table.store.states.columns.value||[]).length>0&&s<2)return nextTick((()=>this.updateElsHeight()));const u=this.tableHeight.value=this.table.vnode.el.clientHeight,d=this.footerHeight.value=o?o.offsetHeight:0;null!==this.height.value&&(this.bodyHeight.value=u-s-d+(o?1:0)),this.fixedBodyHeight.value=this.scrollX.value?this.bodyHeight.value-this.gutterWidth:this.bodyHeight.value,this.viewportHeight.value=this.scrollX.value?u-this.gutterWidth:u,this.updateScrollY(),this.notifyObservers("scrollable");}headerDisplayNone(e){if(!e)return !0;let t=e;for(;"DIV"!==t.tagName;){if("none"===getComputedStyle(t).display)return !0;t=t.parentElement;}return !1}updateColumnsWidth(){if(Ce)return;const e=this.fit,t=this.table.vnode.el.clientWidth;let l=0;const a=this.getFlattenColumns(),n=a.filter((e=>"number"!=typeof e.width));if(a.forEach((e=>{"number"==typeof e.width&&e.realWidth&&(e.realWidth=null);})),n.length>0&&e){a.forEach((e=>{l+=e.width||e.minWidth||80;}));const e=this.scrollY.value?this.gutterWidth:0;if(l<=t-e){this.scrollX.value=!1;const a=t-e-l;if(1===n.length)n[0].realWidth=(n[0].minWidth||80)+a;else {const e=a/n.reduce(((e,t)=>e+(t.minWidth||80)),0);let t=0;n.forEach(((l,a)=>{if(0===a)return;const n=Math.floor((l.minWidth||80)*e);t+=n,l.realWidth=(l.minWidth||80)+n;})),n[0].realWidth=(n[0].minWidth||80)+a-t;}}else this.scrollX.value=!0,n.forEach((function(e){e.realWidth=e.minWidth;}));this.bodyWidth.value=Math.max(l,t),this.table.state.resizeState.value.width=this.bodyWidth.value;}else a.forEach((e=>{e.width||e.minWidth?e.realWidth=e.width||e.minWidth:e.realWidth=80,l+=e.realWidth;})),this.scrollX.value=l>t,this.bodyWidth.value=l;const o=this.store.states.fixedColumns.value;if(o.length>0){let e=0;o.forEach((function(t){e+=t.realWidth||t.width;})),this.fixedWidth.value=e;}const i=this.store.states.rightFixedColumns.value;if(i.length>0){let e=0;i.forEach((function(t){e+=t.realWidth||t.width;})),this.rightFixedWidth.value=e;}this.notifyObservers("columns");}addObserver(e){this.observers.push(e);}removeObserver(e){const t=this.observers.indexOf(e);-1!==t&&this.observers.splice(t,1);}notifyObservers(e){this.observers.forEach((t=>{var l,a;switch(e){case"columns":null===(l=t.state)||void 0===l||l.onColumnsChange(this);break;case"scrollable":null===(a=t.state)||void 0===a||a.onScrollableChange(this);break;default:throw new Error(`Table Layout don't have event ${e}.`)}}));}}var Lc=defineComponent({name:"ElTableFilterPanel",components:{ElCheckbox:Sn,ElCheckboxGroup:po,ElScrollbar:gl,ElPopper:Rl},directives:{ClickOutside:zt},props:{placement:{type:String,default:"bottom-start"},store:{type:Object},column:{type:Object},upDataColumn:{type:Function}},setup(t){const a=getCurrentInstance(),i=a.parent;i.filterPanels.value[t.column.id]||(i.filterPanels.value[t.column.id]=a);const r=ref(!1),s=ref(null),u=computed((()=>t.column&&t.column.filters)),d=computed({get:()=>(t.column.filteredValue||[])[0],set:e=>{c.value&&(null!=e?c.value.splice(0,1,e):c.value.splice(0,1));}}),c=computed({get:()=>t.column&&t.column.filteredValue||[],set(e){t.column&&t.upDataColumn("filteredValue",e);}}),p=computed((()=>!t.column||t.column.filterMultiple)),h=()=>{r.value=!1;},v=e=>{t.store.commit("filterChange",{column:t.column,values:e}),t.store.updateAllSelected();};watch(r,(e=>{t.column&&t.upDataColumn("filterOpened",e);}),{immediate:!0});const m=computed((()=>{var e;return null===(e=s.value)||void 0===e?void 0:e.popperRef}));return {tooltipVisible:r,multiple:p,filteredValue:c,filterValue:d,filters:u,handleConfirm:()=>{v(c.value),h();},handleReset:()=>{c.value=[],v(c.value),h();},handleSelect:e=>{d.value=e,v(null!=e?c.value:[]),h();},isActive:e=>e.value===d.value,t:ga,showFilterPanel:e=>{e.stopPropagation(),r.value=!r.value;},hideFilterPanel:()=>{r.value=!1;},popperPaneRef:m,tooltip:s}}});const zc={key:0},Fc={class:"el-table-filter__content"},Rc={class:"el-table-filter__bottom"},$c={key:1,class:"el-table-filter__list"};function Hc(t){const l=getCurrentInstance();onBeforeMount((()=>{a.value.addObserver(l);})),onMounted((()=>{o(a.value),r(a.value);})),onUpdated((()=>{o(a.value),r(a.value);})),onUnmounted((()=>{a.value.removeObserver(l);}));const a=computed((()=>{const e=t.layout;if(!e)throw new Error("Can not find table layout.");return e})),o=e=>{var l;const a=null===(l=t.vnode.el)||void 0===l?void 0:l.querySelectorAll("colgroup > col");if(!a.length)return;const n=e.getFlattenColumns(),o={};n.forEach((e=>{o[e.id]=e;}));for(let e=0,t=a.length;e<t;e++){const t=a[e],l=t.getAttribute("name"),n=o[l];n&&t.setAttribute("width",n.realWidth||n.width);}},r=e=>{const l=t.vnode.el.querySelectorAll("colgroup > col[name=gutter]");for(let t=0,a=l.length;t<a;t++){l[t].setAttribute("width",e.scrollY.value?e.gutterWidth:"0");}const a=t.vnode.el.querySelectorAll("th.gutter");for(let t=0,l=a.length;t<l;t++){const l=a[t];l.style.width=e.scrollY.value?e.gutterWidth+"px":"0",l.style.display=e.scrollY.value?"":"none";}};return {tableLayout:a.value,onColumnsChange:o,onScrollableChange:r}}function Wc(t){const l=getCurrentInstance().parent,a=l.store.states;return {getHeaderRowStyle:e=>{const t=l.props.headerRowStyle;return "function"==typeof t?t.call(null,{rowIndex:e}):t},getHeaderRowClass:e=>{const t=[],a=l.props.headerRowClassName;return "string"==typeof a?t.push(a):"function"==typeof a&&t.push(a.call(null,{rowIndex:e})),t.join(" ")},getHeaderCellStyle:(e,t,a,n)=>{const o=l.props.headerCellStyle;return "function"==typeof o?o.call(null,{rowIndex:e,columnIndex:t,row:a,column:n}):o},getHeaderCellClass:(e,n,o,i)=>{const r=[i.id,i.order,i.headerAlign,i.className,i.labelClassName];0===e&&((e,l)=>{let n=0;for(let t=0;t<e;t++)n+=l[t].colSpan;const o=n+l[e].colSpan-1;return "left"===t.fixed?o>=a.fixedLeafColumnsLength.value:"right"===t.fixed?n<a.columns.value.length-a.rightFixedLeafColumnsLength.value:o<a.fixedLeafColumnsLength.value||n>=a.columns.value.length-a.rightFixedLeafColumnsLength.value})(n,o)&&r.push("is-hidden"),i.children||r.push("is-leaf"),i.sortable&&r.push("is-sortable");const s=l.props.headerCellClassName;return "string"==typeof s?r.push(s):"function"==typeof s&&r.push(s.call(null,{rowIndex:e,columnIndex:n,row:o,column:i})),r.join(" ")}}}Lc.render=function(e,t,l,a,n,o){const i=resolveComponent("el-checkbox"),r=resolveComponent("el-checkbox-group"),c=resolveComponent("el-scrollbar"),p=resolveComponent("el-popper"),m=resolveDirective("click-outside");return openBlock(),createBlock(p,{ref:"tooltip",visible:e.tooltipVisible,"onUpdate:visible":t[6]||(t[6]=t=>e.tooltipVisible=t),offset:0,placement:e.placement,"show-arrow":!1,"stop-popper-mouse-event":!1,effect:"light",pure:"","manual-mode":"","popper-class":"el-table-filter","append-to-body":""},{default:withCtx((()=>[e.multiple?(openBlock(),createBlock("div",zc,[createVNode("div",Fc,[createVNode(c,{"wrap-class":"el-table-filter__wrap"},{default:withCtx((()=>[createVNode(r,{modelValue:e.filteredValue,"onUpdate:modelValue":t[1]||(t[1]=t=>e.filteredValue=t),class:"el-table-filter__checkbox-group"},{default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.filters,(e=>(openBlock(),createBlock(i,{key:e.value,label:e.value},{default:withCtx((()=>[createTextVNode(toDisplayString(e.text),1)])),_:2},1032,["label"])))),128))])),_:1},8,["modelValue"])])),_:1})]),createVNode("div",Rc,[createVNode("button",{class:{"is-disabled":0===e.filteredValue.length},disabled:0===e.filteredValue.length,type:"",onClick:t[2]||(t[2]=(...t)=>e.handleConfirm&&e.handleConfirm(...t))},toDisplayString(e.t("el.table.confirmFilter")),11,["disabled"]),createVNode("button",{type:"",onClick:t[3]||(t[3]=(...t)=>e.handleReset&&e.handleReset(...t))},toDisplayString(e.t("el.table.resetFilter")),1)])])):(openBlock(),createBlock("ul",$c,[createVNode("li",{class:[{"is-active":void 0===e.filterValue||null===e.filterValue},"el-table-filter__list-item"],onClick:t[4]||(t[4]=t=>e.handleSelect(null))},toDisplayString(e.t("el.table.clearFilter")),3),(openBlock(!0),createBlock(Fragment,null,renderList(e.filters,(t=>(openBlock(),createBlock("li",{key:t.value,class:[{"is-active":e.isActive(t)},"el-table-filter__list-item"],label:t.value,onClick:l=>e.handleSelect(t.value)},toDisplayString(t.text),11,["label","onClick"])))),128))]))])),trigger:withCtx((()=>[withDirectives(createVNode("span",{class:"el-table__column-filter-trigger el-none-outline",onClick:t[5]||(t[5]=(...t)=>e.showFilterPanel&&e.showFilterPanel(...t))},[createVNode("i",{class:["el-icon-arrow-down",e.column.filterOpened?"el-icon-arrow-up":""]},null,2)],512),[[m,e.hideFilterPanel,e.popperPaneRef]])])),_:1},8,["visible","placement"])},Lc.__file="packages/table/src/filter-panel.vue";const jc=e=>{const t=[];return e.forEach((e=>{e.children?(t.push(e),t.push.apply(t,jc(e.children))):t.push(e);})),t};function Kc(t){const l=getCurrentInstance().parent,a=computed((()=>(e=>{let t=1;const l=(e,a)=>{if(a&&(e.level=a.level+1,t<e.level&&(t=e.level)),e.children){let t=0;e.children.forEach((a=>{l(a,e),t+=a.colSpan;})),e.colSpan=t;}else e.colSpan=1;};e.forEach((e=>{e.level=1,l(e,void 0);}));const a=[];for(let e=0;e<t;e++)a.push([]);return jc(e).forEach((e=>{e.children?e.rowSpan=1:e.rowSpan=t-e.level+1,a[e.level-1].push(e);})),a})(t.store.states.originColumns.value)));return {isGroup:computed((()=>{const e=a.value.length>1;return e&&(l.state.isGroup.value=!0),e})),toggleAllSelection:e=>{e.stopPropagation(),l.store.commit("toggleAllSelection");},columnRows:a}}function Yc(){return h("col",{name:"gutter"})}function qc(e,t=!1){return h("colgroup",{},[...e.map((e=>h("col",{name:e.id,key:e.id}))),t&&Yc()])}var Uc=defineComponent({name:"ElTableHeader",components:{ElCheckbox:Sn},props:{fixed:{type:String,default:""},store:{required:!0,type:Object},border:Boolean,defaultSort:{type:Object,default:()=>({prop:"",order:""})}},setup(t,{emit:a}){const o=getCurrentInstance(),r=o.parent,s=r.store.states,u=ref({}),{tableLayout:d,onColumnsChange:c,onScrollableChange:p}=Hc(r),h=computed((()=>!t.fixed&&d.gutterWidth));onMounted((()=>{nextTick((()=>{const{prop:e,order:l}=t.defaultSort;r.store.commit("sort",{prop:e,order:l,init:!0});}));}));const{handleHeaderClick:v,handleHeaderContextMenu:m,handleMouseDown:f,handleMouseMove:g,handleMouseOut:b,handleSortClick:y,handleFilterClick:k}=function(t,a){const n=getCurrentInstance(),o=n.parent,i=e=>{e.stopPropagation();},r=ref(null),s=ref(!1),u=ref({}),d=(e,l,a)=>{e.stopPropagation();const n=l.order===a?null:a||(({order:e,sortOrders:t})=>{if(""===e)return t[0];const l=t.indexOf(e||null);return t[l>t.length-2?0:l+1]})(l);let i=e.target;for(;i&&"TH"!==i.tagName;)i=i.parentNode;if(i&&"TH"===i.tagName&&tt(i,"noclick"))return void at(i,"noclick");if(!l.sortable)return;const r=t.store.states;let s,u=r.sortProp.value;const d=r.sortingColumn.value;(d!==l||d===l&&null===d.order)&&(d&&(d.order=null),r.sortingColumn.value=l,u=l.property),s=l.order=n||null,r.sortProp.value=u,r.sortOrder.value=s,o.store.commit("changeSortCondition");};return {handleHeaderClick:(e,t)=>{!t.filters&&t.sortable?d(e,t,!1):t.filterable&&!t.sortable&&i(e),o.emit("header-click",t,e);},handleHeaderContextMenu:(e,t)=>{o.emit("header-contextmenu",t,e);},handleMouseDown:(e,l)=>{if(!Ce&&!(l.children&&l.children.length>0)&&r.value&&t.border){s.value=!0;const i=o;a("set-drag-visible",!0);const d=i.vnode.el.getBoundingClientRect().left,c=n.vnode.el.querySelector("th."+l.id),p=c.getBoundingClientRect(),h=p.left-d+30;lt(c,"noclick"),u.value={startMouseLeft:e.clientX,startLeft:p.right-d,startColumnLeft:p.left-d,tableLeft:d};const v=i.refs.resizeProxy;v.style.left=u.value.startLeft+"px",document.onselectstart=function(){return !1},document.ondragstart=function(){return !1};const m=e=>{const t=e.clientX-u.value.startMouseLeft,l=u.value.startLeft+t;v.style.left=Math.max(h,l)+"px";},f=()=>{if(s.value){const{startColumnLeft:n,startLeft:o}=u.value,d=parseInt(v.style.left,10)-n;l.width=l.realWidth=d,i.emit("header-dragend",l.width,o-n,l,e),t.store.scheduleLayout(!1,!0),document.body.style.cursor="",s.value=!1,r.value=null,u.value={},a("set-drag-visible",!1);}document.removeEventListener("mousemove",m),document.removeEventListener("mouseup",f),document.onselectstart=null,document.ondragstart=null,setTimeout((function(){at(c,"noclick");}),0);};document.addEventListener("mousemove",m),document.addEventListener("mouseup",f);}},handleMouseMove:(e,l)=>{if(l.children&&l.children.length>0)return;let a=e.target;for(;a&&"TH"!==a.tagName;)a=a.parentNode;if(l&&l.resizable&&!s.value&&t.border){const t=a.getBoundingClientRect(),n=document.body.style;t.width>12&&t.right-e.pageX<8?(n.cursor="col-resize",tt(a,"is-sortable")&&(a.style.cursor="col-resize"),r.value=l):s.value||(n.cursor="",tt(a,"is-sortable")&&(a.style.cursor="pointer"),r.value=null);}},handleMouseOut:()=>{Ce||(document.body.style.cursor="");},handleSortClick:d,handleFilterClick:i}}(t,a),{getHeaderRowStyle:C,getHeaderRowClass:w,getHeaderCellStyle:S,getHeaderCellClass:_}=Wc(t),{isGroup:E,toggleAllSelection:M,columnRows:T}=Kc(t);return o.state={onColumnsChange:c,onScrollableChange:p},o.filterPanels=u,{columns:s.columns,filterPanels:u,hasGutter:h,onColumnsChange:c,onScrollableChange:p,columnRows:T,getHeaderRowClass:w,getHeaderRowStyle:C,getHeaderCellClass:_,getHeaderCellStyle:S,handleHeaderClick:v,handleHeaderContextMenu:m,handleMouseDown:f,handleMouseMove:g,handleMouseOut:b,handleSortClick:y,handleFilterClick:k,isGroup:E,toggleAllSelection:M}},render(){return h("table",{border:"0",cellpadding:"0",cellspacing:"0",class:"el-table__header"},[qc(this.columns,this.hasGutter),h("thead",{class:{"is-group":this.isGroup,"has-gutter":this.hasGutter}},this.columnRows.map(((e,t)=>h("tr",{class:this.getHeaderRowClass(t),key:t,style:this.getHeaderRowStyle(t)},e.map(((l,a)=>h("th",{class:this.getHeaderCellClass(t,a,e,l),colspan:l.colSpan,key:l.id+"-thead",rowSpan:l.rowSpan,style:this.getHeaderCellStyle(t,a,e,l),onClick:e=>this.handleHeaderClick(e,l),onContextmenu:e=>this.handleHeaderContextMenu(e,l),onMousedown:e=>this.handleMouseDown(e,l),onMousemove:e=>this.handleMouseMove(e,l),onMouseout:this.handleMouseOut},[h("div",{class:["cell",l.filteredValue&&l.filteredValue.length>0?"highlight":"",l.labelClassName]},[l.renderHeader?l.renderHeader({column:l,$index:a,store:this.store,_self:this.$parent}):l.label,l.sortable&&h("span",{onClick:e=>this.handleSortClick(e,l),class:"caret-wrapper"},[h("i",{onClick:e=>this.handleSortClick(e,l,"ascending"),class:"sort-caret ascending"}),h("i",{onClick:e=>this.handleSortClick(e,l,"descending"),class:"sort-caret descending"})]),l.filterable&&h(Lc,{store:this.$parent.store,placement:l.filterPlacement||"bottom-start",column:l,upDataColumn:(e,t)=>{l[e]=t;}})])])))))))])}});function Gc(t){const a=getCurrentInstance().parent,n=ref(""),o=ref(h("div")),i=(e,l,n)=>{const o=a,i=bc(e);let r;i&&(r=xc({columns:t.store.states.columns.value},i),r&&o.emit("cell-"+n,l,r,i,e)),o.emit("row-"+n,l,r,e);};return {handleDoubleClick:(e,t)=>{i(e,t,"dblclick");},handleClick:(e,l)=>{t.store.commit("setCurrentRow",l),i(e,l,"click");},handleContextMenu:(e,t)=>{i(e,t,"contextmenu");},handleMouseEnter:debounce_1((function(e){t.store.commit("setHoverRow",e);}),30),handleMouseLeave:debounce_1((function(){t.store.commit("setHoverRow",null);}),30),handleCellMouseEnter:(e,l)=>{const n=a,o=bc(e);if(o){const a=xc({columns:t.store.states.columns.value},o),i=n.hoverState={cell:o,column:a,row:l};n.emit("cell-mouse-enter",i.row,i.column,i.cell,e);}const i=e.target.querySelector(".cell");if(!tt(i,"el-tooltip")||!i.childNodes.length)return;const r=document.createRange();r.setStart(i,0),r.setEnd(i,i.childNodes.length);(r.getBoundingClientRect().width+((parseInt(nt(i,"paddingLeft"),10)||0)+(parseInt(nt(i,"paddingRight"),10)||0))>i.offsetWidth||i.scrollWidth>i.offsetWidth)&&function(e,t,l,a){function n(){o&&o.update();}Dc=function t(){try{o&&o.destroy(),i&&document.body.removeChild(i),et(e,"mouseenter",n),et(e,"mouseleave",t);}catch(e){}};let o=null;const i=function(){const e="light"===a,l=document.createElement("div");return l.className="el-popper "+(e?"is-light":"is-dark"),l.innerHTML=t,l.style.zIndex=String(Ol.nextZIndex()),document.body.appendChild(l),l}(),r=function(){const e=document.createElement("div");return e.className="el-popper__arrow",e.style.bottom="-4px",e}();i.appendChild(r),o=createPopper(e,i,Object.assign({modifiers:[{name:"offset",options:{offset:[0,8]}},{name:"arrow",options:{element:r,padding:10}}]},l)),Je(e,"mouseenter",n),Je(e,"mouseleave",Dc);}(o,o.innerText||o.textContent,{placement:"top",strategy:"fixed"},l.tooltipEffect);},handleCellMouseLeave:e=>{if(!bc(e))return;const t=a.hoverState;a.emit("cell-mouse-leave",null==t?void 0:t.row,null==t?void 0:t.column,null==t?void 0:t.cell,e);},tooltipContent:n,tooltipTrigger:o}}function Xc(t){const l=getCurrentInstance().parent,{handleDoubleClick:a,handleClick:o,handleContextMenu:i,handleMouseEnter:r,handleMouseLeave:s,handleCellMouseEnter:u,handleCellMouseLeave:d,tooltipContent:c,tooltipTrigger:p}=Gc(t),{getRowStyle:h$1,getRowClass:v,getCellStyle:m,getCellClass:f,getSpan:g,getColspanRealWidth:b}=function(t){const l=getCurrentInstance().parent,a=e=>"left"===t.fixed?e>=t.store.states.fixedLeafColumnsLength.value:"right"===t.fixed?e<t.store.states.columns.value.length-t.store.states.rightFixedLeafColumnsLength.value:e<t.store.states.fixedLeafColumnsLength.value||e>=t.store.states.columns.value.length-t.store.states.rightFixedLeafColumnsLength.value;return {getRowStyle:(e,t)=>{const a=l.props.rowStyle;return "function"==typeof a?a.call(null,{row:e,rowIndex:t}):a||null},getRowClass:(e,a)=>{const n=["el-table__row"];l.props.highlightCurrentRow&&e===t.store.states.currentRow.value&&n.push("current-row"),t.stripe&&a%2==1&&n.push("el-table__row--striped");const o=l.props.rowClassName;return "string"==typeof o?n.push(o):"function"==typeof o&&n.push(o.call(null,{row:e,rowIndex:a})),t.store.states.expandRows.value.indexOf(e)>-1&&n.push("expanded"),n},getCellStyle:(e,t,a,n)=>{const o=l.props.cellStyle;return "function"==typeof o?o.call(null,{rowIndex:e,columnIndex:t,row:a,column:n}):o},getCellClass:(e,t,n,o)=>{const i=[o.id,o.align,o.className];a(t)&&i.push("is-hidden");const r=l.props.cellClassName;return "string"==typeof r?i.push(r):"function"==typeof r&&i.push(r.call(null,{rowIndex:e,columnIndex:t,row:n,column:o})),i.join(" ")},getSpan:(e,t,a,n)=>{let o=1,i=1;const r=l.props.spanMethod;if("function"==typeof r){const l=r({row:e,column:t,rowIndex:a,columnIndex:n});Array.isArray(l)?(o=l[0],i=l[1]):"object"==typeof l&&(o=l.rowspan,i=l.colspan);}return {rowspan:o,colspan:i}},getColspanRealWidth:(e,t,l)=>t<1?e[l].realWidth:e.map((({realWidth:e,width:t})=>e||t)).slice(l,l+t).reduce(((e,t)=>e+t),-1),isColumnHidden:a}}(t),y=computed((()=>{return e=t.store.states.columns.value,l=({type:e})=>"default"===e,e.findIndex(l);var e,l;})),k=(e,t)=>{const a=l.props.rowKey;return a?wc(e,a):t},C=(e,n,c)=>{const{tooltipEffect:p,store:C}=t,{indent:x,columns:w}=C.states,S=v(e,n);let _=!0;c&&(S.push("el-table__row--level-"+c.level),_=c.display);return h("tr",{style:[_?null:{display:"none"},h$1(e,n)],class:S,key:k(e,n),onDblclick:t=>a(t,e),onClick:t=>o(t,e),onContextmenu:t=>i(t,e),onMouseenter:()=>r(n),onMouseleave:s},w.value.map(((a,o)=>{const{rowspan:i,colspan:r}=g(e,a,n,o);if(!i||!r)return null;const s=Object.assign({},a);s.realWidth=b(w.value,r,o);const h$1={store:t.store,_self:t.context||l,column:s,row:e,$index:n};return o===y.value&&c&&(h$1.treeNode={indent:c.level*x.value,level:c.level},"boolean"==typeof c.expanded&&(h$1.treeNode.expanded=c.expanded,"loading"in c&&(h$1.treeNode.loading=c.loading),"noLazyChildren"in c&&(h$1.treeNode.noLazyChildren=c.noLazyChildren))),h("td",{style:m(n,o,e,a),class:f(n,o,e,a),rowspan:i,colspan:r,onMouseenter:t=>u(t,Object.assign(Object.assign({},e),{tooltipEffect:p})),onMouseleave:d},[a.renderCell(h$1)])})))};return {wrappedRowRender:(e,a)=>{const n=t.store,{isRowExpanded:o,assertRowKey:i}=n,{treeData:r,lazyTreeNodeMap:s,childrenColumnName:u,rowKey:d}=n.states;if(n.states.columns.value.some((({type:e})=>"expand"===e))&&o(e)){const t=l.renderExpanded,o=C(e,a,void 0);return t?[[o,h("tr",{key:"expanded-row__"+o.key},[h("td",{colspan:n.states.columns.value.length,class:"el-table__expanded-cell"},[t({row:e,$index:a,store:n})])])]]:(console.error("[Element Error]renderExpanded is required."),o)}if(Object.keys(r.value).length){i();const t=wc(e,d.value);let l=r.value[t],n=null;l&&(n={expanded:l.expanded,level:l.level,display:!0},"boolean"==typeof l.lazy&&("boolean"==typeof l.loaded&&l.loaded&&(n.noLazyChildren=!(l.children&&l.children.length)),n.loading=l.loading));const o=[C(e,a,n)];if(l){let n=0;const i=(e,t)=>{e&&e.length&&t&&e.forEach((e=>{const c={display:t.display&&t.expanded,level:t.level+1,expanded:!1,noLazyChildren:!1,loading:!1},p=wc(e,d.value);if(null==p)throw new Error("for nested data item, row-key is required.");if(l=Object.assign({},r.value[p]),l&&(c.expanded=l.expanded,l.level=l.level||c.level,l.display=!(!l.expanded||!c.display),"boolean"==typeof l.lazy&&("boolean"==typeof l.loaded&&l.loaded&&(c.noLazyChildren=!(l.children&&l.children.length)),c.loading=l.loading)),n++,o.push(C(e,a+n,c)),l){const t=s.value[p]||e[u.value];i(t,l);}}));};l.display=!0;const c=s.value[t]||e[u.value];i(c,l);}return o}return C(e,a,void 0)},tooltipContent:c,tooltipTrigger:p}}var Qc=defineComponent({name:"ElTableBody",props:{store:{required:!0,type:Object},stripe:Boolean,tooltipEffect:String,context:{default:()=>({}),type:Object},rowClassName:[String,Function],rowStyle:[Object,Function],fixed:{type:String,default:""},highlight:Boolean},setup(t){const l=getCurrentInstance(),a=l.parent,{wrappedRowRender:n,tooltipContent:i,tooltipTrigger:r}=Xc(t),{onColumnsChange:s,onScrollableChange:u}=Hc(a);return watch(t.store.states.hoverRow,((e,a)=>{if(!t.store.states.isComplex.value||Ce)return;let n=window.requestAnimationFrame;n||(n=e=>window.setTimeout(e,16)),n((()=>{const t=l.vnode.el.querySelectorAll(".el-table__row"),n=t[a],o=t[e];n&&at(n,"hover-row"),o&&lt(o,"hover-row");}));})),onUnmounted((()=>{null==Dc||Dc();})),onUpdated((()=>{null==Dc||Dc();})),{onColumnsChange:s,onScrollableChange:u,wrappedRowRender:n,tooltipContent:i,tooltipTrigger:r}},render(){const e=this.store.states.data.value||[];return h("table",{class:"el-table__body",cellspacing:"0",cellpadding:"0",border:"0"},[qc(this.store.states.columns.value),h("tbody",{},[e.reduce(((e,t)=>e.concat(this.wrappedRowRender(t,e.length))),[])])])}});function Zc(t){const l=getCurrentInstance().parent,a=l.store,{leftFixedLeafCount:o,rightFixedLeafCount:i,columnsCount:r,leftFixedCount:s,rightFixedCount:u,columns:d}=function(){const t=getCurrentInstance().parent.store;return {leftFixedLeafCount:computed((()=>t.states.fixedLeafColumnsLength.value)),rightFixedLeafCount:computed((()=>t.states.rightFixedColumns.value.length)),columnsCount:computed((()=>t.states.columns.value.length)),leftFixedCount:computed((()=>t.states.fixedColumns.value.length)),rightFixedCount:computed((()=>t.states.rightFixedColumns.value.length)),columns:t.states.columns}}(),c=computed((()=>!t.fixed&&l.layout.gutterWidth));return {hasGutter:c,getRowClasses:(e,l)=>{const n=[e.id,e.align,e.labelClassName];return e.className&&n.push(e.className),((e,l,a)=>{if(t.fixed||"left"===t.fixed)return e>=o.value;if("right"===t.fixed){let t=0;for(let a=0;a<e;a++)t+=l[a].colSpan;return t<r.value-i.value}return !(t.fixed||!a.fixed)||e<s.value||e>=r.value-u.value})(l,a.states.columns.value,e)&&n.push("is-hidden"),e.children||n.push("is-leaf"),n},columns:d}}var Jc=defineComponent({name:"ElTableFooter",props:{fixed:{type:String,default:""},store:{required:!0,type:Object},summaryMethod:Function,sumText:String,border:Boolean,defaultSort:{type:Object,default:()=>({prop:"",order:""})}},setup(e){const{hasGutter:t,getRowClasses:l,columns:a}=Zc(e);return {getRowClasses:l,hasGutter:t,columns:a}},render(){let e=[];return this.summaryMethod?e=this.summaryMethod({columns:this.columns,data:this.store.states.data.value}):this.columns.forEach(((t,l)=>{if(0===l)return void(e[l]=this.sumText);const a=this.store.states.data.value.map((e=>Number(e[t.property]))),n=[];let o=!0;a.forEach((e=>{if(!isNaN(e)){o=!1;const t=(""+e).split(".")[1];n.push(t?t.length:0);}}));const i=Math.max.apply(null,n);e[l]=o?"":a.reduce(((e,t)=>{const l=Number(t);return isNaN(l)?e:parseFloat((e+t).toFixed(Math.min(i,20)))}),0);})),h("table",{class:"el-table__footer",cellspacing:"0",cellpadding:"0",border:"0"},[qc(this.columns,this.hasGutter),h("tbody",{class:[{"has-gutter":this.hasGutter}]},[h("tr",{},[...this.columns.map(((t,l)=>h("td",{key:l,colspan:t.colSpan,rowspan:t.rowSpan,class:this.getRowClasses(t,l)},[h("div",{class:["cell",t.labelClassName]},[e[l]])]))),this.hasGutter&&Yc()])])])}});function ep(e,t,a,r){const s=qe(),u=ref(!1),d=ref(null),c=ref(!1),p=ref({width:null,height:null}),h=ref(!1);watchEffect((()=>{t.setHeight(e.height);})),watchEffect((()=>{t.setMaxHeight(e.maxHeight);})),watchEffect((()=>{a.states.rowKey.value&&a.setCurrentRowKey(e.currentRowKey);})),watch((()=>e.data),(()=>{r.store.commit("setData",e.data);}),{immediate:!0,deep:!0}),watchEffect((()=>{e.expandRowKeys&&a.setExpandRowKeysAdapter(e.expandRowKeys);}));const v=computed((()=>e.height||e.maxHeight||a.states.fixedColumns.value.length>0||a.states.rightFixedColumns.value.length>0)),m=()=>{v.value&&t.updateElsHeight(),t.updateColumnsWidth(),g();};onMounted((()=>{f("is-scrolling-left"),b(),a.updateColumns(),m(),p.value={width:r.vnode.el.offsetWidth,height:r.vnode.el.offsetHeight},a.states.columns.value.forEach((e=>{e.filteredValue&&e.filteredValue.length&&r.store.commit("filterChange",{column:e,values:e.filteredValue,silent:!0});})),r.$ready=!0;}));const f=e=>{const{bodyWrapper:l}=r.refs;((e,l)=>{if(!e)return;const a=Array.from(e.classList).filter((e=>!e.startsWith("is-scrolling-")));a.push(t.scrollX.value?l:"is-scrolling-none"),e.className=a.join(" ");})(l,e);},g=throttle_1((function(){if(!r.refs.bodyWrapper)return;const{scrollLeft:e,scrollTop:t,offsetWidth:l,scrollWidth:a}=r.refs.bodyWrapper,{headerWrapper:n,footerWrapper:o,fixedBodyWrapper:i,rightFixedBodyWrapper:s}=r.refs;n&&(n.scrollLeft=e),o&&(o.scrollLeft=e),i&&(i.scrollTop=t),s&&(s.scrollTop=t);f(e>=a-l-1?"is-scrolling-right":0===e?"is-scrolling-left":"is-scrolling-middle");}),10),b=()=>{r.refs.bodyWrapper.addEventListener("scroll",g,{passive:!0}),e.fit&&dt(r.vnode.el,C);};onUnmounted((()=>{y();}));const y=()=>{var t;null===(t=r.refs.bodyWrapper)||void 0===t||t.removeEventListener("scroll",g,!0),e.fit&&ct(r.vnode.el,C);},C=()=>{if(!r.$ready)return;let t=!1;const l=r.vnode.el,{width:a,height:n}=p.value,o=l.offsetWidth;a!==o&&(t=!0);const i=l.offsetHeight;(e.height||v.value)&&n!==i&&(t=!0),t&&(p.value={width:o,height:i},m());},x=computed((()=>e.size||s.size)),w=computed((()=>{const{bodyWidth:e,scrollY:l,gutterWidth:a}=t;return e.value?e.value-(l.value?a:0)+"px":""}));return {isHidden:u,renderExpanded:d,setDragVisible:e=>{c.value=e;},isGroup:h,handleMouseLeave:()=>{r.store.commit("setHoverRow",null),r.hoverState&&(r.hoverState=null);},handleHeaderFooterMousewheel:(e,t)=>{const{pixelX:l,pixelY:a}=t;Math.abs(l)>=Math.abs(a)&&(r.refs.bodyWrapper.scrollLeft+=t.pixelX/5);},tableSize:x,bodyHeight:computed((()=>{const l=t.headerHeight.value||0,a=t.bodyHeight.value,n=t.footerHeight.value||0;if(e.height)return {height:a?a+"px":""};if(e.maxHeight){const t=Mc(e.maxHeight);if("number"==typeof t)return {"max-height":t-n-(e.showHeader?l:0)+"px"}}return {}})),emptyBlockStyle:computed((()=>{if(e.data&&e.data.length)return null;let l="100%";return t.appendHeight.value&&(l=`calc(100% - ${t.appendHeight.value}px)`),{width:w.value,height:l}})),handleFixedMousewheel:(e,t)=>{const l=r.refs.bodyWrapper;if(Math.abs(t.spinY)>0){const a=l.scrollTop;t.pixelY<0&&0!==a&&e.preventDefault(),t.pixelY>0&&l.scrollHeight-l.clientHeight>a&&e.preventDefault(),l.scrollTop+=Math.ceil(t.pixelY/5);}else l.scrollLeft+=Math.ceil(t.pixelX/5);},fixedHeight:computed((()=>e.maxHeight?e.showSummary?{bottom:0}:{bottom:t.scrollX.value&&e.data.length?t.gutterWidth+"px":""}:e.showSummary?{height:t.tableHeight.value?t.tableHeight.value+"px":""}:{height:t.viewportHeight.value?t.viewportHeight.value+"px":""})),fixedBodyHeight:computed((()=>{if(e.height)return {height:t.fixedBodyHeight.value?t.fixedBodyHeight.value+"px":""};if(e.maxHeight){let l=Mc(e.maxHeight);if("number"==typeof l)return l=t.scrollX.value?l-t.gutterWidth:l,e.showHeader&&(l-=t.headerHeight.value),l-=t.footerHeight.value,{"max-height":l+"px"}}return {}})),resizeProxyVisible:c,bodyWidth:w,resizeState:p,doLayout:m}}let tp=1;var lp=defineComponent({name:"ElTable",directives:{Mousewheel:jt},components:{TableHeader:Uc,TableBody:Qc,TableFooter:Jc},props:{data:{type:Array,default:function(){return []}},size:String,width:[String,Number],height:[String,Number],maxHeight:[String,Number],fit:{type:Boolean,default:!0},stripe:Boolean,border:Boolean,rowKey:[String,Function],showHeader:{type:Boolean,default:!0},showSummary:Boolean,sumText:String,summaryMethod:Function,rowClassName:[String,Function],rowStyle:[Object,Function],cellClassName:[String,Function],cellStyle:[Object,Function],headerRowClassName:[String,Function],headerRowStyle:[Object,Function],headerCellClassName:[String,Function],headerCellStyle:[Object,Function],highlightCurrentRow:Boolean,currentRowKey:[String,Number],emptyText:String,expandRowKeys:Array,defaultExpandAll:Boolean,defaultSort:Object,tooltipEffect:String,spanMethod:Function,selectOnIndeterminate:{type:Boolean,default:!0},indent:{type:Number,default:16},treeProps:{type:Object,default:()=>({hasChildren:"hasChildren",children:"children"})},lazy:Boolean,load:Function},emits:["select","select-all","selection-change","cell-mouse-enter","cell-mouse-leave","cell-click","cell-dblclick","row-click","row-contextmenu","row-dblclick","header-click","header-contextmenu","sort-change","filter-change","current-change","header-dragend","expand-change"],setup(t){let l=getCurrentInstance();const a=function(e,t={}){if(!e)throw new Error("Table is required.");const l=Bc();return l.toggleAllSelection=debounce_1(l._toggleAllSelection,10),Object.keys(t).forEach((e=>{l.states[e].value=t[e];})),l}(l,{rowKey:t.rowKey,defaultExpandAll:t.defaultExpandAll,selectOnIndeterminate:t.selectOnIndeterminate,indent:t.indent,lazy:t.lazy,lazyColumnIdentifier:t.treeProps.hasChildren||"hasChildren",childrenColumnName:t.treeProps.children||"children",data:t.data});l.store=a;const n=new Ac({store:l.store,table:l,fit:t.fit,showHeader:t.showHeader});l.layout=n;const{setCurrentRow:o,toggleRowSelection:i,clearSelection:r,clearFilter:s,toggleAllSelection:u,toggleRowExpansion:d,clearSort:c,sort:p}=function(e){return {setCurrentRow:t=>{e.commit("setCurrentRow",t);},toggleRowSelection:(t,l)=>{e.toggleRowSelection(t,l,!1),e.updateAllSelected();},clearSelection:()=>{e.clearSelection();},clearFilter:t=>{e.clearFilter(t);},toggleAllSelection:()=>{e.commit("toggleAllSelection");},toggleRowExpansion:(t,l)=>{e.toggleRowExpansionAdapter(t,l);},clearSort:()=>{e.clearSort();},sort:(t,l)=>{e.commit("sort",{prop:t,order:l});}}}(a),{isHidden:h,renderExpanded:v,setDragVisible:m,isGroup:f,handleMouseLeave:g,handleHeaderFooterMousewheel:b,tableSize:y,bodyHeight:k,emptyBlockStyle:C,handleFixedMousewheel:x,fixedHeight:w,fixedBodyHeight:S,resizeProxyVisible:_,bodyWidth:E,resizeState:M,doLayout:T}=ep(t,n,a,l),N=debounce_1((()=>T()),50),D="el-table_"+tp++;return l.tableId=D,l.state={isGroup:f,resizeState:M,doLayout:T,debouncedUpdateLayout:N},{layout:n,store:a,handleHeaderFooterMousewheel:b,handleMouseLeave:g,tableId:D,tableSize:y,isHidden:h,renderExpanded:v,resizeProxyVisible:_,resizeState:M,isGroup:f,bodyWidth:E,bodyHeight:k,emptyBlockStyle:C,debouncedUpdateLayout:N,handleFixedMousewheel:x,fixedHeight:w,fixedBodyHeight:S,setCurrentRow:o,toggleRowSelection:i,clearSelection:r,clearFilter:s,toggleAllSelection:u,toggleRowExpansion:d,clearSort:c,doLayout:T,sort:p,t:ga,setDragVisible:m,context:l}}});const ap={ref:"hiddenColumns",class:"hidden-columns"},np={key:0,ref:"headerWrapper",class:"el-table__header-wrapper"},op={class:"el-table__empty-text"},ip={key:1,ref:"appendWrapper",class:"el-table__append-wrapper"},rp={key:1,ref:"footerWrapper",class:"el-table__footer-wrapper"},sp={key:0,ref:"fixedHeaderWrapper",class:"el-table__fixed-header-wrapper"},up={key:1,ref:"fixedFooterWrapper",class:"el-table__fixed-footer-wrapper"},dp={key:0,ref:"rightFixedHeaderWrapper",class:"el-table__fixed-header-wrapper"},cp={key:1,ref:"rightFixedFooterWrapper",class:"el-table__fixed-footer-wrapper"},pp={ref:"resizeProxy",class:"el-table__column-resize-proxy"};lp.render=function(e,t,l,a,n,o){const i=resolveComponent("table-header"),r=resolveComponent("table-body"),p=resolveComponent("table-footer"),h=resolveDirective("mousewheel");return openBlock(),createBlock("div",{class:[[{"el-table--fit":e.fit,"el-table--striped":e.stripe,"el-table--border":e.border||e.isGroup,"el-table--hidden":e.isHidden,"el-table--group":e.isGroup,"el-table--fluid-height":e.maxHeight,"el-table--scrollable-x":e.layout.scrollX.value,"el-table--scrollable-y":e.layout.scrollY.value,"el-table--enable-row-hover":!e.store.states.isComplex.value,"el-table--enable-row-transition":0!==(e.store.states.data.value||[]).length&&(e.store.states.data.value||[]).length<100},e.tableSize?"el-table--"+e.tableSize:""],"el-table"],onMouseleave:t[1]||(t[1]=t=>e.handleMouseLeave())},[createVNode("div",ap,[renderSlot(e.$slots,"default")],512),e.showHeader?withDirectives((openBlock(),createBlock("div",np,[createVNode(i,{ref:"tableHeader",border:e.border,"default-sort":e.defaultSort,store:e.store,style:{width:e.layout.bodyWidth.value?e.layout.bodyWidth.value+"px":""},onSetDragVisible:e.setDragVisible},null,8,["border","default-sort","store","style","onSetDragVisible"])],512)),[[h,e.handleHeaderFooterMousewheel]]):createCommentVNode("v-if",!0),createVNode("div",{ref:"bodyWrapper",style:[e.bodyHeight],class:"el-table__body-wrapper"},[createVNode(r,{context:e.context,highlight:e.highlightCurrentRow,"row-class-name":e.rowClassName,"tooltip-effect":e.tooltipEffect,"row-style":e.rowStyle,store:e.store,stripe:e.stripe,style:{width:e.bodyWidth}},null,8,["context","highlight","row-class-name","tooltip-effect","row-style","store","stripe","style"]),e.data&&0!==e.data.length?createCommentVNode("v-if",!0):(openBlock(),createBlock("div",{key:0,ref:"emptyBlock",style:e.emptyBlockStyle,class:"el-table__empty-block"},[createVNode("span",op,[renderSlot(e.$slots,"empty",{},(()=>[createTextVNode(toDisplayString(e.emptyText||e.t("el.table.emptyText")),1)]))])],4)),e.$slots.append?(openBlock(),createBlock("div",ip,[renderSlot(e.$slots,"append")],512)):createCommentVNode("v-if",!0)],4),e.showSummary?withDirectives((openBlock(),createBlock("div",rp,[createVNode(p,{border:e.border,"default-sort":e.defaultSort,store:e.store,style:{width:e.layout.bodyWidth.value?e.layout.bodyWidth.value+"px":""},"sum-text":e.sumText||e.t("el.table.sumText"),"summary-method":e.summaryMethod},null,8,["border","default-sort","store","style","sum-text","summary-method"])],512)),[[vShow,e.data&&e.data.length>0],[h,e.handleHeaderFooterMousewheel]]):createCommentVNode("v-if",!0),e.store.states.fixedColumns.value.length>0?withDirectives((openBlock(),createBlock("div",{key:2,ref:"fixedWrapper",style:[{width:e.layout.fixedWidth.value?e.layout.fixedWidth.value+"px":""},e.fixedHeight],class:"el-table__fixed"},[e.showHeader?(openBlock(),createBlock("div",sp,[createVNode(i,{ref:"fixedTableHeader",border:e.border,store:e.store,style:{width:e.bodyWidth},fixed:"left",onSetDragVisible:e.setDragVisible},null,8,["border","store","style","onSetDragVisible"])],512)):createCommentVNode("v-if",!0),createVNode("div",{ref:"fixedBodyWrapper",style:[{top:e.layout.headerHeight.value+"px"},e.fixedBodyHeight],class:"el-table__fixed-body-wrapper"},[createVNode(r,{highlight:e.highlightCurrentRow,"row-class-name":e.rowClassName,"tooltip-effect":e.tooltipEffect,"row-style":e.rowStyle,store:e.store,stripe:e.stripe,style:{width:e.bodyWidth},fixed:"left"},null,8,["highlight","row-class-name","tooltip-effect","row-style","store","stripe","style"]),e.$slots.append?(openBlock(),createBlock("div",{key:0,style:{height:e.layout.appendHeight.value+"px"},class:"el-table__append-gutter"},null,4)):createCommentVNode("v-if",!0)],4),e.showSummary?withDirectives((openBlock(),createBlock("div",up,[createVNode(p,{border:e.border,store:e.store,style:{width:e.bodyWidth},"sum-text":e.sumText||e.t("el.table.sumText"),"summary-method":e.summaryMethod,fixed:"left"},null,8,["border","store","style","sum-text","summary-method"])],512)),[[vShow,e.data&&e.data.length>0]]):createCommentVNode("v-if",!0)],4)),[[h,e.handleFixedMousewheel]]):createCommentVNode("v-if",!0),e.store.states.rightFixedColumns.value.length>0?withDirectives((openBlock(),createBlock("div",{key:3,ref:"rightFixedWrapper",style:[{width:e.layout.rightFixedWidth.value?e.layout.rightFixedWidth.value+"px":"",right:e.layout.scrollY.value?(e.border?e.layout.gutterWidth:e.layout.gutterWidth||0)+"px":""},e.fixedHeight],class:"el-table__fixed-right"},[e.showHeader?(openBlock(),createBlock("div",dp,[createVNode(i,{ref:"rightFixedTableHeader",border:e.border,store:e.store,style:{width:e.bodyWidth},fixed:"right",onSetDragVisible:e.setDragVisible},null,8,["border","store","style","onSetDragVisible"])],512)):createCommentVNode("v-if",!0),createVNode("div",{ref:"rightFixedBodyWrapper",style:[{top:e.layout.headerHeight.value+"px"},e.fixedBodyHeight],class:"el-table__fixed-body-wrapper"},[createVNode(r,{highlight:e.highlightCurrentRow,"row-class-name":e.rowClassName,"tooltip-effect":e.tooltipEffect,"row-style":e.rowStyle,store:e.store,stripe:e.stripe,style:{width:e.bodyWidth},fixed:"right"},null,8,["highlight","row-class-name","tooltip-effect","row-style","store","stripe","style"]),e.$slots.append?(openBlock(),createBlock("div",{key:0,style:{height:e.layout.appendHeight.value+"px"},class:"el-table__append-gutter"},null,4)):createCommentVNode("v-if",!0)],4),e.showSummary?withDirectives((openBlock(),createBlock("div",cp,[createVNode(p,{border:e.border,store:e.store,style:{width:e.bodyWidth},"sum-text":e.sumText||e.t("el.table.sumText"),"summary-method":e.summaryMethod,fixed:"right"},null,8,["border","store","style","sum-text","summary-method"])],512)),[[vShow,e.data&&e.data.length>0]]):createCommentVNode("v-if",!0)],4)),[[h,e.handleFixedMousewheel]]):createCommentVNode("v-if",!0),e.store.states.rightFixedColumns.value.length>0?(openBlock(),createBlock("div",{key:4,ref:"rightFixedPatch",style:{width:e.layout.scrollY.value?e.layout.gutterWidth+"px":"0",height:e.layout.headerHeight.value+"px"},class:"el-table__fixed-right-patch"},null,4)):createCommentVNode("v-if",!0),withDirectives(createVNode("div",pp,null,512),[[vShow,e.resizeProxyVisible]])],34)},lp.__file="packages/table/src/table.vue",lp.install=e=>{e.component(lp.name,lp);};const vp={default:{order:""},selection:{width:48,minWidth:48,realWidth:48,order:"",className:"el-table-column--selection"},expand:{width:48,minWidth:48,realWidth:48,order:""},index:{width:48,minWidth:48,realWidth:48,order:""}},mp={selection:{renderHeader:function({store:e}){const t=e;return h(Sn,{disabled:t.states.data.value&&0===t.states.data.value.length,indeterminate:t.states.selection.value.length>0&&!t.states.isAllSelected.value,"onUpdate:modelValue":t.toggleAllSelection,modelValue:t.states.isAllSelected.value})},renderCell:function({row:e,column:t,store:l,$index:a}){return h(Sn,{disabled:!!t.selectable&&!t.selectable.call(null,e,a),onInput:()=>{l.commit("rowSelectedChanged",e);},onClick:e=>e.stopPropagation(),modelValue:l.isSelected(e)})},sortable:!1,resizable:!1},index:{renderHeader:function({column:e}){return e.label||"#"},renderCell:function({column:e,$index:t}){let l=t+1;const a=e.index;return "number"==typeof a?l=t+a:"function"==typeof a&&(l=a(t)),h("div",{},[l])},sortable:!1},expand:{renderHeader:function({column:e}){return e.label||""},renderCell:function({row:e,store:t}){const l=t,a=e,n=["el-table__expand-icon"];l.states.expandRows.value.indexOf(a)>-1&&n.push("el-table__expand-icon--expanded");return h("div",{class:n,onClick:function(e){e.stopPropagation(),l.toggleRowExpansion(a);}},[h("i",{class:"el-icon el-icon-arrow-right"})])},sortable:!1,resizable:!1,className:"el-table__expand-column"}};function fp({row:e,column:t,$index:l}){const a=t.property,n=a&&Fe(e,a,!1).v;return t&&t.formatter?t.formatter(e,t,n,l):n}function gp(t,a,o){const i=getCurrentInstance(),r=ref(""),s=ref(!1),u=ref(),d=ref();watchEffect((()=>{u.value=t.align?"is-"+t.align:null,u.value;})),watchEffect((()=>{d.value=t.headerAlign?"is-"+t.headerAlign:u.value,d.value;}));const c=computed((()=>{let e=i.vnode.vParent||i.parent;for(;e&&!e.tableId&&!e.columnId;)e=e.vnode.vParent||e.parent;return e})),p=ref(Ec(t.width)),h$1=ref((void 0!==(v=t.minWidth)&&(v=Ec(v),isNaN(v)&&(v=80)),v));var v;return {columnId:r,realAlign:u,isSubColumn:s,realHeaderAlign:d,columnOrTableParent:c,setColumnWidth:e=>(p.value&&(e.width=p.value),h$1.value&&(e.minWidth=h$1.value),e.minWidth||(e.minWidth=80),e.realWidth=void 0===e.width?e.minWidth:e.width,e),setColumnForcedProps:e=>{const t=e.type,l=mp[t]||{};return Object.keys(l).forEach((t=>{const a=l[t];void 0!==a&&(e[t]="className"===t?`${e[t]} ${a}`:a);})),e},setColumnRenders:e=>{t.renderHeader?console.warn("[Element Warn][TableColumn]Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header."):"selection"!==e.type&&(e.renderHeader=t=>{i.columnConfig.value.label;const l=a.header;return l?l(t):e.label});let l=e.renderCell;return "expand"===e.type?(e.renderCell=e=>h("div",{class:"cell"},[l(e)]),o.value.renderExpanded=e=>a.default?a.default(e):a.default):(l=l||fp,e.renderCell=t=>{let n=null;n=a.default?a.default(t):l(t);const o=function({row:e,treeNode:t,store:l}){const a=e,n=l,o=t;if(!o)return null;const i=[],r=function(e){e.stopPropagation(),n.loadOrToggle(a);};if(o.indent&&i.push(h("span",{class:"el-table__indent",style:{"padding-left":o.indent+"px"}})),"boolean"!=typeof o.expanded||o.noLazyChildren)i.push(h("span",{class:"el-table__placeholder"}));else {const e=["el-table__expand-icon",o.expanded?"el-table__expand-icon--expanded":""];let t=["el-icon-arrow-right"];o.loading&&(t=["el-icon-loading"]),i.push(h("div",{class:e,onClick:r},[h("i",{class:t})]));}return i}(t),r={class:"cell",style:{}};return e.showOverflowTooltip&&(r.class+=" el-tooltip",r.style={width:(t.column.realWidth||t.column.width)-1+"px"}),(e=>{function t(e){var t;"ElTableColumn"===(null===(t=null==e?void 0:e.type)||void 0===t?void 0:t.name)&&(e.vParent=i);}e instanceof Array?e.forEach((e=>t(e))):t(e);})(n),h("div",r,[o,n])}),e},getPropsData:(...e)=>e.reduce(((e,l)=>(Array.isArray(l)&&l.forEach((l=>{e[l]=t[l];})),e)),{}),getColumnElIndex:(e,t)=>[].indexOf.call(e,t)}}let bp=1;const yp=defineComponent({name:"ElTableColumn",components:{ElCheckbox:Sn},props:{type:{type:String,default:"default"},label:String,className:String,labelClassName:String,property:String,prop:String,width:{type:[Object,Number,String],default:()=>({})},minWidth:{type:[Object,Number,String],default:()=>({})},renderHeader:Function,sortable:{type:[Boolean,String],default:!1},sortMethod:Function,sortBy:[String,Function,Array],resizable:{type:Boolean,default:!0},columnKey:String,align:String,headerAlign:String,showTooltipWhenOverflow:Boolean,showOverflowTooltip:Boolean,fixed:[Boolean,String],formatter:Function,selectable:Function,reserveSelection:Boolean,filterMethod:Function,filteredValue:Array,filters:Array,filterPlacement:String,filterMultiple:{type:Boolean,default:!0},index:[Number,Function],sortOrders:{type:Array,default:()=>["ascending","descending",null],validator:e=>e.every((e=>["ascending","descending",null].indexOf(e)>-1))}},setup(t,{slots:a}){const s=getCurrentInstance(),u=ref({}),d=t,c=computed((()=>{let e=s.parent;for(;e&&!e.tableId;)e=e.parent;return e})),{registerNormalWatchers:p,registerComplexWatchers:h}=function(t,l){const a=getCurrentInstance();return {registerComplexWatchers:()=>{const e={realWidth:"width",realMinWidth:"minWidth"},n=["fixed"].reduce(((e,t)=>(e[t]=t,e)),e);Object.keys(n).forEach((n=>{const i=e[n];l.hasOwnProperty(i)&&watch((()=>l[i]),(e=>{a.columnConfig.value[i]=e,a.columnConfig.value[n]=e;const l="fixed"===i;t.value.store.scheduleLayout(l);}));}));},registerNormalWatchers:()=>{const e={prop:"property",realAlign:"align",realHeaderAlign:"headerAlign"},t=["label","property","filters","filterMultiple","sortable","index","formatter","className","labelClassName","showOverflowTooltip"].reduce(((e,t)=>(e[t]=t,e)),e);Object.keys(t).forEach((t=>{const n=e[t];l.hasOwnProperty(n)&&watch((()=>l[n]),(e=>{a.columnConfig.value[n]=e;}));}));}}}(c,d),{columnId:v,isSubColumn:m,realHeaderAlign:f,columnOrTableParent:g,setColumnWidth:b,setColumnForcedProps:y,setColumnRenders:k,getPropsData:C,getColumnElIndex:x,realAlign:w}=gp(d,a,c),S=g.value;v.value=(S.tableId||S.columnId)+"_column_"+bp++,onBeforeMount((()=>{m.value=c.value!==S;const e=d.type||"default",t=""===d.sortable||d.sortable,l=Object.assign(Object.assign({},vp[e]),{id:v.value,type:e,property:d.prop||d.property,align:w,headerAlign:f,showOverflowTooltip:d.showOverflowTooltip||d.showTooltipWhenOverflow,filterable:d.filters||d.filterMethod,filteredValue:[],filterPlacement:"",isColumnGroup:!1,filterOpened:!1,sortable:t,index:d.index});let a=C(["columnKey","label","className","labelClassName","type","renderHeader","formatter","fixed","resizable"],["sortMethod","sortBy","sortOrders"],["selectable","reserveSelection"],["filterMethod","filters","filterMultiple","filterOpened","filteredValue","filterPlacement"]);a=function(e,t){const l={};let a;for(a in e)l[a]=e[a];for(a in t)if(_c(t,a)){const e=t[a];void 0!==e&&(l[a]=e);}return l}(l,a);a=function(...e){return 0===e.length?e=>e:1===e.length?e[0]:e.reduce(((e,t)=>(...l)=>e(t(...l))))}(k,b,y)(a),u.value=a,p(),h();})),onMounted((()=>{var e;const t=g.value,l=m.value?t.vnode.el.children:null===(e=t.refs.hiddenColumns)||void 0===e?void 0:e.children,a=()=>x(l||[],s.vnode.el);u.value.getColumnIndex=a;a()>-1&&c.value.store.commit("insertColumn",u.value,m.value?t.columnConfig.value:null);})),onBeforeUnmount((()=>{c.value.store.commit("removeColumn",u.value,m.value?S.columnConfig.value:null);})),s.columnId=v.value,s.columnConfig=u;},render(){var e,t,l;let a=[];try{const n=null===(t=(e=this.$slots).default)||void 0===t?void 0:t.call(e);if(n instanceof Array)for(const e of n)"ElTableColumn"===(null===(l=e.type)||void 0===l?void 0:l.name)||36!==e.shapeFlag?a.push(e):e.type===Fragment&&e.children instanceof Array&&n.push(...e.children);}catch(e){a=[];}return h("div",a)}});yp.install=e=>{e.component(yp.name,yp);};var kp=defineComponent({name:"ElTabBar",props:{tabs:{type:Array,default:()=>[]}},setup(t){const a=inject("rootTabs");if(!a)throw new Error("ElTabBar must use with ElTabs");const n=getCurrentInstance(),i=()=>{let e={},l=0,o=0;const i=["top","bottom"].includes(a.props.tabPosition)?"width":"height",r="width"===i?"x":"y";t.tabs.every((e=>{var a;let r=null===(a=n.parent.refs)||void 0===a?void 0:a["tab-"+e.paneName];if(!r)return !1;if(e.active){o=r["client"+Ie(i)];const e=window.getComputedStyle(r);return "width"===i&&(t.tabs.length>1&&(o-=parseFloat(e.paddingLeft)+parseFloat(e.paddingRight)),l+=parseFloat(e.paddingLeft)),!1}return l+=r["client"+Ie(i)],!0}));const s=`translate${Ie(r)}(${l}px)`;return e[i]=o+"px",e.transform=s,e.msTransform=s,e.webkitTransform=s,e},r=ref(i());return watch((()=>t.tabs),(()=>{nextTick((()=>{r.value=i();}));})),{rootTabs:a,barStyle:r}}});kp.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:["el-tabs__active-bar","is-"+e.rootTabs.props.tabPosition],style:e.barStyle},null,6)},kp.__file="packages/tabs/src/tab-bar.vue";var Cp=defineComponent({name:"ElTabNav",components:{TabBar:kp},props:{panes:{type:Array,default:()=>[]},currentName:{type:String,default:""},editable:Boolean,onTabClick:{type:Function,default:xe},onTabRemove:{type:Function,default:xe},type:{type:String,default:""},stretch:Boolean},setup(){const e=inject("rootTabs");if(!e)throw new Error("ElTabNav must use with ElTabs");const t=ref(!1),a=ref(0),o=ref(!1),s=ref(!0),u=ref(null),d=ref(null),c=ref(null),p=computed((()=>["top","bottom"].includes(e.props.tabPosition)?"width":"height")),h=computed((()=>({transform:`translate${"width"===p.value?"X":"Y"}(-${a.value}px)`}))),v=()=>{if(!t.value)return;const l=d.value,n=c.value.querySelector(".is-active");if(!n)return;const o=u.value,i=["top","bottom"].includes(e.props.tabPosition),r=n.getBoundingClientRect(),s=o.getBoundingClientRect(),p=i?l.offsetWidth-s.width:l.offsetHeight-s.height,h=a.value;let v=h;i?(r.left<s.left&&(v=h-(s.left-r.left)),r.right>s.right&&(v=h+r.right-s.right)):(r.top<s.top&&(v=h-(s.top-r.top)),r.bottom>s.bottom&&(v=h+(r.bottom-s.bottom))),v=Math.max(v,0),a.value=Math.min(v,p);},m=()=>{if(!d.value)return;const e=d.value["offset"+Ie(p.value)],l=u.value["offset"+Ie(p.value)],n=a.value;if(l<e){const n=a.value;t.value=t.value||{},t.value.prev=n,t.value.next=n+l<e,e-n<l&&(a.value=e-l);}else t.value=!1,n>0&&(a.value=0);},f=()=>{s.value&&(o.value=!0);},g=()=>{const e=document.visibilityState;"hidden"===e?s.value=!1:"visible"===e&&setTimeout((()=>{s.value=!0;}),50);},b=()=>{s.value=!1;},y=()=>{setTimeout((()=>{s.value=!0;}),50);};return onUpdated((()=>{m();})),onMounted((()=>{dt(c.value,m),Je(document,"visibilitychange",g),Je(window,"blur",b),Je(window,"focus",y),setTimeout((()=>{v();}),0);})),onBeforeUnmount((()=>{c.value&&ct(c.value,m),et(document,"visibilitychange",g),et(window,"blur",b),et(window,"focus",y);})),{rootTabs:e,scrollable:t,navOffset:a,isFocus:o,focusable:s,navScroll$:u,nav$:d,el$:c,sizeName:p,navStyle:h,scrollPrev:()=>{const e=u.value["offset"+Ie(p.value)],t=a.value;if(!t)return;let l=t>e?t-e:0;a.value=l;},scrollNext:()=>{const e=d.value["offset"+Ie(p.value)],t=u.value["offset"+Ie(p.value)],l=a.value;if(e-l<=t)return;let n=e-l>2*t?l+t:e-t;a.value=n;},scrollToActiveTab:v,update:m,changeTab:e=>{const t=e.code;let l,a,n;const{up:o,down:i,left:r,right:s}=Tt;-1!==[o,i,r,s].indexOf(t)&&(n=e.currentTarget.querySelectorAll("[role=tab]"),a=Array.prototype.indexOf.call(n,e.target),l=t===r||t===o?0===a?n.length-1:a-1:a<n.length-1?a+1:0,n[l].focus(),n[l].click(),f());},setFocus:f,removeFocus:()=>{o.value=!1;},visibilityChangeHandler:g,windowBlurHandler:b,windowFocusHandler:y}},render(){const{type:e,panes:t,editable:l,stretch:a,onTabClick:n,onTabRemove:o,navStyle:i,scrollable:r,scrollNext:s,scrollPrev:u,changeTab:d,setFocus:c,removeFocus:p,rootTabs:h$1,isFocus:v}=this,m=r?[h("span",{class:["el-tabs__nav-prev",r.prev?"":"is-disabled"],onClick:u},[h("i",{class:"el-icon-arrow-left"})]),h("span",{class:["el-tabs__nav-next",r.next?"":"is-disabled"],onClick:s},[h("i",{class:"el-icon-arrow-right"})])]:null,f=t.map(((e,t)=>{var a,i;let r=e.props.name||e.index||""+t;const s=e.isClosable||l;e.index=""+t;const u=s?h("span",{class:"el-icon-close",onClick:t=>{o(e,t);}}):null,d=(null===(i=(a=e.instance.slots).label)||void 0===i?void 0:i.call(a))||e.props.label,m=e.active?0:-1;return h("div",{class:{"el-tabs__item":!0,["is-"+h$1.props.tabPosition]:!0,"is-active":e.active,"is-disabled":e.props.disabled,"is-closable":s,"is-focus":v},id:"tab-"+r,key:"tab-"+r,"aria-controls":"pane-"+r,role:"tab","aria-selected":e.active,ref:"tab-"+r,tabindex:m,onFocus:()=>{c();},onBlur:()=>{p();},onClick:t=>{p(),n(e,r,t);},onKeydown:t=>{!s||t.code!==Tt.delete&&t.code!==Tt.backspace||o(e,t);}},[d,u])}));return h("div",{ref:"el$",class:["el-tabs__nav-wrap",r?"is-scrollable":"","is-"+h$1.props.tabPosition]},[m,h("div",{class:"el-tabs__nav-scroll",ref:"navScroll$"},[h("div",{class:["el-tabs__nav","is-"+h$1.props.tabPosition,a&&["top","bottom"].includes(h$1.props.tabPosition)?"is-stretch":""],ref:"nav$",style:i,role:"tablist",onKeydown:d},[e?null:h(kp,{tabs:t}),f])])])}});Cp.__file="packages/tabs/src/tab-nav.vue";var xp=defineComponent({name:"ElTabs",components:{TabNav:Cp},props:{type:{type:String,default:""},activeName:{type:String,default:""},closable:Boolean,addable:Boolean,modelValue:{type:String,default:""},editable:Boolean,tabPosition:{type:String,default:"top"},beforeLeave:{type:Function,default:null},stretch:Boolean},emits:["tab-click","edit","tab-remove","tab-add","input","update:modelValue"],setup(t,a){const n=ref(null),r=ref(t.modelValue||t.activeName||"0"),s=ref([]),u=getCurrentInstance(),d={};provide("rootTabs",{props:t,currentName:r}),provide("updatePaneState",(e=>{d[e.uid]=e;})),watch((()=>t.activeName),(e=>{v(e);})),watch((()=>t.modelValue),(e=>{v(e);})),watch(r,(()=>{n.value&&nextTick((()=>{n.value.$nextTick((()=>{n.value.scrollToActiveTab();}));})),p(!0);}));const c=(e,t=[])=>(Array.from(e.children||[]).forEach((e=>{let l=e.type;l=l.name||l,"ElTabPane"===l&&e.component?t.push(e.component):l!==Fragment&&"template"!==l||c(e,t);})),t),p=(e=!1)=>{if(a.slots.default){const t=u.subTree.children,l=Array.from(t).find((({props:e})=>"el-tabs__content"===e.class));if(!l)return;const a=c(l).map((e=>d[e.uid])),n=!(a.length===s.value.length&&a.every(((e,t)=>e.uid===s.value[t].uid)));(e||n)&&(s.value=a);}else 0!==s.value.length&&(s.value=[]);},h=e=>{r.value=e,a.emit("input",e),a.emit("update:modelValue",e);},v=e=>{if(r.value!==e&&t.beforeLeave){const l=t.beforeLeave(e,r.value);l&&l.then?l.then((()=>{h(e),n.value&&n.value.removeFocus();}),(()=>{})):!1!==l&&h(e);}else h(e);};return onUpdated((()=>{p();})),onMounted((()=>{p();})),{nav$:n,handleTabClick:(e,t,l)=>{e.props.disabled||(v(t),a.emit("tab-click",e,l));},handleTabRemove:(e,t)=>{e.props.disabled||(t.stopPropagation(),a.emit("edit",e.props.name,"remove"),a.emit("tab-remove",e.props.name));},handleTabAdd:()=>{a.emit("edit",null,"add"),a.emit("tab-add");},currentName:r,panes:s}},render(){var e;let{type:t,handleTabClick:l,handleTabRemove:a,handleTabAdd:n,currentName:o,panes:i,editable:r,addable:s,tabPosition:u,stretch:d}=this;const c=r||s?h("span",{class:"el-tabs__new-tab",tabindex:"0",onClick:n,onKeydown:e=>{e.code===Tt.enter&&n();}},[h("i",{class:"el-icon-plus"})]):null,p=h("div",{class:["el-tabs__header","is-"+u]},[c,h(Cp,{currentName:o,editable:r,type:t,panes:i,stretch:d,ref:"nav$",onTabClick:l,onTabRemove:a})]),h$1=h("div",{class:"el-tabs__content"},null===(e=this.$slots)||void 0===e?void 0:e.default());return h("div",{class:{"el-tabs":!0,"el-tabs--card":"card"===t,["el-tabs--"+u]:!0,"el-tabs--border-card":"border-card"===t}},"bottom"!==u?[p,h$1]:[h$1,p])}});xp.__file="packages/tabs/src/tabs.vue",xp.install=e=>{e.component(xp.name,xp);};const Sp=e=>{const t=(e||"").split(":");if(t.length>=2){return {hours:parseInt(t[0],10),minutes:parseInt(t[1],10)}}return null},_p=(e,t)=>{const l=Sp(e),a=Sp(t),n=l.minutes+60*l.hours,o=a.minutes+60*a.hours;return n===o?0:n>o?1:-1},Ep=(e,t)=>{const l=Sp(e),a=Sp(t),n={hours:l.hours,minutes:l.minutes};return n.minutes+=a.minutes,n.hours+=a.hours,n.hours+=Math.floor(n.minutes/60),n.minutes=n.minutes%60,(e=>(e.hours<10?"0"+e.hours:e.hours)+":"+(e.minutes<10?"0"+e.minutes:e.minutes))(n)};var Mp=defineComponent({name:"ElTimeSelect",components:{ElSelect:Uu,ElOption:Gu},model:{prop:"value",event:"change"},props:{modelValue:String,editable:{type:Boolean,default:!0},clearable:{type:Boolean,default:!0},size:{type:String,default:"",validator:e=>!e||-1!==["medium","small","mini"].indexOf(e)},placeholder:{type:String,default:""},start:{type:String,default:"09:00"},end:{type:String,default:"18:00"},step:{type:String,default:"00:30"},minTime:{type:String,default:""},maxTime:{type:String,default:""},name:{type:String,default:""},prefixIcon:{type:String,default:"el-icon-time"},clearIcon:{type:String,default:"el-icon-circle-close"}},emits:["change","blur","focus","update:modelValue"],setup:e=>({value:ref(e.modelValue),items:computed((()=>{const t=[];if(e.start&&e.end&&e.step){let l=e.start;for(;_p(l,e.end)<=0;)t.push({value:l,disabled:_p(l,e.minTime||"-1:-1")<=0||_p(l,e.maxTime||"100:100")>=0}),l=Ep(l,e.step);}return t}))})});Mp.render=function(e,t,l,a,n,o){const i=resolveComponent("el-option"),r=resolveComponent("el-select");return openBlock(),createBlock(r,{modelValue:e.value,"onUpdate:modelValue":t[1]||(t[1]=t=>e.value=t),disabled:!e.editable,clearable:e.clearable,"clear-icon":e.clearIcon,size:e.size,placeholder:e.placeholder,"default-first-option":"",filterable:"",onChange:t[2]||(t[2]=t=>{e.$emit("change",t),e.$emit("update:modelValue",t);}),onBlur:t[3]||(t[3]=t=>e.$emit("blur",t)),onFocus:t[4]||(t[4]=t=>e.$emit("focus",t))},{prefix:withCtx((()=>[createVNode("i",{class:"el-input__icon "+e.prefixIcon},null,2)])),default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.items,(e=>(openBlock(),createBlock(i,{key:e.value,label:e.value,value:e.value,disabled:e.disabled},null,8,["label","value","disabled"])))),128))])),_:1},8,["modelValue","disabled","clearable","clear-icon","size","placeholder"])},Mp.__file="packages/time-select/src/time-select.vue",Mp.install=e=>{e.component(Mp.name,Mp);};const Tp=Mp;var Np=defineComponent({name:"ElTimeline",setup:(e,t)=>(provide("timeline",t),()=>{var e,l;return h("ul",{class:{"el-timeline":!0}},null===(l=(e=t.slots).default)||void 0===l?void 0:l.call(e))})});Np.__file="packages/timeline/src/index.vue",Np.install=e=>{e.component(Np.name,Np);};var Op=defineComponent({name:"ElTimelineItem",props:{timestamp:{type:String,default:""},hideTimestamp:{type:Boolean,default:!1},placement:{type:String,default:"bottom"},type:{type:String,default:""},color:{type:String,default:""},size:{type:String,default:"normal"},icon:{type:String,default:""}},setup(){inject("timeline");}});const Pp={class:"el-timeline-item"},Vp=createVNode("div",{class:"el-timeline-item__tail"},null,-1),Ip={key:1,class:"el-timeline-item__dot"},Bp={class:"el-timeline-item__wrapper"},Ap={key:0,class:"el-timeline-item__timestamp is-top"},Lp={class:"el-timeline-item__content"},zp={key:1,class:"el-timeline-item__timestamp is-bottom"};Op.render=function(e,t,l,a,n,o){return openBlock(),createBlock("li",Pp,[Vp,e.$slots.dot?createCommentVNode("v-if",!0):(openBlock(),createBlock("div",{key:0,class:["el-timeline-item__node",["el-timeline-item__node--"+(e.size||""),"el-timeline-item__node--"+(e.type||"")]],style:{backgroundColor:e.color}},[e.icon?(openBlock(),createBlock("i",{key:0,class:["el-timeline-item__icon",e.icon]},null,2)):createCommentVNode("v-if",!0)],6)),e.$slots.dot?(openBlock(),createBlock("div",Ip,[renderSlot(e.$slots,"dot")])):createCommentVNode("v-if",!0),createVNode("div",Bp,[e.hideTimestamp||"top"!==e.placement?createCommentVNode("v-if",!0):(openBlock(),createBlock("div",Ap,toDisplayString(e.timestamp),1)),createVNode("div",Lp,[renderSlot(e.$slots,"default")]),e.hideTimestamp||"bottom"!==e.placement?createCommentVNode("v-if",!0):(openBlock(),createBlock("div",zp,toDisplayString(e.timestamp),1))])])},Op.__file="packages/timeline/src/item.vue",Op.install=e=>{e.component(Op.name,Op);};var Rp=defineComponent({name:"ElTransferPanel",components:{ElCheckboxGroup:po,ElCheckbox:Sn,ElInput:pl,OptionContent:({option:e})=>e},props:{data:{type:Array,default:()=>[]},optionRender:Function,placeholder:String,title:String,filterable:Boolean,format:Object,filterMethod:Function,defaultChecked:Array,props:Object},emits:["checked-change"],setup(e,{emit:t,slots:l}){const i=reactive({checked:[],allChecked:!1,query:"",inputHover:!1,checkChangeByUser:!0}),{labelProp:r,keyProp:s,disabledProp:u,filteredData:d,checkedSummary:c,isIndeterminate:p,handleAllCheckedChange:h}=((e,t,l)=>{const a=computed((()=>e.props.label||"label")),i=computed((()=>e.props.key||"key")),r=computed((()=>e.props.disabled||"disabled")),s=computed((()=>e.data.filter((l=>"function"==typeof e.filterMethod?e.filterMethod(t.query,l):(l[a.value]||l[i.value].toString()).toLowerCase().includes(t.query.toLowerCase()))))),u=computed((()=>s.value.filter((e=>!e[r.value])))),d=computed((()=>{const l=t.checked.length,a=e.data.length,{noChecked:n,hasChecked:o}=e.format;return n&&o?l>0?o.replace(/\${checked}/g,l.toString()).replace(/\${total}/g,a.toString()):n.replace(/\${total}/g,a.toString()):`${l}/${a}`})),c=computed((()=>{const e=t.checked.length;return e>0&&e<u.value.length})),p=()=>{const e=u.value.map((e=>e[i.value]));t.allChecked=e.length>0&&e.every((e=>t.checked.includes(e)));};return watch((()=>t.checked),((e,a)=>{if(p(),t.checkChangeByUser){const t=e.concat(a).filter((t=>!e.includes(t)||!a.includes(t)));l("checked-change",e,t);}else l("checked-change",e),t.checkChangeByUser=!0;})),watch(u,(()=>{p();})),watch((()=>e.data),(()=>{const e=[],l=s.value.map((e=>e[i.value]));t.checked.forEach((t=>{l.includes(t)&&e.push(t);})),t.checkChangeByUser=!1,t.checked=e;})),watch((()=>e.defaultChecked),((e,l)=>{if(l&&e.length===l.length&&e.every((e=>l.includes(e))))return;const a=[],n=u.value.map((e=>e[i.value]));e.forEach((e=>{n.includes(e)&&a.push(e);})),t.checkChangeByUser=!1,t.checked=a;}),{immediate:!0}),{labelProp:a,keyProp:i,disabledProp:r,filteredData:s,checkableData:u,checkedSummary:d,isIndeterminate:c,updateAllChecked:p,handleAllCheckedChange:e=>{t.checked=e?u.value.map((e=>e[i.value])):[];}}})(e,i,t),v=computed((()=>i.query.length>0&&0===d.value.length)),m=computed((()=>i.query.length>0&&i.inputHover?"circle-close":"search")),f=computed((()=>!!l.default()[0].children.length)),{checked:g,allChecked:b,query:y,inputHover:k,checkChangeByUser:C}=toRefs(i);return {labelProp:r,keyProp:s,disabledProp:u,filteredData:d,checkedSummary:c,isIndeterminate:p,handleAllCheckedChange:h,checked:g,allChecked:b,query:y,inputHover:k,checkChangeByUser:C,hasNoMatch:v,inputIcon:m,hasFooter:f,clearQuery:()=>{"circle-close"===m.value&&(i.query="");},t:ga}}});const $p={class:"el-transfer-panel"},Hp={class:"el-transfer-panel__header"},Wp={key:0,class:"el-transfer-panel__footer"};Rp.render=function(e,t,l,a,n,o){const i=resolveComponent("el-checkbox"),r=resolveComponent("el-input"),p=resolveComponent("option-content"),y=resolveComponent("el-checkbox-group");return openBlock(),createBlock("div",$p,[createVNode("p",Hp,[createVNode(i,{modelValue:e.allChecked,"onUpdate:modelValue":t[1]||(t[1]=t=>e.allChecked=t),indeterminate:e.isIndeterminate,onChange:e.handleAllCheckedChange},{default:withCtx((()=>[createTextVNode(toDisplayString(e.title)+" ",1),createVNode("span",null,toDisplayString(e.checkedSummary),1)])),_:1},8,["modelValue","indeterminate","onChange"])]),createVNode("div",{class:["el-transfer-panel__body",e.hasFooter?"is-with-footer":""]},[e.filterable?(openBlock(),createBlock(r,{key:0,modelValue:e.query,"onUpdate:modelValue":t[3]||(t[3]=t=>e.query=t),class:"el-transfer-panel__filter",size:"small",placeholder:e.placeholder,onMouseenter:t[4]||(t[4]=t=>e.inputHover=!0),onMouseleave:t[5]||(t[5]=t=>e.inputHover=!1)},{prefix:withCtx((()=>[createVNode("i",{class:["el-input__icon","el-icon-"+e.inputIcon],onClick:t[2]||(t[2]=(...t)=>e.clearQuery&&e.clearQuery(...t))},null,2)])),_:1},8,["modelValue","placeholder"])):createCommentVNode("v-if",!0),withDirectives(createVNode(y,{modelValue:e.checked,"onUpdate:modelValue":t[6]||(t[6]=t=>e.checked=t),class:[{"is-filterable":e.filterable},"el-transfer-panel__list"]},{default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.filteredData,(t=>(openBlock(),createBlock(i,{key:t[e.keyProp],class:"el-transfer-panel__item",label:t[e.keyProp],disabled:t[e.disabledProp]},{default:withCtx((()=>[createVNode(p,{option:e.optionRender(t)},null,8,["option"])])),_:2},1032,["label","disabled"])))),128))])),_:1},8,["modelValue","class"]),[[vShow,!e.hasNoMatch&&e.data.length>0]]),withDirectives(createVNode("p",{class:"el-transfer-panel__empty"},toDisplayString(e.hasNoMatch?e.t("el.transfer.noMatch"):e.t("el.transfer.noData")),513),[[vShow,e.hasNoMatch||0===e.data.length]])],2),e.hasFooter?(openBlock(),createBlock("p",Wp,[renderSlot(e.$slots,"default")])):createCommentVNode("v-if",!0)])},Rp.__file="packages/transfer/src/transfer-panel.vue";const jp="change";var Kp=defineComponent({name:"ElTransfer",components:{TransferPanel:Rp,ElButton:da},props:{data:{type:Array,default:()=>[]},titles:{type:Array,default:()=>[]},buttonTexts:{type:Array,default:()=>[]},filterPlaceholder:{type:String,default:""},filterMethod:Function,leftDefaultChecked:{type:Array,default:()=>[]},rightDefaultChecked:{type:Array,default:()=>[]},renderContent:Function,modelValue:{type:Array,default:()=>[]},format:{type:Object,default:()=>({})},filterable:{type:Boolean,default:!1},props:{type:Object,default:()=>({label:"label",key:"key",disabled:"disabled"})},targetOrder:{type:String,default:"original",validator:e=>["original","push","unshift"].includes(e)}},emits:[Kt,jp,"left-check-change","right-check-change"],setup(e,{emit:t,slots:i}){const r=inject("elFormItem",{}),s=reactive({leftChecked:[],rightChecked:[]}),{propsKey:u,sourceData:d,targetData:c}=(e=>{const t=computed((()=>e.props.key)),l=computed((()=>e.data.reduce(((e,l)=>(e[l[t.value]]=l)&&e),{}))),a=computed((()=>e.data.filter((l=>!e.modelValue.includes(l[t.value]))))),o=computed((()=>"original"===e.targetOrder?e.data.filter((l=>e.modelValue.includes(l[t.value]))):e.modelValue.reduce(((e,t)=>{const a=l.value[t];return a&&e.push(a),e}),[])));return {propsKey:t,sourceData:a,targetData:o}})(e),{onSourceCheckedChange:p,onTargetCheckedChange:h$1}=((e,t)=>({onSourceCheckedChange:(l,a)=>{e.leftChecked=l,void 0!==a&&t("left-check-change",l,a);},onTargetCheckedChange:(l,a)=>{e.rightChecked=l,void 0!==a&&t("right-check-change",l,a);}}))(s,t),{addToLeft:v,addToRight:m}=((e,t,l,a)=>{const n=(e,t,l)=>{a(Kt,e),a(jp,e,t,l);};return {addToLeft:()=>{const l=e.modelValue.slice();t.rightChecked.forEach((e=>{const t=l.indexOf(e);t>-1&&l.splice(t,1);})),n(l,"left",t.rightChecked);},addToRight:()=>{let a=e.modelValue.slice();const o=e.data.filter((a=>{const n=a[l.value];return t.leftChecked.includes(n)&&!e.modelValue.includes(n)})).map((e=>e[l.value]));a="unshift"===e.targetOrder?o.concat(a):a.concat(o),n(a,"right",t.leftChecked);}}})(e,s,u,t),f=ref(null),g=ref(null),b=computed((()=>2===e.buttonTexts.length)),y=computed((()=>e.titles[0]||ga("el.transfer.titles.0"))),k=computed((()=>e.titles[1]||ga("el.transfer.titles.1"))),C=computed((()=>e.filterPlaceholder||ga("el.transfer.filterPlaceholder")));watch((()=>e.modelValue),(e=>{var t;null===(t=r.formItemMitt)||void 0===t||t.emit("el.form.change",e);}));const x=computed((()=>t=>e.renderContent?e.renderContent(h,t):i.default?i.default({option:t}):h("span",t[e.props.label]||t[e.props.key])));return Object.assign(Object.assign({sourceData:d,targetData:c,onSourceCheckedChange:p,onTargetCheckedChange:h$1,addToLeft:v,addToRight:m},toRefs(s)),{hasButtonTexts:b,leftPanelTitle:y,rightPanelTitle:k,panelFilterPlaceholder:C,clearQuery:e=>{"left"===e?f.value.query="":"right"===e&&(g.value.query="");},optionRender:x})}});const Yp={class:"el-transfer"},qp={class:"el-transfer__buttons"},Up=createVNode("i",{class:"el-icon-arrow-left"},null,-1),Gp={key:0},Xp={key:0},Qp=createVNode("i",{class:"el-icon-arrow-right"},null,-1);Kp.render=function(e,t,l,a,n,o){const i=resolveComponent("transfer-panel"),r=resolveComponent("el-button");return openBlock(),createBlock("div",Yp,[createVNode(i,{ref:"leftPanel",data:e.sourceData,"option-render":e.optionRender,placeholder:e.panelFilterPlaceholder,title:e.leftPanelTitle,filterable:e.filterable,format:e.format,"filter-method":e.filterMethod,"default-checked":e.leftDefaultChecked,props:e.props,onCheckedChange:e.onSourceCheckedChange},{default:withCtx((()=>[renderSlot(e.$slots,"left-footer")])),_:3},8,["data","option-render","placeholder","title","filterable","format","filter-method","default-checked","props","onCheckedChange"]),createVNode("div",qp,[createVNode(r,{type:"primary",class:["el-transfer__button",e.hasButtonTexts?"is-with-texts":""],disabled:0===e.rightChecked.length,onClick:e.addToLeft},{default:withCtx((()=>[Up,void 0!==e.buttonTexts[0]?(openBlock(),createBlock("span",Gp,toDisplayString(e.buttonTexts[0]),1)):createCommentVNode("v-if",!0)])),_:1},8,["class","disabled","onClick"]),createVNode(r,{type:"primary",class:["el-transfer__button",e.hasButtonTexts?"is-with-texts":""],disabled:0===e.leftChecked.length,onClick:e.addToRight},{default:withCtx((()=>[void 0!==e.buttonTexts[1]?(openBlock(),createBlock("span",Xp,toDisplayString(e.buttonTexts[1]),1)):createCommentVNode("v-if",!0),Qp])),_:1},8,["class","disabled","onClick"])]),createVNode(i,{ref:"rightPanel",data:e.targetData,"option-render":e.optionRender,placeholder:e.panelFilterPlaceholder,filterable:e.filterable,format:e.format,"filter-method":e.filterMethod,title:e.rightPanelTitle,"default-checked":e.rightDefaultChecked,props:e.props,onCheckedChange:e.onTargetCheckedChange},{default:withCtx((()=>[renderSlot(e.$slots,"right-footer")])),_:3},8,["data","option-render","placeholder","filterable","format","filter-method","title","default-checked","props","onCheckedChange"])])},Kp.__file="packages/transfer/src/index.vue",Kp.install=e=>{e.component(Kp.name,Kp);};const Jp="$treeNodeId",eh=function(e,t){t&&!t[Jp]&&Object.defineProperty(t,Jp,{value:e.id,enumerable:!1,configurable:!1,writable:!1});},th=function(e,t){return e?t[e]:t[Jp]},lh=e=>{let t=!0,l=!0,a=!0;for(let n=0,o=e.length;n<o;n++){const o=e[n];(!0!==o.checked||o.indeterminate)&&(t=!1,o.disabled||(a=!1)),(!1!==o.checked||o.indeterminate)&&(l=!1);}return {all:t,none:l,allWithoutDisable:a,half:!t&&!l}},ah=function(e){if(0===e.childNodes.length)return;const{all:t,none:l,half:a}=lh(e.childNodes);t?(e.checked=!0,e.indeterminate=!1):a?(e.checked=!1,e.indeterminate=!0):l&&(e.checked=!1,e.indeterminate=!1);const n=e.parent;n&&0!==n.level&&(e.store.checkStrictly||ah(n));},nh=function(e,t){const l=e.store.props,a=e.data||{},n=l[t];if("function"==typeof n)return n(a,e);if("string"==typeof n)return a[n];if(void 0===n){const e=a[t];return void 0===e?"":e}};let oh=0;class ih{constructor(e){this.id=oh++,this.text=null,this.checked=!1,this.indeterminate=!1,this.data=null,this.expanded=!1,this.parent=null,this.visible=!0,this.isCurrent=!1,this.canFocus=!1;for(const t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);this.level=0,this.loaded=!1,this.childNodes=[],this.loading=!1,this.parent&&(this.level=this.parent.level+1);}initialize(){const e=this.store;if(!e)throw new Error("[Node]store is required!");e.registerNode(this);const t=e.props;if(t&&void 0!==t.isLeaf){const e=nh(this,"isLeaf");"boolean"==typeof e&&(this.isLeafByUser=e);}if(!0!==e.lazy&&this.data?(this.setData(this.data),e.defaultExpandAll&&(this.expanded=!0,this.canFocus=!0)):this.level>0&&e.lazy&&e.defaultExpandAll&&this.expand(),Array.isArray(this.data)||eh(this,this.data),!this.data)return;const l=e.defaultExpandedKeys,a=e.key;a&&l&&-1!==l.indexOf(this.key)&&this.expand(null,e.autoExpandParent),a&&void 0!==e.currentNodeKey&&this.key===e.currentNodeKey&&(e.currentNode=this,e.currentNode.isCurrent=!0),e.lazy&&e._initDefaultCheckedNode(this),this.updateLeafState(),!this.parent||1!==this.level&&!0!==this.parent.expanded||(this.canFocus=!0);}setData(e){let t;Array.isArray(e)||eh(this,e),this.data=e,this.childNodes=[],t=0===this.level&&this.data instanceof Array?this.data:nh(this,"children")||[];for(let e=0,l=t.length;e<l;e++)this.insertChild({data:t[e]});}get label(){return nh(this,"label")}get key(){const e=this.store.key;return this.data?this.data[e]:null}get disabled(){return nh(this,"disabled")}get nextSibling(){const e=this.parent;if(e){const t=e.childNodes.indexOf(this);if(t>-1)return e.childNodes[t+1]}return null}get previousSibling(){const e=this.parent;if(e){const t=e.childNodes.indexOf(this);if(t>-1)return t>0?e.childNodes[t-1]:null}return null}contains(e,t=!0){return (this.childNodes||[]).some((l=>l===e||t&&l.contains(e)))}remove(){const e=this.parent;e&&e.removeChild(this);}insertChild(e,t,l){if(!e)throw new Error("insertChild error: child is required.");if(!(e instanceof ih)){if(!l){const l=this.getChildren(!0);-1===l.indexOf(e.data)&&(void 0===t||t<0?l.push(e.data):l.splice(t,0,e.data));}Object.assign(e,{parent:this,store:this.store}),(e=reactive(new ih(e)))instanceof ih&&e.initialize();}e.level=this.level+1,void 0===t||t<0?this.childNodes.push(e):this.childNodes.splice(t,0,e),this.updateLeafState();}insertBefore(e,t){let l;t&&(l=this.childNodes.indexOf(t)),this.insertChild(e,l);}insertAfter(e,t){let l;t&&(l=this.childNodes.indexOf(t),-1!==l&&(l+=1)),this.insertChild(e,l);}removeChild(e){const t=this.getChildren()||[],l=t.indexOf(e.data);l>-1&&t.splice(l,1);const a=this.childNodes.indexOf(e);a>-1&&(this.store&&this.store.deregisterNode(e),e.parent=null,this.childNodes.splice(a,1)),this.updateLeafState();}removeChildByData(e){let t=null;for(let l=0;l<this.childNodes.length;l++)if(this.childNodes[l].data===e){t=this.childNodes[l];break}t&&this.removeChild(t);}expand(e,t){const l=()=>{if(t){let e=this.parent;for(;e.level>0;)e.expanded=!0,e=e.parent;}this.expanded=!0,e&&e(),this.childNodes.forEach((e=>{e.canFocus=!0;}));};this.shouldLoadData()?this.loadData((e=>{Array.isArray(e)&&(this.checked?this.setChecked(!0,!0):this.store.checkStrictly||ah(this),l());})):l();}doCreateChildren(e,t={}){e.forEach((e=>{this.insertChild(Object.assign({data:e},t),void 0,!0);}));}collapse(){this.expanded=!1,this.childNodes.forEach((e=>{e.canFocus=!1;}));}shouldLoadData(){return !0===this.store.lazy&&this.store.load&&!this.loaded}updateLeafState(){if(!0===this.store.lazy&&!0!==this.loaded&&void 0!==this.isLeafByUser)return void(this.isLeaf=this.isLeafByUser);const e=this.childNodes;!this.store.lazy||!0===this.store.lazy&&!0===this.loaded?this.isLeaf=!e||0===e.length:this.isLeaf=!1;}setChecked(e,t,l,a){if(this.indeterminate="half"===e,this.checked=!0===e,this.store.checkStrictly)return;if(!this.shouldLoadData()||this.store.checkDescendants){const{all:l,allWithoutDisable:n}=lh(this.childNodes);this.isLeaf||l||!n||(this.checked=!1,e=!1);const o=()=>{if(t){const l=this.childNodes;for(let n=0,o=l.length;n<o;n++){const o=l[n];a=a||!1!==e;const i=o.disabled?o.checked:a;o.setChecked(i,t,!0,a);}const{half:n,all:o}=lh(l);o||(this.checked=o,this.indeterminate=n);}};if(this.shouldLoadData())return void this.loadData((()=>{o(),ah(this);}),{checked:!1!==e});o();}const n=this.parent;n&&0!==n.level&&(l||ah(n));}getChildren(e=!1){if(0===this.level)return this.data;const t=this.data;if(!t)return null;const l=this.store.props;let a="children";return l&&(a=l.children||"children"),void 0===t[a]&&(t[a]=null),e&&!t[a]&&(t[a]=[]),t[a]}updateChildren(){const e=this.getChildren()||[],t=this.childNodes.map((e=>e.data)),l={},a=[];e.forEach(((e,n)=>{const o=e[Jp];!!o&&t.findIndex((e=>e[Jp]===o))>=0?l[o]={index:n,data:e}:a.push({index:n,data:e});})),this.store.lazy||t.forEach((e=>{l[e[Jp]]||this.removeChildByData(e);})),a.forEach((({index:e,data:t})=>{this.insertChild({data:t},e);})),this.updateLeafState();}loadData(e,t={}){if(!0!==this.store.lazy||!this.store.load||this.loaded||this.loading&&!Object.keys(t).length)e&&e.call(this);else {this.loading=!0;const l=l=>{this.loaded=!0,this.loading=!1,this.childNodes=[],this.doCreateChildren(l,t),this.updateLeafState(),e&&e.call(this,l);};this.store.load(this,l);}}}class rh{constructor(e){this.currentNode=null,this.currentNodeKey=null;for(const t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);this.nodesMap={};}initialize(){if(this.root=new ih({data:this.data,store:this}),this.root.initialize(),this.lazy&&this.load){(0, this.load)(this.root,(e=>{this.root.doCreateChildren(e),this._initDefaultCheckedNodes();}));}else this._initDefaultCheckedNodes();}filter(e){const t=this.filterNodeMethod,l=this.lazy,a=function(n){const o=n.root?n.root.childNodes:n.childNodes;if(o.forEach((l=>{l.visible=t.call(l,e,l.data,l),a(l);})),!n.visible&&o.length){let e=!0;e=!o.some((e=>e.visible)),n.root?n.root.visible=!1===e:n.visible=!1===e;}e&&(!n.visible||n.isLeaf||l||n.expand());};a(this);}setData(e){e!==this.root.data?(this.root.setData(e),this._initDefaultCheckedNodes()):this.root.updateChildren();}getNode(e){if(e instanceof ih)return e;const t="object"!=typeof e?e:th(this.key,e);return this.nodesMap[t]||null}insertBefore(e,t){const l=this.getNode(t);l.parent.insertBefore({data:e},l);}insertAfter(e,t){const l=this.getNode(t);l.parent.insertAfter({data:e},l);}remove(e){const t=this.getNode(e);t&&t.parent&&(t===this.currentNode&&(this.currentNode=null),t.parent.removeChild(t));}append(e,t){const l=t?this.getNode(t):this.root;l&&l.insertChild({data:e});}_initDefaultCheckedNodes(){const e=this.defaultCheckedKeys||[],t=this.nodesMap;e.forEach((e=>{const l=t[e];l&&l.setChecked(!0,!this.checkStrictly);}));}_initDefaultCheckedNode(e){-1!==(this.defaultCheckedKeys||[]).indexOf(e.key)&&e.setChecked(!0,!this.checkStrictly);}setDefaultCheckedKey(e){e!==this.defaultCheckedKeys&&(this.defaultCheckedKeys=e,this._initDefaultCheckedNodes());}registerNode(e){const t=this.key;if(e&&e.data)if(t){void 0!==e.key&&(this.nodesMap[e.key]=e);}else this.nodesMap[e.id]=e;}deregisterNode(e){this.key&&e&&e.data&&(e.childNodes.forEach((e=>{this.deregisterNode(e);})),delete this.nodesMap[e.key]);}getCheckedNodes(e=!1,t=!1){const l=[],a=function(n){(n.root?n.root.childNodes:n.childNodes).forEach((n=>{(n.checked||t&&n.indeterminate)&&(!e||e&&n.isLeaf)&&l.push(n.data),a(n);}));};return a(this),l}getCheckedKeys(e=!1){return this.getCheckedNodes(e).map((e=>(e||{})[this.key]))}getHalfCheckedNodes(){const e=[],t=function(l){(l.root?l.root.childNodes:l.childNodes).forEach((l=>{l.indeterminate&&e.push(l.data),t(l);}));};return t(this),e}getHalfCheckedKeys(){return this.getHalfCheckedNodes().map((e=>(e||{})[this.key]))}_getAllNodes(){const e=[],t=this.nodesMap;for(const l in t)t.hasOwnProperty(l)&&e.push(t[l]);return e}updateChildren(e,t){const l=this.nodesMap[e];if(!l)return;const a=l.childNodes;for(let e=a.length-1;e>=0;e--){const t=a[e];this.remove(t.data);}for(let e=0,a=t.length;e<a;e++){const a=t[e];this.append(a,l.data);}}_setCheckedKeys(e,t=!1,l){const a=this._getAllNodes().sort(((e,t)=>t.level-e.level)),n=Object.create(null),o=Object.keys(l);a.forEach((e=>e.setChecked(!1,!1)));for(let l=0,i=a.length;l<i;l++){const i=a[l],r=i.data[e].toString();if(!(o.indexOf(r)>-1)){i.checked&&!n[r]&&i.setChecked(!1,!1);continue}let s=i.parent;for(;s&&s.level>0;)n[s.data[e]]=!0,s=s.parent;if(i.isLeaf||this.checkStrictly)i.setChecked(!0,!1);else if(i.setChecked(!0,!0),t){i.setChecked(!1,!1);const e=function(t){t.childNodes.forEach((t=>{t.isLeaf||t.setChecked(!1,!1),e(t);}));};e(i);}}}setCheckedNodes(e,t=!1){const l=this.key,a={};e.forEach((e=>{a[(e||{})[l]]=!0;})),this._setCheckedKeys(l,t,a);}setCheckedKeys(e,t=!1){this.defaultCheckedKeys=e;const l=this.key,a={};e.forEach((e=>{a[e]=!0;})),this._setCheckedKeys(l,t,a);}setDefaultExpandedKeys(e){e=e||[],this.defaultExpandedKeys=e,e.forEach((e=>{const t=this.getNode(e);t&&t.expand(null,this.autoExpandParent);}));}setChecked(e,t,l){const a=this.getNode(e);a&&a.setChecked(!!t,l);}getCurrentNode(){return this.currentNode}setCurrentNode(e){const t=this.currentNode;t&&(t.isCurrent=!1),this.currentNode=e,this.currentNode.isCurrent=!0;}setUserCurrentNode(e,t=!0){const l=e[this.key],a=this.nodesMap[l];this.setCurrentNode(a),t&&this.currentNode.level>1&&this.currentNode.parent.expand(null,!0);}setCurrentNodeKey(e,t=!0){if(null==e)return this.currentNode&&(this.currentNode.isCurrent=!1),void(this.currentNode=null);const l=this.getNode(e);l&&(this.setCurrentNode(l),t&&this.currentNode.level>1&&this.currentNode.parent.expand(null,!0));}}var sh=defineComponent({name:"ElTreeNodeContent",props:{node:{type:Object,required:!0},renderContent:Function},setup(e){const t=inject("NodeInstance"),l=inject("RootTree");return ()=>{const a=e.node,{data:n,store:o}=a;return e.renderContent?e.renderContent(h,{_self:t,node:a,data:n,store:o}):l.ctx.slots.default?l.ctx.slots.default({node:a,data:n}):h("span",{class:"el-tree-node__label"},[a.label])}}});function uh(e){const t=inject("TreeNodeMap",null),l={treeNodeExpand:t=>{e.node!==t&&e.node.collapse();},children:[]};return t&&t.children.push(l),provide("TreeNodeMap",l),{broadcastExpanded:t=>{if(e.accordion)for(const e of l.children)e.treeNodeExpand(t);}}}sh.__file="packages/tree/src/tree-node-content.vue";var dh=defineComponent({name:"ElTreeNode",components:{ElCollapseTransition:bo,ElCheckbox:Sn,NodeContent:sh},props:{node:{type:ih,default:()=>({})},props:{type:Object,default:()=>({})},renderContent:Function,renderAfterExpand:Boolean,showCheckbox:{type:Boolean,default:!1}},emits:["node-expand"],setup(t,a){const{broadcastExpanded:n}=uh(t),i=inject("RootTree"),r=ref(!1),s=ref(!1),u=ref(null),d=ref(null),c=ref(null),{emitter:p}={emitter:inject("DragNodeEmitter")},h=getCurrentInstance();provide("NodeInstance",h),i||console.warn("Can not find node's tree."),t.node.expanded&&(r.value=!0,s.value=!0);const v=i.props.children||"children";watch((()=>{const e=t.node.data[v];return e&&[...e]}),(()=>{t.node.updateChildren();})),watch((()=>t.node.indeterminate),(e=>{m(t.node.checked,e);})),watch((()=>t.node.checked),(e=>{m(e,t.node.indeterminate);})),watch((()=>t.node.expanded),(e=>{nextTick((()=>r.value=e)),e&&(s.value=!0);}));const m=(e,l)=>{u.value===e&&d.value===l||i.ctx.emit("check-change",t.node.data,e,l),u.value=e,d.value=l;},f=()=>{t.node.isLeaf||(r.value?(i.ctx.emit("node-collapse",t.node.data,t.node,h),t.node.collapse()):(t.node.expand(),a.emit("node-expand",t.node.data,t.node,h)));},g=(e,l)=>{t.node.setChecked(l.target.checked,!i.props.checkStrictly),nextTick((()=>{const e=i.store.value;i.ctx.emit("check",t.node.data,{checkedNodes:e.getCheckedNodes(),checkedKeys:e.getCheckedKeys(),halfCheckedNodes:e.getHalfCheckedNodes(),halfCheckedKeys:e.getHalfCheckedKeys()});}));};return {node$:c,tree:i,expanded:r,childNodeRendered:s,oldChecked:u,oldIndeterminate:d,emitter:p,parent:parent,getNodeKey:e=>th(i.props.nodeKey,e.data),handleSelectChange:m,handleClick:()=>{const e=i.store.value;e.setCurrentNode(t.node),i.ctx.emit("current-change",e.currentNode?e.currentNode.data:null,e.currentNode),i.currentNode.value=t.node,i.props.expandOnClickNode&&f(),i.props.checkOnClickNode&&!t.node.disabled&&g(null,{target:{checked:!t.node.checked}}),i.ctx.emit("node-click",t.node.data,t.node,h);},handleContextMenu:e=>{i.instance.vnode.props.onNodeContextmenu&&(e.stopPropagation(),e.preventDefault()),i.ctx.emit("node-contextmenu",e,t.node.data,t.node,h);},handleExpandIconClick:f,handleCheckChange:g,handleChildNodeExpand:(e,t,l)=>{n(t),i.ctx.emit("node-expand",e,t,l);},handleDragStart:e=>{i.props.draggable&&p.emit("tree-node-drag-start",{event:e,treeNode:t});},handleDragOver:e=>{i.props.draggable&&(p.emit("tree-node-drag-over",{event:e,treeNode:{$el:c.value,node:t.node}}),e.preventDefault());},handleDrop:e=>{e.preventDefault();},handleDragEnd:e=>{i.props.draggable&&p.emit("tree-node-drag-end",e);}}}});const ch={key:1,class:"el-tree-node__loading-icon el-icon-loading"};dh.render=function(e,t,l,a,n,o){const i=resolveComponent("el-checkbox"),r=resolveComponent("node-content"),c=resolveComponent("el-tree-node"),p=resolveComponent("el-collapse-transition");return withDirectives((openBlock(),createBlock("div",{ref:"node$",class:["el-tree-node",{"is-expanded":e.expanded,"is-current":e.node.isCurrent,"is-hidden":!e.node.visible,"is-focusable":!e.node.disabled,"is-checked":!e.node.disabled&&e.node.checked}],role:"treeitem",tabindex:"-1","aria-expanded":e.expanded,"aria-disabled":e.node.disabled,"aria-checked":e.node.checked,draggable:e.tree.props.draggable,"data-key":e.getNodeKey(e.node),onClick:t[3]||(t[3]=withModifiers(((...t)=>e.handleClick&&e.handleClick(...t)),["stop"])),onContextmenu:t[4]||(t[4]=(...t)=>e.handleContextMenu&&e.handleContextMenu(...t)),onDragstart:t[5]||(t[5]=withModifiers(((...t)=>e.handleDragStart&&e.handleDragStart(...t)),["stop"])),onDragover:t[6]||(t[6]=withModifiers(((...t)=>e.handleDragOver&&e.handleDragOver(...t)),["stop"])),onDragend:t[7]||(t[7]=withModifiers(((...t)=>e.handleDragEnd&&e.handleDragEnd(...t)),["stop"])),onDrop:t[8]||(t[8]=withModifiers(((...t)=>e.handleDrop&&e.handleDrop(...t)),["stop"]))},[createVNode("div",{class:"el-tree-node__content",style:{"padding-left":(e.node.level-1)*e.tree.props.indent+"px"}},[createVNode("span",{class:[{"is-leaf":e.node.isLeaf,expanded:!e.node.isLeaf&&e.expanded},"el-tree-node__expand-icon",e.tree.props.iconClass?e.tree.props.iconClass:"el-icon-caret-right"],onClick:t[1]||(t[1]=withModifiers(((...t)=>e.handleExpandIconClick&&e.handleExpandIconClick(...t)),["stop"]))},null,2),e.showCheckbox?(openBlock(),createBlock(i,{key:0,"model-value":e.node.checked,indeterminate:e.node.indeterminate,disabled:!!e.node.disabled,onClick:t[2]||(t[2]=withModifiers((()=>{}),["stop"])),onChange:e.handleCheckChange},null,8,["model-value","indeterminate","disabled","onChange"])):createCommentVNode("v-if",!0),e.node.loading?(openBlock(),createBlock("span",ch)):createCommentVNode("v-if",!0),createVNode(r,{node:e.node,"render-content":e.renderContent},null,8,["node","render-content"])],4),createVNode(p,null,{default:withCtx((()=>[!e.renderAfterExpand||e.childNodeRendered?withDirectives((openBlock(),createBlock("div",{key:0,class:"el-tree-node__children",role:"group","aria-expanded":e.expanded},[(openBlock(!0),createBlock(Fragment,null,renderList(e.node.childNodes,(t=>(openBlock(),createBlock(c,{key:e.getNodeKey(t),"render-content":e.renderContent,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,node:t,onNodeExpand:e.handleChildNodeExpand},null,8,["render-content","render-after-expand","show-checkbox","node","onNodeExpand"])))),128))],8,["aria-expanded"])),[[vShow,e.expanded]]):createCommentVNode("v-if",!0)])),_:1})],42,["aria-expanded","aria-disabled","aria-checked","draggable","data-key"])),[[vShow,e.node.visible]])},dh.__file="packages/tree/src/tree-node.vue";var ph=defineComponent({name:"ElTree",components:{ElTreeNode:dh},props:{data:{type:Array},emptyText:{type:String,default:()=>ga("el.tree.emptyText")},renderAfterExpand:{type:Boolean,default:!0},nodeKey:String,checkStrictly:Boolean,defaultExpandAll:Boolean,expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:Boolean,checkDescendants:{type:Boolean,default:!1},autoExpandParent:{type:Boolean,default:!0},defaultCheckedKeys:Array,defaultExpandedKeys:Array,currentNodeKey:[String,Number],renderContent:Function,showCheckbox:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},allowDrag:Function,allowDrop:Function,props:{type:Object,default:()=>({children:"children",label:"label",disabled:"disabled"})},lazy:{type:Boolean,default:!1},highlightCurrent:Boolean,load:Function,filterNodeMethod:Function,accordion:Boolean,indent:{type:Number,default:18},iconClass:String},emits:["check-change","current-change","node-click","node-contextmenu","node-collapse","node-expand","check","node-drag-start","node-drag-end","node-drop","node-drag-leave","node-drag-enter","node-drag-over"],setup(t,a){const s=ref(new rh({key:t.nodeKey,data:t.data,lazy:t.lazy,props:t.props,load:t.load,currentNodeKey:t.currentNodeKey,checkStrictly:t.checkStrictly,checkDescendants:t.checkDescendants,defaultCheckedKeys:t.defaultCheckedKeys,defaultExpandedKeys:t.defaultExpandedKeys,autoExpandParent:t.autoExpandParent,defaultExpandAll:t.defaultExpandAll,filterNodeMethod:t.filterNodeMethod}));s.value.initialize();const u=ref(s.value.root),d=ref(null),c=ref(null),p=ref(null),{broadcastExpanded:h}=uh(t),{dragState:v}=function({props:e,ctx:t,el$:a,dropIndicator$:n,store:o}){const i=ie();provide("DragNodeEmitter",i);const r=ref({showDropIndicator:!1,draggingNode:null,dropNode:null,allowDrop:!0,dropType:null});return i.on("tree-node-drag-start",(({event:l,treeNode:a})=>{if(console.log(l,a),"function"==typeof e.allowDrag&&!e.allowDrag(a.node))return l.preventDefault(),!1;l.dataTransfer.effectAllowed="move";try{l.dataTransfer.setData("text/plain","");}catch(e){}r.value.draggingNode=a,t.emit("node-drag-start",a.node,l);})),i.on("tree-node-drag-over",(({event:l,treeNode:o})=>{const i=o,s=r.value.dropNode;s&&s!==i&&at(s.$el,"is-drop-inner");const u=r.value.draggingNode;if(!u||!i)return;let d=!0,c=!0,p=!0,h=!0;"function"==typeof e.allowDrop&&(d=e.allowDrop(u.node,i.node,"prev"),h=c=e.allowDrop(u.node,i.node,"inner"),p=e.allowDrop(u.node,i.node,"next")),l.dataTransfer.dropEffect=c?"move":"none",(d||c||p)&&s!==i&&(s&&t.emit("node-drag-leave",u.node,s.node,l),t.emit("node-drag-enter",u.node,i.node,l)),(d||c||p)&&(r.value.dropNode=i),i.node.nextSibling===u.node&&(p=!1),i.node.previousSibling===u.node&&(d=!1),i.node.contains(u.node,!1)&&(c=!1),(u.node===i.node||u.node.contains(i.node))&&(d=!1,c=!1,p=!1);const v=i.$el.getBoundingClientRect(),m=a.value.getBoundingClientRect();let f;const g=d?c?.25:p?.45:1:-1,b=p?c?.75:d?.55:0:1;let y=-9999;const k=l.clientY-v.top;f=k<v.height*g?"before":k>v.height*b?"after":c?"inner":"none";const C=i.$el.querySelector(".el-tree-node__expand-icon").getBoundingClientRect(),x=n.value;"before"===f?y=C.top-m.top:"after"===f&&(y=C.bottom-m.top),x.style.top=y+"px",x.style.left=C.right-m.left+"px","inner"===f?lt(i.$el,"is-drop-inner"):at(i.$el,"is-drop-inner"),r.value.showDropIndicator="before"===f||"after"===f,r.value.allowDrop=r.value.showDropIndicator||h,r.value.dropType=f,t.emit("node-drag-over",u.node,i.node,l);})),i.on("tree-node-drag-end",(e=>{const{draggingNode:l,dropType:a,dropNode:n}=r.value;if(e.preventDefault(),e.dataTransfer.dropEffect="move",l&&n){const i={data:l.node.data};"none"!==a&&l.node.remove(),"before"===a?n.node.parent.insertBefore(i,n.node):"after"===a?n.node.parent.insertAfter(i,n.node):"inner"===a&&n.node.insertChild(i),"none"!==a&&o.value.registerNode(i),at(n.$el,"is-drop-inner"),t.emit("node-drag-end",l.node,n.node,a,e),"none"!==a&&t.emit("node-drop",l.node,n.node,a,e);}l&&!n&&t.emit("node-drag-end",l.node,null,a,e),r.value.showDropIndicator=!1,r.value.draggingNode=null,r.value.dropNode=null,r.value.allowDrop=!0;})),{dragState:r}}({props:t,ctx:a,el$:c,dropIndicator$:p,store:s});!function({el$:e},t){const a=ref([]),n=ref([]);onMounted((()=>{u(),Je(e.value,"keydown",s);})),onBeforeUnmount((()=>{et(e.value,"keydown",s);})),onUpdated((()=>{a.value=Array.from(e.value.querySelectorAll("[role=treeitem]")),n.value=Array.from(e.value.querySelectorAll("input[type=checkbox]"));})),watch(n,(e=>{e.forEach((e=>{e.setAttribute("tabindex","-1");}));}));const s=l=>{const n=l.target;if(-1===n.className.indexOf("el-tree-node"))return;const o=l.code;a.value=Array.from(e.value.querySelectorAll(".is-focusable[role=treeitem]"));const i=a.value.indexOf(n);let r;if([Tt.up,Tt.down].indexOf(o)>-1){if(l.preventDefault(),o===Tt.up){r=-1===i?0:0!==i?i-1:a.value.length-1;const e=r;for(;!t.value.getNode(a.value[r].dataset.key).canFocus;){if(r--,r===e){r=-1;break}r<0&&(r=a.value.length-1);}}else {r=-1===i?0:i<a.value.length-1?i+1:0;const e=r;for(;!t.value.getNode(a.value[r].dataset.key).canFocus;){if(r++,r===e){r=-1;break}r>=a.value.length&&(r=0);}}-1!==r&&a.value[r].focus();}[Tt.left,Tt.right].indexOf(o)>-1&&(l.preventDefault(),n.click());const s=n.querySelector('[type="checkbox"]');[Tt.enter,Tt.space].indexOf(o)>-1&&s&&(l.preventDefault(),s.click());},u=()=>{var t;a.value=Array.from(e.value.querySelectorAll(".is-focusable[role=treeitem]")),n.value=Array.from(e.value.querySelectorAll("input[type=checkbox]"));const l=e.value.querySelectorAll(".is-checked[role=treeitem]");l.length?l[0].setAttribute("tabindex","0"):null===(t=a.value[0])||void 0===t||t.setAttribute("tabindex","0");};}({el$:c},s);const m=computed((()=>{const{childNodes:e}=u.value;return !e||0===e.length||e.every((({visible:e})=>!e))}));watch((()=>t.defaultCheckedKeys),(e=>{s.value.setDefaultCheckedKey(e);})),watch((()=>t.defaultExpandedKeys),(e=>{s.value.defaultExpandedKeys=e,s.value.setDefaultExpandedKeys(e);})),watch((()=>t.data),(e=>{s.value.setData(e);}),{deep:!0}),watch((()=>t.checkStrictly),(e=>{s.value.checkStrictly=e;}));const f=()=>{const e=s.value.getCurrentNode();return e?e.data:null};return provide("RootTree",{ctx:a,props:t,store:s,root:u,currentNode:d,instance:getCurrentInstance()}),{store:s,root:u,currentNode:d,dragState:v,el$:c,dropIndicator$:p,isEmpty:m,filter:e=>{if(!t.filterNodeMethod)throw new Error("[Tree] filterNodeMethod is required when filter");s.value.filter(e);},getNodeKey:e=>th(t.nodeKey,e.data),getNodePath:e=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in getNodePath");const l=s.value.getNode(e);if(!l)return [];const a=[l.data];let n=l.parent;for(;n&&n!==u.value;)a.push(n.data),n=n.parent;return a.reverse()},getCheckedNodes:(e,t)=>s.value.getCheckedNodes(e,t),getCheckedKeys:e=>s.value.getCheckedKeys(e),getCurrentNode:f,getCurrentKey:()=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in getCurrentKey");const e=f();return e?e[t.nodeKey]:null},setCheckedNodes:(e,l)=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedNodes");s.value.setCheckedNodes(e,l);},setCheckedKeys:(e,l)=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedKeys");s.value.setCheckedKeys(e,l);},setChecked:(e,t,l)=>{s.value.setChecked(e,t,l);},getHalfCheckedNodes:()=>s.value.getHalfCheckedNodes(),getHalfCheckedKeys:()=>s.value.getHalfCheckedKeys(),setCurrentNode:(e,l=!0)=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentNode");s.value.setUserCurrentNode(e,l);},setCurrentKey:(e,l=!0)=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentKey");s.value.setCurrentNodeKey(e,l);},getNode:e=>s.value.getNode(e),remove:e=>{s.value.remove(e);},append:(e,t)=>{s.value.append(e,t);},insertBefore:(e,t)=>{s.value.insertBefore(e,t);},insertAfter:(e,t)=>{s.value.insertAfter(e,t);},handleNodeExpand:(e,t,l)=>{h(t),a.emit("node-expand",e,t,l);},updateKeyChildren:(e,l)=>{if(!t.nodeKey)throw new Error("[Tree] nodeKey is required in updateKeyChild");s.value.updateChildren(e,l);}}}});const hh={key:0,class:"el-tree__empty-block"},vh={class:"el-tree__empty-text"},mh={ref:"dropIndicator$",class:"el-tree__drop-indicator"};ph.render=function(e,t,l,a,n,o){const i=resolveComponent("el-tree-node");return openBlock(),createBlock("div",{ref:"el$",class:["el-tree",{"el-tree--highlight-current":e.highlightCurrent,"is-dragging":!!e.dragState.draggingNode,"is-drop-not-allow":!e.dragState.allowDrop,"is-drop-inner":"inner"===e.dragState.dropType}],role:"tree"},[(openBlock(!0),createBlock(Fragment,null,renderList(e.root.childNodes,(t=>(openBlock(),createBlock(i,{key:e.getNodeKey(t),node:t,props:e.props,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,"render-content":e.renderContent,onNodeExpand:e.handleNodeExpand},null,8,["node","props","render-after-expand","show-checkbox","render-content","onNodeExpand"])))),128)),e.isEmpty?(openBlock(),createBlock("div",hh,[createVNode("span",vh,toDisplayString(e.emptyText),1)])):createCommentVNode("v-if",!0),withDirectives(createVNode("div",mh,null,512),[[vShow,e.dragState.showDropIndicator]])],2)},ph.__file="packages/tree/src/tree.vue",ph.install=e=>{e.component(ph.name,ph);};function gh(e,t,l){let a;a=l.response?""+(l.response.error||l.response):l.responseText?""+l.responseText:`fail to post ${e} ${l.status}`;const n=new Error(a);return n.status=l.status,n.method="post",n.url=e,n}function bh(e){if("undefined"==typeof XMLHttpRequest)return;const t=new XMLHttpRequest,l=e.action;t.upload&&(t.upload.onprogress=function(t){t.total>0&&(t.percent=t.loaded/t.total*100),e.onProgress(t);});const a=new FormData;e.data&&Object.keys(e.data).forEach((t=>{a.append(t,e.data[t]);})),a.append(e.filename,e.file,e.file.name),t.onerror=function(){e.onError(gh(l,0,t));},t.onload=function(){if(t.status<200||t.status>=300)return e.onError(gh(l,0,t));e.onSuccess(function(e){const t=e.responseText||e.response;if(!t)return t;try{return JSON.parse(t)}catch(e){return t}}(t));},t.open("post",l,!0),e.withCredentials&&"withCredentials"in t&&(t.withCredentials=!0);const n=e.headers||{};for(const e in n)n.hasOwnProperty(e)&&null!==n[e]&&t.setRequestHeader(e,n[e]);return t.send(a),t}var yh=defineComponent({name:"ElUploadList",components:{ElProgress:Fd},props:{files:{type:Array,default:()=>[]},disabled:{type:Boolean,default:!1},handlePreview:{type:Function,default:()=>xe},listType:{type:String,default:"text"}},emits:["remove"],setup:(e,{emit:t})=>({focusing:ref(!1),parsePercentage:e=>parseInt(e,10),handleClick:t=>{e.handlePreview(t);},handleRemove:(e,l)=>{t("remove",l);},onFileClicked:e=>{e.target.focus();},t:ga})});const kh=createVNode("i",{class:"el-icon-document"},null,-1),Ch={class:"el-upload-list__item-status-label"},xh={key:2,class:"el-icon-close-tip"},wh={key:4,class:"el-upload-list__item-actions"},Sh=createVNode("i",{class:"el-icon-zoom-in"},null,-1),_h=createVNode("i",{class:"el-icon-delete"},null,-1);yh.render=function(e,t,l,a,n,o){const i=resolveComponent("el-progress");return openBlock(),createBlock(TransitionGroup,{tag:"ul",class:["el-upload-list","el-upload-list--"+e.listType,{"is-disabled":e.disabled}],name:"el-list"},{default:withCtx((()=>[(openBlock(!0),createBlock(Fragment,null,renderList(e.files,(l=>(openBlock(),createBlock("li",{key:l,class:["el-upload-list__item","is-"+l.status,e.focusing?"focusing":""],tabindex:"0",onKeydown:withKeys((t=>!e.disabled&&e.handleRemove(t,l)),["delete"]),onFocus:t[1]||(t[1]=t=>e.focusing=!0),onBlur:t[2]||(t[2]=t=>e.focusing=!1),onClick:t[3]||(t[3]=(...t)=>e.onFileClicked&&e.onFileClicked(...t))},[renderSlot(e.$slots,"default",{file:l},(()=>["uploading"!==l.status&&["picture-card","picture"].includes(e.listType)?(openBlock(),createBlock("img",{key:0,class:"el-upload-list__item-thumbnail",src:l.url,alt:""},null,8,["src"])):createCommentVNode("v-if",!0),createVNode("a",{class:"el-upload-list__item-name",onClick:t=>e.handleClick(l)},[kh,createTextVNode(toDisplayString(l.name),1)],8,["onClick"]),createVNode("label",Ch,[createVNode("i",{class:{"el-icon-upload-success":!0,"el-icon-circle-check":"text"===e.listType,"el-icon-check":["picture-card","picture"].includes(e.listType)}},null,2)]),e.disabled?createCommentVNode("v-if",!0):(openBlock(),createBlock("i",{key:1,class:"el-icon-close",onClick:t=>e.handleRemove(t,l)},null,8,["onClick"])),createCommentVNode(" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn"),createCommentVNode(" This is a bug which needs to be fixed "),createCommentVNode(" TODO: Fix the incorrect navigation interaction "),e.disabled?createCommentVNode("v-if",!0):(openBlock(),createBlock("i",xh,toDisplayString(e.t("el.upload.deleteTip")),1)),"uploading"===l.status?(openBlock(),createBlock(i,{key:3,type:"picture-card"===e.listType?"circle":"line","stroke-width":"picture-card"===e.listType?6:2,percentage:e.parsePercentage(l.percentage)},null,8,["type","stroke-width","percentage"])):createCommentVNode("v-if",!0),"picture-card"===e.listType?(openBlock(),createBlock("span",wh,[createVNode("span",{class:"el-upload-list__item-preview",onClick:t=>e.handlePreview(l)},[Sh],8,["onClick"]),e.disabled?createCommentVNode("v-if",!0):(openBlock(),createBlock("span",{key:0,class:"el-upload-list__item-delete",onClick:t=>e.handleRemove(t,l)},[_h],8,["onClick"]))])):createCommentVNode("v-if",!0)]))],42,["onKeydown"])))),128))])),_:1},8,["class"])},yh.__file="packages/upload/src/upload-list.vue";var Eh=defineComponent({name:"ElUploadDrag",props:{disabled:{type:Boolean,default:!1}},emits:["file"],setup(e,{emit:t}){const a=inject("uploader",{}),n=ref(!1);return {dragover:n,onDrop:function(l){if(e.disabled||!a)return;const o=a.accept;n.value=!1,t("file",o?Array.from(l.dataTransfer.files).filter((e=>{const{type:t,name:l}=e,a=l.indexOf(".")>-1?"."+l.split(".").pop():"",n=t.replace(/\/.*$/,"");return o.split(",").map((e=>e.trim())).filter((e=>e)).some((e=>e.startsWith(".")?a===e:/\/\*$/.test(e)?n===e.replace(/\/\*$/,""):!!/^[^\/]+\/[^\/]+$/.test(e)&&t===e))})):l.dataTransfer.files);},onDragover:function(){e.disabled||(n.value=!0);}}}});Eh.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:{"el-upload-dragger":!0,"is-dragover":e.dragover},onDrop:t[1]||(t[1]=withModifiers(((...t)=>e.onDrop&&e.onDrop(...t)),["prevent"])),onDragover:t[2]||(t[2]=withModifiers(((...t)=>e.onDragover&&e.onDragover(...t)),["prevent"])),onDragleave:t[3]||(t[3]=withModifiers((t=>e.dragover=!1),["prevent"]))},[renderSlot(e.$slots,"default")],34)},Eh.__file="packages/upload/src/upload-dragger.vue";var Mh=defineComponent({components:{UploadDragger:Eh},props:{type:{type:String,default:""},action:{type:String,required:!0},name:{type:String,default:"file"},data:{type:Object,default:()=>null},headers:{type:Object,default:()=>null},withCredentials:{type:Boolean,default:!1},multiple:{type:Boolean,default:null},accept:{type:String,default:""},onStart:{type:Function,default:xe},onProgress:{type:Function,default:xe},onSuccess:{type:Function,default:xe},onError:{type:Function,default:xe},beforeUpload:{type:Function,default:xe},drag:{type:Boolean,default:!1},onPreview:{type:Function,default:xe},onRemove:{type:Function,default:xe},fileList:{type:Array,default:()=>[]},autoUpload:{type:Boolean,default:!0},listType:{type:String,default:"text"},httpRequest:{type:Function,default:()=>bh},disabled:Boolean,limit:{type:Number,default:null},onExceed:{type:Function,default:xe}},setup(e){const t=ref({}),a=ref(!1),n=ref(null);function o(t){if(e.limit&&e.fileList.length+t.length>e.limit)return void e.onExceed(t,e.fileList);let l=Array.from(t);e.multiple||(l=l.slice(0,1)),0!==l.length&&l.forEach((t=>{e.onStart(t),e.autoUpload&&i(t);}));}function i(t){if(n.value.value=null,!e.beforeUpload)return r(t);const l=e.beforeUpload(t);l instanceof Promise?l.then((e=>{const l=Object.prototype.toString.call(e);if("[object File]"===l||"[object Blob]"===l){"[object Blob]"===l&&(e=new File([e],t.name,{type:t.type}));for(const l in t)t.hasOwnProperty(l)&&(e[l]=t[l]);r(e);}else r(t);})).catch((()=>{e.onRemove(null,t);})):!1!==l?r(t):e.onRemove(null,t);}function r(l){const{uid:a}=l,n={headers:e.headers,withCredentials:e.withCredentials,file:l,data:e.data,filename:e.name,action:e.action,onProgress:t=>{e.onProgress(t,l);},onSuccess:n=>{e.onSuccess(n,l),delete t.value[a];},onError:n=>{e.onError(n,l),delete t.value[a];}},o=e.httpRequest(n);t.value[a]=o,o instanceof Promise&&o.then(n.onSuccess,n.onError);}function s(){e.disabled||(n.value.value=null,n.value.click());}return {reqs:t,mouseover:a,inputRef:n,abort:function(e){const l=t.value;if(e){let t=e;e.uid&&(t=e.uid),l[t]&&l[t].abort();}else Object.keys(l).forEach((e=>{l[e]&&l[e].abort(),delete l[e];}));},post:r,handleChange:function(e){const t=e.target.files;t&&o(t);},handleClick:s,handleKeydown:function(){s();},upload:i,uploadFiles:o}}});function Th(e,t){return t.find((t=>t.uid===e.uid))}function Nh(e){return Date.now()+e}Mh.render=function(e,t,l,a,n,o){const i=resolveComponent("upload-dragger");return openBlock(),createBlock("div",{class:["el-upload","el-upload--"+e.listType],tabindex:"0",onClick:t[2]||(t[2]=(...t)=>e.handleClick&&e.handleClick(...t)),onKeydown:t[3]||(t[3]=withKeys(withModifiers(((...t)=>e.handleKeydown&&e.handleKeydown(...t)),["self"]),["enter","space"]))},[e.drag?(openBlock(),createBlock(i,{key:0,disabled:e.disabled,onFile:e.uploadFiles},{default:withCtx((()=>[renderSlot(e.$slots,"default")])),_:3},8,["disabled","onFile"])):renderSlot(e.$slots,"default",{key:1}),createVNode("input",{ref:"inputRef",class:"el-upload__input",type:"file",name:e.name,multiple:e.multiple,accept:e.accept,onChange:t[1]||(t[1]=(...t)=>e.handleChange&&e.handleChange(...t))},null,40,["name","multiple","accept"])],34)},Mh.__file="packages/upload/src/upload.vue";var Dh=e=>{const t=ref([]),a=ref(null);let n=1;return watch((()=>e.listType),(l=>{"picture-card"!==l&&"picture"!==l||(t.value=t.value.map((l=>{if(!l.url&&l.raw)try{l.url=URL.createObjectURL(l.raw);}catch(a){e.onError(a,l,t.value);}return l})));})),watch((()=>e.fileList),(e=>{t.value=e.map((e=>(e.uid=e.uid||Nh(n++),e.status=e.status||"success",e)));}),{immediate:!0,deep:!0}),{clearFiles:function(){t.value=[];},handleError:function(l,a){const n=Th(a,t.value);n.status="fail",t.value.splice(t.value.indexOf(n),1),e.onError(l,n,t.value),e.onChange(n,t.value);},handleProgress:function(l,a){const n=Th(a,t.value);e.onProgress(l,n,t.value),n.status="uploading",n.percentage=l.percent||0;},handleStart:function(l){const a=Nh(n++);l.uid=a;const o={name:l.name,percentage:0,status:"ready",size:l.size,raw:l,uid:a};if("picture-card"===e.listType||"picture"===e.listType)try{o.url=URL.createObjectURL(l);}catch(l){console.error("[Element Error][Upload]",l),e.onError(l,o,t.value);}t.value.push(o),e.onChange(o,t.value);},handleSuccess:function(l,a){const n=Th(a,t.value);n&&(n.status="success",n.response=l,e.onSuccess(l,n,t.value),e.onChange(n,t.value));},handleRemove:function(l,n){n&&(l=Th(n,t.value));const o=()=>{!function(e){a.value.abort(e);}(l);const n=t.value;n.splice(n.indexOf(l),1),e.onRemove(l,n);};if(e.beforeRemove){if("function"==typeof e.beforeRemove){const a=e.beforeRemove(l,t.value);a instanceof Promise?a.then((()=>{o();})).catch(xe):!1!==a&&o();}}else o();},submit:function(){t.value.filter((e=>"ready"===e.status)).forEach((e=>{a.value.upload(e.raw);}));},uploadFiles:t,uploadRef:a}},Oh=defineComponent({name:"ElUpload",components:{Upload:Mh,UploadList:yh},props:{action:{type:String,required:!0},headers:{type:Object,default:()=>({})},data:{type:Object,default:()=>({})},multiple:{type:Boolean,default:!1},name:{type:String,default:"file"},drag:{type:Boolean,default:!1},withCredentials:Boolean,showFileList:{type:Boolean,default:!0},accept:{type:String,default:""},type:{type:String,default:"select"},beforeUpload:{type:Function,default:xe},beforeRemove:{type:Function,default:xe},onRemove:{type:Function,default:xe},onChange:{type:Function,default:xe},onPreview:{type:Function,default:xe},onSuccess:{type:Function,default:xe},onProgress:{type:Function,default:xe},onError:{type:Function,default:xe},fileList:{type:Array,default:()=>[]},autoUpload:{type:Boolean,default:!0},listType:{type:String,default:"text"},httpRequest:{type:Function,default:bh},disabled:Boolean,limit:{type:Number,default:null},onExceed:{type:Function,default:()=>xe}},setup(t){const a=inject("elForm",{}),o=computed((()=>t.disabled||a.disabled)),{clearFiles:i,handleError:s,handleProgress:u,handleStart:d,handleSuccess:c,handleRemove:p,submit:h,uploadRef:v,uploadFiles:m}=Dh(t);return provide("uploader",getCurrentInstance()),onBeforeUnmount((()=>{m.value.forEach((e=>{e.url&&0===e.url.indexOf("blob:")&&URL.revokeObjectURL(e.url);}));})),{dragOver:ref(!1),draging:ref(!1),handleError:s,handleProgress:u,handleRemove:p,handleStart:d,handleSuccess:c,uploadDisabled:o,uploadFiles:m,uploadRef:v,submit:h,clearFiles:i}},render(){var e,t;let l;l=this.showFileList?h(yh,{disabled:this.uploadDisabled,listType:this.listType,files:this.uploadFiles,onRemove:this.handleRemove,handlePreview:this.onPreview},this.$slots.file?{default:e=>this.$slots.file({file:e.file})}:null):null;const a={type:this.type,drag:this.drag,action:this.action,multiple:this.multiple,"before-upload":this.beforeUpload,"with-credentials":this.withCredentials,headers:this.headers,name:this.name,data:this.data,accept:this.accept,fileList:this.uploadFiles,autoUpload:this.autoUpload,listType:this.listType,disabled:this.uploadDisabled,limit:this.limit,"on-exceed":this.onExceed,"on-start":this.handleStart,"on-progress":this.handleProgress,"on-success":this.handleSuccess,"on-error":this.handleError,"on-preview":this.onPreview,"on-remove":this.handleRemove,"http-request":this.httpRequest,ref:"uploadRef"},n=this.$slots.trigger||this.$slots.default,o=h(Mh,a,{default:()=>null==n?void 0:n()});return h("div",["picture-card"===this.listType?l:null,this.$slots.trigger?[o,this.$slots.default()]:o,null===(t=(e=this.$slots).tip)||void 0===t?void 0:t.call(e),"picture-card"!==this.listType?l:null])}});Oh.__file="packages/upload/src/index.vue",Oh.install=e=>{e.component(Oh.name,Oh);};const Ph=Oh;var Vh=defineComponent({name:"ElVirtualListItem",props:{},setup(){const e=ref();return onMounted((()=>{})),onUpdated((()=>{})),{itemRef:e}}});const Ih=withScopeId("data-v-09d1eddb");pushScopeId("data-v-09d1eddb");const Bh={ref:"itemRef",class:"el-vl__item"};popScopeId();const Ah=Ih(((e,t,l,a,n,o)=>(openBlock(),createBlock("div",Bh,[renderSlot(e.$slots,"default")],512))));Vh.render=Ah,Vh.__scopeId="data-v-09d1eddb",Vh.__file="packages/virtual-list/src/virtual-item.vue";var Lh=defineComponent({name:"ElVirtualList",components:{[Vh.name]:Vh},props:{direction:{type:String,default:"v"},data:{type:Array,required:!0},itemSize:{type:Number,required:!0},windowSize:{type:Number,required:!0},poolSize:{type:Number,default:20}},setup:e=>function(e){const t=ref(),a=ref(0),i=ref(0),r=ref(!0),s=ref(""),u=ref(""),d=ref(),c=ref("");watch((()=>e.direction),(e=>{const t="v"===e;r.value=t,s.value="client"+(t?"Height":"Width"),u.value="scroll"+(t?"Top":"Left"),d.value=t?"Y":"X",c.value=t?"height":"width";}),{immediate:!0}),watch((()=>e.poolSize),(e=>{i.value=Math.floor(e/3);}),{immediate:!0});const p=computed((()=>e.poolSize+2*Ze(i))),h=computed((()=>Math.max(0,Math.floor(Ze(a)/e.itemSize)-Ze(i)))),v=computed((()=>({[Ze(c)]:e.windowSize+"px"}))),m=computed((()=>({[Ze(c)]:e.data.length*e.itemSize+"px"}))),f=computed((()=>{const t=Ze(h)*e.itemSize;return {transform:`translate${Ze(d)}(${t}px)`}})),g=computed((()=>({[Ze(c)]:e.itemSize+"px"})));let b=null;const y=computed((()=>{const t=Ze(h),l=Math.min(e.data.length-t,Ze(p));return e.data.slice(t,t+l)}));return {viewportRef:t,contentStyle:m,itemContainerStyle:f,itemStyle:g,viewportStyle:v,startNode:h,renderingItems:p,window:y,onScroll:e=>{b&&cancelAnimationFrame(b),b=requestAnimationFrame((()=>{a.value=e.target[Ze(u)];}));},scrollTo:(l,n="head")=>{if(Ce)return;let o;switch((l<0||l>e.data.length)&&Ae("ElVirtualList]","Out of list range"),n){case"head":o=l*e.itemSize;break;case"center":o=(l-Math.floor(Math.floor(e.windowSize/e.itemSize)/2))*e.itemSize;break;case"tail":o=(l-Math.floor(e.windowSize/e.itemSize)+1)*e.itemSize;break;default:Ae("[ElVirtualList]","Unsupported alignment");}requestAnimationFrame((()=>{a.value=o,t.value[Ze(u)]=o;}));}}}(e)});Lh.render=function(e,t,l,a,n,o){const i=resolveComponent("el-virtual-list-item");return openBlock(),createBlock("div",{ref:"viewportRef",class:"el-vl__viewport",style:e.viewportStyle,onScrollPassive:t[1]||(t[1]=(...t)=>e.onScroll&&e.onScroll(...t))},[createVNode("div",{class:"el-vl__content",style:e.contentStyle},[createVNode("div",{class:"el-vl__item-container",style:e.itemContainerStyle,"data-direction":e.direction},[(openBlock(!0),createBlock(Fragment,null,renderList(e.window,((t,l)=>(openBlock(),createBlock(i,{key:l,class:"el-vl__item",style:e.itemStyle},{default:withCtx((()=>[renderSlot(e.$slots,"default",{item:t})])),_:2},1032,["style"])))),128))],12,["data-direction"])],4)],36)},Lh.__file="packages/virtual-list/src/index.vue",Lh.install=e=>{e.component(Lh.name,Lh);};var Fh=defineComponent({props:{prefixCls:{type:String,default:"el-space"}},setup:e=>({classes:computed((()=>e.prefixCls+"__item"))})});Fh.render=function(e,t,l,a,n,o){return openBlock(),createBlock("div",{class:e.classes},[renderSlot(e.$slots,"default")],2)},Fh.__file="packages/space/src/item.vue";const Rh={mini:4,small:8,medium:12,large:16};const $h=defineComponent({name:"ElSpace",props:{direction:{type:String,default:"horizontal"},class:{type:[String,Object,Array],default:""},style:{type:[String,Array,Object]},alignment:{type:String,default:"center"},prefixCls:{type:String},spacer:{type:[Object,String,Number],default:null,validator:e=>isVNode(e)||We(e)||Ee(e)},wrap:{type:Boolean,default:!1},size:{type:[String,Array,Number],validator:e=>Ut(e)||We(e)||Se(e)}},setup:e=>function(e){const t=computed((()=>["el-space","el-space--"+e.direction,e.class])),a=ref(0),i=ref(0);return watch((()=>[e.size,e.wrap,e.direction]),(([e="small",t,l])=>{if(Se(e)){const[t=0,l=0]=e;a.value=t,i.value=l;}else {let n;n=We(e)?e:Rh[e]||Rh.small,t&&"horizontal"===l?a.value=i.value=n:"horizontal"===l?(a.value=n,i.value=0):(i.value=n,a.value=0);}}),{immediate:!0}),{classes:t,containerStyle:computed((()=>[e.wrap?{flexWrap:"wrap",marginBottom:`-${i.value}px`}:null,{alignItems:e.alignment},e.style])),itemStyle:computed((()=>({paddingBottom:i.value+"px",marginRight:a.value+"px"})))}}(e),render(e){const{classes:t,$slots:l,containerStyle:a,itemStyle:n,spacer:o,prefixCls:i}=e,r=renderSlot(l,"default",{key:0},(()=>[]));if(0===r.children.length)return null;if(Se(r.children)){let e=[];if(r.children.forEach(((t,l)=>{var a;yl(t)?Se(t.children)&&t.children.forEach(((t,l)=>{e.push(createVNode(Fh,{style:n,prefixCls:i,key:"nested-"+l},{default:()=>[t]},bl.PROPS|bl.STYLE,["style","prefixCls"]));})):yl(a=t)||kl(a)||e.push(createVNode(Fh,{style:n,prefixCls:i,key:"LoopKey"+l},{default:()=>[t]},bl.PROPS|bl.STYLE,["style","prefixCls"]));})),o){const t=e.length-1;e=e.reduce(((e,l,a)=>a===t?[...e,l]:[...e,l,createVNode("span",{style:[n,"width: 100%"],key:a},[isVNode(o)?o:createTextVNode(o,bl.TEXT)],bl.STYLE)]),[]);}return createVNode("div",{class:t,style:a},e,bl.STYLE|bl.CLASS)}return r.children}});$h.install=e=>{e.component($h.name,$h);};var Hh=defineComponent({name:"ImgPlaceholder"});const Wh={viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"},jh=createVNode("path",{d:"M64 896V128h896v768H64z m64-128l192-192 116.352 116.352L640 448l256 307.2V192H128v576z m224-480a96 96 0 1 1-0.064 192.064A96 96 0 0 1 352 288z"},null,-1);Hh.render=function(e,t,l,a,n,o){return openBlock(),createBlock("svg",Wh,[jh])},Hh.__file="packages/skeleton-item/src/img-placeholder.vue";var Kh=defineComponent({name:"ElSkeletonItem",components:{[Hh.name]:Hh},props:{variant:{type:String,default:"text"}}});Kh.render=function(e,t,l,a,n,o){const i=resolveComponent("img-placeholder");return openBlock(),createBlock("div",{class:["el-skeleton__item","el-skeleton__"+e.variant]},["image"===e.variant?(openBlock(),createBlock(i,{key:0})):createCommentVNode("v-if",!0)],2)},Kh.__file="packages/skeleton-item/src/index.vue",Kh.install=e=>{e.component(Kh.name,Kh);};const Yh=Kh;var qh=defineComponent({name:"ElSkeleton",components:{[Yh.name]:Yh},props:{animated:{type:Boolean,default:!1},count:{type:Number,default:1},rows:{type:Number,default:3},loading:{type:Boolean,default:!0},throttle:{type:Number}},setup:e=>({uiLoading:function(e,t=0){if(0===t)return e;const a=ref(!1);let n=0;const r=()=>{n&&clearTimeout(n),n=window.setTimeout((()=>{a.value=e.value;}),t);};return onMounted(r),watch((()=>e.value),(e=>{e?r():a.value=e;})),a}(computed((()=>e.loading)),e.throttle)})});qh.render=function(e,t,l,a,n,o){const i=resolveComponent("el-skeleton-item");return e.uiLoading?(openBlock(),createBlock("div",mergeProps({key:0,class:["el-skeleton",e.animated?"is-animated":""]},e.$attrs),[(openBlock(!0),createBlock(Fragment,null,renderList(e.count,(t=>(openBlock(),createBlock(Fragment,{key:t},[e.loading?renderSlot(e.$slots,"template",{key:0},(()=>[createVNode(i,{class:"is-first",variant:"p"}),(openBlock(!0),createBlock(Fragment,null,renderList(e.rows,(t=>(openBlock(),createBlock(i,{key:t,class:{"el-skeleton__paragraph":!0,"is-last":t===e.rows&&e.rows>1},variant:"p"},null,8,["class"])))),128))])):createCommentVNode("v-if",!0)],64)))),128))],16)):renderSlot(e.$slots,"default",mergeProps({key:1},e.$attrs))},qh.__file="packages/skeleton/src/index.vue",qh.install=e=>{e.component(qh.name,qh);};if(!Ce){const e=window;e.dayjs||(e.dayjs=dayjs_min);}

function onError(errorHandler) {
    return new ApolloLink(function (operation, forward) {
        return new zenObservable(function (observer) {
            var sub;
            var retriedSub;
            var retriedResult;
            try {
                sub = forward(operation).subscribe({
                    next: function (result) {
                        if (result.errors) {
                            retriedResult = errorHandler({
                                graphQLErrors: result.errors,
                                response: result,
                                operation: operation,
                                forward: forward,
                            });
                            if (retriedResult) {
                                retriedSub = retriedResult.subscribe({
                                    next: observer.next.bind(observer),
                                    error: observer.error.bind(observer),
                                    complete: observer.complete.bind(observer),
                                });
                                return;
                            }
                        }
                        observer.next(result);
                    },
                    error: function (networkError) {
                        retriedResult = errorHandler({
                            operation: operation,
                            networkError: networkError,
                            graphQLErrors: networkError &&
                                networkError.result &&
                                networkError.result.errors,
                            forward: forward,
                        });
                        if (retriedResult) {
                            retriedSub = retriedResult.subscribe({
                                next: observer.next.bind(observer),
                                error: observer.error.bind(observer),
                                complete: observer.complete.bind(observer),
                            });
                            return;
                        }
                        observer.error(networkError);
                    },
                    complete: function () {
                        if (!retriedResult) {
                            observer.complete.bind(observer)();
                        }
                    },
                });
            }
            catch (e) {
                errorHandler({ networkError: e, operation: operation, forward: forward });
                observer.error(e);
            }
            return function () {
                if (sub)
                    sub.unsubscribe();
                if (retriedSub)
                    sub.unsubscribe();
            };
        });
    });
}
((function (_super) {
    __extends$1(ErrorLink, _super);
    function ErrorLink(errorHandler) {
        var _this = _super.call(this) || this;
        _this.link = onError(errorHandler);
        return _this;
    }
    ErrorLink.prototype.request = function (operation, forward) {
        return this.link.request(operation, forward);
    };
    return ErrorLink;
})(ApolloLink));

var wangEditor = createCommonjsModule(function (module, exports) {
(function webpackUniversalModuleDefinition(root, factory) {
	module.exports = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 140);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(141);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArray", function() { return __spreadArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 封装 DOM 操作
 * @wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _isArray = _interopRequireDefault(__webpack_require__(91));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _map = _interopRequireDefault(__webpack_require__(25));

var _trim = _interopRequireDefault(__webpack_require__(19));

var _map2 = _interopRequireDefault(__webpack_require__(120));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

var _splice = _interopRequireDefault(__webpack_require__(93));

var _filter = _interopRequireDefault(__webpack_require__(74));

var _includes = _interopRequireDefault(__webpack_require__(55));

var _bind = _interopRequireDefault(__webpack_require__(56));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.DomElement = void 0;

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var AGENT_EVENTS = [];
/**
 * 根据 html 字符串创建 elem
 * @param {String} html html
 */

function _createElemByHTML(html) {
  var div = document.createElement('div');
  div.innerHTML = html;
  var elems = div.children;
  return util_1.toArray(elems);
}
/**
 * 判断是否是 DOM List
 * @param selector DOM 元素或列表
 */


function _isDOMList(selector) {
  if (!selector) {
    return false;
  }

  if (selector instanceof HTMLCollection || selector instanceof NodeList) {
    return true;
  }

  return false;
}
/**
 * 封装 querySelectorAll
 * @param selector css 选择器
 */


function _querySelectorAll(selector) {
  var elems = document.querySelectorAll(selector);
  return util_1.toArray(elems);
}
/**
 * 封装 _styleArrTrim
 * @param styleArr css
 */


function _styleArrTrim(style) {
  var styleArr = [];
  var resultArr = [];

  if (!(0, _isArray["default"])(style)) {
    // 有 style，将 style 按照 `;` 拆分为数组
    styleArr = style.split(';');
  } else {
    styleArr = style;
  }

  (0, _forEach["default"])(styleArr).call(styleArr, function (item) {
    var _context;

    // 对每项样式，按照 : 拆分为 key 和 value
    var arr = (0, _map["default"])(_context = item.split(':')).call(_context, function (i) {
      return (0, _trim["default"])(i).call(i);
    });

    if (arr.length === 2) {
      resultArr.push(arr[0] + ':' + arr[1]);
    }
  });
  return resultArr;
} // 构造函数


var DomElement =
/** @class */
function () {
  /**
   * 构造函数
   * @param selector 任一类型的选择器
   */
  function DomElement(selector) {
    // 初始化属性
    this.elems = [];
    this.length = this.elems.length;
    this.dataSource = new _map2["default"]();

    if (!selector) {
      return;
    } // 原本就是 DomElement 实例，则直接返回


    if (selector instanceof DomElement) {
      return selector;
    }

    var selectorResult = []; // 存储查询结果

    var nodeType = selector instanceof Node ? selector.nodeType : -1;
    this.selector = selector;

    if (nodeType === 1 || nodeType === 9) {
      selectorResult = [selector];
    } else if (_isDOMList(selector)) {
      // DOM List
      selectorResult = util_1.toArray(selector);
    } else if (selector instanceof Array) {
      // Element 数组（其他数据类型，暂时忽略）
      selectorResult = selector;
    } else if (typeof selector === 'string') {
      var _context2;

      // 字符串
      var tmpSelector = (0, _trim["default"])(_context2 = selector.replace('/\n/mg', '')).call(_context2);

      if ((0, _indexOf["default"])(tmpSelector).call(tmpSelector, '<') === 0) {
        // 如 <div>
        selectorResult = _createElemByHTML(tmpSelector);
      } else {
        // 如 #id .class
        selectorResult = _querySelectorAll(tmpSelector);
      }
    }

    var length = selectorResult.length;

    if (!length) {
      // 空数组
      return this;
    } // 加入 DOM 节点


    var i = 0;

    for (; i < length; i++) {
      this.elems.push(selectorResult[i]);
    }

    this.length = length;
  }

  (0, _defineProperty["default"])(DomElement.prototype, "id", {
    /**
     * 获取元素 id
     */
    get: function get() {
      return this.elems[0].id;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 遍历所有元素，执行回调函数
   * @param fn 回调函数
   */

  DomElement.prototype.forEach = function (fn) {
    for (var i = 0; i < this.length; i++) {
      var elem = this.elems[i];
      var result = fn.call(elem, elem, i);

      if (result === false) {
        break;
      }
    }

    return this;
  };
  /**
   * 克隆元素
   * @param deep 是否深度克隆
   */


  DomElement.prototype.clone = function (deep) {
    var _context3;

    if (deep === void 0) {
      deep = false;
    }

    var cloneList = [];
    (0, _forEach["default"])(_context3 = this.elems).call(_context3, function (elem) {
      cloneList.push(elem.cloneNode(!!deep));
    });
    return $(cloneList);
  };
  /**
   * 获取第几个元素
   * @param index index
   */


  DomElement.prototype.get = function (index) {
    if (index === void 0) {
      index = 0;
    }

    var length = this.length;

    if (index >= length) {
      index = index % length;
    }

    return $(this.elems[index]);
  };
  /**
   * 获取第一个元素
   */


  DomElement.prototype.first = function () {
    return this.get(0);
  };
  /**
   * 获取最后一个元素
   */


  DomElement.prototype.last = function () {
    var length = this.length;
    return this.get(length - 1);
  };

  DomElement.prototype.on = function (type, selector, fn) {
    var _context4;

    if (!type) return this; // 没有 selector ，只有 type 和 fn

    if (typeof selector === 'function') {
      fn = selector;
      selector = '';
    }

    return (0, _forEach["default"])(_context4 = this).call(_context4, function (elem) {
      // 没有事件代理
      if (!selector) {
        // 无代理
        elem.addEventListener(type, fn);
        return;
      } // 有事件代理


      var agentFn = function agentFn(e) {
        var target = e.target;

        if (target.matches(selector)) {
          fn.call(target, e);
        }
      };

      elem.addEventListener(type, agentFn); // 缓存代理事件

      AGENT_EVENTS.push({
        elem: elem,
        selector: selector,
        fn: fn,
        agentFn: agentFn
      });
    });
  };

  DomElement.prototype.off = function (type, selector, fn) {
    var _context5;

    if (!type) return this; // 没有 selector ，只有 type 和 fn

    if (typeof selector === 'function') {
      fn = selector;
      selector = '';
    }

    return (0, _forEach["default"])(_context5 = this).call(_context5, function (elem) {
      // 解绑事件代理
      if (selector) {
        var idx = -1;

        for (var i = 0; i < AGENT_EVENTS.length; i++) {
          var item = AGENT_EVENTS[i];

          if (item.selector === selector && item.fn === fn && item.elem === elem) {
            idx = i;
            break;
          }
        }

        if (idx !== -1) {
          var agentFn = (0, _splice["default"])(AGENT_EVENTS).call(AGENT_EVENTS, idx, 1)[0].agentFn;
          elem.removeEventListener(type, agentFn);
        }
      } else {
        // @ts-ignore
        elem.removeEventListener(type, fn);
      }
    });
  };

  DomElement.prototype.attr = function (key, val) {
    var _context6;

    if (val == null) {
      // 获取数据
      return this.elems[0].getAttribute(key) || '';
    } // 否则，设置属性


    return (0, _forEach["default"])(_context6 = this).call(_context6, function (elem) {
      elem.setAttribute(key, val);
    });
  };
  /**
   * 删除 属性
   * @param key key
   */


  DomElement.prototype.removeAttr = function (key) {
    var _context7;

    (0, _forEach["default"])(_context7 = this).call(_context7, function (elem) {
      elem.removeAttribute(key);
    });
  };
  /**
   * 添加 css class
   * @param className css class
   */


  DomElement.prototype.addClass = function (className) {
    var _context8;

    if (!className) {
      return this;
    }

    return (0, _forEach["default"])(_context8 = this).call(_context8, function (elem) {
      if (elem.className) {
        // 当前有 class
        var arr = elem.className.split(/\s/);
        arr = (0, _filter["default"])(arr).call(arr, function (item) {
          return !!(0, _trim["default"])(item).call(item);
        }); // 添加 class

        if ((0, _indexOf["default"])(arr).call(arr, className) < 0) {
          arr.push(className);
        } // 修改 elem.class


        elem.className = arr.join(' ');
      } else {
        // 当前没有 class
        elem.className = className;
      }
    });
  };
  /**
   * 添加 css class
   * @param className css class
   */


  DomElement.prototype.removeClass = function (className) {
    var _context9;

    if (!className) {
      return this;
    }

    return (0, _forEach["default"])(_context9 = this).call(_context9, function (elem) {
      if (!elem.className) {
        // 当前无 class
        return;
      }

      var arr = elem.className.split(/\s/);
      arr = (0, _filter["default"])(arr).call(arr, function (item) {
        item = (0, _trim["default"])(item).call(item); // 删除 class

        if (!item || item === className) {
          return false;
        }

        return true;
      }); // 修改 elem.class

      elem.className = arr.join(' ');
    });
  };
  /**
   * 是否有传入的 css class
   * @param className css class
   */


  DomElement.prototype.hasClass = function (className) {
    if (!className) {
      return false;
    }

    var elem = this.elems[0];

    if (!elem.className) {
      // 当前无 class
      return false;
    }

    var arr = elem.className.split(/\s/);
    return (0, _includes["default"])(arr).call(arr, className); // 是否包含
  };
  /**
   * 修改 css
   * @param key css key
   * @param val css value
   */
  // css(key: string): string


  DomElement.prototype.css = function (key, val) {
    var _context10;

    var currentStyle;

    if (val == '') {
      currentStyle = '';
    } else {
      currentStyle = key + ":" + val + ";";
    }

    return (0, _forEach["default"])(_context10 = this).call(_context10, function (elem) {
      var _context11;

      var style = (0, _trim["default"])(_context11 = elem.getAttribute('style') || '').call(_context11);

      if (style) {
        // 有 style，将 style 按照 `;` 拆分为数组
        var resultArr = _styleArrTrim(style); // 替换现有的 style


        resultArr = (0, _map["default"])(resultArr).call(resultArr, function (item) {
          if ((0, _indexOf["default"])(item).call(item, key) === 0) {
            return currentStyle;
          } else {
            return item;
          }
        }); // 新增 style

        if (currentStyle != '' && (0, _indexOf["default"])(resultArr).call(resultArr, currentStyle) < 0) {
          resultArr.push(currentStyle);
        } // 去掉 空白


        if (currentStyle == '') {
          resultArr = _styleArrTrim(resultArr);
        } // 重新设置 style


        elem.setAttribute('style', resultArr.join('; '));
      } else {
        // 当前没有 style
        elem.setAttribute('style', currentStyle);
      }
    });
  };
  /**
   * 封装 getBoundingClientRect
   */


  DomElement.prototype.getBoundingClientRect = function () {
    var elem = this.elems[0];
    return elem.getBoundingClientRect();
  };
  /**
   * 显示
   */


  DomElement.prototype.show = function () {
    return this.css('display', 'block');
  };
  /**
   * 隐藏
   */


  DomElement.prototype.hide = function () {
    return this.css('display', 'none');
  };
  /**
   * 获取子节点（只有 DOM 元素）
   */


  DomElement.prototype.children = function () {
    var elem = this.elems[0];

    if (!elem) {
      return null;
    }

    return $(elem.children);
  };
  /**
   * 获取子节点（包括文本节点）
   */


  DomElement.prototype.childNodes = function () {
    var elem = this.elems[0];

    if (!elem) {
      return null;
    }

    return $(elem.childNodes);
  };
  /**
   * 将子元素全部替换
   * @param $children 新的child节点
   */


  DomElement.prototype.replaceChildAll = function ($children) {
    var parent = this.getNode();
    var elem = this.elems[0];

    while (elem.hasChildNodes()) {
      parent.firstChild && elem.removeChild(parent.firstChild);
    }

    this.append($children);
  };
  /**
   * 增加子节点
   * @param $children 子节点
   */


  DomElement.prototype.append = function ($children) {
    var _context12;

    return (0, _forEach["default"])(_context12 = this).call(_context12, function (elem) {
      (0, _forEach["default"])($children).call($children, function (child) {
        elem.appendChild(child);
      });
    });
  };
  /**
   * 移除当前节点
   */


  DomElement.prototype.remove = function () {
    var _context13;

    return (0, _forEach["default"])(_context13 = this).call(_context13, function (elem) {
      if (elem.remove) {
        elem.remove();
      } else {
        var parent_1 = elem.parentElement;
        parent_1 && parent_1.removeChild(elem);
      }
    });
  };
  /**
   * 当前元素，是否包含某个子元素
   * @param $child 子元素
   */


  DomElement.prototype.isContain = function ($child) {
    var elem = this.elems[0];
    var child = $child.elems[0];
    return elem.contains(child);
  };
  /**
   * 获取当前元素 nodeName
   */


  DomElement.prototype.getNodeName = function () {
    var elem = this.elems[0];
    return elem.nodeName;
  };
  /**
   * 根据元素位置获取元素节点（默认获取0位置的节点）
   * @param n 元素节点位置
   */


  DomElement.prototype.getNode = function (n) {
    if (n === void 0) {
      n = 0;
    }

    var elem;
    elem = this.elems[n];
    return elem;
  };
  /**
   * 查询
   * @param selector css 选择器
   */


  DomElement.prototype.find = function (selector) {
    var elem = this.elems[0];
    return $(elem.querySelectorAll(selector));
  };

  DomElement.prototype.text = function (val) {
    if (!val) {
      // 获取 text
      var elem = this.elems[0];
      return elem.innerHTML.replace(/<[^>]+>/g, function () {
        return '';
      });
    } else {
      var _context14;

      // 设置 text
      return (0, _forEach["default"])(_context14 = this).call(_context14, function (elem) {
        elem.innerHTML = val;
      });
    }
  };

  DomElement.prototype.html = function (val) {
    var elem = this.elems[0];

    if (!val) {
      // 获取 html
      return elem.innerHTML;
    } else {
      // 设置 html
      elem.innerHTML = val;
      return this;
    }
  };
  /**
   * 获取元素 value
   */


  DomElement.prototype.val = function () {
    var _context15;

    var elem = this.elems[0];
    return (0, _trim["default"])(_context15 = elem.value).call(_context15); // 暂用 any
  };
  /**
   * focus 到当前元素
   */


  DomElement.prototype.focus = function () {
    var _context16;

    return (0, _forEach["default"])(_context16 = this).call(_context16, function (elem) {
      elem.focus();
    });
  };
  /**
   * 当前元素前一个兄弟节点
   */


  DomElement.prototype.prev = function () {
    var elem = this.elems[0];
    return $(elem.previousElementSibling);
  };
  /**
   * 当前元素后一个兄弟节点
   * 不包括文本节点、注释节点）
   */


  DomElement.prototype.next = function () {
    var elem = this.elems[0];
    return $(elem.nextElementSibling);
  };
  /**
   * 获取当前节点的下一个兄弟节点
   * 包括文本节点、注释节点即回车、换行、空格、文本等等）
   */


  DomElement.prototype.getNextSibling = function () {
    var elem = this.elems[0];
    return $(elem.nextSibling);
  };
  /**
   * 获取父元素
   */


  DomElement.prototype.parent = function () {
    var elem = this.elems[0];
    return $(elem.parentElement);
  };
  /**
   * 查找父元素，直到满足 selector 条件
   * @param selector css 选择器
   * @param curElem 从哪个元素开始查找，默认为当前元素
   */


  DomElement.prototype.parentUntil = function (selector, curElem) {
    var elem = curElem || this.elems[0];

    if (elem.nodeName === 'BODY') {
      return null;
    }

    var parent = elem.parentElement;

    if (parent === null) {
      return null;
    }

    if (parent.matches(selector)) {
      // 找到，并返回
      return $(parent);
    } // 继续查找，递归


    return this.parentUntil(selector, parent);
  };
  /**
   * 查找父元素，直到满足 selector 条件,或者 到达 编辑区域容器以及菜单栏容器
   * @param selector css 选择器
   * @param curElem 从哪个元素开始查找，默认为当前元素
   */


  DomElement.prototype.parentUntilEditor = function (selector, editor, curElem) {
    var elem = curElem || this.elems[0];

    if ($(elem).equal(editor.$textContainerElem) || $(elem).equal(editor.$toolbarElem)) {
      return null;
    }

    var parent = elem.parentElement;

    if (parent === null) {
      return null;
    }

    if (parent.matches(selector)) {
      // 找到，并返回
      return $(parent);
    } // 继续查找，递归


    return this.parentUntilEditor(selector, editor, parent);
  };
  /**
   * 判读是否相等
   * @param $elem 元素
   */


  DomElement.prototype.equal = function ($elem) {
    if ($elem instanceof DomElement) {
      return this.elems[0] === $elem.elems[0];
    } else if ($elem instanceof HTMLElement) {
      return this.elems[0] === $elem;
    } else {
      return false;
    }
  };
  /**
   * 将该元素插入到某个元素前面
   * @param selector css 选择器
   */


  DomElement.prototype.insertBefore = function (selector) {
    var _context17;

    var $referenceNode = $(selector);
    var referenceNode = $referenceNode.elems[0];

    if (!referenceNode) {
      return this;
    }

    return (0, _forEach["default"])(_context17 = this).call(_context17, function (elem) {
      var parent = referenceNode.parentNode;
      parent.insertBefore(elem, referenceNode);
    });
  };
  /**
   * 将该元素插入到selector元素后面
   * @param selector css 选择器
   */


  DomElement.prototype.insertAfter = function (selector) {
    var _context18;

    var $referenceNode = $(selector);
    var referenceNode = $referenceNode.elems[0];
    var anchorNode = referenceNode && referenceNode.nextSibling;

    if (!referenceNode) {
      return this;
    }

    return (0, _forEach["default"])(_context18 = this).call(_context18, function (elem) {
      var parent = referenceNode.parentNode;

      if (anchorNode) {
        parent.insertBefore(elem, anchorNode);
      } else {
        parent.appendChild(elem);
      }
    });
  };
  /**
   * 设置/获取 数据
   * @param key key
   * @param value value
   */


  DomElement.prototype.data = function (key, value) {
    if (value != null) {
      // 设置数据
      this.dataSource.set(key, value);
    } else {
      // 获取数据
      return this.dataSource.get(key);
    }
  };
  /**
   * 获取当前节点的顶级(段落)
   * @param editor 富文本实例
   */


  DomElement.prototype.getNodeTop = function (editor) {
    // 异常抛出，空的 DomElement 直接返回
    if (this.length < 1) {
      return this;
    } // 获取父级元素，并判断是否是 编辑区域
    // 如果是则返回当前节点


    var $parent = this.parent(); // fix：添加当前元素与编辑区元素的比较，防止传入的当前元素就是编辑区元素而造成的获取顶级元素为空的情况

    if (editor.$textElem.equal(this) || editor.$textElem.equal($parent)) {
      return this;
    } // 到了此处，即代表当前节点不是顶级段落
    // 将当前节点存放于父节点的 prior 字段下
    // 主要用于 回溯 子节点
    // 例如：ul ol 等标签
    // 实际操作的节点是 li 但是一个 ul ol 的子节点可能有多个
    // 所以需要对其进行 回溯 找到对应的子节点


    $parent.prior = this;
    return $parent.getNodeTop(editor);
  };
  /**
   * 获取当前 节点 基与上一个拥有相对或者解决定位的父容器的位置
   * @param editor 富文本实例
   */


  DomElement.prototype.getOffsetData = function () {
    var $node = this.elems[0];
    return {
      top: $node.offsetTop,
      left: $node.offsetLeft,
      width: $node.offsetWidth,
      height: $node.offsetHeight,
      parent: $node.offsetParent
    };
  };
  /**
   * 从上至下进行滚动
   * @param top 滚动的值
   */


  DomElement.prototype.scrollTop = function (top) {
    var $node = this.elems[0];
    $node.scrollTo({
      top: top
    });
  };

  return DomElement;
}();

exports.DomElement = DomElement; // new 一个对象

function $() {
  var arg = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    arg[_i] = arguments[_i];
  }

  return new ((0, _bind["default"])(DomElement).apply(DomElement, tslib_1.__spreadArray([void 0], arg)))();
}

exports["default"] = $;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(181);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var getOwnPropertyDescriptor = __webpack_require__(75).f;
var isForced = __webpack_require__(101);
var path = __webpack_require__(10);
var bind = __webpack_require__(38);
var createNonEnumerableProperty = __webpack_require__(17);
var has = __webpack_require__(16);

var wrapConstructor = function (NativeConstructor) {
  var Wrapper = function (a, b, c) {
    if (this instanceof NativeConstructor) {
      switch (arguments.length) {
        case 0: return new NativeConstructor();
        case 1: return new NativeConstructor(a);
        case 2: return new NativeConstructor(a, b);
      } return new NativeConstructor(a, b, c);
    } return NativeConstructor.apply(this, arguments);
  };
  Wrapper.prototype = NativeConstructor.prototype;
  return Wrapper;
};

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var PROTO = options.proto;

  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;

  var target = GLOBAL ? path : path[TARGET] || (path[TARGET] = {});
  var targetPrototype = target.prototype;

  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;

  for (key in source) {
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contains in native
    USE_NATIVE = !FORCED && nativeSource && has(nativeSource, key);

    targetProperty = target[key];

    if (USE_NATIVE) if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(nativeSource, key);
      nativeProperty = descriptor && descriptor.value;
    } else nativeProperty = nativeSource[key];

    // export native or implementation
    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];

    if (USE_NATIVE && typeof targetProperty === typeof sourceProperty) continue;

    // bind timers to global for call from export context
    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);
    // wrap global constructors for prevent changs in this version
    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);
    // make static versions for prototype methods
    else if (PROTO && typeof sourceProperty == 'function') resultProperty = bind(Function.call, sourceProperty);
    // default case
    else resultProperty = sourceProperty;

    // add a flag to not completely full polyfills
    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(resultProperty, 'sham', true);
    }

    target[key] = resultProperty;

    if (PROTO) {
      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';
      if (!has(path, VIRTUAL_PROTOTYPE)) {
        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
      }
      // export virtual prototype methods
      path[VIRTUAL_PROTOTYPE][key] = sourceProperty;
      // export real prototype methods
      if (options.real && targetPrototype && !targetPrototype[key]) {
        createNonEnumerableProperty(targetPrototype, key, sourceProperty);
      }
    }
  }
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 工具函数集合
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _typeof2 = _interopRequireDefault(__webpack_require__(94));

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _parseInt2 = _interopRequireDefault(__webpack_require__(258));

var _slice = _interopRequireDefault(__webpack_require__(44));

var _setTimeout2 = _interopRequireDefault(__webpack_require__(45));

var _isArray = _interopRequireDefault(__webpack_require__(91));

var _map = _interopRequireDefault(__webpack_require__(25));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.hexToRgb = exports.getRandomCode = exports.toArray = exports.deepClone = exports.isFunction = exports.debounce = exports.throttle = exports.arrForEach = exports.forEach = exports.replaceSpecialSymbol = exports.replaceHtmlSymbol = exports.getRandom = exports.UA = void 0;

var tslib_1 = __webpack_require__(2);

var NavUA =
/** @class */
function () {
  function NavUA() {
    this._ua = navigator.userAgent;

    var math = this._ua.match(/(Edge?)\/(\d+)/);

    this.isOldEdge = math && math[1] == 'Edge' && (0, _parseInt2["default"])(math[2]) < 19 ? true : false;
    this.isFirefox = /Firefox\/\d+/.test(this._ua) && !/Seamonkey\/\d+/.test(this._ua) ? true : false;
  } // 是否为 IE


  NavUA.prototype.isIE = function () {
    return 'ActiveXObject' in window;
  }; // 是否为 webkit


  NavUA.prototype.isWebkit = function () {
    return /webkit/i.test(this._ua);
  };

  return NavUA;
}(); // 和 UA 相关的属性


exports.UA = new NavUA();
/**
 * 获取随机字符
 * @param prefix 前缀
 */

function getRandom(prefix) {
  var _context;

  if (prefix === void 0) {
    prefix = '';
  }

  return prefix + (0, _slice["default"])(_context = Math.random().toString()).call(_context, 2);
}

exports.getRandom = getRandom;
/**
 * 替换 html 特殊字符
 * @param html html 字符串
 */

function replaceHtmlSymbol(html) {
  return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/"/gm, '&quot;').replace(/(\r\n|\r|\n)/g, '<br/>');
}

exports.replaceHtmlSymbol = replaceHtmlSymbol;

function replaceSpecialSymbol(value) {
  return value.replace(/&lt;/gm, '<').replace(/&gt;/gm, '>').replace(/&quot;/gm, '"');
}

exports.replaceSpecialSymbol = replaceSpecialSymbol;

function forEach(obj, fn) {
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var result = fn(key, obj[key]);

      if (result === false) {
        // 提前终止循环
        break;
      }
    }
  }
}

exports.forEach = forEach;
/**
 * 遍历类数组
 * @param fakeArr 类数组
 * @param fn 回调函数
 */

function arrForEach(fakeArr, fn) {
  var i, item, result;
  var length = fakeArr.length || 0;

  for (i = 0; i < length; i++) {
    item = fakeArr[i];
    result = fn.call(fakeArr, item, i);

    if (result === false) {
      break;
    }
  }
}

exports.arrForEach = arrForEach;
/**
 * 节流
 * @param fn 函数
 * @param interval 间隔时间，毫秒
 */

function throttle(fn, interval) {
  if (interval === void 0) {
    interval = 200;
  }

  var flag = false;
  return function () {
    var _this = this;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    if (!flag) {
      flag = true;
      (0, _setTimeout2["default"])(function () {
        flag = false;
        fn.call.apply(fn, tslib_1.__spreadArray([_this], args)); // this 报语法错误，先用 null
      }, interval);
    }
  };
}

exports.throttle = throttle;
/**
 * 防抖
 * @param fn 函数
 * @param delay 间隔时间，毫秒
 */

function debounce(fn, delay) {
  if (delay === void 0) {
    delay = 200;
  }

  var lastFn = 0;
  return function () {
    var _this = this;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    if (lastFn) {
      window.clearTimeout(lastFn);
    }

    lastFn = (0, _setTimeout2["default"])(function () {
      lastFn = 0;
      fn.call.apply(fn, tslib_1.__spreadArray([_this], args)); // this 报语法错误，先用 null
    }, delay);
  };
}

exports.debounce = debounce;
/**
 * isFunction 是否是函数
 * @param fn 函数
 */

function isFunction(fn) {
  return typeof fn === 'function';
}

exports.isFunction = isFunction;
/**
 * 引用与非引用值 深拷贝方法
 * @param data
 */

function deepClone(data) {
  if ((0, _typeof2["default"])(data) !== 'object' || typeof data == 'function' || data === null) {
    return data;
  }

  var item;

  if ((0, _isArray["default"])(data)) {
    item = [];
  }

  if (!(0, _isArray["default"])(data)) {
    item = {};
  }

  for (var i in data) {
    if (Object.prototype.hasOwnProperty.call(data, i)) {
      item[i] = deepClone(data[i]);
    }
  }

  return item;
}

exports.deepClone = deepClone;
/**
 * 将可遍历的对象转换为数组
 * @param data 可遍历的对象
 */

function toArray(data) {
  return (0, _slice["default"])(Array.prototype).call(data);
}

exports.toArray = toArray;
/**
 * 唯一id生成
 * @param length 随机数长度
 */

function getRandomCode() {
  var _context2;

  return (0, _slice["default"])(_context2 = Math.random().toString(36)).call(_context2, -5);
}

exports.getRandomCode = getRandomCode;
/**
 * hex color 转换成 rgb
 * @param hex string
 */

function hexToRgb(hex) {
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  if (result == null) return null;
  var colors = (0, _map["default"])(result).call(result, function (i) {
    return (0, _parseInt2["default"])(i, 16);
  });
  var r = colors[1];
  var g = colors[2];
  var b = colors[3];
  return "rgb(" + r + ", " + g + ", " + b + ")";
}

exports.hexToRgb = hexToRgb;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 常量
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.EMPTY_P_REGEX = exports.EMPTY_P_LAST_REGEX = exports.EMPTY_P = exports.urlRegex = exports.EMPTY_FN = void 0;

function EMPTY_FN() {}

exports.EMPTY_FN = EMPTY_FN; //用于校验是否为url格式字符串

exports.urlRegex = /^(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-.,@?^=%&amp;:/~+#]*[\w\-@?^=%&amp;/~+#])?/; // 编辑器为了方便继续输入/换行等原因 主动生成的空标签

exports.EMPTY_P = '<p data-we-empty-p=""><br></p>'; // 用于校验dom中最后 由编辑器主动生成的空标签结构

exports.EMPTY_P_LAST_REGEX = /<p data-we-empty-p=""><br\/?><\/p>$/gim; // 用于校验dom中所有 由编辑器主动生成的空标签结构

exports.EMPTY_P_REGEX = /<p data-we-empty-p="">/gim;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(144)));

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var shared = __webpack_require__(79);
var has = __webpack_require__(16);
var uid = __webpack_require__(61);
var NATIVE_SYMBOL = __webpack_require__(84);
var USE_SYMBOL_AS_UID = __webpack_require__(106);

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    if (NATIVE_SYMBOL && has(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(10);
var has = __webpack_require__(16);
var wrappedWellKnownSymbolModule = __webpack_require__(95);
var defineProperty = __webpack_require__(18).f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(10);

module.exports = function (CONSTRUCTOR) {
  return path[CONSTRUCTOR + 'Prototype'];
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),
/* 16 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var definePropertyModule = __webpack_require__(18);
var createPropertyDescriptor = __webpack_require__(37);

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var IE8_DOM_DEFINE = __webpack_require__(100);
var anObject = __webpack_require__(20);
var toPrimitive = __webpack_require__(59);

// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(193);

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  __webpack_require__.nc ;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 按钮菜单 Class
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var Menu_1 = tslib_1.__importDefault(__webpack_require__(96));

var BtnMenu =
/** @class */
function (_super) {
  tslib_1.__extends(BtnMenu, _super);

  function BtnMenu($elem, editor) {
    return _super.call(this, $elem, editor) || this;
  }

  return BtnMenu;
}(Menu_1["default"]);

exports["default"] = BtnMenu;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 下拉菜单 Class
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _setTimeout2 = _interopRequireDefault(__webpack_require__(45));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Menu_1 = tslib_1.__importDefault(__webpack_require__(96));

var DropList_1 = tslib_1.__importDefault(__webpack_require__(132));

var DropListMenu =
/** @class */
function (_super) {
  tslib_1.__extends(DropListMenu, _super);

  function DropListMenu($elem, editor, conf) {
    var _this = _super.call(this, $elem, editor) || this; // 国际化


    conf.title = editor.i18next.t("menus.dropListMenu." + conf.title); // 非中文模式下 带 icon 的下拉列表居左

    var className = editor.config.lang === 'zh-CN' ? '' : 'w-e-drop-list-tl';

    if (className !== '' && conf.type === 'list') {
      var _context;

      (0, _forEach["default"])(_context = conf.list).call(_context, function (item) {
        var $elem = item.$elem;
        var $children = dom_core_1["default"]($elem.children());

        if ($children.length > 0) {
          var nodeName = $children === null || $children === void 0 ? void 0 : $children.getNodeName();

          if (nodeName && nodeName === 'I') {
            $elem.addClass(className);
          }
        }
      });
    } // 初始化 dropList


    var dropList = new DropList_1["default"](_this, conf);
    _this.dropList = dropList; // 绑定事件

    $elem.on('click', function () {
      var _context2;

      if (editor.selection.getRange() == null) {
        return;
      }

      $elem.css('z-index', editor.zIndex.get('menu')); // 触发 droplist 悬浮事件

      (0, _forEach["default"])(_context2 = editor.txt.eventHooks.dropListMenuHoverEvents).call(_context2, function (fn) {
        return fn();
      }); // 显示

      dropList.show();
    }).on('mouseleave', function () {
      $elem.css('z-index', 'auto'); // 隐藏

      dropList.hideTimeoutId = (0, _setTimeout2["default"])(function () {
        dropList.hide();
      });
    });
    return _this;
  }

  return DropListMenu;
}(Menu_1["default"]);

exports["default"] = DropListMenu;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(189);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(202);

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(76);
var requireObjectCoercible = __webpack_require__(48);

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(10);
var global = __webpack_require__(8);

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(38);
var IndexedObject = __webpack_require__(76);
var toObject = __webpack_require__(33);
var toLength = __webpack_require__(34);
var arraySpeciesCreate = __webpack_require__(90);

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterOut
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod(7)
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(287);

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description panel class
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _find = _interopRequireDefault(__webpack_require__(30));

var _set = _interopRequireDefault(__webpack_require__(129));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var const_1 = __webpack_require__(7);

var Panel =
/** @class */
function () {
  function Panel(menu, conf) {
    this.menu = menu;
    this.conf = conf;
    this.$container = dom_core_1["default"]('<div class="w-e-panel-container"></div>'); // 隐藏 panel

    var editor = menu.editor;
    editor.txt.eventHooks.clickEvents.push(Panel.hideCurAllPanels);
    editor.txt.eventHooks.toolbarClickEvents.push(Panel.hideCurAllPanels);
    editor.txt.eventHooks.dropListMenuHoverEvents.push(Panel.hideCurAllPanels);
  }
  /**
   * 创建并展示 panel
   */


  Panel.prototype.create = function () {
    var _this = this;

    var menu = this.menu;

    if (Panel.createdMenus.has(menu)) {
      // 创建过了
      return;
    }

    var conf = this.conf; // panel 的容器

    var $container = this.$container;
    var width = conf.width || 300; // 默认 300px

    var rect = menu.editor.$toolbarElem.getBoundingClientRect();
    var menuRect = menu.$elem.getBoundingClientRect();
    var top = rect.height + rect.top - menuRect.top;
    var left = (rect.width - width) / 2 + rect.left - menuRect.left;
    $container.css('width', width + 'px').css('margin-top', top + "px").css('margin-left', left + "px").css('z-index', menu.editor.zIndex.get('panel')); // 添加关闭按钮

    var $closeBtn = dom_core_1["default"]('<i class="w-e-icon-close w-e-panel-close"></i>');
    $container.append($closeBtn);
    $closeBtn.on('click', function () {
      _this.remove();
    }); // 准备 tabs 容器

    var $tabTitleContainer = dom_core_1["default"]('<ul class="w-e-panel-tab-title"></ul>');
    var $tabContentContainer = dom_core_1["default"]('<div class="w-e-panel-tab-content"></div>');
    $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度

    var height = conf.height; // height: 0 即不用设置

    if (height) {
      $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');
    } // tabs


    var tabs = conf.tabs || [];
    var tabTitleArr = [];
    var tabContentArr = [];
    (0, _forEach["default"])(tabs).call(tabs, function (tab, tabIndex) {
      if (!tab) {
        return;
      }

      var title = tab.title || '';
      var tpl = tab.tpl || ''; // 添加到 DOM

      var $title = dom_core_1["default"]("<li class=\"w-e-item\">" + title + "</li>");
      $tabTitleContainer.append($title);
      var $content = dom_core_1["default"](tpl);
      $tabContentContainer.append($content); // 记录到内存

      tabTitleArr.push($title);
      tabContentArr.push($content); // 设置 active 项

      if (tabIndex === 0) {
        $title.data('active', true);
        $title.addClass('w-e-active');
      } else {
        $content.hide();
      } // 绑定 tab 的事件


      $title.on('click', function () {
        if ($title.data('active')) {
          return;
        } // 隐藏所有的 tab


        (0, _forEach["default"])(tabTitleArr).call(tabTitleArr, function ($title) {
          $title.data('active', false);
          $title.removeClass('w-e-active');
        });
        (0, _forEach["default"])(tabContentArr).call(tabContentArr, function ($content) {
          $content.hide();
        }); // 显示当前的 tab

        $title.data('active', true);
        $title.addClass('w-e-active');
        $content.show();
      });
    }); // 绑定关闭事件

    $container.on('click', function (e) {
      // 点击时阻止冒泡
      e.stopPropagation();
    }); // 添加到 DOM

    menu.$elem.append($container); // 绑定 conf events 的事件，只有添加到 DOM 之后才能绑定成功

    (0, _forEach["default"])(tabs).call(tabs, function (tab, index) {
      if (!tab) {
        return;
      }

      var events = tab.events || [];
      (0, _forEach["default"])(events).call(events, function (event) {
        var selector = event.selector;
        var type = event.type;
        var fn = event.fn || const_1.EMPTY_FN;
        var $content = tabContentArr[index];
        (0, _find["default"])($content).call($content, selector).on(type, function (e) {
          return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var needToHide;
            return tslib_1.__generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  e.stopPropagation();
                  return [4
                  /*yield*/
                  , fn(e) // 执行完事件之后，是否要关闭 panel
                  ];

                case 1:
                  needToHide = _a.sent(); // 执行完事件之后，是否要关闭 panel

                  if (needToHide) {
                    this.remove();
                  }

                  return [2
                  /*return*/
                  ];
              }
            });
          });
        });
      });
    }); // focus 第一个 elem

    var $inputs = (0, _find["default"])($container).call($container, 'input[type=text],textarea');

    if ($inputs.length) {
      $inputs.get(0).focus();
    } // 隐藏其他 panel


    Panel.hideCurAllPanels(); // 记录该 menu 已经创建了 panel

    menu.setPanel(this);
    Panel.createdMenus.add(menu);
  };
  /**
   * 移除 penal
   */


  Panel.prototype.remove = function () {
    var menu = this.menu;
    var $container = this.$container;

    if ($container) {
      $container.remove();
    } // 将该 menu 记录中移除


    Panel.createdMenus["delete"](menu);
  };
  /**
   * 隐藏当前所有的 panel
   */


  Panel.hideCurAllPanels = function () {
    var _context;

    if (Panel.createdMenus.size === 0) {
      return;
    }

    (0, _forEach["default"])(_context = Panel.createdMenus).call(_context, function (menu) {
      var panel = menu.panel;
      panel && panel.remove();
    });
  }; // 记录已经创建过的 panelMenu


  Panel.createdMenus = new _set["default"]();
  return Panel;
}();

exports["default"] = Panel;

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(48);

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(64);

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description Modal 菜单 Class
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var Menu_1 = tslib_1.__importDefault(__webpack_require__(96));

var PanelMenu =
/** @class */
function (_super) {
  tslib_1.__extends(PanelMenu, _super);

  function PanelMenu($elem, editor) {
    return _super.call(this, $elem, editor) || this;
  }
  /**
   * 给 menu 设置 panel
   * @param panel panel 实例
   */


  PanelMenu.prototype.setPanel = function (panel) {
    this.panel = panel;
  };

  return PanelMenu;
}(Menu_1["default"]);

exports["default"] = PanelMenu;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description Tooltip class
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _bind = _interopRequireDefault(__webpack_require__(56));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip =
/** @class */
function () {
  function Tooltip(editor, $elem, conf) {
    this.editor = editor;
    this.$targetElem = $elem;
    this.conf = conf;
    this._show = false;
    this._isInsertTextContainer = false; // 定义 container

    var $container = dom_core_1["default"]('<div></div>');
    $container.addClass('w-e-tooltip');
    this.$container = $container;
  }
  /**
   * 获取 tooltip 定位
   */


  Tooltip.prototype.getPositionData = function () {
    var $container = this.$container;
    var top = 0;
    var left = 0; // tooltip 的高度

    var tooltipHeight = 20; // 网页的 scrollTop

    var pageScrollTop = document.documentElement.scrollTop; // 目标元素的 rect

    var targetElemRect = this.$targetElem.getBoundingClientRect(); // 编辑区域的 rect

    var textElemRect = this.editor.$textElem.getBoundingClientRect(); // 获取基于 textContainerElem 的 位置信息

    var targetOffset = this.$targetElem.getOffsetData();
    var targetParentElem = dom_core_1["default"](targetOffset.parent); // 获取 编辑区域的滚动条信息

    var scrollTop = this.editor.$textElem.elems[0].scrollTop; // 是否插入 textContainer 中

    this._isInsertTextContainer = targetParentElem.equal(this.editor.$textContainerElem);

    if (this._isInsertTextContainer) {
      // 父容器的高度
      var targetParentElemHeight = targetParentElem.getBoundingClientRect().height; // 相对于父容器的位置信息

      var offsetTop = targetOffset.top,
          offsetLeft = targetOffset.left,
          offsetHeight = targetOffset.height; // 元素基于父容器的 绝对top信息

      var absoluteTop = offsetTop - scrollTop;

      if (absoluteTop > tooltipHeight + 5) {
        // 说明模板元素的顶部空间足够
        top = absoluteTop - tooltipHeight - 15;
        $container.addClass('w-e-tooltip-up');
      } else if (absoluteTop + offsetHeight + tooltipHeight < targetParentElemHeight) {
        // 说明模板元素的底部空间足够
        top = absoluteTop + offsetHeight + 10;
        $container.addClass('w-e-tooltip-down');
      } else {
        // 其他情况，tooltip 放在目标元素左上角
        top = (absoluteTop > 0 ? absoluteTop : 0) + tooltipHeight + 10;
        $container.addClass('w-e-tooltip-down');
      } // 计算 left


      if (offsetLeft < 0) {
        left = 0;
      } else {
        left = offsetLeft;
      }
    } else {
      if (targetElemRect.top < tooltipHeight) {
        // 说明目标元素的顶部，因滑动隐藏在浏览器上方。tooltip 要放在目标元素下面
        top = targetElemRect.bottom + pageScrollTop + 5; // 5px 间距

        $container.addClass('w-e-tooltip-down');
      } else if (targetElemRect.top - textElemRect.top < tooltipHeight) {
        // 说明目标元素的顶部，因滑动隐藏在编辑区域上方。tooltip 要放在目标元素下面
        top = targetElemRect.bottom + pageScrollTop + 5; // 5px 间距

        $container.addClass('w-e-tooltip-down');
      } else {
        // 其他情况，tooltip 放在目标元素上方
        top = targetElemRect.top + pageScrollTop - tooltipHeight - 15; // 减去 toolbar 的高度，还有 15px 间距

        $container.addClass('w-e-tooltip-up');
      } // 计算 left


      if (targetElemRect.left < 0) {
        left = 0;
      } else {
        left = targetElemRect.left;
      }
    } // 返回结果


    return {
      top: top,
      left: left
    };
  };
  /**
   * 添加 tooltip 菜单
   */


  Tooltip.prototype.appendMenus = function () {
    var _this = this;

    var conf = this.conf;
    var editor = this.editor;
    var $targetElem = this.$targetElem;
    var $container = this.$container;
    (0, _forEach["default"])(conf).call(conf, function (item, index) {
      // 添加元素
      var $elem = item.$elem;
      var $wrapper = dom_core_1["default"]('<div></div>');
      $wrapper.addClass('w-e-tooltip-item-wrapper ');
      $wrapper.append($elem);
      $container.append($wrapper); // 绑定点击事件

      $elem.on('click', function (e) {
        e.preventDefault();
        var res = item.onClick(editor, $targetElem);
        if (res) _this.remove();
      });
    });
  };
  /**
   * 创建 tooltip
   */


  Tooltip.prototype.create = function () {
    var _context, _context2;

    var editor = this.editor;
    var $container = this.$container; // 生成 container 的内容

    this.appendMenus(); // 设置定位

    var _a = this.getPositionData(),
        top = _a.top,
        left = _a.left;

    $container.css('top', top + "px");
    $container.css('left', left + "px"); // 设置 z-index

    $container.css('z-index', editor.zIndex.get('tooltip')); // 添加到 DOM

    if (this._isInsertTextContainer) {
      this.editor.$textContainerElem.append($container);
    } else {
      dom_core_1["default"]('body').append($container);
    }

    this._show = true;
    editor.beforeDestroy((0, _bind["default"])(_context = this.remove).call(_context, this));
    editor.txt.eventHooks.onBlurEvents.push((0, _bind["default"])(_context2 = this.remove).call(_context2, this));
  };
  /**
   * 移除该 tooltip
   */


  Tooltip.prototype.remove = function () {
    this.$container.remove();
    this._show = false;
  };

  (0, _defineProperty["default"])(Tooltip.prototype, "isShow", {
    /**
     * 是否显示
     */
    get: function get() {
      return this._show;
    },
    enumerable: false,
    configurable: true
  });
  return Tooltip;
}();

exports["default"] = Tooltip;

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(32);

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var isArrayIteratorMethod = __webpack_require__(105);
var toLength = __webpack_require__(34);
var bind = __webpack_require__(38);
var getIteratorMethod = __webpack_require__(107);
var iteratorClose = __webpack_require__(108);

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator);
      throw error;
    }
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};


/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(85);
var defineProperty = __webpack_require__(18).f;
var createNonEnumerableProperty = __webpack_require__(17);
var has = __webpack_require__(16);
var toString = __webpack_require__(169);
var wellKnownSymbol = __webpack_require__(9);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC, SET_METHOD) {
  if (it) {
    var target = STATIC ? it : it.prototype;
    if (!has(target, TO_STRING_TAG)) {
      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
    }
    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {
      createNonEnumerableProperty(target, 'toString', toString);
    }
  }
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(173);
var global = __webpack_require__(8);
var isObject = __webpack_require__(13);
var createNonEnumerableProperty = __webpack_require__(17);
var objectHas = __webpack_require__(16);
var shared = __webpack_require__(80);
var sharedKey = __webpack_require__(60);
var hiddenKeys = __webpack_require__(49);

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(263);

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(267);

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.createElementFragment = exports.createDocumentFragment = exports.createElement = exports.insertBefore = exports.getEndPoint = exports.getStartPoint = exports.updateRange = exports.filterSelectionNodes = void 0;

var tslib_1 = __webpack_require__(2);

var _1 = __webpack_require__(136);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 过滤 选择的 node 节点
 * @returns { DomElement[] } DomElement[]
 */


function filterSelectionNodes($nodes) {
  var $listHtml = [];
  (0, _forEach["default"])($nodes).call($nodes, function ($node) {
    var targerName = $node.getNodeName();

    if (targerName !== _1.ListType.OrderedList && targerName !== _1.ListType.UnorderedList) {
      // 非序列
      $listHtml.push($node);
    } else {
      // 序列
      if ($node.prior) {
        $listHtml.push($node.prior);
      } else {
        var $children = $node.children();
        $children === null || $children === void 0 ? void 0 : (0, _forEach["default"])($children).call($children, function ($li) {
          $listHtml.push(dom_core_1["default"]($li));
        });
      }
    }
  });
  return $listHtml;
}

exports.filterSelectionNodes = filterSelectionNodes;
/**
 * 更新选区
 * @param $node
 */

function updateRange(editor, $node, collapsed) {
  var selection = editor.selection;
  var range = document.createRange(); // ===============================
  // length 大于 1
  // 代表着转换是一个文档节点多段落
  // ===============================

  if ($node.length > 1) {
    range.setStart($node.elems[0], 0);
    range.setEnd($node.elems[$node.length - 1], $node.elems[$node.length - 1].childNodes.length);
  } // ===============================
  // 序列节点 或 单段落
  // ===============================
  else {
      range.selectNodeContents($node.elems[0]);
    } // ===============================
  // collapsed 为 true 代表是光标
  // ===============================


  collapsed && range.collapse(false);
  selection.saveRange(range);
  selection.restoreSelection();
}

exports.updateRange = updateRange;
/**
 * 获取起点元素
 * @param $startElem 开始序列节点
 */

function getStartPoint($startElem) {
  var _a;

  return $startElem.prior ? $startElem.prior // 有 prior 代表不是全选序列
  : dom_core_1["default"]((_a = $startElem.children()) === null || _a === void 0 ? void 0 : _a.elems[0]); // 没有则代表全选序列
}

exports.getStartPoint = getStartPoint;
/**
 * 获取结束元素
 * @param $endElem 结束序列节点
 */

function getEndPoint($endElem) {
  var _a;

  return $endElem.prior ? $endElem.prior // 有 prior 代表不是全选序列
  : dom_core_1["default"]((_a = $endElem.children()) === null || _a === void 0 ? void 0 : _a.last().elems[0]); // 没有则代表全选序列
}

exports.getEndPoint = getEndPoint;
/**
 * 在您指定节点的已有子节点之前插入新的子节点。
 * @param { DomElement } $node 指定节点
 * @param { ContainerFragment } newNode 插入的新子节点
 * @param { Node | null } existingNode 指定子节点
 */

function insertBefore($node, newNode, existingNode) {
  if (existingNode === void 0) {
    existingNode = null;
  }

  $node.parent().elems[0].insertBefore(newNode, existingNode);
}

exports.insertBefore = insertBefore;
/**
 * 创建指定的 element 对象
 */

function createElement(target) {
  return document.createElement(target);
}

exports.createElement = createElement;
/**
 * 创建文档片段
 */

function createDocumentFragment() {
  return document.createDocumentFragment();
}

exports.createDocumentFragment = createDocumentFragment;
/**
 * 生成 li 标签的元素，并返回 $fragment 文档片段
 * @param { DomElement[] } $nodes 需要转换成 li 的 dom 元素数组
 * @param { ContainerFragment } $fragment 用于存储生成后 li 元素的文档片段
 */

function createElementFragment($nodes, $fragment, tag) {
  if (tag === void 0) {
    tag = 'li';
  }

  (0, _forEach["default"])($nodes).call($nodes, function ($node) {
    var $list = createElement(tag);
    $list.innerHTML = $node.html();
    $fragment.append($list);
    $node.remove();
  });
  return $fragment;
}

exports.createElementFragment = createElementFragment;

/***/ }),
/* 47 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 48 */
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var createNonEnumerableProperty = __webpack_require__(17);

module.exports = function (target, key, value, options) {
  if (options && options.enumerable) target[key] = value;
  else createNonEnumerableProperty(target, key, value);
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var charAt = __webpack_require__(177).charAt;
var InternalStateModule = __webpack_require__(43);
var defineIterator = __webpack_require__(88);

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(179);
var DOMIterables = __webpack_require__(180);
var global = __webpack_require__(8);
var classof = __webpack_require__(68);
var createNonEnumerableProperty = __webpack_require__(17);
var Iterators = __webpack_require__(41);
var wellKnownSymbol = __webpack_require__(9);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {
    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
  }
  Iterators[COLLECTION_NAME] = Iterators.Array;
}


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(47);

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);
var wellKnownSymbol = __webpack_require__(9);
var V8_VERSION = __webpack_require__(66);

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(214);

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(223);

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.ListHandle = void 0;

var tslib_1 = __webpack_require__(2);

var SelectionRangeElem_1 = tslib_1.__importDefault(__webpack_require__(372));

var ListHandle =
/** @class */
function () {
  function ListHandle(options) {
    this.options = options;
    this.selectionRangeElem = new SelectionRangeElem_1["default"]();
  }

  return ListHandle;
}();

exports.ListHandle = ListHandle;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(79);
var uid = __webpack_require__(61);

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),
/* 61 */
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var defineProperties = __webpack_require__(167);
var enumBugKeys = __webpack_require__(83);
var hiddenKeys = __webpack_require__(49);
var html = __webpack_require__(104);
var documentCreateElement = __webpack_require__(77);
var sharedKey = __webpack_require__(60);

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject -- old IE */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(103);
var enumBugKeys = __webpack_require__(83);

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),
/* 64 */
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(47);
var global = __webpack_require__(8);

module.exports = classof(global.process) == 'process';


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var userAgent = __webpack_require__(67);

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(28);

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(85);
var classofRaw = __webpack_require__(47);
var wellKnownSymbol = __webpack_require__(9);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),
/* 69 */
/***/ (function(module, exports) {

// empty


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(32);

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),
/* 72 */
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var toPrimitive = __webpack_require__(59);
var definePropertyModule = __webpack_require__(18);
var createPropertyDescriptor = __webpack_require__(37);

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(210);

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var propertyIsEnumerableModule = __webpack_require__(58);
var createPropertyDescriptor = __webpack_require__(37);
var toIndexedObject = __webpack_require__(27);
var toPrimitive = __webpack_require__(59);
var has = __webpack_require__(16);
var IE8_DOM_DEFINE = __webpack_require__(100);

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);
var classof = __webpack_require__(47);

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var isObject = __webpack_require__(13);

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(16);
var toObject = __webpack_require__(33);
var sharedKey = __webpack_require__(60);
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(165);

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__(39);
var store = __webpack_require__(80);

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.10.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var setGlobal = __webpack_require__(164);

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(27);
var toLength = __webpack_require__(34);
var toAbsoluteIndex = __webpack_require__(82);

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(64);

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),
/* 83 */
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var IS_NODE = __webpack_require__(65);
var V8_VERSION = __webpack_require__(66);
var fails = __webpack_require__(12);

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // eslint-disable-next-line es/no-symbol -- required for testing
  return !Symbol.sham &&
    // Chrome 38 Symbol has incorrect toString conversion
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    (IS_NODE ? V8_VERSION === 38 : V8_VERSION > 37 && V8_VERSION < 41);
});


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(9);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),
/* 86 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),
/* 87 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var createIteratorConstructor = __webpack_require__(178);
var getPrototypeOf = __webpack_require__(78);
var setPrototypeOf = __webpack_require__(102);
var setToStringTag = __webpack_require__(42);
var createNonEnumerableProperty = __webpack_require__(17);
var redefine = __webpack_require__(50);
var wellKnownSymbol = __webpack_require__(9);
var IS_PURE = __webpack_require__(39);
var Iterators = __webpack_require__(41);
var IteratorsCore = __webpack_require__(118);

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),
/* 89 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);
var isArray = __webpack_require__(53);
var wellKnownSymbol = __webpack_require__(9);

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(186);

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(48);
var whitespaces = __webpack_require__(72);

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(206);

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var _Symbol = __webpack_require__(228);

var _Symbol$iterator = __webpack_require__(255);

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof _Symbol === "function" && typeof _Symbol$iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof _Symbol === "function" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? "symbol" : typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }

  return _typeof(obj);
}

module.exports = _typeof;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(9);

exports.f = wellKnownSymbol;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description Menu class 父类
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var Menu =
/** @class */
function () {
  function Menu($elem, editor) {
    var _this = this;

    this.$elem = $elem;
    this.editor = editor;
    this._active = false; // 绑定菜单点击事件

    $elem.on('click', function (e) {
      var _context;

      Panel_1["default"].hideCurAllPanels(); // 隐藏当前的所有 Panel
      // 触发菜单点击的钩子

      (0, _forEach["default"])(_context = editor.txt.eventHooks.menuClickEvents).call(_context, function (fn) {
        return fn();
      });
      e.stopPropagation();

      if (editor.selection.getRange() == null) {
        return;
      }

      _this.clickHandler(e);
    });
  }
  /**
   * 菜单点击事件，子类可重写
   * @param e event
   */


  Menu.prototype.clickHandler = function (e) {};
  /**
   * 激活菜单，高亮显示
   */


  Menu.prototype.active = function () {
    this._active = true;
    this.$elem.addClass('w-e-active');
  };
  /**
   * 取消激活，不再高亮显示
   */


  Menu.prototype.unActive = function () {
    this._active = false;
    this.$elem.removeClass('w-e-active');
  };

  (0, _defineProperty["default"])(Menu.prototype, "isActive", {
    /**
     * 是否处于激活状态
     */
    get: function get() {
      return this._active;
    },
    enumerable: false,
    configurable: true
  });
  return Menu;
}();

exports["default"] = Menu;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 上传图片
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _bind = _interopRequireDefault(__webpack_require__(56));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var upload_core_1 = tslib_1.__importDefault(__webpack_require__(134));

var progress_1 = tslib_1.__importDefault(__webpack_require__(135));

var UploadImg =
/** @class */
function () {
  function UploadImg(editor) {
    this.editor = editor;
  }
  /**
   * 往编辑区域插入图片
   * @param src 图片地址
   */


  UploadImg.prototype.insertImg = function (src, alt, href) {
    var editor = this.editor;
    var config = editor.config;
    var i18nPrefix = 'validate.';

    var t = function t(text, prefix) {
      if (prefix === void 0) {
        prefix = i18nPrefix;
      }

      return editor.i18next.t(prefix + text);
    }; // 设置图片alt


    var altText = alt ? "alt=\"" + alt + "\" " : '';
    var hrefText = href ? "data-href=\"" + encodeURIComponent(href) + "\" " : ''; // 先插入图片，无论是否能成功

    editor.cmd["do"]('insertHTML', "<img src=\"" + src + "\" " + altText + hrefText + "style=\"max-width:100%;\"/>"); // 执行回调函数

    config.linkImgCallback(src, alt, href); // 加载图片

    var img = document.createElement('img');

    img.onload = function () {
      img = null;
    };

    img.onerror = function () {
      config.customAlert(t('插入图片错误'), 'error', "wangEditor: " + t('插入图片错误') + "\uFF0C" + t('图片链接') + " \"" + src + "\"\uFF0C" + t('下载链接失败'));
      img = null;
    };

    img.onabort = function () {
      return img = null;
    };

    img.src = src;
  };
  /**
   * 上传图片
   * @param files 文件列表
   */


  UploadImg.prototype.uploadImg = function (files) {
    var _this_1 = this;

    if (!files.length) {
      return;
    }

    var editor = this.editor;
    var config = editor.config; // ------------------------------ i18next ------------------------------

    var i18nPrefix = 'validate.';

    var t = function t(text) {
      return editor.i18next.t(i18nPrefix + text);
    }; // ------------------------------ 获取配置信息 ------------------------------
    // 服务端地址


    var uploadImgServer = config.uploadImgServer; // base64 格式

    var uploadImgShowBase64 = config.uploadImgShowBase64; // 图片最大体积

    var maxSize = config.uploadImgMaxSize;
    var maxSizeM = maxSize / 1024 / 1024; // 一次最多上传图片数量

    var maxLength = config.uploadImgMaxLength; // 自定义 fileName

    var uploadFileName = config.uploadFileName; // 自定义参数

    var uploadImgParams = config.uploadImgParams; // 参数拼接到 url 中

    var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl; // 自定义 header

    var uploadImgHeaders = config.uploadImgHeaders; // 钩子函数

    var hooks = config.uploadImgHooks; // 上传图片超时时间

    var timeout = config.uploadImgTimeout; // 跨域带 cookie

    var withCredentials = config.withCredentials; // 自定义上传图片

    var customUploadImg = config.customUploadImg;

    if (!customUploadImg) {
      // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传
      if (!uploadImgServer && !uploadImgShowBase64) {
        return;
      }
    } // ------------------------------ 验证文件信息 ------------------------------


    var resultFiles = [];
    var errInfos = [];
    util_1.arrForEach(files, function (file) {
      var name = file.name;
      var size = file.size; // chrome 低版本 name === undefined

      if (!name || !size) {
        return;
      } // 将uploadImgAccept数组转换为正则对象


      var imgType = editor.config.uploadImgAccept.join('|');
      var imgTypeRuleStr = ".(" + imgType + ")$";
      var uploadImgAcceptRule = new RegExp(imgTypeRuleStr, 'i');

      if (uploadImgAcceptRule.test(name) === false) {
        // 后缀名不合法，不是图片
        errInfos.push("\u3010" + name + "\u3011" + t('不是图片'));
        return;
      }

      if (maxSize < size) {
        // 上传图片过大
        errInfos.push("\u3010" + name + "\u3011" + t('大于') + " " + maxSizeM + "M");
        return;
      } // 验证通过的加入结果列表


      resultFiles.push(file);
    }); // 抛出验证信息

    if (errInfos.length) {
      config.customAlert(t('图片验证未通过') + ": \n" + errInfos.join('\n'), 'warning');
      return;
    } // 如果过滤后文件列表为空直接返回


    if (resultFiles.length === 0) {
      config.customAlert(t('传入的文件不合法'), 'warning');
      return;
    }

    if (resultFiles.length > maxLength) {
      config.customAlert(t('一次最多上传') + maxLength + t('张图片'), 'warning');
      return;
    } // ------------------------------ 自定义上传 ------------------------------


    if (customUploadImg && typeof customUploadImg === 'function') {
      var _context;

      customUploadImg(resultFiles, (0, _bind["default"])(_context = this.insertImg).call(_context, this)); // 阻止以下代码执行，重要！！！

      return;
    } // ------------------------------ 上传图片 ------------------------------
    // 添加图片数据


    var formData = new FormData();
    (0, _forEach["default"])(resultFiles).call(resultFiles, function (file, index) {
      var name = uploadFileName || file.name;

      if (resultFiles.length > 1) {
        // 多个文件时，filename 不能重复
        name = name + (index + 1);
      }

      formData.append(name, file);
    });

    if (uploadImgServer) {
      // 添加自定义参数
      var uploadImgServerArr = uploadImgServer.split('#');
      uploadImgServer = uploadImgServerArr[0];
      var uploadImgServerHash = uploadImgServerArr[1] || '';
      (0, _forEach["default"])(util_1).call(util_1, uploadImgParams, function (key, val) {
        // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉
        // val = encodeURIComponent(val)
        // 第一，将参数拼接到 url 中
        if (uploadImgParamsWithUrl) {
          if ((0, _indexOf["default"])(uploadImgServer).call(uploadImgServer, '?') > 0) {
            uploadImgServer += '&';
          } else {
            uploadImgServer += '?';
          }

          uploadImgServer = uploadImgServer + key + '=' + val;
        } // 第二，将参数添加到 formData 中


        formData.append(key, val);
      });

      if (uploadImgServerHash) {
        uploadImgServer += '#' + uploadImgServerHash;
      } // 开始上传


      var xhr = upload_core_1["default"](uploadImgServer, {
        timeout: timeout,
        formData: formData,
        headers: uploadImgHeaders,
        withCredentials: !!withCredentials,
        beforeSend: function beforeSend(xhr) {
          if (hooks.before) return hooks.before(xhr, editor, resultFiles);
        },
        onTimeout: function onTimeout(xhr) {
          config.customAlert(t('上传图片超时'), 'error');
          if (hooks.timeout) hooks.timeout(xhr, editor);
        },
        onProgress: function onProgress(percent, e) {
          var progressBar = new progress_1["default"](editor);

          if (e.lengthComputable) {
            percent = e.loaded / e.total;
            progressBar.show(percent);
          }
        },
        onError: function onError(xhr) {
          config.customAlert(t('上传图片错误'), 'error', t('上传图片错误') + "\uFF0C" + t('服务器返回状态') + ": " + xhr.status);
          if (hooks.error) hooks.error(xhr, editor);
        },
        onFail: function onFail(xhr, resultStr) {
          config.customAlert(t('上传图片失败'), 'error', t('上传图片返回结果错误') + ("\uFF0C" + t('返回结果') + ": ") + resultStr);
          if (hooks.fail) hooks.fail(xhr, editor, resultStr);
        },
        onSuccess: function onSuccess(xhr, result) {
          if (hooks.customInsert) {
            var _context2;

            // 自定义插入图片
            hooks.customInsert((0, _bind["default"])(_context2 = _this_1.insertImg).call(_context2, _this_1), result, editor);
            return;
          }

          if (result.errno != '0') {
            // 返回格式不对，应该为 { errno: 0, data: [...] }
            config.customAlert(t('上传图片失败'), 'error', t('上传图片返回结果错误') + "\uFF0C" + t('返回结果') + " errno=" + result.errno);
            if (hooks.fail) hooks.fail(xhr, editor, result);
            return;
          } // 成功，插入图片


          var data = result.data;
          (0, _forEach["default"])(data).call(data, function (link) {
            if (typeof link === 'string') {
              _this_1.insertImg(link);
            } else {
              _this_1.insertImg(link.url, link.alt, link.href);
            }
          }); // 钩子函数

          if (hooks.success) hooks.success(xhr, editor, result);
        }
      });

      if (typeof xhr === 'string') {
        // 上传被阻止
        config.customAlert(xhr, 'error');
      } // 阻止以下代码执行，重要！！！


      return;
    } // ------------------------------ 显示 base64 格式 ------------------------------


    if (uploadImgShowBase64) {
      util_1.arrForEach(files, function (file) {
        var _this = _this_1;
        var reader = new FileReader();
        reader.readAsDataURL(file);

        reader.onload = function () {
          if (!this.result) return;
          var imgLink = this.result.toString();

          _this.insertImg(imgLink, imgLink);
        };
      });
    }
  };

  return UploadImg;
}();

exports["default"] = UploadImg;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _every = _interopRequireDefault(__webpack_require__(410));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _slice = _interopRequireDefault(__webpack_require__(44));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.dealTextNode = exports.isAllTodo = exports.isTodo = exports.getCursorNextNode = void 0;
/**
 * 判断传入的单行顶级选区选取是不是todo
 * @param editor 编辑器对象
 */

function isTodo($topSelectElem) {
  if ($topSelectElem.length) {
    return $topSelectElem.attr('class') === 'w-e-todo';
  }

  return false;
}

exports.isTodo = isTodo;
/**
 * 判断选中的内容是不是都是todo
 * @param editor 编辑器对象
 */

function isAllTodo(editor) {
  var $topSelectElems = editor.selection.getSelectionRangeTopNodes(); // 排除为[]的情况

  if ($topSelectElems.length === 0) return;
  return (0, _every["default"])($topSelectElems).call($topSelectElems, function ($topSelectElem) {
    return isTodo($topSelectElem);
  });
}

exports.isAllTodo = isAllTodo;
/**
 * 根据所在的文本节点和光标在文本节点的位置获取截断的后节点内容
 * @param node 顶级节点
 * @param textNode 光标所在的文本节点
 * @param pos 光标在文本节点的位置
 */

function getCursorNextNode(node, textNode, pos) {
  var _context;

  if (!node.hasChildNodes()) return;
  var newNode = node.cloneNode(); // 判断光标是否在末尾

  var end = false;

  if (textNode.nodeValue === '') {
    end = true;
  }

  var delArr = [];
  (0, _forEach["default"])(_context = node.childNodes).call(_context, function (v) {
    //光标后的内容
    if (!isContains(v, textNode) && end) {
      newNode.appendChild(v.cloneNode(true));

      if (v.nodeName !== 'BR') {
        delArr.push(v);
      }
    } // 光标所在的区域


    if (isContains(v, textNode)) {
      if (v.nodeType === 1) {
        var childNode = getCursorNextNode(v, textNode, pos);
        if (childNode && childNode.textContent !== '') newNode === null || newNode === void 0 ? void 0 : newNode.appendChild(childNode);
      }

      if (v.nodeType === 3) {
        if (textNode.isEqualNode(v)) {
          var textContent = dealTextNode(v, pos);
          newNode.textContent = textContent;
        }
      }

      end = true;
    }
  }); // 删除选中后原来的节点

  (0, _forEach["default"])(delArr).call(delArr, function (v) {
    var node = v;
    node.remove();
  });
  return newNode;
}

exports.getCursorNextNode = getCursorNextNode;
/**
 * 判断otherNode是否包含在node中
 * @param node 父节点
 * @param otherNode 需要判断是不是被包含的节点
 */

function isContains(node, otherNode) {
  // 兼容ie11中textNode不支持contains方法
  if (node.nodeType === 3) {
    return node.nodeValue === otherNode.nodeValue;
  }

  return node.contains(otherNode);
}
/**
 * 获取新的文本节点
 * @param node 要处理的文本节点
 * @param pos  光标在文本节点所在的位置
 * @param start 设置为true时保留开始位置到光标的内容，设置为false时删去开始的内容
 */


function dealTextNode(node, pos, start) {
  if (start === void 0) {
    start = true;
  }

  var content = node.nodeValue;
  var oldContent = content === null || content === void 0 ? void 0 : (0, _slice["default"])(content).call(content, 0, pos);
  content = content === null || content === void 0 ? void 0 : (0, _slice["default"])(content).call(content, pos); // start为false时替换content和oldContent

  if (!start) {
    var temp = content;
    content = oldContent;
    oldContent = temp;
  }

  node.nodeValue = oldContent;
  return content;
}

exports.dealTextNode = dealTextNode;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 双栈实现撤销恢复
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var stack_1 = __webpack_require__(430);

var Cache =
/** @class */
function () {
  function Cache(maxSize) {
    this.maxSize = maxSize;
    /**
     * 上一步操作是否为 撤销/恢复
     */

    this.isRe = false;
    this.data = new stack_1.CeilStack(maxSize);
    this.revokeData = new stack_1.CeilStack(maxSize);
  }

  (0, _defineProperty["default"])(Cache.prototype, "size", {
    /**
     * 返回当前栈中的数据长度。格式为：[正常的数据的条数，被撤销的数据的条数]
     */
    get: function get() {
      return [this.data.size, this.revokeData.size];
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 重设数据缓存器的缓存长度（第一次有效）
   */

  Cache.prototype.resetMaxSize = function (maxSize) {
    this.data.resetMax(maxSize);
    this.revokeData.resetMax(maxSize);
  };
  /**
   * 保存数据
   */


  Cache.prototype.save = function (data) {
    if (this.isRe) {
      this.revokeData.clear();
      this.isRe = false;
    }

    this.data.instack(data);
    return this;
  };
  /**
   * 撤销
   * @param fn 撤销时，如果有数据，执行的回调函数
   */


  Cache.prototype.revoke = function (fn) {
    !this.isRe && (this.isRe = true);
    var data = this.data.outstack();

    if (data) {
      this.revokeData.instack(data);
      fn(data);
      return true;
    }

    return false;
  };
  /**
   * 恢复
   * @param fn 恢复时，如果有数据，执行的回调函数
   */


  Cache.prototype.restore = function (fn) {
    !this.isRe && (this.isRe = true);
    var data = this.revokeData.outstack();

    if (data) {
      this.data.instack(data);
      fn(data);
      return true;
    }

    return false;
  };

  return Cache;
}();

exports["default"] = Cache;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var fails = __webpack_require__(12);
var createElement = __webpack_require__(77);

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var anObject = __webpack_require__(20);
var aPossiblePrototype = __webpack_require__(166);

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(16);
var toIndexedObject = __webpack_require__(27);
var indexOf = __webpack_require__(81).indexOf;
var hiddenKeys = __webpack_require__(49);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(28);

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(9);
var Iterators = __webpack_require__(41);

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(84);

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(68);
var Iterators = __webpack_require__(41);
var wellKnownSymbol = __webpack_require__(9);

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);

module.exports = function (iterator) {
  var returnMethod = iterator['return'];
  if (returnMethod !== undefined) {
    return anObject(returnMethod.call(iterator)).value;
  }
};


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);

module.exports = global.Promise;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(50);

module.exports = function (target, src, options) {
  for (var key in src) {
    if (options && options.unsafe && target[key]) target[key] = src[key];
    else redefine(target, key, src[key], options);
  } return target;
};


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(28);
var definePropertyModule = __webpack_require__(18);
var wellKnownSymbol = __webpack_require__(9);
var DESCRIPTORS = __webpack_require__(15);

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(80);

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(9);

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var aFunction = __webpack_require__(32);
var wellKnownSymbol = __webpack_require__(9);

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var fails = __webpack_require__(12);
var bind = __webpack_require__(38);
var html = __webpack_require__(104);
var createElement = __webpack_require__(77);
var IS_IOS = __webpack_require__(116);
var IS_NODE = __webpack_require__(65);

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins -- safe
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(67);

module.exports = /(?:iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var isObject = __webpack_require__(13);
var newPromiseCapability = __webpack_require__(70);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);
var getPrototypeOf = __webpack_require__(78);
var createNonEnumerableProperty = __webpack_require__(17);
var has = __webpack_require__(16);
var wellKnownSymbol = __webpack_require__(9);
var IS_PURE = __webpack_require__(39);

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 编辑器 class
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var config_1 = tslib_1.__importDefault(__webpack_require__(269));

var selection_1 = tslib_1.__importDefault(__webpack_require__(284));

var command_1 = tslib_1.__importDefault(__webpack_require__(285));

var index_1 = tslib_1.__importDefault(__webpack_require__(286));

var index_2 = tslib_1.__importDefault(__webpack_require__(305));

var init_dom_1 = tslib_1.__importDefault(__webpack_require__(416));

var init_selection_1 = tslib_1.__importDefault(__webpack_require__(417));

var bind_event_1 = tslib_1.__importDefault(__webpack_require__(418));

var i18next_init_1 = tslib_1.__importDefault(__webpack_require__(419));

var set_full_screen_1 = tslib_1.__importStar(__webpack_require__(420));

var scroll_to_head_1 = tslib_1.__importDefault(__webpack_require__(423));

var z_index_1 = tslib_1.__importDefault(__webpack_require__(424));

var index_3 = tslib_1.__importDefault(__webpack_require__(425));

var index_4 = tslib_1.__importDefault(__webpack_require__(427));

var disable_1 = tslib_1.__importDefault(__webpack_require__(437));

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var DropList_1 = tslib_1.__importDefault(__webpack_require__(132));

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36));

var EDITOR_ID = 1;

var Editor =
/** @class */
function () {
  /**
   * 构造函数
   * @param toolbarSelector 工具栏 DOM selector
   * @param textSelector 文本区域 DOM selector
   */
  function Editor(toolbarSelector, textSelector) {
    // 实例销毁前需要执行的钩子集合
    this.beforeDestroyHooks = []; // id，用以区分单个页面不同的编辑器对象

    this.id = "wangEditor-" + EDITOR_ID++;
    this.toolbarSelector = toolbarSelector;
    this.textSelector = textSelector;

    if (toolbarSelector == null) {
      throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');
    } // 属性的默认值，后面可能会再修改
    // 默认配置 - 当一个页面有多个编辑器的时候，因为 JS 的特性(引用类型)会导致多个编辑器的 config 引用是同一个，所以需要 深度克隆 断掉引用


    this.config = util_1.deepClone(config_1["default"]);
    this.$toolbarElem = dom_core_1["default"]('<div></div>');
    this.$textContainerElem = dom_core_1["default"]('<div></div>');
    this.$textElem = dom_core_1["default"]('<div></div>');
    this.toolbarElemId = '';
    this.textElemId = '';
    this.isFocus = false;
    this.isComposing = false;
    this.isCompatibleMode = false;
    this.selection = new selection_1["default"](this);
    this.cmd = new command_1["default"](this);
    this.txt = new index_1["default"](this);
    this.menus = new index_2["default"](this);
    this.zIndex = new z_index_1["default"]();
    this.change = new index_3["default"](this);
    this.history = new index_4["default"](this);

    var _a = disable_1["default"](this),
        disable = _a.disable,
        enable = _a.enable;

    this.disable = disable;
    this.enable = enable;
  }
  /**
   * 初始化选区
   * @param newLine 新建一行
   */


  Editor.prototype.initSelection = function (newLine) {
    init_selection_1["default"](this, newLine);
  };
  /**
   * 创建编辑器实例
   */


  Editor.prototype.create = function () {
    // 初始化 ZIndex
    this.zIndex.init(this); // 确定当前的历史记录模式

    this.isCompatibleMode = this.config.compatibleMode(); // 标准模式下，重置延迟时间

    if (!this.isCompatibleMode) {
      this.config.onchangeTimeout = 30;
    } // 国际化 因为要在创建菜单前使用 所以要最先 初始化


    i18next_init_1["default"](this); // 初始化 DOM

    init_dom_1["default"](this); // 初始化 text

    this.txt.init(); // 初始化菜单

    this.menus.init(); // 初始化全屏功能

    set_full_screen_1["default"](this); // 初始化选区，将光标定位到内容尾部

    this.initSelection(true); // 绑定事件

    bind_event_1["default"](this); // 绑定监听的目标节点

    this.change.observe();
    this.history.observe();
  };
  /**
   * 提供给用户添加销毁前的钩子函数
   * @param fn 钩子函数
   */


  Editor.prototype.beforeDestroy = function (fn) {
    this.beforeDestroyHooks.push(fn);
    return this;
  };
  /**
   * 销毁当前编辑器实例
   */


  Editor.prototype.destroy = function () {
    var _context;

    var _this = this; // 调用钩子函数


    (0, _forEach["default"])(_context = this.beforeDestroyHooks).call(_context, function (fn) {
      return fn.call(_this);
    }); // 销毁 DOM 节点

    this.$toolbarElem.remove();
    this.$textContainerElem.remove();
  };
  /**
   * 将编辑器设置为全屏
   */


  Editor.prototype.fullScreen = function () {
    set_full_screen_1.setFullScreen(this);
  };
  /**
   * 将编辑器退出全屏
   */


  Editor.prototype.unFullScreen = function () {
    set_full_screen_1.setUnFullScreen(this);
  };
  /**
   * 滚动到指定标题锚点
   * @param id 标题锚点id
   */


  Editor.prototype.scrollToHead = function (id) {
    scroll_to_head_1["default"](this, id);
  };
  /**
   * 自定义添加菜单
   * @param key 菜单 key
   * @param Menu 菜单构造函数
   */


  Editor.registerMenu = function (key, Menu) {
    if (!Menu || typeof Menu !== 'function') return;
    Editor.globalCustomMenuConstructorList[key] = Menu;
  }; // 暴露 $


  Editor.$ = dom_core_1["default"];
  Editor.BtnMenu = BtnMenu_1["default"];
  Editor.DropList = DropList_1["default"];
  Editor.DropListMenu = DropListMenu_1["default"];
  Editor.Panel = Panel_1["default"];
  Editor.PanelMenu = PanelMenu_1["default"];
  Editor.Tooltip = Tooltip_1["default"];
  Editor.globalCustomMenuConstructorList = {};
  return Editor;
}();

exports["default"] = Editor;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(198);

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var global = __webpack_require__(8);
var InternalMetadataModule = __webpack_require__(122);
var fails = __webpack_require__(12);
var createNonEnumerableProperty = __webpack_require__(17);
var iterate = __webpack_require__(40);
var anInstance = __webpack_require__(86);
var isObject = __webpack_require__(13);
var setToStringTag = __webpack_require__(42);
var defineProperty = __webpack_require__(18).f;
var forEach = __webpack_require__(29).forEach;
var DESCRIPTORS = __webpack_require__(15);
var InternalStateModule = __webpack_require__(43);

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var exported = {};
  var Constructor;

  if (!DESCRIPTORS || typeof NativeConstructor != 'function'
    || !(IS_WEAK || NativePrototype.forEach && !fails(function () { new NativeConstructor().entries().next(); }))
  ) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else {
    Constructor = wrapper(function (target, iterable) {
      setInternalState(anInstance(target, Constructor, CONSTRUCTOR_NAME), {
        type: CONSTRUCTOR_NAME,
        collection: new NativeConstructor()
      });
      if (iterable != undefined) iterate(iterable, target[ADDER], { that: target, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    forEach(['add', 'clear', 'delete', 'forEach', 'get', 'has', 'set', 'keys', 'values', 'entries'], function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if (KEY in NativePrototype && !(IS_WEAK && KEY == 'clear')) {
        createNonEnumerableProperty(Constructor.prototype, KEY, function (a, b) {
          var collection = getInternalState(this).collection;
          if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
          var result = collection[KEY](a === 0 ? 0 : a, b);
          return IS_ADDER ? this : result;
        });
      }
    });

    IS_WEAK || defineProperty(Constructor.prototype, 'size', {
      configurable: true,
      get: function () {
        return getInternalState(this).collection.size;
      }
    });
  }

  setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: true }, exported);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var hiddenKeys = __webpack_require__(49);
var isObject = __webpack_require__(13);
var has = __webpack_require__(16);
var defineProperty = __webpack_require__(18).f;
var uid = __webpack_require__(61);
var FREEZING = __webpack_require__(201);

var METADATA = uid('meta');
var id = 0;

// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(18).f;
var create = __webpack_require__(62);
var redefineAll = __webpack_require__(110);
var bind = __webpack_require__(38);
var anInstance = __webpack_require__(86);
var iterate = __webpack_require__(40);
var defineIterator = __webpack_require__(88);
var setSpecies = __webpack_require__(111);
var DESCRIPTORS = __webpack_require__(15);
var fastKey = __webpack_require__(122).fastKey;
var InternalStateModule = __webpack_require__(43);

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.1.3.6 Map.prototype.get(key)
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // 23.1.3.9 Map.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // 23.2.3.1 Set.prototype.add(value)
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(103);
var enumBugKeys = __webpack_require__(83);

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),
/* 125 */
/***/ (function(module, exports) {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 样式配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports["default"] = {
  zIndex: 10000
};

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 处理粘贴逻辑
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.getPasteImgs = exports.getPasteHtml = exports.getPasteText = void 0;

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var parse_html_1 = tslib_1.__importDefault(__webpack_require__(296));
/**
 * 获取粘贴的纯文本
 * @param e Event 参数
 */


function getPasteText(e) {
  // const clipboardData = e.clipboardData || (e.originalEvent && e.originalEvent.clipboardData)
  var clipboardData = e.clipboardData; // 暂不考虑 originalEvent 的情况

  var pasteText = '';

  if (clipboardData == null) {
    pasteText = window.clipboardData && window.clipboardData.getData('text');
  } else {
    pasteText = clipboardData.getData('text/plain');
  }

  return util_1.replaceHtmlSymbol(pasteText);
}

exports.getPasteText = getPasteText;
/**
 * 获取粘贴的 html 字符串
 * @param e Event 参数
 * @param filterStyle 是否过滤 style 样式
 * @param ignoreImg 是否忽略 img 标签
 */

function getPasteHtml(e, filterStyle, ignoreImg) {
  if (filterStyle === void 0) {
    filterStyle = true;
  }

  if (ignoreImg === void 0) {
    ignoreImg = false;
  }

  var clipboardData = e.clipboardData; // 暂不考虑 originalEvent 的情况

  var pasteHtml = '';

  if (clipboardData) {
    pasteHtml = clipboardData.getData('text/html');
  } // 无法通过 'text/html' 格式获取 html，则尝试获取 text


  if (!pasteHtml) {
    var text = getPasteText(e);

    if (!text) {
      return ''; // 没有找到任何文字，则返回
    }

    pasteHtml = "<p>" + text + "</p>";
  } // 剔除多余的标签、属性


  pasteHtml = parse_html_1["default"](pasteHtml, filterStyle, ignoreImg);
  return pasteHtml;
}

exports.getPasteHtml = getPasteHtml;
/**
 * 获取粘贴的图片文件
 * @param e Event 参数
 */

function getPasteImgs(e) {
  var _a;

  var result = [];
  var txt = getPasteText(e);

  if (txt) {
    // 有文字，就忽略图片
    return result;
  }

  var items = (_a = e.clipboardData) === null || _a === void 0 ? void 0 : _a.items;
  if (!items) return result;
  (0, _forEach["default"])(util_1).call(util_1, items, function (key, value) {
    var type = value.type;

    if (/image/i.test(type)) {
      result.push(value.getAsFile());
    }
  });
  return result;
}

exports.getPasteImgs = getPasteImgs;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(298);

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(306);

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(310);

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 下拉列表 class
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _setTimeout2 = _interopRequireDefault(__webpack_require__(45));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var const_1 = __webpack_require__(7);

var DropList =
/** @class */
function () {
  function DropList(menu, conf) {
    var _this = this;

    this.hideTimeoutId = 0;
    this.menu = menu;
    this.conf = conf; // 容器

    var $container = dom_core_1["default"]('<div class="w-e-droplist"></div>'); // 标题

    var $title = dom_core_1["default"]("<p>" + conf.title + "</p>");
    $title.addClass('w-e-dp-title');
    $container.append($title); // 列表和类型

    var list = conf.list || [];
    var type = conf.type || 'list'; // item 的点击事件

    var clickHandler = conf.clickHandler || const_1.EMPTY_FN; // 加入 DOM 并绑定事件

    var $list = dom_core_1["default"]('<ul class="' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '"></ul>');
    (0, _forEach["default"])(list).call(list, function (item) {
      var $elem = item.$elem;
      var value = item.value;
      var $li = dom_core_1["default"]('<li class="w-e-item"></li>');

      if ($elem) {
        $li.append($elem);
        $list.append($li);
        $li.on('click', function (e) {
          clickHandler(value); // 阻止冒泡

          e.stopPropagation(); // item 点击之后，隐藏 list

          _this.hideTimeoutId = (0, _setTimeout2["default"])(function () {
            _this.hide();
          });
        });
      }
    });
    $container.append($list); // 绑定隐藏事件

    $container.on('mouseleave', function () {
      _this.hideTimeoutId = (0, _setTimeout2["default"])(function () {
        _this.hide();
      });
    }); // 记录属性

    this.$container = $container;
    this.rendered = false;
    this._show = false;
  }
  /**
   * 显示 DropList
   */


  DropList.prototype.show = function () {
    if (this.hideTimeoutId) {
      // 清除之前的定时隐藏
      clearTimeout(this.hideTimeoutId);
    }

    var menu = this.menu;
    var $menuELem = menu.$elem;
    var $container = this.$container;

    if (this._show) {
      return;
    }

    if (this.rendered) {
      // 显示
      $container.show();
    } else {
      // 加入 DOM 之前先定位位置
      var menuHeight = $menuELem.getBoundingClientRect().height || 0;
      var width = this.conf.width || 100; // 默认为 100

      $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM

      $menuELem.append($container);
      this.rendered = true;
    } // 修改属性


    this._show = true;
  };
  /**
   * 隐藏 DropList
   */


  DropList.prototype.hide = function () {
    var $container = this.$container;

    if (!this._show) {
      return;
    } // 隐藏并需改属性


    $container.hide();
    this._show = false;
  };

  (0, _defineProperty["default"])(DropList.prototype, "isShow", {
    get: function get() {
      return this._show;
    },
    enumerable: false,
    configurable: true
  });
  return DropList;
}();

exports["default"] = DropList;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 检查选区是否在链接中，即菜单是否应该 active
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

function isActive(editor) {
  var $selectionELem = editor.selection.getSelectionContainerElem();

  if (!($selectionELem === null || $selectionELem === void 0 ? void 0 : $selectionELem.length)) {
    return false;
  }

  if ($selectionELem.getNodeName() === 'A') {
    return true;
  } else {
    return false;
  }
}

exports["default"] = isActive;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 上传的核心方法
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _typeof2 = _interopRequireDefault(__webpack_require__(94));

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__(6);
/**
 * 发送 post 请求（用于文件上传）
 * @param url url
 * @param option 配置项
 */


function post(url, option) {
  var xhr = new XMLHttpRequest();
  xhr.open('POST', url); // 超时，默认 10s

  xhr.timeout = option.timeout || 10 * 1000;

  xhr.ontimeout = function () {
    console.error('wangEditor - 请求超时');
    option.onTimeout && option.onTimeout(xhr);
  }; // 进度


  if (xhr.upload) {
    xhr.upload.onprogress = function (e) {
      var percent = e.loaded / e.total;
      option.onProgress && option.onProgress(percent, e);
    };
  } // 自定义 header


  if (option.headers) {
    (0, _forEach["default"])(util_1).call(util_1, option.headers, function (key, val) {
      xhr.setRequestHeader(key, val);
    });
  } // 跨域传 cookie


  xhr.withCredentials = !!option.withCredentials; // 上传之前的钩子函数，在 xhr.send() 之前执行

  if (option.beforeSend) {
    var beforeResult = option.beforeSend(xhr);

    if (beforeResult && (0, _typeof2["default"])(beforeResult) === 'object') {
      if (beforeResult.prevent) {
        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传
        return beforeResult.msg;
      }
    }
  } // 服务端返回之后


  xhr.onreadystatechange = function () {
    if (xhr.readyState !== 4) return;
    var status = xhr.status;
    if (status < 200) return; // 请求发送过程中，尚未返回

    if (status >= 300 && status < 400) return; // 重定向

    if (status >= 400) {
      // 40x 50x 报错
      console.error('wangEditor - XHR 报错，状态码 ' + status);
      if (option.onError) option.onError(xhr); // 有，则执行 onError 函数即可

      return;
    } // status = 200 ，得到结果


    var resultStr = xhr.responseText;
    var result;

    if ((0, _typeof2["default"])(resultStr) !== 'object') {
      try {
        result = JSON.parse(resultStr);
      } catch (ex) {
        console.error('wangEditor - 返回结果不是 JSON 格式', resultStr);
        if (option.onFail) option.onFail(xhr, resultStr);
        return;
      }
    } else {
      result = resultStr;
    }

    option.onSuccess(xhr, result);
  }; // 发送请求


  xhr.send(option.formData || null);
  return xhr;
}

exports["default"] = post;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 上传进度条
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _now = _interopRequireDefault(__webpack_require__(342));

var _setTimeout2 = _interopRequireDefault(__webpack_require__(45));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Progress =
/** @class */
function () {
  function Progress(editor) {
    this.editor = editor;
    this.$textContainer = editor.$textContainerElem;
    this.$bar = dom_core_1["default"]('<div class="w-e-progress"></div>');
    this.isShow = false;
    this.time = 0;
    this.timeoutId = 0;
  }
  /**
   * 显示进度条
   * @param progress 进度百分比
   */


  Progress.prototype.show = function (progress) {
    var _this = this; // 不要重新显示


    if (this.isShow) {
      return;
    }

    this.isShow = true; // 渲染 $bar

    var $bar = this.$bar;
    var $textContainer = this.$textContainer;
    $textContainer.append($bar); // 改变进度条（防抖，100ms 渲染一次）

    if ((0, _now["default"])() - this.time > 100) {
      if (progress <= 1) {
        $bar.css('width', progress * 100 + '%');
        this.time = (0, _now["default"])();
      }
    } // 500ms 之后隐藏


    var timeoutId = this.timeoutId;

    if (timeoutId) {
      clearTimeout(timeoutId);
    }

    this.timeoutId = (0, _setTimeout2["default"])(function () {
      _this.hide();
    }, 500);
  };
  /**
   * 隐藏
   */


  Progress.prototype.hide = function () {
    var $bar = this.$bar;
    $bar.remove();
    this.isShow = false;
    this.time = 0;
    this.timeoutId = 0;
  };

  return Progress;
}();

exports["default"] = Progress;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 无序列表/有序列表
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.ListType = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var utils_1 = __webpack_require__(46);

var ListHandle_1 = tslib_1.__importStar(__webpack_require__(370));
/**
 * 列表的种类
 */


var ListType;

(function (ListType) {
  ListType["OrderedList"] = "OL";
  ListType["UnorderedList"] = "UL";
})(ListType = exports.ListType || (exports.ListType = {}));

var List =
/** @class */
function (_super) {
  tslib_1.__extends(List, _super);

  function List(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5E8F\u5217\">\n                <i class=\"w-e-icon-list2\"></i>\n            </div>");
    var dropListConf = {
      width: 130,
      title: '序列',
      type: 'list',
      list: [{
        $elem: dom_core_1["default"]("\n                        <p>\n                            <i class=\"w-e-icon-list2 w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.list.无序列表') + "\n                        <p>"),
        value: ListType.UnorderedList
      }, {
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-list-numbered w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.list.有序列表') + "\n                        <p>"),
        value: ListType.OrderedList
      }],
      clickHandler: function clickHandler(value) {
        // 注意 this 是指向当前的 List 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, dropListConf) || this;
    return _this;
  }

  List.prototype.command = function (type) {
    var editor = this.editor;
    var $selectionElem = editor.selection.getSelectionContainerElem(); // 选区范围的 DOM 元素不存在，不执行命令

    if ($selectionElem === undefined) return; // 获取选区范围内的顶级 DOM 元素

    this.handleSelectionRangeNodes(type); // 是否激活

    this.tryChangeActive();
  };

  List.prototype.validator = function ($startElem, $endElem, $textElem) {
    if (!$startElem.length || !$endElem.length || $textElem.equal($startElem) || $textElem.equal($endElem)) {
      return false;
    }

    return true;
  };

  List.prototype.handleSelectionRangeNodes = function (listType) {
    var editor = this.editor;
    var selection = editor.selection; // 获取 序列标签

    var listTarget = listType.toLowerCase(); // 获取相对应的 元属节点

    var $selectionElem = selection.getSelectionContainerElem();
    var $startElem = selection.getSelectionStartElem().getNodeTop(editor);
    var $endElem = selection.getSelectionEndElem().getNodeTop(editor); // 验证是否执行 处理逻辑

    if (!this.validator($startElem, $endElem, editor.$textElem)) {
      return;
    } // 获取选区


    var _range = selection.getRange();

    var _collapsed = _range === null || _range === void 0 ? void 0 : _range.collapsed; // 防止光标的时候判断异常


    if (!editor.$textElem.equal($selectionElem)) {
      $selectionElem = $selectionElem.getNodeTop(editor);
    }

    var options = {
      editor: editor,
      listType: listType,
      listTarget: listTarget,
      $selectionElem: $selectionElem,
      $startElem: $startElem,
      $endElem: $endElem
    };
    var classType; // =====================================
    // 当 selectionElem 属于序列元素的时候
    // 代表着当前选区一定是在一个序列元素内的
    // =====================================

    if (this.isOrderElem($selectionElem)) {
      classType = ListHandle_1.ClassType.Wrap;
    } // =====================================
    // 当 startElem 和 endElem 属于序列元素的时候
    // 代表着当前选区一定是在再两个序列的中间(包括两个序列)
    // =====================================
    else if (this.isOrderElem($startElem) && this.isOrderElem($endElem)) {
        classType = ListHandle_1.ClassType.Join;
      } // =====================================
      // 选区开始元素为 序列 的时候
      // =====================================
      else if (this.isOrderElem($startElem)) {
          classType = ListHandle_1.ClassType.StartJoin;
        } // =====================================
        // 选区结束元素为 序列 的时候
        // =====================================
        else if (this.isOrderElem($endElem)) {
            classType = ListHandle_1.ClassType.EndJoin;
          } // =====================================
          // 当选区不是序列内且开头和结尾不是序列的时候
          // 直接获取所有顶级段落然后过滤
          // 代表着 设置序列 的操作
          // =====================================
          else {
              classType = ListHandle_1.ClassType.Other;
            }

    var listHandleCmd = new ListHandle_1["default"](ListHandle_1.createListHandle(classType, options, _range)); // 更新选区

    utils_1.updateRange(editor, listHandleCmd.getSelectionRangeElem(), !!_collapsed);
  };
  /**
   * 是否是序列元素节点 UL and OL
   * @param $node
   */


  List.prototype.isOrderElem = function ($node) {
    var nodeName = $node.getNodeName();

    if (nodeName === ListType.OrderedList || nodeName === ListType.UnorderedList) {
      return true;
    }

    return false;
  };

  List.prototype.tryChangeActive = function () {};

  return List;
}(DropListMenu_1["default"]);

exports["default"] = List;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(394);

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 检查选区是否在代码中，即菜单是否应该 active
 * @author lkw
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

function isActive(editor) {
  var $selectionELem = editor.selection.getSelectionContainerElem();

  if (!($selectionELem === null || $selectionELem === void 0 ? void 0 : $selectionELem.length)) {
    return false;
  }

  if ($selectionELem.getNodeName() == 'CODE' || $selectionELem.getNodeName() == 'PRE' || $selectionELem.parent().getNodeName() == 'CODE' || $selectionELem.parent().getNodeName() == 'PRE' || /hljs/.test($selectionELem.parent().attr('class'))) {
    return true;
  } else {
    return false;
  }
}

exports["default"] = isActive;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _find = _interopRequireDefault(__webpack_require__(30));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.todo = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var todo =
/** @class */
function () {
  function todo($orginElem) {
    var _a;

    this.template = "<ul class=\"w-e-todo\"><li><span contenteditable=\"false\"><input type=\"checkbox\"></span></li></ul>";
    this.checked = false;
    this.$todo = dom_core_1["default"](this.template);
    this.$child = (_a = $orginElem === null || $orginElem === void 0 ? void 0 : $orginElem.childNodes()) === null || _a === void 0 ? void 0 : _a.clone(true);
  }

  todo.prototype.init = function () {
    var _this = this;

    var $input = this.getInput();
    var $child = this.$child;
    var $inputContainer = this.getInputContainer();

    if ($child) {
      $child.insertAfter($inputContainer);
    }

    $input.on('click', function () {
      if (_this.checked) {
        $input === null || $input === void 0 ? void 0 : $input.removeAttr('checked');
      } else {
        $input === null || $input === void 0 ? void 0 : $input.attr('checked', '');
      }

      _this.checked = !_this.checked;
    });
  };

  todo.prototype.getInput = function () {
    var $todo = this.$todo;
    var $input = (0, _find["default"])($todo).call($todo, 'input');
    return $input;
  };

  todo.prototype.getInputContainer = function () {
    var $inputContainer = this.getInput().parent();
    return $inputContainer;
  };

  todo.prototype.getTodo = function () {
    return this.$todo;
  };

  return todo;
}();

exports.todo = todo;

function createTodo($orginElem) {
  var t = new todo($orginElem);
  t.init();
  return t;
}

exports["default"] = createTodo;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 入口文件
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

__webpack_require__(145);

__webpack_require__(147);

__webpack_require__(151);

__webpack_require__(153);

__webpack_require__(155);

__webpack_require__(157);

__webpack_require__(159);

var index_1 = tslib_1.__importDefault(__webpack_require__(119));

tslib_1.__exportStar(__webpack_require__(440), exports); // 检验是否浏览器环境


try {
  document;
} catch (ex) {
  throw new Error('请在浏览器环境下运行');
}

exports["default"] = index_1["default"];

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(142);

module.exports = parent;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(143);
var path = __webpack_require__(10);

var Object = path.Object;

var defineProperty = module.exports = function defineProperty(it, key, desc) {
  return Object.defineProperty(it, key, desc);
};

if (Object.defineProperty.sham) defineProperty.sham = true;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var DESCRIPTORS = __webpack_require__(15);
var objectDefinePropertyModile = __webpack_require__(18);

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {
  defineProperty: objectDefinePropertyModile.f
});


/***/ }),
/* 144 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(146);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-toolbar,\n.w-e-text-container,\n.w-e-menu-panel {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  background-color: #fff;\n  /*表情菜单样式*/\n  /*分割线样式*/\n}\n.w-e-toolbar h1,\n.w-e-text-container h1,\n.w-e-menu-panel h1 {\n  font-size: 2em !important;\n}\n.w-e-toolbar h2,\n.w-e-text-container h2,\n.w-e-menu-panel h2 {\n  font-size: 1.5em !important;\n}\n.w-e-toolbar h3,\n.w-e-text-container h3,\n.w-e-menu-panel h3 {\n  font-size: 1.17em !important;\n}\n.w-e-toolbar h4,\n.w-e-text-container h4,\n.w-e-menu-panel h4 {\n  font-size: 1em !important;\n}\n.w-e-toolbar h5,\n.w-e-text-container h5,\n.w-e-menu-panel h5 {\n  font-size: 0.83em !important;\n}\n.w-e-toolbar p,\n.w-e-text-container p,\n.w-e-menu-panel p {\n  font-size: 1em !important;\n}\n.w-e-toolbar .eleImg,\n.w-e-text-container .eleImg,\n.w-e-menu-panel .eleImg {\n  cursor: pointer;\n  display: inline-block;\n  font-size: 18px;\n  padding: 0 3px;\n}\n.w-e-toolbar *,\n.w-e-text-container *,\n.w-e-menu-panel * {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n.w-e-toolbar hr,\n.w-e-text-container hr,\n.w-e-menu-panel hr {\n  cursor: pointer;\n  display: block;\n  height: 0px;\n  border: 0;\n  border-top: 3px solid #ccc;\n  margin: 20px 0;\n}\n.w-e-clear-fix:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n.w-e-drop-list-item {\n  position: relative;\n  top: 1px;\n  padding-right: 7px;\n  color: #333 !important;\n}\n.w-e-drop-list-tl {\n  padding-left: 10px;\n  text-align: left;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(148);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
var ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__(149);
var ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__(150);
exports = ___CSS_LOADER_API_IMPORT___(false);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
exports.push([module.i, "@font-face {\n  font-family: 'w-e-icon';\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format('truetype');\n  font-weight: normal;\n  font-style: normal;\n}\n[class^=\"w-e-icon-\"],\n[class*=\" w-e-icon-\"] {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: 'w-e-icon' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.w-e-icon-close:before {\n  content: \"\\f00d\";\n}\n.w-e-icon-upload2:before {\n  content: \"\\e9c6\";\n}\n.w-e-icon-trash-o:before {\n  content: \"\\f014\";\n}\n.w-e-icon-header:before {\n  content: \"\\f1dc\";\n}\n.w-e-icon-pencil2:before {\n  content: \"\\e906\";\n}\n.w-e-icon-paint-brush:before {\n  content: \"\\f1fc\";\n}\n.w-e-icon-image:before {\n  content: \"\\e90d\";\n}\n.w-e-icon-play:before {\n  content: \"\\e912\";\n}\n.w-e-icon-location:before {\n  content: \"\\e947\";\n}\n.w-e-icon-undo:before {\n  content: \"\\e965\";\n}\n.w-e-icon-redo:before {\n  content: \"\\e966\";\n}\n.w-e-icon-quotes-left:before {\n  content: \"\\e977\";\n}\n.w-e-icon-list-numbered:before {\n  content: \"\\e9b9\";\n}\n.w-e-icon-list2:before {\n  content: \"\\e9bb\";\n}\n.w-e-icon-link:before {\n  content: \"\\e9cb\";\n}\n.w-e-icon-happy:before {\n  content: \"\\e9df\";\n}\n.w-e-icon-bold:before {\n  content: \"\\ea62\";\n}\n.w-e-icon-underline:before {\n  content: \"\\ea63\";\n}\n.w-e-icon-italic:before {\n  content: \"\\ea64\";\n}\n.w-e-icon-strikethrough:before {\n  content: \"\\ea65\";\n}\n.w-e-icon-table2:before {\n  content: \"\\ea71\";\n}\n.w-e-icon-paragraph-left:before {\n  content: \"\\ea77\";\n}\n.w-e-icon-paragraph-center:before {\n  content: \"\\ea78\";\n}\n.w-e-icon-paragraph-right:before {\n  content: \"\\ea79\";\n}\n.w-e-icon-paragraph-justify:before {\n  content: \"\\ea7a\";\n}\n.w-e-icon-terminal:before {\n  content: \"\\f120\";\n}\n.w-e-icon-page-break:before {\n  content: \"\\ea68\";\n}\n.w-e-icon-cancel-circle:before {\n  content: \"\\ea0d\";\n}\n.w-e-icon-font:before {\n  content: \"\\ea5c\";\n}\n.w-e-icon-text-heigh:before {\n  content: \"\\ea5f\";\n}\n.w-e-icon-paint-format:before {\n  content: \"\\e90c\";\n}\n.w-e-icon-indent-increase:before {\n  content: \"\\ea7b\";\n}\n.w-e-icon-indent-decrease:before {\n  content: \"\\ea7c\";\n}\n.w-e-icon-row-height:before {\n  content: \"\\e9be\";\n}\n.w-e-icon-fullscreen_exit:before {\n  content: \"\\e900\";\n}\n.w-e-icon-fullscreen:before {\n  content: \"\\e901\";\n}\n.w-e-icon-split-line:before {\n  content: \"\\ea0b\";\n}\n.w-e-icon-checkbox-checked:before {\n  content: \"\\ea52\";\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== 'string') {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, '\\n'), "\"");
  }

  return url;
};

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("data:font/woff;base64,");

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(152);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-toolbar {\n  display: flex;\n  padding: 0 6px;\n  flex-wrap: wrap;\n  position: relative;\n  /* 单个菜单 */\n}\n.w-e-toolbar .w-e-menu {\n  position: relative;\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  cursor: pointer;\n}\n.w-e-toolbar .w-e-menu i {\n  color: #999;\n}\n.w-e-toolbar .w-e-menu:hover {\n  background-color: #F6F6F6;\n}\n.w-e-toolbar .w-e-menu:hover i {\n  color: #333;\n}\n.w-e-toolbar .w-e-active i {\n  color: #1e88e5;\n}\n.w-e-toolbar .w-e-active:hover i {\n  color: #1e88e5;\n}\n.w-e-menu-tooltip {\n  position: absolute;\n  display: flex;\n  color: #f1f1f1;\n  background-color: rgba(0, 0, 0, 0.75);\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  padding: 4px 5px 6px;\n  justify-content: center;\n  align-items: center;\n}\n.w-e-menu-tooltip-up::after {\n  content: \"\";\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border: 5px solid rgba(0, 0, 0, 0);\n  border-top-color: rgba(0, 0, 0, 0.73);\n}\n.w-e-menu-tooltip-down::after {\n  content: \"\";\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border: 5px solid rgba(0, 0, 0, 0);\n  border-bottom-color: rgba(0, 0, 0, 0.73);\n}\n.w-e-menu-tooltip-item-wrapper {\n  font-size: 14px;\n  margin: 0 5px;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(154);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-text-container {\n  position: relative;\n  height: 100%;\n}\n.w-e-text-container .w-e-progress {\n  position: absolute;\n  background-color: #1e88e5;\n  top: 0;\n  left: 0;\n  height: 1px;\n}\n.w-e-text-container .placeholder {\n  color: #D4D4D4;\n  position: absolute;\n  font-size: 11pt;\n  line-height: 22px;\n  left: 10px;\n  top: 10px;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  z-index: -1;\n}\n.w-e-text {\n  padding: 0 10px;\n  overflow-y: auto;\n}\n.w-e-text p,\n.w-e-text h1,\n.w-e-text h2,\n.w-e-text h3,\n.w-e-text h4,\n.w-e-text h5,\n.w-e-text table,\n.w-e-text pre {\n  margin: 10px 0;\n  line-height: 1.5;\n}\n.w-e-text ul,\n.w-e-text ol {\n  margin: 10px 0 10px 20px;\n}\n.w-e-text blockquote {\n  display: block;\n  border-left: 8px solid #d0e5f2;\n  padding: 5px 10px;\n  margin: 10px 0;\n  line-height: 1.4;\n  font-size: 100%;\n  background-color: #f1f1f1;\n}\n.w-e-text code {\n  display: inline-block;\n  background-color: #f1f1f1;\n  border-radius: 3px;\n  padding: 3px 5px;\n  margin: 0 3px;\n}\n.w-e-text pre code {\n  display: block;\n}\n.w-e-text table {\n  border-top: 1px solid #ccc;\n  border-left: 1px solid #ccc;\n}\n.w-e-text table td,\n.w-e-text table th {\n  border-bottom: 1px solid #ccc;\n  border-right: 1px solid #ccc;\n  padding: 3px 5px;\n  min-height: 30px;\n}\n.w-e-text table th {\n  border-bottom: 2px solid #ccc;\n  text-align: center;\n  background-color: #f1f1f1;\n}\n.w-e-text:focus {\n  outline: none;\n}\n.w-e-text img {\n  cursor: pointer;\n}\n.w-e-text img:hover {\n  box-shadow: 0 0 5px #333;\n}\n.w-e-text .w-e-todo {\n  margin: 0 0 0 20px;\n}\n.w-e-text .w-e-todo li {\n  list-style: none;\n  font-size: 1em;\n}\n.w-e-text .w-e-todo li span:nth-child(1) {\n  position: relative;\n  left: -18px;\n}\n.w-e-text .w-e-todo li span:nth-child(1) input {\n  position: absolute;\n  margin-right: 3px;\n}\n.w-e-text .w-e-todo li span:nth-child(1) input[type=checkbox] {\n  top: 50%;\n  margin-top: -6px;\n}\n.w-e-tooltip {\n  position: absolute;\n  display: flex;\n  color: #f1f1f1;\n  background-color: rgba(0, 0, 0, 0.75);\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  padding: 4px 5px 6px;\n  justify-content: center;\n  align-items: center;\n}\n.w-e-tooltip-up::after {\n  content: \"\";\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border: 5px solid rgba(0, 0, 0, 0);\n  border-top-color: rgba(0, 0, 0, 0.73);\n}\n.w-e-tooltip-down::after {\n  content: \"\";\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border: 5px solid rgba(0, 0, 0, 0);\n  border-bottom-color: rgba(0, 0, 0, 0.73);\n}\n.w-e-tooltip-item-wrapper {\n  cursor: pointer;\n  font-size: 14px;\n  margin: 0 5px;\n}\n.w-e-tooltip-item-wrapper:hover {\n  color: #ccc;\n  text-decoration: underline;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(156);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-menu .w-e-panel-container {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  border: 1px solid #ccc;\n  border-top: 0;\n  box-shadow: 1px 1px 2px #ccc;\n  color: #333;\n  background-color: #fff;\n  text-align: left;\n  /* 为 emotion panel 定制的样式 */\n  /* 上传图片、上传视频的 panel 定制样式 */\n}\n.w-e-menu .w-e-panel-container .w-e-panel-close {\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 5px;\n  margin: 2px 5px 0 0;\n  cursor: pointer;\n  color: #999;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-close:hover {\n  color: #333;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-title {\n  list-style: none;\n  display: flex;\n  font-size: 14px;\n  margin: 2px 10px 0 10px;\n  border-bottom: 1px solid #f1f1f1;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-title .w-e-item {\n  padding: 3px 5px;\n  color: #999;\n  cursor: pointer;\n  margin: 0 3px;\n  position: relative;\n  top: 1px;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-title .w-e-active {\n  color: #333;\n  border-bottom: 1px solid #333;\n  cursor: default;\n  font-weight: 700;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content {\n  padding: 10px 15px 10px 15px;\n  font-size: 16px;\n  /* 输入框的样式 */\n  /* 按钮的样式 */\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input:focus,\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content textarea:focus,\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content button:focus {\n  outline: none;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content textarea {\n  width: 100%;\n  border: 1px solid #ccc;\n  padding: 5px;\n  margin-top: 10px;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content textarea:focus {\n  border-color: #1e88e5;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text] {\n  border: none;\n  border-bottom: 1px solid #ccc;\n  font-size: 14px;\n  height: 20px;\n  color: #333;\n  text-align: left;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text].small {\n  width: 30px;\n  text-align: center;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text].block {\n  display: block;\n  width: 100%;\n  margin: 10px 0;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {\n  border-bottom: 2px solid #1e88e5;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {\n  font-size: 14px;\n  color: #1e88e5;\n  border: none;\n  padding: 5px 10px;\n  background-color: #fff;\n  cursor: pointer;\n  border-radius: 3px;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {\n  float: left;\n  margin-right: 10px;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {\n  float: right;\n  margin-left: 10px;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {\n  color: #999;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {\n  color: #c24f4a;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {\n  background-color: #f1f1f1;\n}\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n.w-e-menu .w-e-panel-container .w-e-emoticon-container .w-e-item {\n  cursor: pointer;\n  font-size: 18px;\n  padding: 0 3px;\n  display: inline-block;\n}\n.w-e-menu .w-e-panel-container .w-e-up-img-container,\n.w-e-menu .w-e-panel-container .w-e-up-video-container {\n  text-align: center;\n}\n.w-e-menu .w-e-panel-container .w-e-up-img-container .w-e-up-btn,\n.w-e-menu .w-e-panel-container .w-e-up-video-container .w-e-up-btn {\n  display: inline-block;\n  color: #999;\n  cursor: pointer;\n  font-size: 60px;\n  line-height: 1;\n}\n.w-e-menu .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover,\n.w-e-menu .w-e-panel-container .w-e-up-video-container .w-e-up-btn:hover {\n  color: #333;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(158);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-toolbar .w-e-droplist {\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: #fff;\n  border: 1px solid #f1f1f1;\n  border-right-color: #ccc;\n  border-bottom-color: #ccc;\n}\n.w-e-toolbar .w-e-droplist .w-e-dp-title {\n  text-align: center;\n  color: #999;\n  line-height: 2;\n  border-bottom: 1px solid #f1f1f1;\n  font-size: 13px;\n}\n.w-e-toolbar .w-e-droplist ul.w-e-list {\n  list-style: none;\n  line-height: 1;\n}\n.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {\n  color: #333;\n  padding: 5px 0;\n}\n.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {\n  background-color: #f1f1f1;\n}\n.w-e-toolbar .w-e-droplist ul.w-e-block {\n  list-style: none;\n  text-align: left;\n  padding: 5px;\n}\n.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {\n  display: inline-block;\n  padding: 3px 5px;\n}\n.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {\n  background-color: #f1f1f1;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description polyfill 【注意，js 语法的兼容，都通过 babel transform runtime 支持】
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _promise = _interopRequireDefault(__webpack_require__(160));

if (!Element.prototype.matches) {
  Element.prototype.matches = function (s) {
    var matches = this.ownerDocument.querySelectorAll(s);
    var i = matches.length;

    for (i; i >= 0; i--) {
      if (matches.item(i) === this) break;
    }

    return i > -1;
  };
} // 有的第三方库需要原生 Promise ，而 IE11 又没有原生 Promise ，就报错


if (!_promise["default"]) {
  window.Promise = _promise["default"];
}

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(161);

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(162);

module.exports = parent;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(163);
__webpack_require__(69);
__webpack_require__(168);
__webpack_require__(174);
__webpack_require__(175);
__webpack_require__(176);
__webpack_require__(51);
__webpack_require__(52);
var path = __webpack_require__(10);

module.exports = path.Promise;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var getPrototypeOf = __webpack_require__(78);
var setPrototypeOf = __webpack_require__(102);
var create = __webpack_require__(62);
var createNonEnumerableProperty = __webpack_require__(17);
var createPropertyDescriptor = __webpack_require__(37);
var iterate = __webpack_require__(40);

var $AggregateError = function AggregateError(errors, message) {
  var that = this;
  if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);
  if (setPrototypeOf) {
    // eslint-disable-next-line unicorn/error-message -- expected
    that = setPrototypeOf(new Error(undefined), getPrototypeOf(that));
  }
  if (message !== undefined) createNonEnumerableProperty(that, 'message', String(message));
  var errorsArray = [];
  iterate(errors, errorsArray.push, { that: errorsArray });
  createNonEnumerableProperty(that, 'errors', errorsArray);
  return that;
};

$AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(5, $AggregateError),
  message: createPropertyDescriptor(5, ''),
  name: createPropertyDescriptor(5, 'AggregateError')
});

// `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor
$({ global: true }, {
  AggregateError: $AggregateError
});


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var createNonEnumerableProperty = __webpack_require__(17);

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var definePropertyModule = __webpack_require__(18);
var anObject = __webpack_require__(20);
var objectKeys = __webpack_require__(63);

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var IS_PURE = __webpack_require__(39);
var global = __webpack_require__(8);
var getBuiltIn = __webpack_require__(28);
var NativePromise = __webpack_require__(109);
var redefine = __webpack_require__(50);
var redefineAll = __webpack_require__(110);
var setToStringTag = __webpack_require__(42);
var setSpecies = __webpack_require__(111);
var isObject = __webpack_require__(13);
var aFunction = __webpack_require__(32);
var anInstance = __webpack_require__(86);
var inspectSource = __webpack_require__(112);
var iterate = __webpack_require__(40);
var checkCorrectnessOfIteration = __webpack_require__(113);
var speciesConstructor = __webpack_require__(114);
var task = __webpack_require__(115).set;
var microtask = __webpack_require__(170);
var promiseResolve = __webpack_require__(117);
var hostReportErrors = __webpack_require__(172);
var newPromiseCapabilityModule = __webpack_require__(70);
var perform = __webpack_require__(87);
var InternalStateModule = __webpack_require__(43);
var isForced = __webpack_require__(101);
var wellKnownSymbol = __webpack_require__(9);
var IS_NODE = __webpack_require__(65);
var V8_VERSION = __webpack_require__(66);

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars -- required for `.length`
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(85);
var classof = __webpack_require__(68);

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var getOwnPropertyDescriptor = __webpack_require__(75).f;
var macrotask = __webpack_require__(115).set;
var IS_IOS = __webpack_require__(116);
var IS_WEBOS_WEBKIT = __webpack_require__(171);
var IS_NODE = __webpack_require__(65);

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(67);

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var inspectSource = __webpack_require__(112);

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var aFunction = __webpack_require__(32);
var newPromiseCapabilityModule = __webpack_require__(70);
var perform = __webpack_require__(87);
var iterate = __webpack_require__(40);

// `Promise.allSettled` method
// https://tc39.es/ecma262/#sec-promise.allsettled
$({ target: 'Promise', stat: true }, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'fulfilled', value: value };
          --remaining || resolve(values);
        }, function (error) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'rejected', reason: error };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var aFunction = __webpack_require__(32);
var getBuiltIn = __webpack_require__(28);
var newPromiseCapabilityModule = __webpack_require__(70);
var perform = __webpack_require__(87);
var iterate = __webpack_require__(40);

var PROMISE_ANY_ERROR = 'No one promise resolved';

// `Promise.any` method
// https://tc39.es/ecma262/#sec-promise.any
$({ target: 'Promise', stat: true }, {
  any: function any(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        errors.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (error) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = error;
          --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var IS_PURE = __webpack_require__(39);
var NativePromise = __webpack_require__(109);
var fails = __webpack_require__(12);
var getBuiltIn = __webpack_require__(28);
var speciesConstructor = __webpack_require__(114);
var promiseResolve = __webpack_require__(117);
var redefine = __webpack_require__(50);

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!NativePromise && fails(function () {
  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// patch native Promise.prototype for native async functions
if (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {
  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);
}


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(64);
var requireObjectCoercible = __webpack_require__(48);

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

var IteratorPrototype = __webpack_require__(118).IteratorPrototype;
var create = __webpack_require__(62);
var createPropertyDescriptor = __webpack_require__(37);
var setToStringTag = __webpack_require__(42);
var Iterators = __webpack_require__(41);

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(27);
var addToUnscopables = __webpack_require__(89);
var Iterators = __webpack_require__(41);
var InternalStateModule = __webpack_require__(43);
var defineIterator = __webpack_require__(88);

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 180 */
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(52);
var forEach = __webpack_require__(182);
var classof = __webpack_require__(68);
var ArrayPrototype = Array.prototype;

var DOMIterables = {
  DOMTokenList: true,
  NodeList: true
};

module.exports = function (it) {
  var own = it.forEach;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.forEach)
    // eslint-disable-next-line no-prototype-builtins -- safe
    || DOMIterables.hasOwnProperty(classof(it)) ? forEach : own;
};


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(183);

module.exports = parent;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(184);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').forEach;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var forEach = __webpack_require__(185);

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

var $forEach = __webpack_require__(29).forEach;
var arrayMethodIsStrict = __webpack_require__(71);

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(187);

module.exports = parent;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(188);
var path = __webpack_require__(10);

module.exports = path.Array.isArray;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var isArray = __webpack_require__(53);

// `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray
$({ target: 'Array', stat: true }, {
  isArray: isArray
});


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(190);

module.exports = parent;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var map = __webpack_require__(191);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.map;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.map) ? map : own;
};


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(192);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').map;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $map = __webpack_require__(29).map;
var arrayMethodHasSpeciesSupport = __webpack_require__(54);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(194);

module.exports = parent;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

var trim = __webpack_require__(195);

var StringPrototype = String.prototype;

module.exports = function (it) {
  var own = it.trim;
  return typeof it === 'string' || it === StringPrototype
    || (it instanceof String && own === StringPrototype.trim) ? trim : own;
};


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(196);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('String').trim;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $trim = __webpack_require__(92).trim;
var forcedStringTrimMethod = __webpack_require__(197);

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);
var whitespaces = __webpack_require__(72);

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(199);

module.exports = parent;


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(200);
__webpack_require__(69);
__webpack_require__(51);
__webpack_require__(52);
var path = __webpack_require__(10);

module.exports = path.Map;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var collection = __webpack_require__(121);
var collectionStrong = __webpack_require__(123);

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
module.exports = collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(12);

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(203);

module.exports = parent;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__(204);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.indexOf;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.indexOf) ? indexOf : own;
};


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(205);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').indexOf;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable es/no-array-prototype-indexof -- required for testing */
var $ = __webpack_require__(5);
var $indexOf = __webpack_require__(81).indexOf;
var arrayMethodIsStrict = __webpack_require__(71);

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(207);

module.exports = parent;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

var splice = __webpack_require__(208);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.splice;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.splice) ? splice : own;
};


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(209);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').splice;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var toAbsoluteIndex = __webpack_require__(82);
var toInteger = __webpack_require__(64);
var toLength = __webpack_require__(34);
var toObject = __webpack_require__(33);
var arraySpeciesCreate = __webpack_require__(90);
var createProperty = __webpack_require__(73);
var arrayMethodHasSpeciesSupport = __webpack_require__(54);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(211);

module.exports = parent;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var filter = __webpack_require__(212);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.filter;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.filter) ? filter : own;
};


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(213);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').filter;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $filter = __webpack_require__(29).filter;
var arrayMethodHasSpeciesSupport = __webpack_require__(54);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(215);

module.exports = parent;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

var arrayIncludes = __webpack_require__(216);
var stringIncludes = __webpack_require__(218);

var ArrayPrototype = Array.prototype;
var StringPrototype = String.prototype;

module.exports = function (it) {
  var own = it.includes;
  if (it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.includes)) return arrayIncludes;
  if (typeof it === 'string' || it === StringPrototype || (it instanceof String && own === StringPrototype.includes)) {
    return stringIncludes;
  } return own;
};


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(217);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').includes;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $includes = __webpack_require__(81).includes;
var addToUnscopables = __webpack_require__(89);

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(219);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('String').includes;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var notARegExp = __webpack_require__(220);
var requireObjectCoercible = __webpack_require__(48);
var correctIsRegExpLogic = __webpack_require__(222);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~String(requireObjectCoercible(this))
      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var isRegExp = __webpack_require__(221);

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);
var classof = __webpack_require__(47);
var wellKnownSymbol = __webpack_require__(9);

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(9);

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(224);

module.exports = parent;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(225);

var FunctionPrototype = Function.prototype;

module.exports = function (it) {
  var own = it.bind;
  return it === FunctionPrototype || (it instanceof Function && own === FunctionPrototype.bind) ? bind : own;
};


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(226);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Function').bind;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var bind = __webpack_require__(227);

// `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind
$({ target: 'Function', proto: true }, {
  bind: bind
});


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(32);
var isObject = __webpack_require__(13);

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(229);

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(230);
__webpack_require__(250);
__webpack_require__(251);
__webpack_require__(252);
__webpack_require__(253);
// TODO: Remove from `core-js@4`
__webpack_require__(254);

module.exports = parent;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(231);
__webpack_require__(69);
__webpack_require__(232);
__webpack_require__(234);
__webpack_require__(235);
__webpack_require__(236);
__webpack_require__(237);
__webpack_require__(126);
__webpack_require__(238);
__webpack_require__(239);
__webpack_require__(240);
__webpack_require__(241);
__webpack_require__(242);
__webpack_require__(243);
__webpack_require__(244);
__webpack_require__(245);
__webpack_require__(246);
__webpack_require__(247);
__webpack_require__(248);
__webpack_require__(249);
var path = __webpack_require__(10);

module.exports = path.Symbol;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var fails = __webpack_require__(12);
var isArray = __webpack_require__(53);
var isObject = __webpack_require__(13);
var toObject = __webpack_require__(33);
var toLength = __webpack_require__(34);
var createProperty = __webpack_require__(73);
var arraySpeciesCreate = __webpack_require__(90);
var arrayMethodHasSpeciesSupport = __webpack_require__(54);
var wellKnownSymbol = __webpack_require__(9);
var V8_VERSION = __webpack_require__(66);

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var global = __webpack_require__(8);
var getBuiltIn = __webpack_require__(28);
var IS_PURE = __webpack_require__(39);
var DESCRIPTORS = __webpack_require__(15);
var NATIVE_SYMBOL = __webpack_require__(84);
var USE_SYMBOL_AS_UID = __webpack_require__(106);
var fails = __webpack_require__(12);
var has = __webpack_require__(16);
var isArray = __webpack_require__(53);
var isObject = __webpack_require__(13);
var anObject = __webpack_require__(20);
var toObject = __webpack_require__(33);
var toIndexedObject = __webpack_require__(27);
var toPrimitive = __webpack_require__(59);
var createPropertyDescriptor = __webpack_require__(37);
var nativeObjectCreate = __webpack_require__(62);
var objectKeys = __webpack_require__(63);
var getOwnPropertyNamesModule = __webpack_require__(124);
var getOwnPropertyNamesExternal = __webpack_require__(233);
var getOwnPropertySymbolsModule = __webpack_require__(125);
var getOwnPropertyDescriptorModule = __webpack_require__(75);
var definePropertyModule = __webpack_require__(18);
var propertyIsEnumerableModule = __webpack_require__(58);
var createNonEnumerableProperty = __webpack_require__(17);
var redefine = __webpack_require__(50);
var shared = __webpack_require__(79);
var sharedKey = __webpack_require__(60);
var hiddenKeys = __webpack_require__(49);
var uid = __webpack_require__(61);
var wellKnownSymbol = __webpack_require__(9);
var wrappedWellKnownSymbolModule = __webpack_require__(95);
var defineWellKnownSymbol = __webpack_require__(11);
var setToStringTag = __webpack_require__(42);
var InternalStateModule = __webpack_require__(43);
var $forEach = __webpack_require__(29).forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var toIndexedObject = __webpack_require__(27);
var $getOwnPropertyNames = __webpack_require__(124).f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.asyncIterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.asynciterator
defineWellKnownSymbol('asyncIterator');


/***/ }),
/* 235 */
/***/ (function(module, exports) {

// empty


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.hasInstance` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.hasinstance
defineWellKnownSymbol('hasInstance');


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable
defineWellKnownSymbol('isConcatSpreadable');


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.match` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.match
defineWellKnownSymbol('match');


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.matchAll` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.matchall
defineWellKnownSymbol('matchAll');


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.replace` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.replace
defineWellKnownSymbol('replace');


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.search` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.search
defineWellKnownSymbol('search');


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.species` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.species
defineWellKnownSymbol('species');


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.split` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.split
defineWellKnownSymbol('split');


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive
defineWellKnownSymbol('toPrimitive');


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.toStringTag` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.tostringtag
defineWellKnownSymbol('toStringTag');


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.unscopables` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.unscopables
defineWellKnownSymbol('unscopables');


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var setToStringTag = __webpack_require__(42);

// JSON[@@toStringTag] property
// https://tc39.es/ecma262/#sec-json-@@tostringtag
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 248 */
/***/ (function(module, exports) {

// empty


/***/ }),
/* 249 */
/***/ (function(module, exports) {

// empty


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.asyncDispose` well-known symbol
// https://github.com/tc39/proposal-using-statement
defineWellKnownSymbol('asyncDispose');


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.dispose` well-known symbol
// https://github.com/tc39/proposal-using-statement
defineWellKnownSymbol('dispose');


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.observable` well-known symbol
// https://github.com/tc39/proposal-observable
defineWellKnownSymbol('observable');


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(11);

// `Symbol.patternMatch` well-known symbol
// https://github.com/tc39/proposal-pattern-matching
defineWellKnownSymbol('patternMatch');


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

// TODO: remove from `core-js@4`
var defineWellKnownSymbol = __webpack_require__(11);

defineWellKnownSymbol('replaceAll');


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(256);

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(257);

module.exports = parent;


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(126);
__webpack_require__(51);
__webpack_require__(52);
var WrappedWellKnownSymbolModule = __webpack_require__(95);

module.exports = WrappedWellKnownSymbolModule.f('iterator');


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(259);

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(260);

module.exports = parent;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(261);
var path = __webpack_require__(10);

module.exports = path.parseInt;


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var parseIntImplementation = __webpack_require__(262);

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$({ global: true, forced: parseInt != parseIntImplementation }, {
  parseInt: parseIntImplementation
});


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var trim = __webpack_require__(92).trim;
var whitespaces = __webpack_require__(72);

var $parseInt = global.parseInt;
var hex = /^[+-]?0[Xx]/;
var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22;

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
module.exports = FORCED ? function parseInt(string, radix) {
  var S = trim(String(string));
  return $parseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));
} : $parseInt;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(264);

module.exports = parent;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var slice = __webpack_require__(265);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.slice;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.slice) ? slice : own;
};


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(266);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').slice;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var isObject = __webpack_require__(13);
var isArray = __webpack_require__(53);
var toAbsoluteIndex = __webpack_require__(82);
var toLength = __webpack_require__(34);
var toIndexedObject = __webpack_require__(27);
var createProperty = __webpack_require__(73);
var wellKnownSymbol = __webpack_require__(9);
var arrayMethodHasSpeciesSupport = __webpack_require__(54);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(268);
var path = __webpack_require__(10);

module.exports = path.setTimeout;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var global = __webpack_require__(8);
var userAgent = __webpack_require__(67);

var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check

var wrap = function (scheduler) {
  return function (handler, timeout /* , ...arguments */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : undefined;
    return scheduler(boundArgs ? function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof handler == 'function' ? handler : Function(handler)).apply(this, args);
    } : handler, timeout);
  };
};

// ie9- setTimeout & setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
$({ global: true, bind: true, forced: MSIE }, {
  // `setTimeout` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
  setTimeout: wrap(global.setTimeout),
  // `setInterval` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  setInterval: wrap(global.setInterval)
});


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 编辑器配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _assign = _interopRequireDefault(__webpack_require__(270));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var menus_1 = tslib_1.__importDefault(__webpack_require__(275));

var events_1 = tslib_1.__importDefault(__webpack_require__(276));

var style_1 = tslib_1.__importDefault(__webpack_require__(127));

var paste_1 = tslib_1.__importDefault(__webpack_require__(277));

var cmd_1 = tslib_1.__importDefault(__webpack_require__(278));

var image_1 = tslib_1.__importDefault(__webpack_require__(279));

var text_1 = tslib_1.__importDefault(__webpack_require__(280));

var lang_1 = tslib_1.__importDefault(__webpack_require__(281));

var history_1 = tslib_1.__importDefault(__webpack_require__(282));

var video_1 = tslib_1.__importDefault(__webpack_require__(283)); // 合并所有的配置信息


var defaultConfig = (0, _assign["default"])({}, menus_1["default"], events_1["default"], style_1["default"], cmd_1["default"], paste_1["default"], image_1["default"], text_1["default"], lang_1["default"], history_1["default"], video_1["default"], //链接校验的配置函数
{
  linkCheck: function linkCheck(text, link) {
    return true;
  }
});
exports["default"] = defaultConfig;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(271);

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(272);

module.exports = parent;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(273);
var path = __webpack_require__(10);

module.exports = path.Object.assign;


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var assign = __webpack_require__(274);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var fails = __webpack_require__(12);
var objectKeys = __webpack_require__(63);
var getOwnPropertySymbolsModule = __webpack_require__(125);
var propertyIsEnumerableModule = __webpack_require__(58);
var toObject = __webpack_require__(33);
var IndexedObject = __webpack_require__(76);

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 菜单配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/*表情菜单数据结构类型END*/

exports["default"] = {
  menus: ['head', 'bold', 'fontSize', // 'customFontSize',
  'fontName', 'italic', 'underline', 'strikeThrough', 'indent', 'lineHeight', 'foreColor', 'backColor', 'link', 'list', 'todo', 'justify', 'quote', 'emoticon', 'image', 'video', 'table', 'code', 'splitLine', 'undo', 'redo'],
  fontNames: ['黑体', '仿宋', '楷体', '标楷体', '华文仿宋', '华文楷体', '宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana', 'Times New Roman', 'Courier New'],
  fontSizes: {
    'x-small': {
      name: '10px',
      value: '1'
    },
    small: {
      name: '13px',
      value: '2'
    },
    normal: {
      name: '16px',
      value: '3'
    },
    large: {
      name: '18px',
      value: '4'
    },
    'x-large': {
      name: '24px',
      value: '5'
    },
    'xx-large': {
      name: '32px',
      value: '6'
    },
    'xxx-large': {
      name: '48px',
      value: '7'
    }
  },
  // customFontSize: [ // 该菜单暂时不用 - 王福朋 20200924
  //     { value: '9px', text: '9' },
  //     { value: '10px', text: '10' },
  //     { value: '12px', text: '12' },
  //     { value: '14px', text: '14' },
  //     { value: '16px', text: '16' },
  //     { value: '20px', text: '20' },
  //     { value: '42px', text: '42' },
  //     { value: '72px', text: '72' },
  // ],
  colors: ['#000000', '#ffffff', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b'],
  //插入代码语言配置
  languageType: ['Bash', 'C', 'C#', 'C++', 'CSS', 'Java', 'JavaScript', 'JSON', 'TypeScript', 'Plain text', 'Html', 'XML', 'SQL', 'Go', 'Kotlin', 'Lua', 'Markdown', 'PHP', 'Python', 'Shell Session', 'Ruby'],
  languageTab: '　　　　',

  /**
   * 表情配置菜单
   * 如果为emoji表情直接作为元素插入
   * emoticon:Array<EmotionsType>
   */
  emotions: [{
    // tab 的标题
    title: '表情',
    // type -> 'emoji' / 'image'
    type: 'emoji',
    // content -> 数组
    content: '😀 😃 😄 😁 😆 😅 😂 🤣 😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😛 😝 😜 🤓 😎 😏 😒 😞 😔 😟 😕 🙁 😣 😖 😫 😩 😢 😭 😤 😠 😡 😳 😱 😨 🤗 🤔 😶 😑 😬 🙄 😯 😴 😷 🤑 😈 🤡 💩 👻 💀 👀 👣'.split(/\s/)
  }, {
    // tab 的标题
    title: '手势',
    // type -> 'emoji' / 'image'
    type: 'emoji',
    // content -> 数组
    content: '👐 🙌 👏 🤝 👍 👎 👊 ✊ 🤛 🤜 🤞 ✌️ 🤘 👌 👈 👉 👆 👇 ☝️ ✋ 🤚 🖐 🖖 👋 🤙 💪 🖕 ✍️ 🙏'.split(/\s/)
  }],
  lineHeights: ['1', '1.15', '1.6', '2', '2.5', '3'],
  undoLimit: 20,
  indentation: '2em',
  showMenuTooltips: true,
  // 菜单栏tooltip为上标还是下标
  menuTooltipPosition: 'up'
};

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 事件配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var const_1 = __webpack_require__(7);
/**
 * 提示信息
 * @param alertInfo alert info
 * @param alertType 错误提示类型
 * @param debugInfo debug info
 */


function customAlert(alertInfo, alertType, debugInfo) {
  window.alert(alertInfo);

  if (debugInfo) {
    console.error('wangEditor: ' + debugInfo);
  }
}

exports["default"] = {
  onchangeTimeout: 200,
  onchange: null,
  onfocus: const_1.EMPTY_FN,
  onblur: const_1.EMPTY_FN,
  onCatalogChange: null,
  customAlert: customAlert
};

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 粘贴，配置文件
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports["default"] = {
  // 粘贴过滤样式，默认开启
  pasteFilterStyle: true,
  // 粘贴内容时，忽略图片。默认关闭
  pasteIgnoreImg: false,
  // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。
  // IE 暂时不支持
  pasteTextHandle: function pasteTextHandle(content) {
    // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回
    return content;
  }
};

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 命令配置项
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports["default"] = {
  styleWithCSS: false // 默认 false

};

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 图片相关的配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var const_1 = __webpack_require__(7);

exports["default"] = {
  // 网络图片校验的配置函数
  linkImgCheck: function linkImgCheck(src, alt, href) {
    return true;
  },
  // 显示“插入网络图片”
  showLinkImg: true,
  // 显示“插入图片alt”
  showLinkImgAlt: true,
  // 显示“插入图片href”
  showLinkImgHref: true,
  // 插入图片成功之后的回调函数
  linkImgCallback: const_1.EMPTY_FN,
  // accept
  uploadImgAccept: ['jpg', 'jpeg', 'png', 'gif', 'bmp'],
  // 服务端地址
  uploadImgServer: '',
  // 使用 base64 存储图片
  uploadImgShowBase64: false,
  // 上传图片的最大体积，默认 5M
  uploadImgMaxSize: 5 * 1024 * 1024,
  // 一次最多上传多少个图片
  uploadImgMaxLength: 100,
  // 自定义上传图片的名称
  uploadFileName: '',
  // 上传图片自定义参数
  uploadImgParams: {},
  // 自定义参数拼接到 url 中
  uploadImgParamsWithUrl: false,
  // 上传图片自定义 header
  uploadImgHeaders: {},
  // 钩子函数
  uploadImgHooks: {},
  // 上传图片超时时间 ms
  uploadImgTimeout: 10 * 1000,
  // 跨域带 cookie
  withCredentials: false,
  // 自定义上传
  customUploadImg: null,
  // 从媒体库上传
  uploadImgFromMedia: null
};

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 默认常量配置
 * @author xiaokyo
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports["default"] = {
  focus: true,
  height: 300,
  placeholder: '请输入正文',
  zIndexFullScreen: 10002,
  showFullScreen: true
};

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports["default"] = {
  lang: 'zh-CN',
  languages: {
    'zh-CN': {
      wangEditor: {
        重置: '重置',
        插入: '插入',
        默认: '默认',
        创建: '创建',
        修改: '修改',
        如: '如',
        请输入正文: '请输入正文',
        menus: {
          title: {
            标题: '标题',
            加粗: '加粗',
            字号: '字号',
            字体: '字体',
            斜体: '斜体',
            下划线: '下划线',
            删除线: '删除线',
            缩进: '缩进',
            行高: '行高',
            文字颜色: '文字颜色',
            背景色: '背景色',
            链接: '链接',
            序列: '序列',
            对齐: '对齐',
            引用: '引用',
            表情: '表情',
            图片: '图片',
            视频: '视频',
            表格: '表格',
            代码: '代码',
            分割线: '分割线',
            恢复: '恢复',
            撤销: '撤销',
            全屏: '全屏',
            取消全屏: '取消全屏',
            待办事项: '待办事项'
          },
          dropListMenu: {
            设置标题: '设置标题',
            背景颜色: '背景颜色',
            文字颜色: '文字颜色',
            设置字号: '设置字号',
            设置字体: '设置字体',
            设置缩进: '设置缩进',
            对齐方式: '对齐方式',
            设置行高: '设置行高',
            序列: '序列',
            head: {
              正文: '正文'
            },
            indent: {
              增加缩进: '增加缩进',
              减少缩进: '减少缩进'
            },
            justify: {
              靠左: '靠左',
              居中: '居中',
              靠右: '靠右',
              两端: '两端'
            },
            list: {
              无序列表: '无序列表',
              有序列表: '有序列表'
            }
          },
          panelMenus: {
            emoticon: {
              默认: '默认',
              新浪: '新浪',
              emoji: 'emoji',
              手势: '手势'
            },
            image: {
              上传图片: '上传图片',
              网络图片: '网络图片',
              图片地址: '图片地址',
              图片文字说明: '图片文字说明',
              跳转链接: '跳转链接'
            },
            link: {
              链接: '链接',
              链接文字: '链接文字',
              取消链接: '取消链接',
              查看链接: '查看链接'
            },
            video: {
              插入视频: '插入视频',
              上传视频: '上传视频'
            },
            table: {
              行: '行',
              列: '列',
              的: '的',
              表格: '表格',
              添加行: '添加行',
              删除行: '删除行',
              添加列: '添加列',
              删除列: '删除列',
              设置表头: '设置表头',
              取消表头: '取消表头',
              插入表格: '插入表格',
              删除表格: '删除表格'
            },
            code: {
              删除代码: '删除代码',
              修改代码: '修改代码',
              插入代码: '插入代码'
            }
          }
        },
        validate: {
          张图片: '张图片',
          大于: '大于',
          图片链接: '图片链接',
          不是图片: '不是图片',
          返回结果: '返回结果',
          上传图片超时: '上传图片超时',
          上传图片错误: '上传图片错误',
          上传图片失败: '上传图片失败',
          插入图片错误: '插入图片错误',
          一次最多上传: '一次最多上传',
          下载链接失败: '下载链接失败',
          图片验证未通过: '图片验证未通过',
          服务器返回状态: '服务器返回状态',
          上传图片返回结果错误: '上传图片返回结果错误',
          请替换为支持的图片类型: '请替换为支持的图片类型',
          您插入的网络图片无法识别: '您插入的网络图片无法识别',
          您刚才插入的图片链接未通过编辑器校验: '您刚才插入的图片链接未通过编辑器校验',
          插入视频错误: '插入视频错误',
          视频链接: '视频链接',
          不是视频: '不是视频',
          视频验证未通过: '视频验证未通过',
          个视频: '个视频',
          上传视频超时: '上传视频超时',
          上传视频错误: '上传视频错误',
          上传视频失败: '上传视频失败',
          上传视频返回结果错误: '上传视频返回结果错误'
        }
      }
    },
    en: {
      wangEditor: {
        重置: 'reset',
        插入: 'insert',
        默认: 'default',
        创建: 'create',
        修改: 'edit',
        如: 'like',
        请输入正文: 'please enter the text',
        menus: {
          title: {
            标题: 'head',
            加粗: 'bold',
            字号: 'font size',
            字体: 'font family',
            斜体: 'italic',
            下划线: 'underline',
            删除线: 'strikethrough',
            缩进: 'indent',
            行高: 'line heihgt',
            文字颜色: 'font color',
            背景色: 'background',
            链接: 'link',
            序列: 'numbered list',
            对齐: 'align',
            引用: 'quote',
            表情: 'emoticons',
            图片: 'image',
            视频: 'media',
            表格: 'table',
            代码: 'code',
            分割线: 'split line',
            恢复: 'undo',
            撤销: 'redo',
            全屏: 'fullscreen',
            取消全屏: 'cancel fullscreen',
            待办事项: 'todo'
          },
          dropListMenu: {
            设置标题: 'title',
            背景颜色: 'background',
            文字颜色: 'font color',
            设置字号: 'font size',
            设置字体: 'font family',
            设置缩进: 'indent',
            对齐方式: 'align',
            设置行高: 'line heihgt',
            序列: 'list',
            head: {
              正文: 'text'
            },
            indent: {
              增加缩进: 'indent',
              减少缩进: 'outdent'
            },
            justify: {
              靠左: 'left',
              居中: 'center',
              靠右: 'right',
              两端: 'justify'
            },
            list: {
              无序列表: 'unordered',
              有序列表: 'ordered'
            }
          },
          panelMenus: {
            emoticon: {
              表情: 'emoji',
              手势: 'gesture'
            },
            image: {
              上传图片: 'upload image',
              网络图片: 'network image',
              图片地址: 'image link',
              图片文字说明: 'image alt',
              跳转链接: 'hyperlink'
            },
            link: {
              链接: 'link',
              链接文字: 'link text',
              取消链接: 'unlink',
              查看链接: 'view links'
            },
            video: {
              插入视频: 'insert video',
              上传视频: 'upload local video'
            },
            table: {
              行: 'rows',
              列: 'columns',
              的: ' ',
              表格: 'table',
              添加行: 'insert row',
              删除行: 'delete row',
              添加列: 'insert column',
              删除列: 'delete column',
              设置表头: 'set header',
              取消表头: 'cancel header',
              插入表格: 'insert table',
              删除表格: 'delete table'
            },
            code: {
              删除代码: 'delete code',
              修改代码: 'edit code',
              插入代码: 'insert code'
            }
          }
        },
        validate: {
          张图片: 'images',
          大于: 'greater than',
          图片链接: 'image link',
          不是图片: 'is not image',
          返回结果: 'return results',
          上传图片超时: 'upload image timeout',
          上传图片错误: 'upload image error',
          上传图片失败: 'upload image failed',
          插入图片错误: 'insert image error',
          一次最多上传: 'once most at upload',
          下载链接失败: 'download link failed',
          图片验证未通过: 'image validate failed',
          服务器返回状态: 'server return status',
          上传图片返回结果错误: 'upload image return results error',
          请替换为支持的图片类型: 'please replace with a supported image type',
          您插入的网络图片无法识别: 'the network picture you inserted is not recognized',
          您刚才插入的图片链接未通过编辑器校验: 'the image link you just inserted did not pass the editor verification',
          插入视频错误: 'insert video error',
          视频链接: 'video link',
          不是视频: 'is not video',
          视频验证未通过: 'video validate failed',
          个视频: 'videos',
          上传视频超时: 'upload video timeout',
          上传视频错误: 'upload video error',
          上传视频失败: 'upload video failed',
          上传视频返回结果错误: 'upload video return results error'
        }
      }
    }
  }
};

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 历史记录 - 数据缓存的模式
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__(6);
/**
 * 是否为兼容模式。返回 true 表示当前使用兼容（内容备份）模式，否则使用标准（差异备份）模式
 */


function compatibleMode() {
  if (util_1.UA.isIE() || util_1.UA.isOldEdge) {
    return true;
  }

  return false;
}

exports["default"] = {
  compatibleMode: compatibleMode,
  historyMaxSize: 30
};

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 视频相关的配置
 * @author hutianhao
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var const_1 = __webpack_require__(7);

exports["default"] = {
  // 插入网络视频前的回调函数
  onlineVideoCheck: function onlineVideoCheck(video) {
    return true;
  },
  // 插入网络视频成功之后的回调函数
  onlineVideoCallback: const_1.EMPTY_FN,
  // 显示“插入视频”
  showLinkVideo: true,
  // accept
  uploadVideoAccept: ['mp4'],
  // 服务端地址
  uploadVideoServer: '',
  // 上传视频的最大体积，默认 1024M
  uploadVideoMaxSize: 1 * 1024 * 1024 * 1024,
  // 一次最多上传多少个视频
  // uploadVideoMaxLength: 2,
  // 自定义上传视频的名称
  uploadVideoName: '',
  // 上传视频自定义参数
  uploadVideoParams: {},
  // 自定义参数拼接到 url 中
  uploadVideoParamsWithUrl: false,
  // 上传视频自定义 header
  uploadVideoHeaders: {},
  // 钩子函数
  uploadVideoHooks: {},
  // 上传视频超时时间 ms 默认2个小时
  uploadVideoTimeout: 1000 * 60 * 60 * 2,
  // 跨域带 cookie
  withVideoCredentials: false,
  // 自定义上传
  customUploadVideo: null,
  // 自定义插入视频
  customInsertVideo: null
};

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description selection range API
 * @author wangfupeng
 */


var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var const_1 = __webpack_require__(7);

var SelectionAndRange =
/** @class */
function () {
  function SelectionAndRange(editor) {
    this._currentRange = null;
    this.editor = editor;
  }
  /**
   * 获取当前 range
   */


  SelectionAndRange.prototype.getRange = function () {
    return this._currentRange;
  };
  /**
   * 保存选区范围
   * @param _range 选区范围
   */


  SelectionAndRange.prototype.saveRange = function (_range) {
    if (_range) {
      // 保存已有选区
      this._currentRange = _range;
      return;
    } // 获取当前的选区


    var selection = window.getSelection();

    if (selection.rangeCount === 0) {
      return;
    }

    var range = selection.getRangeAt(0); // 获取选区范围的 DOM 元素

    var $containerElem = this.getSelectionContainerElem(range);

    if (!($containerElem === null || $containerElem === void 0 ? void 0 : $containerElem.length)) {
      // 当 选区范围内没有 DOM元素 则抛出
      return;
    }

    if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {
      // 这里大体意义上就是个保险
      // 确保 编辑区域 的 contenteditable属性 的值为 true
      return;
    }

    var editor = this.editor;
    var $textElem = editor.$textElem;

    if ($textElem.isContain($containerElem)) {
      if ($textElem.elems[0] === $containerElem.elems[0]) {
        var _context;

        if ((0, _trim["default"])(_context = $textElem.html()).call(_context) === const_1.EMPTY_P) {
          var $children = $textElem.children();
          var $last = $children === null || $children === void 0 ? void 0 : $children.last();
          editor.selection.createRangeByElem($last, true, true);
          editor.selection.restoreSelection();
        }
      } // 是编辑内容之内的


      this._currentRange = range;
    }
  };
  /**
   * 折叠选区范围
   * @param toStart true 开始位置，false 结束位置
   */


  SelectionAndRange.prototype.collapseRange = function (toStart) {
    if (toStart === void 0) {
      toStart = false;
    }

    var range = this._currentRange;

    if (range) {
      range.collapse(toStart);
    }
  };
  /**
   * 获取选区范围内的文字
   */


  SelectionAndRange.prototype.getSelectionText = function () {
    var range = this._currentRange;

    if (range) {
      return range.toString();
    } else {
      return '';
    }
  };
  /**
   * 获取选区范围的 DOM 元素
   * @param range 选区范围
   */


  SelectionAndRange.prototype.getSelectionContainerElem = function (range) {
    var r;
    r = range || this._currentRange;
    var elem;

    if (r) {
      elem = r.commonAncestorContainer;
      return dom_core_1["default"](elem.nodeType === 1 ? elem : elem.parentNode);
    }
  };
  /**
   * 选区范围开始的 DOM 元素
   * @param range 选区范围
   */


  SelectionAndRange.prototype.getSelectionStartElem = function (range) {
    var r;
    r = range || this._currentRange;
    var elem;

    if (r) {
      elem = r.startContainer;
      return dom_core_1["default"](elem.nodeType === 1 ? elem : elem.parentNode);
    }
  };
  /**
   * 选区范围结束的 DOM 元素
   * @param range 选区范围
   */


  SelectionAndRange.prototype.getSelectionEndElem = function (range) {
    var r;
    r = range || this._currentRange;
    var elem;

    if (r) {
      elem = r.endContainer;
      return dom_core_1["default"](elem.nodeType === 1 ? elem : elem.parentNode);
    }
  };
  /**
   * 选区是否为空（没有选择文字）
   */


  SelectionAndRange.prototype.isSelectionEmpty = function () {
    var range = this._currentRange;

    if (range && range.startContainer) {
      if (range.startContainer === range.endContainer) {
        if (range.startOffset === range.endOffset) {
          return true;
        }
      }
    }

    return false;
  };
  /**
   * 恢复选区范围
   */


  SelectionAndRange.prototype.restoreSelection = function () {
    var selection = window.getSelection();
    var r = this._currentRange;

    if (selection && r) {
      selection.removeAllRanges();
      selection.addRange(r);
    }
  };
  /**
   * 创建一个空白（即 &#8203 字符）选区
   */


  SelectionAndRange.prototype.createEmptyRange = function () {
    var editor = this.editor;
    var range = this.getRange();
    var $elem;

    if (!range) {
      // 当前无 range
      return;
    }

    if (!this.isSelectionEmpty()) {
      // 当前选区必须没有内容才可以，有内容就直接 return
      return;
    }

    try {
      // 目前只支持 webkit 内核
      if (util_1.UA.isWebkit()) {
        // 插入 &#8203
        editor.cmd["do"]('insertHTML', '&#8203;'); // 修改 offset 位置

        range.setEnd(range.endContainer, range.endOffset + 1); // 存储

        this.saveRange(range);
      } else {
        $elem = dom_core_1["default"]('<strong>&#8203;</strong>');
        editor.cmd["do"]('insertElem', $elem);
        this.createRangeByElem($elem, true);
      }
    } catch (ex) {// 部分情况下会报错，兼容一下
    }
  };
  /**
   * 重新设置选区
   * @param startDom 选区开始的元素
   * @param endDom 选区结束的元素
   */


  SelectionAndRange.prototype.createRangeByElems = function (startDom, endDom) {
    var selection = window.getSelection ? window.getSelection() : document.getSelection(); //清除所有的选区

    selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
    var range = document.createRange();
    range.setStart(startDom, 0); // 设置多行标签之后，第二个参数会被h标签内的b、font标签等影响range范围的选取

    range.setEnd(endDom, endDom.childNodes.length || 1); // 保存设置好的选区

    this.saveRange(range); //恢复选区

    this.restoreSelection();
  };
  /**
   * 根据 DOM 元素设置选区
   * @param $elem DOM 元素
   * @param toStart true 开始位置，false 结束位置
   * @param isContent 是否选中 $elem 的内容
   */


  SelectionAndRange.prototype.createRangeByElem = function ($elem, toStart, isContent) {
    if (!$elem.length) {
      return;
    }

    var elem = $elem.elems[0];
    var range = document.createRange();

    if (isContent) {
      range.selectNodeContents(elem);
    } else {
      // 如果用户没有传入 isContent 参数，那就默认为 false
      range.selectNode(elem);
    }

    if (toStart != null) {
      // 传入了 toStart 参数，折叠选区。如果没传入 toStart 参数，则忽略这一步
      range.collapse(toStart);

      if (!toStart) {
        this.saveRange(range);
        this.editor.selection.moveCursor(elem);
      }
    } // 存储 range


    this.saveRange(range);
  };
  /**
   * 获取 当前 选取范围的 顶级(段落) 元素
   * @param $editor
   */


  SelectionAndRange.prototype.getSelectionRangeTopNodes = function () {
    var _a, _b; // 清空，防止叠加元素


    var $nodeList;
    var $startElem = (_a = this.getSelectionStartElem()) === null || _a === void 0 ? void 0 : _a.getNodeTop(this.editor);
    var $endElem = (_b = this.getSelectionEndElem()) === null || _b === void 0 ? void 0 : _b.getNodeTop(this.editor);
    $nodeList = this.recordSelectionNodes(dom_core_1["default"]($startElem), dom_core_1["default"]($endElem));
    return $nodeList;
  };
  /**
   * 移动光标位置,默认情况下在尾部
   * 有一个特殊情况是firefox下的文本节点会自动补充一个br元素，会导致自动换行
   * 所以默认情况下在firefox下的文本节点会自动移动到br前面
   * @param {Node} node 元素节点
   * @param {number} position 光标的位置
   */


  SelectionAndRange.prototype.moveCursor = function (node, position) {
    var _a;

    var range = this.getRange(); //对文本节点特殊处理

    var len = node.nodeType === 3 ? (_a = node.nodeValue) === null || _a === void 0 ? void 0 : _a.length : node.childNodes.length;

    if ((util_1.UA.isFirefox || util_1.UA.isIE()) && len !== 0) {
      // firefox下在节点为文本节点和节点最后一个元素为文本节点的情况下
      if (node.nodeType === 3 || node.childNodes[len - 1].nodeName === 'BR') {
        len = len - 1;
      }
    }

    var pos = position !== null && position !== void 0 ? position : len;

    if (!range) {
      return;
    }

    if (node) {
      range.setStart(node, pos);
      range.setEnd(node, pos);
      this.restoreSelection();
    }
  };
  /**
   * 获取光标在当前选区的位置
   */


  SelectionAndRange.prototype.getCursorPos = function () {
    var selection = window.getSelection();
    return selection === null || selection === void 0 ? void 0 : selection.anchorOffset;
  };
  /**
   * 清除当前选区的Range,notice:不影响已保存的Range
   */


  SelectionAndRange.prototype.clearWindowSelectionRange = function () {
    var selection = window.getSelection();

    if (selection) {
      selection.removeAllRanges();
    }
  };
  /**
   * 记录节点 - 从选区开始节点开始 一直到匹配到选区结束节点为止
   * @param $node 节点
   */


  SelectionAndRange.prototype.recordSelectionNodes = function ($node, $endElem) {
    var $list = [];
    var $NODE = $node;
    var $textElem = this.editor.$textElem;
    var isEnd = true; // $NODE元素为空时不需要进行循环

    while (isEnd) {
      var $elem = $NODE === null || $NODE === void 0 ? void 0 : $NODE.getNodeTop(this.editor);
      if ($elem.getNodeName() === 'BODY') isEnd = false; // 兜底

      if ($elem.length > 0) {
        $list.push(dom_core_1["default"]($NODE)); // 两个边界情况：
        // 1. 当前元素就是我们要找的末尾元素
        // 2. 当前元素已经是编辑区顶级元素（否则会找到编辑区的兄弟节点，比如placeholder元素）

        if (($endElem === null || $endElem === void 0 ? void 0 : $endElem.equal($elem)) || $textElem.equal($elem)) {
          isEnd = false;
        } else {
          $NODE = $elem.getNextSibling();
        }
      }
    }

    return $list;
  };
  /**
   * 将当前 range 设置到 node 元素并初始化位置
   * 解决编辑器内容为空时，菜单不生效的问题
   * @param node 元素节点
   */


  SelectionAndRange.prototype.setRangeToElem = function (node) {
    var range = this.getRange();
    range === null || range === void 0 ? void 0 : range.setStart(node, 0);
    range === null || range === void 0 ? void 0 : range.setEnd(node, 0);
  };

  return SelectionAndRange;
}();

exports["default"] = SelectionAndRange;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 封装 document.execCommand
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Command =
/** @class */
function () {
  function Command(editor) {
    this.editor = editor;
  }
  /**
   * 执行富文本操作的命令
   * @param name name
   * @param value value
   */


  Command.prototype["do"] = function (name, value) {
    var editor = this.editor;

    if (editor.config.styleWithCSS) {
      document.execCommand('styleWithCSS', false, 'true');
    }

    var selection = editor.selection; // 如果无选区，忽略

    if (!selection.getRange()) {
      return;
    } // 恢复选取


    selection.restoreSelection(); // 执行

    switch (name) {
      case 'insertHTML':
        this.insertHTML(value);
        break;

      case 'insertElem':
        this.insertElem(value);
        break;

      default:
        // 默认 command
        this.execCommand(name, value);
        break;
    } // 修改菜单状态


    editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁

    selection.saveRange();
    selection.restoreSelection();
  };
  /**
   * 插入 html
   * @param html html 字符串
   */


  Command.prototype.insertHTML = function (html) {
    var editor = this.editor;
    var range = editor.selection.getRange();
    if (range == null) return;

    if (this.queryCommandSupported('insertHTML')) {
      // W3C
      this.execCommand('insertHTML', html);
    } else if (range.insertNode) {
      // IE
      range.deleteContents();

      if (dom_core_1["default"](html).elems.length > 0) {
        range.insertNode(dom_core_1["default"](html).elems[0]);
      } else {
        var newNode = document.createElement('p');
        newNode.appendChild(document.createTextNode(html));
        range.insertNode(newNode);
      }

      editor.selection.collapseRange();
    } // else if (range.pasteHTML) {
    //     // IE <= 10
    //     range.pasteHTML(html)
    // }

  };
  /**
   * 插入 DOM 元素
   * @param $elem DOM 元素
   */


  Command.prototype.insertElem = function ($elem) {
    var editor = this.editor;
    var range = editor.selection.getRange();
    if (range == null) return;

    if (range.insertNode) {
      range.deleteContents();
      range.insertNode($elem.elems[0]);
    }
  };
  /**
   * 执行 document.execCommand
   * @param name name
   * @param value value
   */


  Command.prototype.execCommand = function (name, value) {
    document.execCommand(name, false, value);
  };
  /**
   * 执行 document.queryCommandValue
   * @param name name
   */


  Command.prototype.queryCommandValue = function (name) {
    return document.queryCommandValue(name);
  };
  /**
   * 执行 document.queryCommandState
   * @param name name
   */


  Command.prototype.queryCommandState = function (name) {
    return document.queryCommandState(name);
  };
  /**
   * 执行 document.queryCommandSupported
   * @param name name
   */


  Command.prototype.queryCommandSupported = function (name) {
    return document.queryCommandSupported(name);
  };

  return Command;
}();

exports["default"] = Command;

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 编辑区域，入口文件
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _find = _interopRequireDefault(__webpack_require__(30));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _trim = _interopRequireDefault(__webpack_require__(19));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

var _setTimeout2 = _interopRequireDefault(__webpack_require__(45));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var index_1 = tslib_1.__importDefault(__webpack_require__(291));

var util_1 = __webpack_require__(6);

var getChildrenJSON_1 = tslib_1.__importDefault(__webpack_require__(303));

var getHtmlByNodeList_1 = tslib_1.__importDefault(__webpack_require__(304));

var const_1 = __webpack_require__(7);

var Text =
/** @class */
function () {
  function Text(editor) {
    this.editor = editor;
    this.eventHooks = {
      onBlurEvents: [],
      changeEvents: [],
      dropEvents: [],
      clickEvents: [],
      keydownEvents: [],
      keyupEvents: [],
      tabUpEvents: [],
      tabDownEvents: [],
      enterUpEvents: [],
      enterDownEvents: [],
      deleteUpEvents: [],
      deleteDownEvents: [],
      pasteEvents: [],
      linkClickEvents: [],
      codeClickEvents: [],
      textScrollEvents: [],
      toolbarClickEvents: [],
      imgClickEvents: [],
      imgDragBarMouseDownEvents: [],
      tableClickEvents: [],
      menuClickEvents: [],
      dropListMenuHoverEvents: [],
      splitLineEvents: [],
      videoClickEvents: []
    };
  }
  /**
   * 初始化
   */


  Text.prototype.init = function () {
    // 实时保存选取范围
    this._saveRange(); // 绑定事件


    this._bindEventHooks(); // 初始化 text 事件钩子函数


    index_1["default"](this);
  };
  /**
   * 切换placeholder
   */


  Text.prototype.togglePlaceholder = function () {
    var _context;

    var html = this.html();
    var $placeholder = (0, _find["default"])(_context = this.editor.$textContainerElem).call(_context, '.placeholder');
    $placeholder.hide();
    if (this.editor.isComposing) return;
    if (!html || html === ' ') $placeholder.show();
  };
  /**
   * 清空内容
   */


  Text.prototype.clear = function () {
    this.html(const_1.EMPTY_P);
  };
  /**
   * 设置/获取 html
   * @param val html 字符串
   */


  Text.prototype.html = function (val) {
    var editor = this.editor;
    var $textElem = editor.$textElem; // 没有 val ，则是获取 html

    if (val == null) {
      var html_1 = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉

      html_1 = html_1.replace(/\u200b/gm, ''); // 去掉空行

      html_1 = html_1.replace(/<p><\/p>/gim, ''); // 去掉最后的 空标签

      html_1 = html_1.replace(const_1.EMPTY_P_LAST_REGEX, ''); // 为了避免用户在最后生成的EMPTY_P标签中编辑数据, 最后产生多余标签, 去除所有p标签上的data-we-empty-p属性

      html_1 = html_1.replace(const_1.EMPTY_P_REGEX, '<p>');
      /**
       * 这里的代码为了处理火狐多余的空行标签,但是强制删除空行标签会带来其他问题
       * html()方法返回的的值,EMPTY_P中pr会被删除,只留下<p>,点不进去,从而产生垃圾数据
       * 目前在末位有多个空行的情况下执行撤销重做操作,会产生一种不记录末尾空行的错觉
       * 暂时注释, 等待进一步的兼容处理
       */
      // html = html.replace(/><br>(?!<)/gi, '>') // 过滤 <p><br>内容</p> 中的br
      // html = html.replace(/(?!>)<br></gi, '<') // 过滤 <p>内容<br></p> 中的br

      /**
       * pre标签格式化
       * html()方法理论上应当输出纯净的代码文本,但是对于是否解析html标签还没有良好的判断
       * 如果去除hljs的标签,在解析状态下回显,会造成显示错误并且无法再通过hljs方法渲染
       * 暂且其弃用
       */
      // html = formatCodeHtml(editor, html)
      // 将没有自闭和的标签过滤为自闭和

      var selfCloseHtmls = html_1.match(/<(img|br|hr|input)[^>]*>/gi);

      if (selfCloseHtmls !== null) {
        (0, _forEach["default"])(selfCloseHtmls).call(selfCloseHtmls, function (item) {
          if (!item.match(/\/>/)) {
            html_1 = html_1.replace(item, item.substring(0, item.length - 1) + '/>');
          }
        });
      }

      return html_1;
    } // 有 val ，则是设置 html


    val = (0, _trim["default"])(val).call(val);

    if (val === '') {
      val = const_1.EMPTY_P;
    }

    if ((0, _indexOf["default"])(val).call(val, '<') !== 0) {
      // 内容用 p 标签包裹
      val = "<p>" + val + "</p>";
    }

    $textElem.html(val); // 初始化选区，将光标定位到内容尾部

    editor.initSelection();
  };
  /**
   * 将json设置成html至编辑器
   * @param nodeList json格式
   */


  Text.prototype.setJSON = function (nodeList) {
    var html = getHtmlByNodeList_1["default"](nodeList).children();
    var editor = this.editor;
    var $textElem = editor.$textElem; // 没有获取到元素的情况

    if (!html) return; // 替换文本节点下全部子节点

    $textElem.replaceChildAll(html);
  };
  /**
   * 获取 json 格式的数据
   */


  Text.prototype.getJSON = function () {
    var editor = this.editor;
    var $textElem = editor.$textElem;
    return getChildrenJSON_1["default"]($textElem);
  };

  Text.prototype.text = function (val) {
    var editor = this.editor;
    var $textElem = editor.$textElem; // 没有 val ，是获取 text

    if (val == null) {
      var text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉

      text = text.replace(/\u200b/gm, '');
      return text;
    } // 有 val ，则是设置 text


    $textElem.text("<p>" + val + "</p>"); // 初始化选区，将光标定位到内容尾部

    editor.initSelection();
  };
  /**
   * 追加 html 内容
   * @param html html 字符串
   */


  Text.prototype.append = function (html) {
    var editor = this.editor;

    if ((0, _indexOf["default"])(html).call(html, '<') !== 0) {
      // 普通字符串，用 <p> 包裹
      html = "<p>" + html + "</p>";
    }

    this.html(this.html() + html); // 初始化选区，将光标定位到内容尾部

    editor.initSelection();
  };
  /**
   * 每一步操作，都实时保存选区范围
   */


  Text.prototype._saveRange = function () {
    var editor = this.editor;
    var $textElem = editor.$textElem;
    var $document = dom_core_1["default"](document); // 保存当前的选区

    function saveRange() {
      // 随时保存选区
      editor.selection.saveRange(); // 更新按钮 active 状态

      editor.menus.changeActive();
    } // 按键后保存


    $textElem.on('keyup', saveRange); // 点击后保存，为了避免被多次执行而导致造成浪费，这里对 click 使用一次性绑定

    function onceClickSaveRange() {
      saveRange();
      $textElem.off('click', onceClickSaveRange);
    }

    $textElem.on('click', onceClickSaveRange);

    function handleMouseUp() {
      // 在编辑器区域之外完成抬起，保存此时编辑区内的新选区，取消此时鼠标抬起事件
      saveRange();
      $document.off('mouseup', handleMouseUp);
    }

    function listenMouseLeave() {
      // 当鼠标移动到外面，要监听鼠标抬起操作
      $document.on('mouseup', handleMouseUp); // 首次移出时即接触leave监听，防止用户不断移入移出多次注册handleMouseUp

      $textElem.off('mouseleave', listenMouseLeave);
    }

    $textElem.on('mousedown', function () {
      // mousedown 状态下，要坚听鼠标滑动到编辑区域外面
      $textElem.on('mouseleave', listenMouseLeave);
    });
    $textElem.on('mouseup', function (e) {
      // 记得移除$textElem的mouseleave事件, 避免内存泄露
      $textElem.off('mouseleave', listenMouseLeave); // fix：避免当选中一段文字之后，再次点击文字中间位置无法更新selection问题。issue#3096

      (0, _setTimeout2["default"])(function () {
        var selection = editor.selection;
        var range = selection.getRange();
        if (range === null) return;
        saveRange();
      }, 0);
    });
  };
  /**
   * 绑定事件，事件会触发钩子函数
   */


  Text.prototype._bindEventHooks = function () {
    var editor = this.editor;
    var $textElem = editor.$textElem;
    var eventHooks = this.eventHooks; // click hooks

    $textElem.on('click', function (e) {
      var clickEvents = eventHooks.clickEvents;
      (0, _forEach["default"])(clickEvents).call(clickEvents, function (fn) {
        return fn(e);
      });
    }); // enter 键 up 时的 hooks

    $textElem.on('keyup', function (e) {
      if (e.keyCode !== 13) return;
      var enterUpEvents = eventHooks.enterUpEvents;
      (0, _forEach["default"])(enterUpEvents).call(enterUpEvents, function (fn) {
        return fn(e);
      });
    }); // 键盘 up 时的 hooks

    $textElem.on('keyup', function (e) {
      var keyupEvents = eventHooks.keyupEvents;
      (0, _forEach["default"])(keyupEvents).call(keyupEvents, function (fn) {
        return fn(e);
      });
    }); // 键盘 down 时的 hooks

    $textElem.on('keydown', function (e) {
      var keydownEvents = eventHooks.keydownEvents;
      (0, _forEach["default"])(keydownEvents).call(keydownEvents, function (fn) {
        return fn(e);
      });
    }); // delete 键 up 时 hooks

    $textElem.on('keyup', function (e) {
      if (e.keyCode !== 8) return;
      var deleteUpEvents = eventHooks.deleteUpEvents;
      (0, _forEach["default"])(deleteUpEvents).call(deleteUpEvents, function (fn) {
        return fn(e);
      });
    }); // delete 键 down 时 hooks

    $textElem.on('keydown', function (e) {
      if (e.keyCode !== 8) return;
      var deleteDownEvents = eventHooks.deleteDownEvents;
      (0, _forEach["default"])(deleteDownEvents).call(deleteDownEvents, function (fn) {
        return fn(e);
      });
    }); // 粘贴

    $textElem.on('paste', function (e) {
      if (util_1.UA.isIE()) return; // IE 不支持
      // 阻止默认行为，使用 execCommand 的粘贴命令

      e.preventDefault();
      var pasteEvents = eventHooks.pasteEvents;
      (0, _forEach["default"])(pasteEvents).call(pasteEvents, function (fn) {
        return fn(e);
      });
    }); // 撤销/恢复 快捷键

    $textElem.on('keydown', function (e) {
      if ( // 编辑器处于聚焦状态下（多编辑器实例） || 当前处于兼容模式（兼容模式撤销/恢复后不聚焦，所以直接过，但会造成多编辑器同时撤销/恢复）
      (editor.isFocus || editor.isCompatibleMode) && (e.ctrlKey || e.metaKey) && e.keyCode === 90) {
        // 取消默认行为
        e.preventDefault(); // 执行事件

        if (e.shiftKey) {
          // 恢复
          editor.history.restore();
        } else {
          // 撤销
          editor.history.revoke();
        }
      }
    }); // tab up

    $textElem.on('keyup', function (e) {
      if (e.keyCode !== 9) return;
      e.preventDefault();
      var tabUpEvents = eventHooks.tabUpEvents;
      (0, _forEach["default"])(tabUpEvents).call(tabUpEvents, function (fn) {
        return fn(e);
      });
    }); // tab down

    $textElem.on('keydown', function (e) {
      if (e.keyCode !== 9) return;
      e.preventDefault();
      var tabDownEvents = eventHooks.tabDownEvents;
      (0, _forEach["default"])(tabDownEvents).call(tabDownEvents, function (fn) {
        return fn(e);
      });
    }); // 文本编辑区域 滚动时触发

    $textElem.on('scroll', // 使用节流
    util_1.throttle(function (e) {
      var textScrollEvents = eventHooks.textScrollEvents;
      (0, _forEach["default"])(textScrollEvents).call(textScrollEvents, function (fn) {
        return fn(e);
      });
    }, 100)); // 拖拽相关的事件

    function preventDefault(e) {
      // 禁用 document 拖拽事件
      e.preventDefault();
    }

    dom_core_1["default"](document).on('dragleave', preventDefault).on('drop', preventDefault).on('dragenter', preventDefault).on('dragover', preventDefault); // 全局事件在编辑器实例销毁的时候进行解绑

    editor.beforeDestroy(function () {
      dom_core_1["default"](document).off('dragleave', preventDefault).off('drop', preventDefault).off('dragenter', preventDefault).off('dragover', preventDefault);
    });
    $textElem.on('drop', function (e) {
      e.preventDefault();
      var events = eventHooks.dropEvents;
      (0, _forEach["default"])(events).call(events, function (fn) {
        return fn(e);
      });
    }); // link click

    $textElem.on('click', function (e) {
      // 存储链接元素
      var $link = null;
      var target = e.target;
      var $target = dom_core_1["default"](target);

      if ($target.getNodeName() === 'A') {
        // 当前点击的就是一个链接
        $link = $target;
      } else {
        // 否则，向父节点中寻找链接
        var $parent = $target.parentUntil('a');

        if ($parent != null) {
          // 找到了
          $link = $parent;
        }
      }

      if (!$link) return; // 没有点击链接，则返回

      var linkClickEvents = eventHooks.linkClickEvents;
      (0, _forEach["default"])(linkClickEvents).call(linkClickEvents, function (fn) {
        return fn($link);
      });
    }); // img click

    $textElem.on('click', function (e) {
      // 存储图片元素
      var $img = null;
      var target = e.target;
      var $target = dom_core_1["default"](target); //处理图片点击 去除掉emoji图片的情况

      if ($target.getNodeName() === 'IMG' && !$target.elems[0].getAttribute('data-emoji')) {
        // 当前点击的就是img
        e.stopPropagation();
        $img = $target;
      }

      if (!$img) return; // 没有点击图片，则返回

      var imgClickEvents = eventHooks.imgClickEvents;
      (0, _forEach["default"])(imgClickEvents).call(imgClickEvents, function (fn) {
        return fn($img);
      });
    }); // code click

    $textElem.on('click', function (e) {
      // 存储代码元素
      var $code = null;
      var target = e.target;
      var $target = dom_core_1["default"](target);

      if ($target.getNodeName() === 'PRE') {
        // 当前点击的就是一个链接
        $code = $target;
      } else {
        // 否则，向父节点中寻找链接
        var $parent = $target.parentUntil('pre');

        if ($parent !== null) {
          // 找到了
          $code = $parent;
        }
      }

      if (!$code) return;
      var codeClickEvents = eventHooks.codeClickEvents;
      (0, _forEach["default"])(codeClickEvents).call(codeClickEvents, function (fn) {
        return fn($code);
      });
    }); // splitLine click

    $textElem.on('click', function (e) {
      // 存储分割线元素
      var $splitLine = null;
      var target = e.target;
      var $target = dom_core_1["default"](target); // 判断当前点击元素

      if ($target.getNodeName() === 'HR') {
        $splitLine = $target;
      }

      if (!$splitLine) return; // 没有点击分割线，则返回
      // 设置、恢复选区

      editor.selection.createRangeByElem($splitLine);
      editor.selection.restoreSelection();
      var splitLineClickEvents = eventHooks.splitLineEvents;
      (0, _forEach["default"])(splitLineClickEvents).call(splitLineClickEvents, function (fn) {
        return fn($splitLine);
      });
    }); // 菜单栏被点击

    editor.$toolbarElem.on('click', function (e) {
      var toolbarClickEvents = eventHooks.toolbarClickEvents;
      (0, _forEach["default"])(toolbarClickEvents).call(toolbarClickEvents, function (fn) {
        return fn(e);
      });
    }); //mousedown事件

    editor.$textContainerElem.on('mousedown', function (e) {
      var target = e.target;
      var $target = dom_core_1["default"](target);

      if ($target.hasClass('w-e-img-drag-rb')) {
        // 点击的元素，是图片拖拽调整大小的 bar
        var imgDragBarMouseDownEvents = eventHooks.imgDragBarMouseDownEvents;
        (0, _forEach["default"])(imgDragBarMouseDownEvents).call(imgDragBarMouseDownEvents, function (fn) {
          return fn();
        });
      }
    }); //table click

    $textElem.on('click', function (e) {
      // 存储元素
      var $dom = null;
      var target = e.target; //获取最祖父元素

      $dom = dom_core_1["default"](target).parentUntilEditor('TABLE', editor, target); // 没有table范围内，则返回

      if (!$dom) return;
      var tableClickEvents = eventHooks.tableClickEvents;
      (0, _forEach["default"])(tableClickEvents).call(tableClickEvents, function (fn) {
        return fn($dom);
      });
    }); // enter 键 down

    $textElem.on('keydown', function (e) {
      if (e.keyCode !== 13) return;
      var enterDownEvents = eventHooks.enterDownEvents;
      (0, _forEach["default"])(enterDownEvents).call(enterDownEvents, function (fn) {
        return fn(e);
      });
    }); // 视频 click

    $textElem.on('click', function (e) {
      // 存储视频
      var $video = null;
      var target = e.target;
      var $target = dom_core_1["default"](target); //处理视频点击 简单的video 标签

      if ($target.getNodeName() === 'VIDEO') {
        // 当前点击的就是视频
        e.stopPropagation();
        $video = $target;
      }

      if (!$video) return; // 没有点击视频，则返回

      var videoClickEvents = eventHooks.videoClickEvents;
      (0, _forEach["default"])(videoClickEvents).call(videoClickEvents, function (fn) {
        return fn($video);
      });
    });
  };

  return Text;
}();

exports["default"] = Text;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(288);

module.exports = parent;


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

var find = __webpack_require__(289);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.find;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.find) ? find : own;
};


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(290);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').find;


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $find = __webpack_require__(29).find;
var addToUnscopables = __webpack_require__(89);

var FIND = 'find';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description Text 事件钩子函数。Text 公共的，不是某个菜单独有的
 * @wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var enter_to_create_p_1 = tslib_1.__importDefault(__webpack_require__(292));

var del_to_keep_p_1 = tslib_1.__importDefault(__webpack_require__(293));

var tab_to_space_1 = tslib_1.__importDefault(__webpack_require__(294));

var paste_text_html_1 = tslib_1.__importDefault(__webpack_require__(295));

var img_click_active_1 = tslib_1.__importDefault(__webpack_require__(302));
/**
 * 初始化 text 事件钩子函数
 * @param text text 实例
 */


function initTextHooks(text) {
  var editor = text.editor;
  var eventHooks = text.eventHooks; // 回车时，保证生成的是 <p> 标签

  enter_to_create_p_1["default"](editor, eventHooks.enterUpEvents, eventHooks.enterDownEvents); // 删除时，保留 EMPTY_P

  del_to_keep_p_1["default"](editor, eventHooks.deleteUpEvents, eventHooks.deleteDownEvents); // tab 转换为空格

  tab_to_space_1["default"](editor, eventHooks.tabDownEvents); // 粘贴 text html

  paste_text_html_1["default"](editor, eventHooks.pasteEvents); // img click active

  img_click_active_1["default"](editor, eventHooks.imgClickEvents);
}

exports["default"] = initTextHooks;

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 回车时，保证生成的是 <p> 标签
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 回车时，保证生成的是 <p> 标签
 * @param editor 编辑器实例
 * @param enterUpEvents enter 键 up 时的 hooks
 * @param enterDownEvents enter 键 down 时的 hooks
 */


function enterToCreateP(editor, enterUpEvents, enterDownEvents) {
  function insertEmptyP($selectionElem) {
    var _context;

    var $p = dom_core_1["default"]('<p><br></p>');
    $p.insertBefore($selectionElem);

    if ((0, _indexOf["default"])(_context = $selectionElem.html()).call(_context, '<img') >= 0) {
      // 有图片的回车键弹起时
      $p.remove();
      return;
    }

    editor.selection.createRangeByElem($p, true, true);
    editor.selection.restoreSelection();
    $selectionElem.remove();
  } // enter up 时


  function fn() {
    var $textElem = editor.$textElem;
    var $selectionElem = editor.selection.getSelectionContainerElem();
    var $parentElem = $selectionElem.parent();

    if ($parentElem.html() === '<code><br></code>') {
      // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>
      // 而且继续回车跳不出去，因此只能特殊处理
      insertEmptyP($selectionElem);
      return;
    }

    if (!$parentElem.equal($textElem)) {
      // 不是顶级标签
      return;
    }

    var nodeName = $selectionElem.getNodeName();

    if (nodeName === 'P' && $selectionElem.attr('data-we-empty-p') === null) {
      // 当前的标签是 P 且不为 editor 生成的空白占位 p 标签，不用做处理
      return;
    }

    if ($selectionElem.text()) {
      // 有内容，不做处理
      return;
    } // 插入 <p> ，并将选取定位到 <p>，删除当前标签


    insertEmptyP($selectionElem);
  }

  enterUpEvents.push(fn); // enter down 时

  function createPWhenEnterText(e) {
    var _a; // selection中的range缓存还有问题,更新不及时,此处手动更新range,处理enter的bug


    editor.selection.saveRange((_a = getSelection()) === null || _a === void 0 ? void 0 : _a.getRangeAt(0));
    var $selectElem = editor.selection.getSelectionContainerElem();

    if ($selectElem.id === editor.textElemId) {
      // 回车时，默认创建了 text 标签（没有 p 标签包裹），父元素直接就是 $textElem
      // 例如，光标放在 table 最后侧，回车时，默认就是这个情况
      e.preventDefault();
      editor.cmd["do"]('insertHTML', '<p><br></p>');
    }
  }

  enterDownEvents.push(createPWhenEnterText);
}

exports["default"] = enterToCreateP;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 删除时保留 EMPTY_P
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var const_1 = __webpack_require__(7);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 删除时保留 EMPTY_P
 * @param editor 编辑器实例
 * @param deleteUpEvents delete 键 up 时的 hooks
 * @param deleteDownEvents delete 建 down 时的 hooks
 */


function deleteToKeepP(editor, deleteUpEvents, deleteDownEvents) {
  function upFn() {
    var _context;

    var $textElem = editor.$textElem;
    var txtHtml = (0, _trim["default"])(_context = $textElem.html().toLowerCase()).call(_context); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断

    if (!txtHtml || txtHtml === '<br>') {
      // 内容空了
      var $p = dom_core_1["default"](const_1.EMPTY_P);
      $textElem.html(' '); // 一定要先清空，否则在 firefox 下有问题

      $textElem.append($p);
      editor.selection.createRangeByElem($p, false, true);
      editor.selection.restoreSelection(); // 设置折叠后的光标位置，在firebox等浏览器下
      // 光标设置在end位置会自动换行

      editor.selection.moveCursor($p.getNode(), 0);
    }
  }

  deleteUpEvents.push(upFn);

  function downFn(e) {
    var _context2;

    var $textElem = editor.$textElem;
    var txtHtml = (0, _trim["default"])(_context2 = $textElem.html().toLowerCase()).call(_context2);

    if (txtHtml === const_1.EMPTY_P) {
      // 最后剩下一个空行，就不再删除了
      e.preventDefault();
      return;
    }
  }

  deleteDownEvents.push(downFn);
}

exports["default"] = deleteToKeepP;

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 编辑区域 tab 的特殊处理
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/**
 * 编辑区域 tab 的特殊处理，转换为空格
 * @param editor 编辑器实例
 * @param tabDownEvents tab down 事件钩子
 */

function tabHandler(editor, tabDownEvents) {
  // 定义函数
  function fn() {
    if (!editor.cmd.queryCommandSupported('insertHTML')) {
      // 必须原生支持 insertHTML 命令
      return;
    }

    var $selectionElem = editor.selection.getSelectionContainerElem();

    if (!$selectionElem) {
      return;
    }

    var $parentElem = $selectionElem.parent();
    var selectionNodeName = $selectionElem.getNodeName();
    var parentNodeName = $parentElem.getNodeName();

    if (selectionNodeName == 'CODE' || parentNodeName === 'CODE' || parentNodeName === 'PRE' || /hljs/.test(parentNodeName)) {
      // <pre><code> 里面
      editor.cmd["do"]('insertHTML', editor.config.languageTab);
    } else {
      // 普通文字
      editor.cmd["do"]('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');
    }
  } // 保留函数


  tabDownEvents.push(fn);
}

exports["default"] = tabHandler;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 粘贴 text html
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var paste_event_1 = __webpack_require__(128);

var util_1 = __webpack_require__(6);

var const_1 = __webpack_require__(7);
/**
 * 格式化html
 * @param val 粘贴的html
 * @author liuwei
 */


function formatHtml(val) {
  var pasteText = val; // div 全部替换为 p 标签

  pasteText = pasteText.replace(/<div>/gim, '<p>').replace(/<\/div>/gim, '</p>'); // 不允许空行，放在最后

  pasteText = pasteText.replace(/<p><\/p>/gim, '<p><br></p>'); // 去除''

  return (0, _trim["default"])(pasteText).call(pasteText);
}
/**
 * 格式化html
 * @param val 粘贴的html
 * @author liuwei
 */


function formatCode(val) {
  var pasteText = val.replace(/<br>|<br\/>/gm, '\n').replace(/<[^>]+>/gm, '');
  return pasteText;
}
/**
 * 判断html是否使用P标签包裹
 * @param html 粘贴的html
 * @author luochao
 */


function isParagraphHtml(html) {
  var _a;

  if (html === '') return false;
  var container = document.createElement('div');
  container.innerHTML = html;
  return ((_a = container.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName) === 'P';
}
/**
 * 判断当前选区是否是空段落
 * @param topElem 选区顶层元素
 * @author luochao
 */


function isEmptyParagraph(topElem) {
  if (!(topElem === null || topElem === void 0 ? void 0 : topElem.length)) return false;
  var dom = topElem.elems[0];
  return dom.nodeName === 'P' && dom.innerHTML === '<br>';
}
/**
 * 粘贴文本和 html
 * @param editor 编辑器对象
 * @param pasteEvents 粘贴事件列表
 */


function pasteTextHtml(editor, pasteEvents) {
  function fn(e) {
    // 获取配置
    var config = editor.config;
    var pasteFilterStyle = config.pasteFilterStyle;
    var pasteIgnoreImg = config.pasteIgnoreImg;
    var pasteTextHandle = config.pasteTextHandle; // 获取粘贴的文字

    var pasteHtml = paste_event_1.getPasteHtml(e, pasteFilterStyle, pasteIgnoreImg);
    var pasteText = paste_event_1.getPasteText(e);
    pasteText = pasteText.replace(/\n/gm, '<br>'); // 当前选区所在的 DOM 节点

    var $selectionElem = editor.selection.getSelectionContainerElem();

    if (!$selectionElem) {
      return;
    }

    var nodeName = $selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.getNodeName();
    var $topElem = $selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.getNodeTop(editor); // 当前节点顶级可能没有

    var topNodeName = '';

    if ($topElem.elems[0]) {
      topNodeName = $topElem === null || $topElem === void 0 ? void 0 : $topElem.getNodeName();
    } // code 中只能粘贴纯文本


    if (nodeName === 'CODE' || topNodeName === 'PRE') {
      if (pasteTextHandle && util_1.isFunction(pasteTextHandle)) {
        // 用户自定义过滤处理粘贴内容
        pasteText = '' + (pasteTextHandle(pasteText) || '');
      }

      editor.cmd["do"]('insertHTML', formatCode(pasteText));
      return;
    } // 如果用户开启闭粘贴样式注释则将复制进来为url的直接转为链接 否则不转换
    //  在群中有用户提到关闭样式粘贴复制的文字进来后链接直接转为文字了，不符合预期，这里优化下


    if (const_1.urlRegex.test(pasteText) && pasteFilterStyle) {
      //当复制的内容为链接时，也应该判断用户是否定义了处理粘贴的事件
      if (pasteTextHandle && util_1.isFunction(pasteTextHandle)) {
        // 用户自定义过滤处理粘贴内容
        pasteText = '' + (pasteTextHandle(pasteText) || ''); // html
      }

      return editor.cmd["do"]('insertHTML', "<a href=\"" + pasteText + "\" target=\"_blank\">" + pasteText + "</a>"); // html
    } // table 中（td、th），待开发。。。


    if (!pasteHtml) {
      return;
    }

    try {
      // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>
      // 因此执行 insertHTML 会报错
      if (pasteTextHandle && util_1.isFunction(pasteTextHandle)) {
        // 用户自定义过滤处理粘贴内容
        pasteHtml = '' + (pasteTextHandle(pasteHtml) || ''); // html
      } // 粘贴的html的是否是css的style样式


      var isCssStyle = /[\.\#\@]?\w+[ ]+\{[^}]*\}/.test(pasteHtml); // eslint-disable-line
      // 经过处理后还是包含暴露的css样式则直接插入它的text

      if (isCssStyle && pasteFilterStyle) {
        editor.cmd["do"]('insertHTML', "" + formatHtml(pasteText)); // text
      } else {
        var html = formatHtml(pasteHtml); // 如果是段落，为了兼容 firefox 和 chrome差异，自定义插入

        if (isParagraphHtml(html)) {
          var $textEl = editor.$textElem;
          editor.cmd["do"]('insertHTML', html); // 全选的情况下覆盖原有内容

          if ($textEl.equal($selectionElem)) {
            // 更新选区
            editor.selection.createEmptyRange();
            return;
          } // 如果选区是空段落，移除空段落


          if (isEmptyParagraph($topElem)) {
            $topElem.remove();
          } // 当复制粘贴的内容是 段落 的时候
          // 这里会将光标移动到编辑区域的末端
          // 如果是作为重置光标来使用的，应该是将光标移动到插入的 html 的末端才对
          // 注释后并没有发现光标的位置不正常
          // 移动光标到编辑器最后的位置
          // const lastEl = $textEl.last()
          // if (!lastEl?.length) return
          // editor.selection.moveCursor(lastEl.elems[0])

        } else {
          editor.cmd["do"]('insertHTML', html); // html
        }
      }
    } catch (ex) {
      // 此时使用 pasteText 来兼容一下
      if (pasteTextHandle && util_1.isFunction(pasteTextHandle)) {
        // 用户自定义过滤处理粘贴内容
        pasteText = '' + (pasteTextHandle(pasteText) || '');
      }

      editor.cmd["do"]('insertHTML', "" + formatHtml(pasteText)); // text
    }
  }

  pasteEvents.push(fn);
}

exports["default"] = pasteTextHtml;

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 将粘贴的 html 字符串，转换为正确、简洁的 html 代码。剔除不必要的标签和属性。
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _trim = _interopRequireDefault(__webpack_require__(19));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _includes = _interopRequireDefault(__webpack_require__(55));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var tags_1 = __webpack_require__(297);

var simplehtmlparser_js_1 = tslib_1.__importDefault(__webpack_require__(301));
/**
 * 过滤掉空 span
 * @param html html
 */


function filterEmptySpan(html) {
  var regForReplace = /<span>.*?<\/span>/gi;
  var regForMatch = /<span>(.*?)<\/span>/;
  return html.replace(regForReplace, function (s) {
    // s 是单个 span ，如 <span>文字</span>
    var result = s.match(regForMatch);
    if (result == null) return '';
    return result[1];
  });
}
/**
 * 是否忽略标签
 * @param tag tag
 * @param ignoreImg 是否忽略 img 标签
 */


function isIgnoreTag(tag, ignoreImg) {
  var _context;

  tag = (0, _trim["default"])(_context = tag.toLowerCase()).call(_context); // 忽略的标签

  if (tags_1.IGNORE_TAGS.has(tag)) {
    return true;
  } // 是否忽略图片


  if (ignoreImg) {
    if (tag === 'img') {
      return true;
    }
  }

  return false;
}
/**
 * 为 tag 生成 html 字符串，开始部分
 * @param tag tag
 * @param attrs 属性
 */


function genStartHtml(tag, attrs) {
  var result = ''; // tag < 符号

  result = "<" + tag; // 拼接属性

  var attrStrArr = [];
  (0, _forEach["default"])(attrs).call(attrs, function (attr) {
    attrStrArr.push(attr.name + "=\"" + attr.value + "\"");
  });

  if (attrStrArr.length > 0) {
    result = result + ' ' + attrStrArr.join(' ');
  } // tag > 符号


  var isEmpty = tags_1.EMPTY_TAGS.has(tag); // 没有子节点或文本的标签，如 img

  result = result + (isEmpty ? '/' : '') + '>';
  return result;
}
/**
 * 为 tag 生成 html 字符串，结尾部分
 * @param tag tag
 */


function genEndHtml(tag) {
  return "</" + tag + ">";
}
/**
 * 处理粘贴的 html
 * @param html html 字符串
 * @param filterStyle 是否过滤 style 样式
 * @param ignoreImg 是否忽略 img 标签
 */


function parseHtml(html, filterStyle, ignoreImg) {
  if (filterStyle === void 0) {
    filterStyle = true;
  }

  if (ignoreImg === void 0) {
    ignoreImg = false;
  }

  var resultArr = []; // 存储结果，数组形式，最后再 join
  // 当前正在处理的标签，以及记录和清除的方法

  var CUR_TAG = '';

  function markTagStart(tag) {
    tag = (0, _trim["default"])(tag).call(tag);
    if (!tag) return;
    if (tags_1.EMPTY_TAGS.has(tag)) return; // 内容为空的标签，如 img ，不用记录

    CUR_TAG = tag;
  }

  function markTagEnd() {
    CUR_TAG = '';
  } // 能通过 'text/html' 格式获取 html


  var htmlParser = new simplehtmlparser_js_1["default"]();
  htmlParser.parse(html, {
    startElement: function startElement(tag, attrs) {
      // 首先，标记开始
      markTagStart(tag); // 忽略的标签

      if (isIgnoreTag(tag, ignoreImg)) {
        return;
      } // 找出该标签必须的属性（其他的属性忽略）


      var necessaryAttrKeys = tags_1.NECESSARY_ATTRS.get(tag) || [];
      var attrsForTag = [];
      (0, _forEach["default"])(attrs).call(attrs, function (attr) {
        // 属性名
        var name = attr.name; // style 单独处理

        if (name === 'style') {
          // 保留 style 样式
          if (!filterStyle) {
            attrsForTag.push(attr);
          }

          return;
        } // 除了 style 之外的其他属性


        if ((0, _includes["default"])(necessaryAttrKeys).call(necessaryAttrKeys, name) === false) {
          // 不是必须的属性，忽略
          return;
        }

        attrsForTag.push(attr);
      }); // 拼接为 HTML 标签

      var html = genStartHtml(tag, attrsForTag);
      resultArr.push(html);
    },
    characters: function characters(str) {
      if (!str) {
        return;
      } // 忽略的标签


      if (isIgnoreTag(CUR_TAG, ignoreImg)) return;
      resultArr.push(str);
    },
    endElement: function endElement(tag) {
      // 忽略的标签
      if (isIgnoreTag(tag, ignoreImg)) {
        return;
      } // 拼接为 HTML 标签


      var html = genEndHtml(tag);
      resultArr.push(html); // 最后，标记结束

      markTagEnd();
    },
    comment: function comment(str) {
      /* 注释，不做处理 */
    }
  });
  var result = resultArr.join(''); // 转换为字符串
  // 过滤掉空 span 标签

  result = filterEmptySpan(result);
  return result;
}

exports["default"] = parseHtml;

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 粘贴相关的 tags
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _set = _interopRequireDefault(__webpack_require__(129));

var _map = _interopRequireDefault(__webpack_require__(120));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.TOP_LEVEL_TAGS = exports.EMPTY_TAGS = exports.NECESSARY_ATTRS = exports.IGNORE_TAGS = void 0; // 忽略的标签

exports.IGNORE_TAGS = new _set["default"](['doctype', '!doctype', 'html', 'head', 'meta', 'body', 'script', 'style', 'link', 'frame', 'iframe', 'title', 'svg', 'center', 'o:p' // 复制 word 内容包含 o:p 标签
]); // 指定标签必要的属性

exports.NECESSARY_ATTRS = new _map["default"]([['img', ['src', 'alt']], ['a', ['href', 'target']], ['td', ['colspan', 'rowspan']], ['th', ['colspan', 'rowspan']]]); // 没有子节点或文本的标签

exports.EMPTY_TAGS = new _set["default"](['area', 'base', 'basefont', 'br', 'col', 'hr', 'img', 'input', 'isindex', 'embed']); // 编辑区域顶级节点

exports.TOP_LEVEL_TAGS = new _set["default"](['h1', 'h2', 'h3', 'h4', 'h5', 'p', 'ul', 'ol', 'table', 'blockquote', 'pre', 'hr', 'form']);

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(299);

module.exports = parent;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(300);
__webpack_require__(69);
__webpack_require__(51);
__webpack_require__(52);
var path = __webpack_require__(10);

module.exports = path.Set;


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

var collection = __webpack_require__(121);
var collectionStrong = __webpack_require__(123);

// `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects
module.exports = collection('Set', function (init) {
  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),
/* 301 */
/***/ (function(module, exports) {

// Copyright 2004 Erik Arvidsson. All Rights Reserved.
//
// This code is triple licensed using Apache Software License 2.0,
// Mozilla Public License or GNU Public License
//
///////////////////////////////////////////////////////////////////////////////
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License.  You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0
//
///////////////////////////////////////////////////////////////////////////////
//
// The contents of this file are subject to the Mozilla Public License
// Version 1.1 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
//
// Software distributed under the License is distributed on an "AS IS"
// basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
// License for the specific language governing rights and limitations
// under the License.
//
// The Original Code is Simple HTML Parser.
//
// The Initial Developer of the Original Code is Erik Arvidsson.
// Portions created by Erik Arvidssson are Copyright (C) 2004. All Rights
// Reserved.
//
///////////////////////////////////////////////////////////////////////////////
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
//
///////////////////////////////////////////////////////////////////////////////

/*
var handler ={
	startElement:   function (sTagName, oAttrs) {},
	endElement:     function (sTagName) {},
    characters:		function (s) {},
    comment:		function (s) {}
};
*/

function SimpleHtmlParser() {}

SimpleHtmlParser.prototype = {
    handler: null,

    // regexps

    startTagRe: /^<([^>\s\/]+)((\s+[^=>\s]+(\s*=\s*((\"[^"]*\")|(\'[^']*\')|[^>\s]+))?)*)\s*\/?\s*>/m,
    endTagRe: /^<\/([^>\s]+)[^>]*>/m,
    attrRe: /([^=\s]+)(\s*=\s*((\"([^"]*)\")|(\'([^']*)\')|[^>\s]+))?/gm,

    parse: function (s, oHandler) {
        if (oHandler) this.contentHandler = oHandler;
        var lm, rc, index;
        var treatAsChars = false;
        var oThis = this;
        while (s.length > 0) {
            // Comment
            if (s.substring(0, 4) == '<!--') {
                index = s.indexOf('-->');
                if (index != -1) {
                    this.contentHandler.comment(s.substring(4, index));
                    s = s.substring(index + 3);
                    treatAsChars = false;
                } else {
                    treatAsChars = true;
                }
            }

            // end tag
            else if (s.substring(0, 2) == '</') {
                if (this.endTagRe.test(s)) {
                    lm = RegExp.lastMatch;
                    rc = RegExp.rightContext;

                    lm.replace(this.endTagRe, function () {
                        return oThis.parseEndTag.apply(oThis, arguments)
                    });

                    s = rc;
                    treatAsChars = false;
                } else {
                    treatAsChars = true;
                }
            }
            // start tag
            else if (s.charAt(0) == '<') {
                if (this.startTagRe.test(s)) {
                    lm = RegExp.lastMatch;
                    rc = RegExp.rightContext;

                    lm.replace(this.startTagRe, function () {
                        return oThis.parseStartTag.apply(oThis, arguments)
                    });

                    s = rc;
                    treatAsChars = false;
                } else {
                    treatAsChars = true;
                }
            }

            if (treatAsChars) {
                index = s.indexOf('<');
                if (index == -1) {
                    this.contentHandler.characters(s);
                    s = '';
                } else {
                    this.contentHandler.characters(s.substring(0, index));
                    s = s.substring(index);
                }
            }

            treatAsChars = true;
        }
    },

    parseStartTag: function (sTag, sTagName, sRest) {
        var attrs = this.parseAttributes(sTagName, sRest);
        this.contentHandler.startElement(sTagName, attrs);
    },

    parseEndTag: function (sTag, sTagName) {
        this.contentHandler.endElement(sTagName);
    },

    parseAttributes: function (sTagName, s) {
        var oThis = this;
        var attrs = [];
        s.replace(this.attrRe, function (a0, a1, a2, a3, a4, a5, a6, a7) {
            attrs.push(oThis.parseAttribute(sTagName, a0, a1, a2, a3, a4, a5, a6, a7));
        });
        return attrs
    },

    parseAttribute: function (sTagName, sAttribute, sName) {
        var value = '';
        if (arguments[7]) value = arguments[8];
        else if (arguments[5]) value = arguments[6];
        else if (arguments[3]) value = arguments[4];

        var empty = !value && !arguments[3];
        return { name: sName, value: empty ? null : value }
    },
};

// export default SimpleHtmlParser
module.exports = SimpleHtmlParser;


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 图片点击后选区更新到img的位置
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/**
 * 图片点击后选区更新到img的位置
 * @param editor 编辑器实例
 * @param imgClickEvents delete 键 up 时的 hooks
 */

function imgClickActive(editor, imgClickEvents) {
  function clickFn($img) {
    editor.selection.createRangeByElem($img);
    editor.selection.restoreSelection();
  }

  imgClickEvents.push(clickFn);
}

exports["default"] = imgClickActive;

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 获取子元素的 JSON 格式数据
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 获取子元素的 JSON 格式数据
 * @param $elem DOM 节点
 */


function getChildrenJSON($elem) {
  var result = []; // 存储结果

  var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点

  (0, _forEach["default"])($children).call($children, function (curElem) {
    var elemResult;
    var nodeType = curElem.nodeType; // 文本节点

    if (nodeType === 3) {
      elemResult = curElem.textContent || '';
      elemResult = util_1.replaceHtmlSymbol(elemResult);
    } // 普通 DOM 节点


    if (nodeType === 1) {
      elemResult = {};
      elemResult = elemResult; // tag

      elemResult.tag = curElem.nodeName.toLowerCase(); // attr

      var attrData = [];
      var attrList = curElem.attributes;
      var attrListLength = attrList.length || 0;

      for (var i = 0; i < attrListLength; i++) {
        var attr = attrList[i];
        attrData.push({
          name: attr.name,
          value: attr.value
        });
      }

      elemResult.attrs = attrData; // children（递归）

      elemResult.children = getChildrenJSON(dom_core_1["default"](curElem));
    }

    if (elemResult) {
      result.push(elemResult);
    }
  });
  return result;
}

exports["default"] = getChildrenJSON;

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 从nodeList json格式中遍历生成dom元素
 * @author zhengwenjian
 */

var _interopRequireDefault = __webpack_require__(0);

var _typeof2 = _interopRequireDefault(__webpack_require__(94));

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

function getHtmlByNodeList(nodeList, parent) {
  if (parent === void 0) {
    parent = document.createElement('div');
  } // 设置一个父节点存储所有子节点


  var root = parent; // 遍历节点JSON

  (0, _forEach["default"])(nodeList).call(nodeList, function (item) {
    var elem; // 当为文本节点时

    if (typeof item === 'string') {
      elem = document.createTextNode(item);
    } // 当为普通节点时


    if ((0, _typeof2["default"])(item) === 'object') {
      var _context;

      elem = document.createElement(item.tag);
      (0, _forEach["default"])(_context = item.attrs).call(_context, function (attr) {
        dom_core_1["default"](elem).attr(attr.name, attr.value);
      }); // 有子节点时递归将子节点加入当前节点

      if (item.children && item.children.length > 0) {
        getHtmlByNodeList(item.children, elem.getRootNode());
      }
    }

    elem && root.appendChild(elem);
  });
  return dom_core_1["default"](root);
}

exports["default"] = getHtmlByNodeList;

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description Menus 菜单栏 入口文件
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _isArray = _interopRequireDefault(__webpack_require__(91));

var _filter = _interopRequireDefault(__webpack_require__(74));

var _includes = _interopRequireDefault(__webpack_require__(55));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _entries = _interopRequireDefault(__webpack_require__(130));

var _some = _interopRequireDefault(__webpack_require__(131));

var _setTimeout2 = _interopRequireDefault(__webpack_require__(45));

var _bind = _interopRequireDefault(__webpack_require__(56));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var index_1 = tslib_1.__importDefault(__webpack_require__(119));

var menu_list_1 = tslib_1.__importDefault(__webpack_require__(314));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3)); // import { MenuActive } from './menu-constructors/Menu'


var Menus =
/** @class */
function () {
  function Menus(editor) {
    this.editor = editor;
    this.menuList = [];
    this.constructorList = menu_list_1["default"]; // 所有菜单构造函数的列表
  }
  /**
   * 自定义添加菜单
   * @param key 菜单 key ，和 editor.config.menus 对应
   * @param Menu 菜单构造函数
   */


  Menus.prototype.extend = function (key, Menu) {
    if (!Menu || typeof Menu !== 'function') return;
    this.constructorList[key] = Menu;
  }; // 初始化菜单


  Menus.prototype.init = function () {
    var _context, _context2;

    var _this = this; // 从用户配置的 menus 入手，看需要初始化哪些菜单


    var config = this.editor.config; // 排除exclude包含的菜单

    var excludeMenus = config.excludeMenus;
    if ((0, _isArray["default"])(excludeMenus) === false) excludeMenus = [];
    config.menus = (0, _filter["default"])(_context = config.menus).call(_context, function (key) {
      return (0, _includes["default"])(excludeMenus).call(excludeMenus, key) === false;
    });
    (0, _forEach["default"])(_context2 = config.menus).call(_context2, function (menuKey) {
      var MenuConstructor = _this.constructorList[menuKey]; // 暂用 any ，后面再替换

      _this._initMenuList(menuKey, MenuConstructor);
    }); // 全局注册

    for (var _i = 0, _a = (0, _entries["default"])(index_1["default"].globalCustomMenuConstructorList); _i < _a.length; _i++) {
      var _b = _a[_i],
          menuKey = _b[0],
          menuFun = _b[1];
      var MenuConstructor = menuFun; // 暂用 any ，后面再替换

      this._initMenuList(menuKey, MenuConstructor);
    } // 渲染 DOM


    this._addToToolbar();

    if (config.showMenuTooltips) {
      // 添加菜单栏tooltips
      this._bindMenuTooltips();
    }
  };
  /**
   * 创建 menu 实例，并放到 menuList 中
   * @param menuKey 菜单 key ，和 editor.config.menus 对应
   * @param MenuConstructor 菜单构造函数
   */


  Menus.prototype._initMenuList = function (menuKey, MenuConstructor) {
    var _context3;

    if (MenuConstructor == null || typeof MenuConstructor !== 'function') {
      // 必须是 class
      return;
    }

    if ((0, _some["default"])(_context3 = this.menuList).call(_context3, function (menu) {
      return menu.key === menuKey;
    })) {
      console.warn('菜单名称重复:' + menuKey);
    } else {
      var m = new MenuConstructor(this.editor);
      m.key = menuKey;
      this.menuList.push(m);
    }
  }; // 绑定菜单栏tooltips


  Menus.prototype._bindMenuTooltips = function () {
    var editor = this.editor;
    var $toolbarElem = editor.$toolbarElem;
    var config = editor.config; // 若isTooltipShowTop为true则伪元素为下三角，反之为上三角

    var menuTooltipPosition = config.menuTooltipPosition;
    var $tooltipEl = dom_core_1["default"]("<div class=\"w-e-menu-tooltip w-e-menu-tooltip-" + menuTooltipPosition + "\">\n            <div class=\"w-e-menu-tooltip-item-wrapper\">\n              <div></div>\n            </div>\n          </div>");
    $tooltipEl.css('visibility', 'hidden');
    $toolbarElem.append($tooltipEl); // 设置 z-index

    $tooltipEl.css('z-index', editor.zIndex.get('tooltip'));
    var showTimeoutId = 0; // 定时器，延时200ms显示tooltips
    // 清空计时器

    function clearShowTimeoutId() {
      if (showTimeoutId) {
        clearTimeout(showTimeoutId);
      }
    } // 隐藏tooltip


    function hide() {
      clearShowTimeoutId();
      $tooltipEl.css('visibility', 'hidden');
    } // 事件监听


    $toolbarElem.on('mouseover', function (e) {
      var target = e.target;
      var $target = dom_core_1["default"](target);
      var title;
      var $menuEl;

      if ($target.isContain($toolbarElem)) {
        hide();
        return;
      }

      if ($target.parentUntil('.w-e-droplist') != null) {
        // 处于droplist中时隐藏
        hide();
      } else {
        if ($target.attr('data-title')) {
          title = $target.attr('data-title');
          $menuEl = $target;
        } else {
          var $parent = $target.parentUntil('.w-e-menu');

          if ($parent != null) {
            title = $parent.attr('data-title');
            $menuEl = $parent;
          }
        }
      }

      if (title && $menuEl) {
        clearShowTimeoutId();
        var targetOffset = $menuEl.getOffsetData();
        $tooltipEl.text(editor.i18next.t('menus.title.' + title));
        var tooltipOffset = $tooltipEl.getOffsetData();
        var left = targetOffset.left + targetOffset.width / 2 - tooltipOffset.width / 2;
        $tooltipEl.css('left', left + "px"); // 2. 高度设置

        if (menuTooltipPosition === 'up') {
          $tooltipEl.css('top', targetOffset.top - tooltipOffset.height - 8 + "px");
        } else if (menuTooltipPosition === 'down') {
          $tooltipEl.css('top', targetOffset.top + targetOffset.height + 8 + "px");
        }

        showTimeoutId = (0, _setTimeout2["default"])(function () {
          $tooltipEl.css('visibility', 'visible');
        }, 200);
      } else {
        hide();
      }
    }).on('mouseleave', function () {
      hide();
    });
  }; // 添加到菜单栏


  Menus.prototype._addToToolbar = function () {
    var _context4;

    var editor = this.editor;
    var $toolbarElem = editor.$toolbarElem; // 遍历添加到 DOM

    (0, _forEach["default"])(_context4 = this.menuList).call(_context4, function (menu) {
      var $elem = menu.$elem;

      if ($elem) {
        $toolbarElem.append($elem);
      }
    });
  };
  /**
   * 获取菜单对象
   * @param 菜单名称 小写
   * @return Menus 菜单对象
   */


  Menus.prototype.menuFind = function (key) {
    var menuList = this.menuList;

    for (var i = 0, l = menuList.length; i < l; i++) {
      if (menuList[i].key === key) return menuList[i];
    }

    return menuList[0];
  };
  /**
   * @description 修改菜单激活状态
   */


  Menus.prototype.changeActive = function () {
    var _context5;

    (0, _forEach["default"])(_context5 = this.menuList).call(_context5, function (menu) {
      var _context6;

      (0, _setTimeout2["default"])((0, _bind["default"])(_context6 = menu.tryChangeActive).call(_context6, menu), 100); // 暂用 any ，后面再替换
    });
  };

  return Menus;
}();

exports["default"] = Menus;

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(307);

module.exports = parent;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(308);
var path = __webpack_require__(10);

module.exports = path.Object.entries;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $entries = __webpack_require__(309).entries;

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
$({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(15);
var objectKeys = __webpack_require__(63);
var toIndexedObject = __webpack_require__(27);
var propertyIsEnumerable = __webpack_require__(58).f;

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(311);

module.exports = parent;


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

var some = __webpack_require__(312);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.some;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.some) ? some : own;
};


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(313);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').some;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $some = __webpack_require__(29).some;
var arrayMethodIsStrict = __webpack_require__(71);

var STRICT_METHOD = arrayMethodIsStrict('some');

// `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 所有菜单的构造函数
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var index_1 = tslib_1.__importDefault(__webpack_require__(315));

var index_2 = tslib_1.__importDefault(__webpack_require__(316));

var index_3 = tslib_1.__importDefault(__webpack_require__(321));

var index_4 = tslib_1.__importDefault(__webpack_require__(326));

var index_5 = tslib_1.__importDefault(__webpack_require__(327));

var index_6 = tslib_1.__importDefault(__webpack_require__(328));

var index_7 = tslib_1.__importDefault(__webpack_require__(329));

var font_size_1 = tslib_1.__importDefault(__webpack_require__(331));

var index_8 = tslib_1.__importDefault(__webpack_require__(333));

var index_9 = tslib_1.__importDefault(__webpack_require__(334));

var index_10 = tslib_1.__importDefault(__webpack_require__(337));

var index_11 = tslib_1.__importDefault(__webpack_require__(338));

var index_12 = tslib_1.__importDefault(__webpack_require__(339));

var index_13 = tslib_1.__importDefault(__webpack_require__(350));

var index_14 = tslib_1.__importDefault(__webpack_require__(364));

var index_15 = tslib_1.__importDefault(__webpack_require__(368));

var index_16 = tslib_1.__importDefault(__webpack_require__(136));

var index_17 = tslib_1.__importDefault(__webpack_require__(377));

var index_18 = tslib_1.__importDefault(__webpack_require__(379));

var index_19 = tslib_1.__importDefault(__webpack_require__(380));

var index_20 = tslib_1.__importDefault(__webpack_require__(381));

var code_1 = tslib_1.__importDefault(__webpack_require__(401));

var index_21 = tslib_1.__importDefault(__webpack_require__(406));

var todo_1 = tslib_1.__importDefault(__webpack_require__(409));

exports["default"] = {
  bold: index_1["default"],
  head: index_2["default"],
  italic: index_4["default"],
  link: index_3["default"],
  underline: index_5["default"],
  strikeThrough: index_6["default"],
  fontName: index_7["default"],
  fontSize: font_size_1["default"],
  justify: index_8["default"],
  quote: index_9["default"],
  backColor: index_10["default"],
  foreColor: index_11["default"],
  video: index_12["default"],
  image: index_13["default"],
  indent: index_14["default"],
  emoticon: index_15["default"],
  list: index_16["default"],
  lineHeight: index_17["default"],
  undo: index_18["default"],
  redo: index_19["default"],
  table: index_20["default"],
  code: code_1["default"],
  splitLine: index_21["default"],
  todo: todo_1["default"]
};

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 加粗
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Bold =
/** @class */
function (_super) {
  tslib_1.__extends(Bold, _super);

  function Bold(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u52A0\u7C97\">\n                <i class=\"w-e-icon-bold\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 点击事件
   */


  Bold.prototype.clickHandler = function () {
    var editor = this.editor;
    var isSelectEmpty = editor.selection.isSelectionEmpty();

    if (isSelectEmpty) {
      // 选区范围是空的，插入并选中一个“空白”
      editor.selection.createEmptyRange();
    } // 执行 bold 命令


    editor.cmd["do"]('bold');

    if (isSelectEmpty) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  Bold.prototype.tryChangeActive = function () {
    var editor = this.editor;

    if (editor.cmd.queryCommandState('bold')) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Bold;
}(BtnMenu_1["default"]);

exports["default"] = Bold;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 标题
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

var _find = _interopRequireDefault(__webpack_require__(30));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _stringify = _interopRequireDefault(__webpack_require__(317));

var _includes = _interopRequireDefault(__webpack_require__(55));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var const_1 = __webpack_require__(7);

var Head =
/** @class */
function (_super) {
  tslib_1.__extends(Head, _super);

  function Head(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="标题"><i class="w-e-icon-header"></i></div>');
    var dropListConf = {
      width: 100,
      title: '设置标题',
      type: 'list',
      list: [{
        $elem: dom_core_1["default"]('<h1>H1</h1>'),
        value: '<h1>'
      }, {
        $elem: dom_core_1["default"]('<h2>H2</h2>'),
        value: '<h2>'
      }, {
        $elem: dom_core_1["default"]('<h3>H3</h3>'),
        value: '<h3>'
      }, {
        $elem: dom_core_1["default"]('<h4>H4</h4>'),
        value: '<h4>'
      }, {
        $elem: dom_core_1["default"]('<h5>H5</h5>'),
        value: '<h5>'
      }, {
        $elem: dom_core_1["default"]("<p>" + editor.i18next.t('menus.dropListMenu.head.正文') + "</p>"),
        value: '<p>'
      }],
      clickHandler: function clickHandler(value) {
        // 注意 this 是指向当前的 Head 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, dropListConf) || this;
    var onCatalogChange = editor.config.onCatalogChange; // 未配置目录change监听回调时不运行下面操作

    if (onCatalogChange) {
      _this.oldCatalogs = [];

      _this.addListenerCatalog(); // 监听文本框编辑时的大纲信息


      _this.getCatalogs(); // 初始有值的情况获取一遍大纲信息

    }

    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  Head.prototype.command = function (value) {
    var editor = this.editor;
    var $selectionElem = editor.selection.getSelectionContainerElem();

    if ($selectionElem && editor.$textElem.equal($selectionElem)) {
      // 不能选中多行来设置标题，否则会出现问题
      // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期
      this.setMultilineHead(value);
    } else {
      var _context;

      // 选中内容包含序列，code，表格，分割线时不处理
      if ((0, _indexOf["default"])(_context = ['OL', 'UL', 'LI', 'TABLE', 'TH', 'TR', 'CODE', 'HR']).call(_context, dom_core_1["default"]($selectionElem).getNodeName()) > -1) {
        return;
      }

      editor.cmd["do"]('formatBlock', value);
    } // 标题设置成功且不是<p>正文标签就配置大纲id


    value !== '<p>' && this.addUidForSelectionElem();
  };
  /**
   * 为标题设置大纲
   */


  Head.prototype.addUidForSelectionElem = function () {
    var editor = this.editor;
    var tag = editor.selection.getSelectionContainerElem();
    var id = util_1.getRandomCode(); // 默认五位数id

    dom_core_1["default"](tag).attr('id', id);
  };
  /**
   * 监听change事件来返回大纲信息
   */


  Head.prototype.addListenerCatalog = function () {
    var _this = this;

    var editor = this.editor;
    editor.txt.eventHooks.changeEvents.push(function () {
      _this.getCatalogs();
    });
  };
  /**
   * 获取大纲数组
   */


  Head.prototype.getCatalogs = function () {
    var editor = this.editor;
    var $textElem = this.editor.$textElem;
    var onCatalogChange = editor.config.onCatalogChange;
    var elems = (0, _find["default"])($textElem).call($textElem, 'h1,h2,h3,h4,h5');
    var catalogs = [];
    (0, _forEach["default"])(elems).call(elems, function (elem, index) {
      var $elem = dom_core_1["default"](elem);
      var id = $elem.attr('id');
      var tag = $elem.getNodeName();
      var text = $elem.text();

      if (!id) {
        id = util_1.getRandomCode();
        $elem.attr('id', id);
      } // 标题为空的情况不生成目录


      if (!text) return;
      catalogs.push({
        tag: tag,
        id: id,
        text: text
      });
    }); // 旧目录和新目录对比是否相等，不相等则运行回调并保存新目录到旧目录变量，以方便下一次对比

    if ((0, _stringify["default"])(this.oldCatalogs) !== (0, _stringify["default"])(catalogs)) {
      this.oldCatalogs = catalogs;
      onCatalogChange && onCatalogChange(catalogs);
    }
  };
  /**
   * 设置选中的多行标题
   * @param value  需要执行的命令值
   */


  Head.prototype.setMultilineHead = function (value) {
    var _this = this;

    var _a, _b;

    var editor = this.editor;
    var $selection = editor.selection; // 初始选区的父节点

    var containerElem = (_a = $selection.getSelectionContainerElem()) === null || _a === void 0 ? void 0 : _a.elems[0]; // 白名单：用户选区里如果有该元素则不进行转换

    var _WHITE_LIST = ['IMG', 'VIDEO', 'TABLE', 'TH', 'TR', 'UL', 'OL', 'PRE', 'HR', 'BLOCKQUOTE']; // 获取选中的首、尾元素

    var startElem = dom_core_1["default"]($selection.getSelectionStartElem());
    var endElem = dom_core_1["default"]($selection.getSelectionEndElem()); // 判断用户选中元素是否为最后一个空元素，如果是将endElem指向上一个元素

    if (endElem.elems[0].outerHTML === dom_core_1["default"](const_1.EMPTY_P).elems[0].outerHTML && !endElem.elems[0].nextSibling) {
      endElem = endElem.prev();
    } // 存放选中的所有元素


    var cacheDomList = [];
    cacheDomList.push(startElem.getNodeTop(editor)); // 选中首尾元素在父级下的坐标

    var indexList = []; // 选区共同祖先元素的所有子节点

    var childList = (_b = $selection.getRange()) === null || _b === void 0 ? void 0 : _b.commonAncestorContainer.childNodes; // 找到选区的首尾元素的下标，方便最后恢复选区

    childList === null || childList === void 0 ? void 0 : (0, _forEach["default"])(childList).call(childList, function (item, index) {
      if (item === cacheDomList[0].getNode()) {
        indexList.push(index);
      }

      if (item === endElem.getNodeTop(editor).getNode()) {
        indexList.push(index);
      }
    }); // 找到首尾元素中间所包含的所有dom

    var i = 0; // 数组中的当前元素不等于选区最后一个节点时循环寻找中间节点

    while (cacheDomList[i].getNode() !== endElem.getNodeTop(editor).getNode()) {
      // 严谨性判断，是否元素为空
      if (!cacheDomList[i].elems[0]) return;
      var d = dom_core_1["default"](cacheDomList[i].next().getNode());
      cacheDomList.push(d);
      i++;
    } // 将选区内的所有子节点进行遍历生成对应的标签


    cacheDomList === null || cacheDomList === void 0 ? void 0 : (0, _forEach["default"])(cacheDomList).call(cacheDomList, function (_node, index) {
      // 判断元素是否含有白名单内的标签元素
      if (!_this.hasTag(_node, _WHITE_LIST)) {
        var $h = dom_core_1["default"](value);

        var $parentNode = _node.parent().getNode(); // 设置标签内容


        $h.html("" + _node.html()); // 插入生成的新标签

        $parentNode.insertBefore($h.getNode(), _node.getNode()); // 移除原有的标签

        _node.remove();
      }
    }); // 重新设置选区起始位置，保留拖蓝区域

    $selection.createRangeByElems(containerElem.children[indexList[0]], containerElem.children[indexList[1]]);
  };
  /**
   * 是否含有某元素
   * @param elem 需要检查的元素
   * @param whiteList 白名单
   */


  Head.prototype.hasTag = function (elem, whiteList) {
    var _this = this;

    var _a;

    if (!elem) return false;
    if ((0, _includes["default"])(whiteList).call(whiteList, elem === null || elem === void 0 ? void 0 : elem.getNodeName())) return true;
    var _flag = false;
    (_a = elem.children()) === null || _a === void 0 ? void 0 : (0, _forEach["default"])(_a).call(_a, function (child) {
      _flag = _this.hasTag(dom_core_1["default"](child), whiteList);
    });
    return _flag;
  };
  /**
   * 尝试改变菜单激活（高亮）状态
   */


  Head.prototype.tryChangeActive = function () {
    var editor = this.editor;
    var reg = /^h/i;
    var cmdValue = editor.cmd.queryCommandValue('formatBlock');

    if (reg.test(cmdValue)) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Head;
}(DropListMenu_1["default"]);

exports["default"] = Head;

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(318);

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(319);

module.exports = parent;


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(320);
var core = __webpack_require__(10);

// eslint-disable-next-line es/no-json -- safe
if (!core.JSON) core.JSON = { stringify: JSON.stringify };

// eslint-disable-next-line no-unused-vars -- required for `.length`
module.exports = function stringify(it, replacer, space) {
  return core.JSON.stringify.apply(null, arguments);
};


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var getBuiltIn = __webpack_require__(28);
var fails = __webpack_require__(12);

var $stringify = getBuiltIn('JSON', 'stringify');
var re = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;

var fix = function (match, offset, string) {
  var prev = string.charAt(offset - 1);
  var next = string.charAt(offset + 1);
  if ((low.test(match) && !hi.test(next)) || (hi.test(match) && !low.test(prev))) {
    return '\\u' + match.charCodeAt(0).toString(16);
  } return match;
};

var FORCED = fails(function () {
  return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
    || $stringify('\uDEAD') !== '"\\udead"';
});

if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  // https://github.com/tc39/proposal-well-formed-stringify
  $({ target: 'JSON', stat: true, forced: FORCED }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var result = $stringify.apply(null, arguments);
      return typeof result == 'string' ? result.replace(re, fix) : result;
    }
  });
}


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 链接 菜单
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var create_panel_conf_1 = tslib_1.__importDefault(__webpack_require__(322));

var is_active_1 = tslib_1.__importDefault(__webpack_require__(133));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var index_1 = tslib_1.__importDefault(__webpack_require__(324));

var Link =
/** @class */
function (_super) {
  tslib_1.__extends(Link, _super);

  function Link(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="链接"><i class="w-e-icon-link"></i></div>');
    _this = _super.call(this, $elem, editor) || this; // 绑定事件，如点击链接时，可以查看链接

    index_1["default"](editor);
    return _this;
  }
  /**
   * 菜单点击事件
   */


  Link.prototype.clickHandler = function () {
    var editor = this.editor;
    var $linkElem;

    if (this.isActive) {
      // 菜单被激活，说明选区在链接里
      $linkElem = editor.selection.getSelectionContainerElem();

      if (!$linkElem) {
        return;
      } // 弹出 panel


      this.createPanel($linkElem.text(), $linkElem.attr('href'));
    } else {
      // 菜单未被激活，说明选区不在链接里
      if (editor.selection.isSelectionEmpty()) {
        // 选区是空的，未选中内容
        this.createPanel('', '');
      } else {
        // 选中内容了
        this.createPanel(editor.selection.getSelectionText(), '');
      }
    }
  };
  /**
   * 创建 panel
   * @param text 文本
   * @param link 链接
   */


  Link.prototype.createPanel = function (text, link) {
    var conf = create_panel_conf_1["default"](this.editor, text, link);
    var panel = new Panel_1["default"](this, conf);
    panel.create();
  };
  /**
   * 尝试修改菜单 active 状态
   */


  Link.prototype.tryChangeActive = function () {
    var editor = this.editor;

    if (is_active_1["default"](editor)) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Link;
}(PanelMenu_1["default"]);

exports["default"] = Link;

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description link 菜单 panel tab 配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var is_active_1 = tslib_1.__importDefault(__webpack_require__(133));

var util_2 = __webpack_require__(323);

function default_1(editor, text, link) {
  // panel 中需要用到的id
  var inputLinkId = util_1.getRandom('input-link');
  var inputTextId = util_1.getRandom('input-text');
  var btnOkId = util_1.getRandom('btn-ok');
  var btnDelId = util_1.getRandom('btn-del'); // 是否显示“取消链接”

  var delBtnDisplay = is_active_1["default"](editor) ? 'inline-block' : 'none';
  var $selectedLink;
  /**
   * 选中整个链接元素
   */

  function selectLinkElem() {
    if (!is_active_1["default"](editor)) return;
    var $linkElem = editor.selection.getSelectionContainerElem();
    if (!$linkElem) return;
    editor.selection.createRangeByElem($linkElem);
    editor.selection.restoreSelection();
    $selectedLink = $linkElem; // 赋值给函数内全局变量
  }
  /**
   * 插入链接
   * @param text 文字
   * @param link 链接
   */


  function insertLink(text, link) {
    if (is_active_1["default"](editor)) {
      // 选区处于链接中，则选中整个菜单，再执行 insertHTML
      selectLinkElem();
      editor.cmd["do"]('insertHTML', "<a href=\"" + link + "\" target=\"_blank\">" + text + "</a>");
    } else {
      // 选区未处于链接中，直接插入即可
      editor.cmd["do"]('insertHTML', "<a href=\"" + link + "\" target=\"_blank\">" + text + "</a>");
    }
  }
  /**
   * 取消链接
   */


  function delLink() {
    if (!is_active_1["default"](editor)) {
      return;
    } // 选中整个链接


    selectLinkElem(); // 用文本替换链接

    var selectionText = $selectedLink.text();
    editor.cmd["do"]('insertHTML', '<span>' + selectionText + '</span>');
  }
  /**
   * 校验链接是否合法
   * @param link 链接
   */


  function checkLink(text, link) {
    //查看开发者自定义配置的返回值
    var check = editor.config.linkCheck(text, link);

    if (check === undefined) ; else if (check === true) {
      //用户通过了开发者的校验
      return true;
    } else {
      //用户未能通过开发者的校验，开发者希望我们提示这一字符串
      editor.config.customAlert(check, 'warning');
    }

    return false;
  }

  var conf = {
    width: 300,
    height: 0,
    // panel 中可包含多个 tab
    tabs: [{
      // tab 的标题
      title: editor.i18next.t('menus.panelMenus.link.链接'),
      // 模板
      tpl: "<div>\n                        <input\n                            id=\"" + inputTextId + "\"\n                            type=\"text\"\n                            class=\"block\"\n                            value=\"" + text + "\"\n                            placeholder=\"" + editor.i18next.t('menus.panelMenus.link.链接文字') + "\"/>\n                        </td>\n                        <input\n                            id=\"" + inputLinkId + "\"\n                            type=\"text\"\n                            class=\"block\"\n                            value=\"" + link + "\"\n                            placeholder=\"" + editor.i18next.t('如') + " https://...\"/>\n                        </td>\n                        <div class=\"w-e-button-container\">\n                            <button type=\"button\" id=\"" + btnOkId + "\" class=\"right\">\n                                " + editor.i18next.t('插入') + "\n                            </button>\n                            <button type=\"button\" id=\"" + btnDelId + "\" class=\"gray right\" style=\"display:" + delBtnDisplay + "\">\n                                " + editor.i18next.t('menus.panelMenus.link.取消链接') + "\n                            </button>\n                        </div>\n                    </div>",
      // 事件绑定
      events: [// 插入链接
      {
        selector: '#' + btnOkId,
        type: 'click',
        fn: function fn() {
          var _context, _context2;

          var _a, _b; // 获取选取


          editor.selection.restoreSelection();
          var topNode = editor.selection.getSelectionRangeTopNodes()[0].getNode();
          var selection = window.getSelection(); // 执行插入链接

          var $link = dom_core_1["default"]('#' + inputLinkId);
          var $text = dom_core_1["default"]('#' + inputTextId);
          var link = (0, _trim["default"])(_context = $link.val()).call(_context);
          var text = (0, _trim["default"])(_context2 = $text.val()).call(_context2);
          var html = '';
          if (selection && !(selection === null || selection === void 0 ? void 0 : selection.isCollapsed)) html = (_a = util_2.insertHtml(selection, topNode)) === null || _a === void 0 ? void 0 : (0, _trim["default"])(_a).call(_a); // 去除html的tag标签

          var htmlText = html === null || html === void 0 ? void 0 : html.replace(/<.*?>/g, '');
          var htmlTextLen = (_b = htmlText === null || htmlText === void 0 ? void 0 : htmlText.length) !== null && _b !== void 0 ? _b : 0; // 当input中的text的长度大于等于选区的文字时
          // 需要判断两者相同的长度的text内容是否相同
          // 相同则只需把多余的部分添加上去即可，否则使用input中的内容

          if (htmlTextLen <= text.length) {
            var startText = text.substring(0, htmlTextLen);
            var endText = text.substring(htmlTextLen);

            if (htmlText === startText) {
              text = html + endText;
            }
          } // 链接为空，则不插入


          if (!link) return; // 文本为空，则用链接代替

          if (!text) text = link; // 校验链接是否满足用户的规则，若不满足则不插入

          if (!checkLink(text, link)) return;
          insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭

          return true;
        }
      }, // 取消链接
      {
        selector: '#' + btnDelId,
        type: 'click',
        fn: function fn() {
          // 执行取消链接
          delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭

          return true;
        }
      }]
    } // tab end
    ] // tabs end

  };
  return conf;
}

exports["default"] = default_1;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.insertHtml = exports.createPartHtml = exports.makeHtmlString = exports.getTopNode = void 0;
/**
 * 获取除了包裹在整行区域的顶级Node
 * @param node 最外层node下的某个childNode
 * @param topText 最外层node中文本内容
 */

function getTopNode(node, topText) {
  var pointerNode = node;
  var topNode = node;

  do {
    if (pointerNode.textContent === topText) break;
    topNode = pointerNode;

    if (pointerNode.parentNode) {
      pointerNode = pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.parentNode;
    }
  } while ((pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.nodeName) !== 'P');

  return topNode;
}

exports.getTopNode = getTopNode;
/**
 * 生成html的string形式
 * @param tagName 标签名
 * @param content 需要包裹的内容
 */

function makeHtmlString(node, content) {
  var tagName = node.nodeName;
  var attr = '';

  if (node.nodeType === 3) {
    return content;
  }

  if (node.nodeType === 1) {
    var style = node.getAttribute('style');
    var face = node.getAttribute('face');
    var color = node.getAttribute('color');
    if (style) attr = attr + (" style=\"" + style + "\"");
    if (face) attr = attr + (" face=\"" + face + "\"");
    if (color) attr = attr + (" color=\"" + color + "\"");
  }

  tagName = tagName.toLowerCase();
  return "<" + tagName + attr + ">" + content + "</" + tagName + ">";
}

exports.makeHtmlString = makeHtmlString;
/**
 * 生成开始或者结束位置的html字符片段
 * @param topText 选区所在的行的文本内容
 * @param node 选区给出的node节点
 * @param startPos node文本内容选取的开始位置
 * @param endPos node文本内容选取的结束位置
 */

function createPartHtml(topText, node, startPos, endPost) {
  var _a;

  var selectionContent = (_a = node.textContent) === null || _a === void 0 ? void 0 : _a.substring(startPos, endPost);
  var pointerNode = node;
  var content = '';

  do {
    content = makeHtmlString(pointerNode, selectionContent !== null && selectionContent !== void 0 ? selectionContent : '');
    selectionContent = content;
    if (pointerNode.parentElement) pointerNode = pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.parentElement;
  } while (pointerNode.textContent !== topText);

  return content;
}

exports.createPartHtml = createPartHtml;
/**
 * 生成需要插入的html内容的字符串形式
 * @param selection 选区对象
 * @param topNode 选区所在行的顶级node节点
 */

function insertHtml(selection, topNode) {
  var _a, _b, _c, _d, _e;

  var anchorNode = selection.anchorNode,
      focusNode = selection.focusNode,
      anchorPos = selection.anchorOffset,
      focusPos = selection.focusOffset;
  var topText = (_a = topNode.textContent) !== null && _a !== void 0 ? _a : '';
  var TagArr = getContainerTag(topNode);
  var content = '';
  var startContent = '';
  var middleContent = '';
  var endContent = '';
  var startNode = anchorNode;
  var endNode = focusNode; // 用来保存 anchorNode的非p最外层节点

  var pointerNode = anchorNode; // 节点是同一个的处理

  if (anchorNode === null || anchorNode === void 0 ? void 0 : anchorNode.isEqualNode(focusNode !== null && focusNode !== void 0 ? focusNode : null)) {
    var innerContent = createPartHtml(topText, anchorNode, anchorPos, focusPos);
    innerContent = addContainer(TagArr, innerContent);
    return innerContent;
  } // 选中开始位置节点的处理


  if (anchorNode) startContent = createPartHtml(topText, anchorNode, anchorPos !== null && anchorPos !== void 0 ? anchorPos : 0); // 结束位置节点的处理

  if (focusNode) endContent = createPartHtml(topText, focusNode, 0, focusPos); // 将指针节点位置放置到开始的节点

  if (anchorNode) {
    // 获取start的非p顶级node
    startNode = getTopNode(anchorNode, topText);
  }

  if (focusNode) {
    // 获取end的非p顶级node
    endNode = getTopNode(focusNode, topText);
  } // 处于开始和结束节点位置之间的节点的处理


  pointerNode = (_b = startNode === null || startNode === void 0 ? void 0 : startNode.nextSibling) !== null && _b !== void 0 ? _b : anchorNode;

  while (!(pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.isEqualNode(endNode !== null && endNode !== void 0 ? endNode : null))) {
    var pointerNodeName = pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.nodeName;

    if (pointerNodeName === '#text') {
      middleContent = middleContent + (pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.textContent);
    } else {
      var htmlString = (_d = (_c = pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.firstChild) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.innerHTML;
      if (pointerNode) middleContent = middleContent + makeHtmlString(pointerNode, htmlString !== null && htmlString !== void 0 ? htmlString : '');
    }

    pointerNode = (_e = pointerNode === null || pointerNode === void 0 ? void 0 : pointerNode.nextSibling) !== null && _e !== void 0 ? _e : pointerNode;
  }

  content = "" + startContent + middleContent + endContent; // 增加最外层包裹标签

  content = addContainer(TagArr, content);
  return content;
}

exports.insertHtml = insertHtml;
/**
 * 获取包裹在最外层的非p Node tagName 数组
 * @param node 选区所在行的node节点
 */

function getContainerTag(node) {
  var _a;

  var topText = (_a = node.textContent) !== null && _a !== void 0 ? _a : '';
  var tagArr = [];

  while ((node === null || node === void 0 ? void 0 : node.textContent) === topText) {
    if (node.nodeName !== 'P') {
      tagArr.push(node);
    }

    node = node.childNodes[0];
  }

  return tagArr;
}
/**
 * 为内容增加包裹标签
 * @param tagArr 最外层包裹的tag数组，索引越小tag越在外面
 * @param content tag要包裹的内容
 */


function addContainer(tagArr, content) {
  (0, _forEach["default"])(tagArr).call(tagArr, function (v) {
    content = makeHtmlString(v, content);
  });
  return content;
}

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 绑定链接元素的事件，入口
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var tooltip_event_1 = tslib_1.__importDefault(__webpack_require__(325));
/**
 * 绑定事件
 * @param editor 编辑器实例
 */


function bindEvent(editor) {
  // tooltip 事件
  tooltip_event_1["default"](editor);
}

exports["default"] = bindEvent;

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description tooltip 事件
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36));
/**
 * 生成 Tooltip 的显示隐藏函数
 */


function createShowHideFn(editor) {
  var tooltip;
  /**
   * 显示 tooltip
   * @param $link 链接元素
   */

  function showLinkTooltip($link) {
    var conf = [{
      $elem: dom_core_1["default"]("<span>" + editor.i18next.t('menus.panelMenus.link.查看链接') + "</span>"),
      onClick: function onClick(editor, $link) {
        var link = $link.attr('href');
        window.open(link, '_target'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + editor.i18next.t('menus.panelMenus.link.取消链接') + "</span>"),
      onClick: function onClick(editor, $link) {
        // 选中链接元素
        editor.selection.createRangeByElem($link);
        editor.selection.restoreSelection(); // 用文字，替换链接

        var selectionText = $link.text();
        editor.cmd["do"]('insertHTML', '<span>' + selectionText + '</span>'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }]; // 创建 tooltip

    tooltip = new Tooltip_1["default"](editor, $link, conf);
    tooltip.create();
  }
  /**
   * 隐藏 tooltip
   */


  function hideLinkTooltip() {
    // 移除 tooltip
    if (tooltip) {
      tooltip.remove();
      tooltip = null;
    }
  }

  return {
    showLinkTooltip: showLinkTooltip,
    hideLinkTooltip: hideLinkTooltip
  };
}
/**
 * 绑定 tooltip 事件
 * @param editor 编辑器实例
 */


function bindTooltipEvent(editor) {
  var _a = createShowHideFn(editor),
      showLinkTooltip = _a.showLinkTooltip,
      hideLinkTooltip = _a.hideLinkTooltip; // 点击链接元素是，显示 tooltip


  editor.txt.eventHooks.linkClickEvents.push(showLinkTooltip); // 点击其他地方，或者滚动时，隐藏 tooltip

  editor.txt.eventHooks.clickEvents.push(hideLinkTooltip);
  editor.txt.eventHooks.keyupEvents.push(hideLinkTooltip);
  editor.txt.eventHooks.toolbarClickEvents.push(hideLinkTooltip);
  editor.txt.eventHooks.menuClickEvents.push(hideLinkTooltip);
  editor.txt.eventHooks.textScrollEvents.push(hideLinkTooltip);
}

exports["default"] = bindTooltipEvent;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 斜体
 * @author liuwei
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Italic =
/** @class */
function (_super) {
  tslib_1.__extends(Italic, _super);

  function Italic(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u659C\u4F53\">\n                <i class=\"w-e-icon-italic\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 点击事件
   */


  Italic.prototype.clickHandler = function () {
    var editor = this.editor;
    var isSelectEmpty = editor.selection.isSelectionEmpty();

    if (isSelectEmpty) {
      // 选区范围是空的，插入并选中一个“空白”
      editor.selection.createEmptyRange();
    } // 执行 italic 命令


    editor.cmd["do"]('italic');

    if (isSelectEmpty) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  Italic.prototype.tryChangeActive = function () {
    var editor = this.editor;

    if (editor.cmd.queryCommandState('italic')) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Italic;
}(BtnMenu_1["default"]);

exports["default"] = Italic;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 下划线 underline
 * @author dyl
 *
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Underline =
/** @class */
function (_super) {
  tslib_1.__extends(Underline, _super);

  function Underline(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u4E0B\u5212\u7EBF\">\n                <i class=\"w-e-icon-underline\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 点击事件
   */


  Underline.prototype.clickHandler = function () {
    var editor = this.editor;
    var isSelectEmpty = editor.selection.isSelectionEmpty();

    if (isSelectEmpty) {
      // 选区范围是空的，插入并选中一个“空白”
      editor.selection.createEmptyRange();
    } // 执行 Underline 命令


    editor.cmd["do"]('underline');

    if (isSelectEmpty) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  Underline.prototype.tryChangeActive = function () {
    var editor = this.editor;

    if (editor.cmd.queryCommandState('underline')) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Underline;
}(BtnMenu_1["default"]);

exports["default"] = Underline;

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 删除线
 * @author lkw
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var StrikeThrough =
/** @class */
function (_super) {
  tslib_1.__extends(StrikeThrough, _super);

  function StrikeThrough(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5220\u9664\u7EBF\">\n                <i class=\"w-e-icon-strikethrough\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 点击事件
   */


  StrikeThrough.prototype.clickHandler = function () {
    var editor = this.editor;
    var isSelectEmpty = editor.selection.isSelectionEmpty();

    if (isSelectEmpty) {
      // 选区范围是空的，插入并选中一个“空白”
      editor.selection.createEmptyRange();
    } // 执行 strikeThrough 命令


    editor.cmd["do"]('strikeThrough');

    if (isSelectEmpty) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  StrikeThrough.prototype.tryChangeActive = function () {
    var editor = this.editor;

    if (editor.cmd.queryCommandState('strikeThrough')) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return StrikeThrough;
}(BtnMenu_1["default"]);

exports["default"] = StrikeThrough;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 字体样式 FontStyle
 * @author dyl
 *
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var FontStyleList_1 = tslib_1.__importDefault(__webpack_require__(330));

var FontStyle =
/** @class */
function (_super) {
  tslib_1.__extends(FontStyle, _super);

  function FontStyle(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5B57\u4F53\">\n                <i class=\"w-e-icon-font\"></i>\n            </div>");
    var fontStyleList = new FontStyleList_1["default"](editor.config.fontNames);
    var fontListConf = {
      width: 100,
      title: '设置字体',
      type: 'list',
      list: fontStyleList.getItemList(),
      clickHandler: function clickHandler(value) {
        // this 是指向当前的 FontStyle 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, fontListConf) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  FontStyle.prototype.command = function (value) {
    var _a;

    var editor = this.editor;
    var isEmptySelection = editor.selection.isSelectionEmpty();
    var $selectionElem = (_a = editor.selection.getSelectionContainerElem()) === null || _a === void 0 ? void 0 : _a.elems[0];
    if ($selectionElem == null) return;
    var isFont = ($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.nodeName.toLowerCase()) !== 'p';
    var isSameValue = ($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.getAttribute('face')) === value;

    if (isEmptySelection) {
      if (isFont && !isSameValue) {
        var $elems = editor.selection.getSelectionRangeTopNodes();
        editor.selection.createRangeByElem($elems[0]);
        editor.selection.moveCursor($elems[0].elems[0]);
      }

      editor.selection.setRangeToElem($selectionElem); // 插入空白选区

      editor.selection.createEmptyRange();
    }

    editor.cmd["do"]('fontName', value);

    if (isEmptySelection) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   * ?字体是否需要有激活状态这个操作?
   */


  FontStyle.prototype.tryChangeActive = function () {// const editor = this.editor
    // const cmdValue = editor.cmd.queryCommandValue('fontName')
    // if (menusConfig.fontNames.indexOf(cmdValue) >= 0) {
    //     this.active()
    // } else {
    //     this.unActive()
    // }
  };

  return FontStyle;
}(DropListMenu_1["default"]);

exports["default"] = FontStyle;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description 字体 class
 * @author dyl
 */


var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 封装的一个字体菜单列表数据的组装对象,
 * 原因是因为在constructor函数中,直接执行此流程,会让代码量看起来较多,
 * 如果要在constructor调用外部函数,个人目前发现会有错误提示,
 * 因此,想着顺便研究实践下ts,遍创建了这样一个类
 */


var FontStyleList =
/** @class */
function () {
  function FontStyleList(list) {
    var _this = this;

    this.itemList = [];
    (0, _forEach["default"])(list).call(list, function (fontValue) {
      _this.itemList.push({
        $elem: dom_core_1["default"]("<p style=\"font-family:'" + fontValue + "'\">" + fontValue + "</p>"),
        value: fontValue
      });
    });
  }

  FontStyleList.prototype.getItemList = function () {
    return this.itemList;
  };

  return FontStyleList;
}();

exports["default"] = FontStyleList;

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 字号 FontSize
 * @author lkw
 *
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var FontSizeList_1 = tslib_1.__importDefault(__webpack_require__(332));

var FontSize =
/** @class */
function (_super) {
  tslib_1.__extends(FontSize, _super);

  function FontSize(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5B57\u53F7\">\n                <i class=\"w-e-icon-text-heigh\"></i>\n            </div>");
    var fontStyleList = new FontSizeList_1["default"](editor.config.fontSizes);
    var fontListConf = {
      width: 160,
      title: '设置字号',
      type: 'list',
      list: fontStyleList.getItemList(),
      clickHandler: function clickHandler(value) {
        // this 是指向当前的 FontSize 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, fontListConf) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  FontSize.prototype.command = function (value) {
    var _a;

    var editor = this.editor;
    var isEmptySelection = editor.selection.isSelectionEmpty();
    var selectionElem = (_a = editor.selection.getSelectionContainerElem()) === null || _a === void 0 ? void 0 : _a.elems[0];
    if (selectionElem == null) return;
    var isFont = (selectionElem === null || selectionElem === void 0 ? void 0 : selectionElem.nodeName.toLowerCase()) !== 'p';
    var isSameSize = (selectionElem === null || selectionElem === void 0 ? void 0 : selectionElem.getAttribute('size')) === value;

    if (isEmptySelection) {
      if (isFont && !isSameSize) {
        var $elems = editor.selection.getSelectionRangeTopNodes();
        var focusElem = $elems[0].elems[0];
        editor.selection.createRangeByElem($elems[0]);
        editor.selection.moveCursor(focusElem);
        selectionElem = focusElem;
      }

      editor.selection.setRangeToElem(selectionElem); // 插入空白选区

      editor.selection.createEmptyRange();
    }

    editor.cmd["do"]('fontSize', value);

    if (isEmptySelection) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   * ?字号是否需要有激活状态这个操作?
   */


  FontSize.prototype.tryChangeActive = function () {};

  return FontSize;
}(DropListMenu_1["default"]);

exports["default"] = FontSize;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description 字号 class
 * @author lkw
 */


var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * FontSizeList 字号配置列表
 */


var FontSizeList =
/** @class */
function () {
  function FontSizeList(list) {
    this.itemList = [];

    for (var key in list) {
      var item = list[key];
      this.itemList.push({
        $elem: dom_core_1["default"]("<p style=\"font-size:" + key + "\">" + item.name + "</p>"),
        value: item.value
      });
    }
  }

  FontSizeList.prototype.getItemList = function () {
    return this.itemList;
  };

  return FontSizeList;
}();

exports["default"] = FontSizeList;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 对齐方式
 * @author liuwei
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var SPECIAL_NODE_LIST = ['LI'];
var SPECIAL_TOP_NODE_LIST = ['UL', 'BLOCKQUOTE'];

var Justify =
/** @class */
function (_super) {
  tslib_1.__extends(Justify, _super);

  function Justify(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="对齐"><i class="w-e-icon-paragraph-left"></i></div>');
    var dropListConf = {
      width: 100,
      title: '对齐方式',
      type: 'list',
      list: [{
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-paragraph-left w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.justify.靠左') + "\n                        </p>"),
        value: 'left'
      }, {
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-paragraph-center w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.justify.居中') + "\n                        </p>"),
        value: 'center'
      }, {
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-paragraph-right w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.justify.靠右') + "\n                        </p>"),
        value: 'right'
      }, {
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-paragraph-justify w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.justify.两端') + "\n                        </p>"),
        value: 'justify'
      }],
      clickHandler: function clickHandler(value) {
        // 执行对应的value操作
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, dropListConf) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  Justify.prototype.command = function (value) {
    var editor = this.editor;
    var selection = editor.selection;
    var $selectionElem = selection.getSelectionContainerElem(); // 保存选区

    selection.saveRange(); // 获取顶级元素

    var $elems = editor.selection.getSelectionRangeTopNodes();

    if ($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.length) {
      // list 在chrome下默认多包裹一个 p，导致不能通过顶层元素判断，所以单独加个判断
      if (this.isSpecialNode($selectionElem, $elems[0]) || this.isSpecialTopNode($elems[0])) {
        var el = this.getSpecialNodeUntilTop($selectionElem, $elems[0]);
        if (el == null) return;
        dom_core_1["default"](el).css('text-align', value);
      } else {
        (0, _forEach["default"])($elems).call($elems, function (el) {
          el.css('text-align', value);
        });
      }
    } //恢复选区


    selection.restoreSelection();
  };
  /**
   * 获取选区中的特殊元素，如果不存在，则直接返回顶层元素子元素
   * @param el DomElement
   * @param topEl DomElement
   */


  Justify.prototype.getSpecialNodeUntilTop = function (el, topEl) {
    var parentNode = el.elems[0];
    var topNode = topEl.elems[0]; // 可能出现嵌套的情况，所以一级一级向上找，是否是特殊元素

    while (parentNode != null) {
      if ((0, _indexOf["default"])(SPECIAL_NODE_LIST).call(SPECIAL_NODE_LIST, parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName) !== -1) {
        return parentNode;
      } // 如果再到 top 元素之前还没找到特殊元素，直接返回元素


      if (parentNode.parentNode === topNode) {
        return parentNode;
      }

      parentNode = parentNode.parentNode;
    }

    return parentNode;
  };
  /**
   * 当选区元素或者顶层元素是某些特殊元素时，只需要修改子元素的对齐样式的元素
   * @param el DomElement
   * @param topEl DomElement
   */


  Justify.prototype.isSpecialNode = function (el, topEl) {
    // 如果以后有类似的元素要这样处理，直接修改这个数组即可
    var parentNode = this.getSpecialNodeUntilTop(el, topEl);
    if (parentNode == null) return false;
    return (0, _indexOf["default"])(SPECIAL_NODE_LIST).call(SPECIAL_NODE_LIST, parentNode.nodeName) !== -1;
  };
  /**
   * 当选区 top 元素为某些特殊元素时，只需要修改子元素的对齐样式的元素
   * @param el DomElement
   */


  Justify.prototype.isSpecialTopNode = function (topEl) {
    var _a;

    if (topEl == null) return false;
    return (0, _indexOf["default"])(SPECIAL_TOP_NODE_LIST).call(SPECIAL_TOP_NODE_LIST, (_a = topEl.elems[0]) === null || _a === void 0 ? void 0 : _a.nodeName) !== -1;
  };
  /**
   * 尝试改变菜单激活（高亮）状态
   * 默认左对齐,若选择其他对其方式对active进行高亮否则unActive
   * ?考虑优化的话 是否可以对具体选中的进行高亮
   */


  Justify.prototype.tryChangeActive = function () {};

  return Justify;
}(DropListMenu_1["default"]);

exports["default"] = Justify;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 引用
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var bind_event_1 = tslib_1.__importDefault(__webpack_require__(335));

var create_quote_node_1 = tslib_1.__importDefault(__webpack_require__(336));

var const_1 = __webpack_require__(7);

var Quote =
/** @class */
function (_super) {
  tslib_1.__extends(Quote, _super);

  function Quote(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5F15\u7528\">\n                <i class=\"w-e-icon-quotes-left\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    bind_event_1["default"](editor);
    return _this;
  }
  /**
   * 点击事件
   */


  Quote.prototype.clickHandler = function () {
    var _a;

    var editor = this.editor;
    var isSelectEmpty = editor.selection.isSelectionEmpty();
    var topNodeElem = editor.selection.getSelectionRangeTopNodes();
    var $topNodeElem = topNodeElem[topNodeElem.length - 1];
    var nodeName = this.getTopNodeName(); // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容
    // 兼容firefox无法取消blockquote的问题

    if (nodeName === 'BLOCKQUOTE') {
      // 撤销 quote
      var $targetELem = dom_core_1["default"]($topNodeElem.childNodes());
      var len = $targetELem.length;
      var $middle_1 = $topNodeElem;
      (0, _forEach["default"])($targetELem).call($targetELem, function (elem) {
        var $elem = dom_core_1["default"](elem);
        $elem.insertAfter($middle_1);
        $middle_1 = $elem;
      });
      $topNodeElem.remove();
      editor.selection.moveCursor($targetELem.elems[len - 1]); // 即时更新btn状态

      this.tryChangeActive();
    } else {
      // 将 P 转换为 quote
      var $quote = create_quote_node_1["default"](topNodeElem);
      $quote.insertAfter($topNodeElem);
      this.delSelectNode(topNodeElem);
      var moveNode = (_a = $quote.childNodes()) === null || _a === void 0 ? void 0 : _a.last().getNode();
      if (moveNode == null) return; // 兼容firefox（firefox下空行情况下选区会在br后，造成自动换行的问题）

      moveNode.textContent ? editor.selection.moveCursor(moveNode) : editor.selection.moveCursor(moveNode, 0); // 即时更新btn状态

      this.tryChangeActive(); // 防止最后一行无法跳出

      dom_core_1["default"](const_1.EMPTY_P).insertAfter($quote);
      return;
    }

    if (isSelectEmpty) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  Quote.prototype.tryChangeActive = function () {
    var _a;

    var editor = this.editor;
    var cmdValue = (_a = editor.selection.getSelectionRangeTopNodes()[0]) === null || _a === void 0 ? void 0 : _a.getNodeName();

    if (cmdValue === 'BLOCKQUOTE') {
      this.active();
    } else {
      this.unActive();
    }
  };
  /**
   * 获取包裹在最外层的节点(防止内部嵌入多个样式)
   * @param selectionElem 选中的节点
   * @returns {string} 最终要处理的节点名称
   */


  Quote.prototype.getTopNodeName = function () {
    var editor = this.editor;
    var $topNodeElem = editor.selection.getSelectionRangeTopNodes()[0];
    var nodeName = $topNodeElem === null || $topNodeElem === void 0 ? void 0 : $topNodeElem.getNodeName();
    return nodeName;
  };
  /**
   * 删除选中的元素
   * @param selectElem 选中的元素节点数组
   */


  Quote.prototype.delSelectNode = function (selectElem) {
    (0, _forEach["default"])(selectElem).call(selectElem, function (node) {
      node.remove();
    });
  };

  return Quote;
}(BtnMenu_1["default"]);

exports["default"] = Quote;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var const_1 = __webpack_require__(7);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

function bindEvent(editor) {
  function quoteEnter(e) {
    var _a;

    var $selectElem = editor.selection.getSelectionContainerElem();
    var $topSelectElem = editor.selection.getSelectionRangeTopNodes()[0]; // 对quote的enter进行特殊处理
    //最后一行为空标签时再按会出跳出blockquote

    if (($topSelectElem === null || $topSelectElem === void 0 ? void 0 : $topSelectElem.getNodeName()) === 'BLOCKQUOTE') {
      // firefox下点击引用按钮会选中外容器<blockquote></blockquote>
      if ($selectElem.getNodeName() === 'BLOCKQUOTE') {
        var selectNode = (_a = $selectElem.childNodes()) === null || _a === void 0 ? void 0 : _a.getNode();
        editor.selection.moveCursor(selectNode);
      }

      if ($selectElem.text() === '') {
        e.preventDefault();
        $selectElem.remove();
        var $newLine = dom_core_1["default"](const_1.EMPTY_P);
        $newLine.insertAfter($topSelectElem); // 将光标移动br前面

        editor.selection.moveCursor($newLine.getNode(), 0);
      } // 当blockQuote中没有内容回车后移除blockquote


      if ($topSelectElem.text() === '') {
        $topSelectElem.remove();
      }
    }
  }

  editor.txt.eventHooks.enterDownEvents.push(quoteEnter);
}

exports["default"] = bindEvent;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 创建一个blockquote元素节点
 * @param editor 编辑器实例
 */


function createQuote($childElem) {
  var $targetElem = dom_core_1["default"]("<blockquote></blockquote>");
  (0, _forEach["default"])($childElem).call($childElem, function (node) {
    $targetElem.append(node.clone(true));
  });
  return $targetElem;
}

exports["default"] = createQuote;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 背景颜色 BackColor
 * @author lkw
 *
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var BackColor =
/** @class */
function (_super) {
  tslib_1.__extends(BackColor, _super);

  function BackColor(editor) {
    var _context;

    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u80CC\u666F\u8272\">\n                <i class=\"w-e-icon-paint-brush\"></i>\n            </div>");
    var colorListConf = {
      width: 120,
      title: '背景颜色',
      // droplist 内容以 block 形式展示
      type: 'inline-block',
      list: (0, _map["default"])(_context = editor.config.colors).call(_context, function (color) {
        return {
          $elem: dom_core_1["default"]("<i style=\"color:" + color + ";\" class=\"w-e-icon-paint-brush\"></i>"),
          value: color
        };
      }),
      clickHandler: function clickHandler(value) {
        // this 是指向当前的 BackColor 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, colorListConf) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  BackColor.prototype.command = function (value) {
    var _a;

    var editor = this.editor;
    var isEmptySelection = editor.selection.isSelectionEmpty();
    var $selectionElem = (_a = editor.selection.getSelectionContainerElem()) === null || _a === void 0 ? void 0 : _a.elems[0];
    if ($selectionElem == null) return;
    var isSpan = ($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.nodeName.toLowerCase()) !== 'p';
    var bgColor = $selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.style.backgroundColor;
    var isSameColor = util_1.hexToRgb(value) === bgColor;

    if (isEmptySelection) {
      if (isSpan && !isSameColor) {
        var $elems = editor.selection.getSelectionRangeTopNodes();
        editor.selection.createRangeByElem($elems[0]);
        editor.selection.moveCursor($elems[0].elems[0]);
      } // 插入空白选区


      editor.selection.createEmptyRange();
    }

    editor.cmd["do"]('backColor', value);

    if (isEmptySelection) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  BackColor.prototype.tryChangeActive = function () {};

  return BackColor;
}(DropListMenu_1["default"]);

exports["default"] = BackColor;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 文字颜色 FontColor
 * @author lkw
 *
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var FontColor =
/** @class */
function (_super) {
  tslib_1.__extends(FontColor, _super);

  function FontColor(editor) {
    var _context;

    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u6587\u5B57\u989C\u8272\">\n                <i class=\"w-e-icon-pencil2\"></i>\n            </div>");
    var colorListConf = {
      width: 120,
      title: '文字颜色',
      // droplist 内容以 block 形式展示
      type: 'inline-block',
      list: (0, _map["default"])(_context = editor.config.colors).call(_context, function (color) {
        return {
          $elem: dom_core_1["default"]("<i style=\"color:" + color + ";\" class=\"w-e-icon-pencil2\"></i>"),
          value: color
        };
      }),
      clickHandler: function clickHandler(value) {
        // this 是指向当前的 BackColor 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, colorListConf) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  FontColor.prototype.command = function (value) {
    var _a;

    var editor = this.editor;
    var isEmptySelection = editor.selection.isSelectionEmpty();
    var $selectionElem = (_a = editor.selection.getSelectionContainerElem()) === null || _a === void 0 ? void 0 : _a.elems[0];
    if ($selectionElem == null) return;
    var isFont = ($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.nodeName.toLowerCase()) !== 'p';
    var isSameColor = ($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.getAttribute('color')) === value;

    if (isEmptySelection) {
      if (isFont && !isSameColor) {
        var $elems = editor.selection.getSelectionRangeTopNodes();
        editor.selection.createRangeByElem($elems[0]);
        editor.selection.moveCursor($elems[0].elems[0]);
      }

      editor.selection.setRangeToElem($selectionElem); // 插入空白选区

      editor.selection.createEmptyRange();
    } // 获取选区范围的文字


    var $selectionText = editor.selection.getSelectionText(); // 如果设置的是 a 标签就特殊处理一下，避免回车换行设置颜色无效的情况
    // 只处理选中a标签内全部文字的情况，因为选中部分文字不存在换行颜色失效的情况

    if ($selectionElem.nodeName === 'A' && $selectionElem.textContent === $selectionText) {
      // 创建一个相当于占位的元素
      var _payloadElem = dom_core_1["default"]('<span>&#8203;</span>').getNode(); // 添加到a标签之后


      $selectionElem.appendChild(_payloadElem);
    }

    editor.cmd["do"]('foreColor', value);

    if (isEmptySelection) {
      // 需要将选区范围折叠起来
      editor.selection.collapseRange();
      editor.selection.restoreSelection();
    }
  };
  /**
   * 尝试修改菜单激活状态
   */


  FontColor.prototype.tryChangeActive = function () {};

  return FontColor;
}(DropListMenu_1["default"]);

exports["default"] = FontColor;

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 视频 菜单
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var create_panel_conf_1 = tslib_1.__importDefault(__webpack_require__(340));

var index_1 = tslib_1.__importDefault(__webpack_require__(346));

var Video =
/** @class */
function (_super) {
  tslib_1.__extends(Video, _super);

  function Video(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u89C6\u9891\">\n                <i class=\"w-e-icon-play\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this; // 绑定事件 tootip

    index_1["default"](editor);
    return _this;
  }
  /**
   * 菜单点击事件
   */


  Video.prototype.clickHandler = function () {
    // 弹出 panel
    this.createPanel('');
  };
  /**
   * 创建 panel
   * @param link 链接
   */


  Video.prototype.createPanel = function (iframe) {
    var conf = create_panel_conf_1["default"](this.editor, iframe);
    var panel = new Panel_1["default"](this, conf);
    panel.create();
  };
  /**
   * 尝试修改菜单 active 状态
   */


  Video.prototype.tryChangeActive = function () {};

  return Video;
}(PanelMenu_1["default"]);

exports["default"] = Video;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description video 菜单 panel tab 配置
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var upload_video_1 = tslib_1.__importDefault(__webpack_require__(341));

var const_1 = __webpack_require__(7);

function default_1(editor, video) {
  var config = editor.config;
  var uploadVideo = new upload_video_1["default"](editor); // panel 中需要用到的id

  var inputIFrameId = util_1.getRandom('input-iframe');
  var btnOkId = util_1.getRandom('btn-ok');
  var inputUploadId = util_1.getRandom('input-upload');
  var btnStartId = util_1.getRandom('btn-local-ok');
  /**
   * 插入链接
   * @param iframe html标签
   */

  function insertVideo(video) {
    editor.cmd["do"]('insertHTML', video + const_1.EMPTY_P); // video添加后的回调

    editor.config.onlineVideoCallback(video);
  }
  /**
   * 校验在线视频链接
   * @param video 在线视频链接
   */


  function checkOnlineVideo(video) {
    // 查看开发者自定义配置的返回值
    var check = editor.config.onlineVideoCheck(video);

    if (check === true) {
      return true;
    }

    if (typeof check === 'string') {
      //用户未能通过开发者的校验，开发者希望我们提示这一字符串
      editor.config.customAlert(check, 'error');
    }

    return false;
  } // tabs配置
  // const fileMultipleAttr = config.uploadVideoMaxLength === 1 ? '' : 'multiple="multiple"'


  var tabsConf = [{
    // tab 的标题
    title: editor.i18next.t('menus.panelMenus.video.上传视频'),
    tpl: "<div class=\"w-e-up-video-container\">\n                    <div id=\"" + btnStartId + "\" class=\"w-e-up-btn\">\n                        <i class=\"w-e-icon-upload2\"></i>\n                    </div>\n                    <div style=\"display:none;\">\n                        <input id=\"" + inputUploadId + "\" type=\"file\" accept=\"video/*\"/>\n                    </div>\n                 </div>",
    events: [// 触发选择视频
    {
      selector: '#' + btnStartId,
      type: 'click',
      fn: function fn() {
        var $file = dom_core_1["default"]('#' + inputUploadId);
        var fileElem = $file.elems[0];

        if (fileElem) {
          fileElem.click();
        } else {
          // 返回 true 可关闭 panel
          return true;
        }
      }
    }, // 选择视频完毕
    {
      selector: '#' + inputUploadId,
      type: 'change',
      fn: function fn() {
        var $file = dom_core_1["default"]('#' + inputUploadId);
        var fileElem = $file.elems[0];

        if (!fileElem) {
          // 返回 true 可关闭 panel
          return true;
        } // 获取选中的 file 对象列表


        var fileList = fileElem.files;

        if (fileList.length) {
          uploadVideo.uploadVideo(fileList);
        } // 返回 true 可关闭 panel


        return true;
      }
    }]
  }, {
    // tab 的标题
    title: editor.i18next.t('menus.panelMenus.video.插入视频'),
    // 模板
    tpl: "<div>\n                    <input \n                        id=\"" + inputIFrameId + "\" \n                        type=\"text\" \n                        class=\"block\" \n                        placeholder=\"" + editor.i18next.t('如') + "\uFF1A<iframe src=... ></iframe>\"/>\n                    </td>\n                    <div class=\"w-e-button-container\">\n                        <button type=\"button\" id=\"" + btnOkId + "\" class=\"right\">\n                            " + editor.i18next.t('插入') + "\n                        </button>\n                    </div>\n                </div>",
    // 事件绑定
    events: [// 插入视频
    {
      selector: '#' + btnOkId,
      type: 'click',
      fn: function fn() {
        var _context;

        // 执行插入视频
        var $video = dom_core_1["default"]('#' + inputIFrameId);
        var video = (0, _trim["default"])(_context = $video.val()).call(_context); // 视频为空，则不插入

        if (!video) return; // 对当前用户插入的内容进行判断，插入为空，或者返回false，都停止插入

        if (!checkOnlineVideo(video)) return;
        insertVideo(video); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭

        return true;
      }
    }]
  } // tab end
  ];
  var conf = {
    width: 300,
    height: 0,
    // panel 中可包含多个 tab
    tabs: [] // tabs end

  }; // 显示“上传视频”

  if (window.FileReader && (config.uploadVideoServer || config.customUploadVideo)) {
    conf.tabs.push(tabsConf[0]);
  } // 显示“插入视频”


  if (config.showLinkVideo) {
    conf.tabs.push(tabsConf[1]);
  }

  return conf;
}

exports["default"] = default_1;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 上传视频
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _some = _interopRequireDefault(__webpack_require__(131));

var _bind = _interopRequireDefault(__webpack_require__(56));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var upload_core_1 = tslib_1.__importDefault(__webpack_require__(134));

var progress_1 = tslib_1.__importDefault(__webpack_require__(135));

var const_1 = __webpack_require__(7);

var util_2 = __webpack_require__(6);

var UploadVideo =
/** @class */
function () {
  function UploadVideo(editor) {
    this.editor = editor;
  }
  /**
   * 上传视频
   * @param files 文件列表
   */


  UploadVideo.prototype.uploadVideo = function (files) {
    var _this = this;

    if (!files.length) {
      return;
    }

    var editor = this.editor;
    var config = editor.config; // ------------------------------ i18next ------------------------------

    var i18nPrefix = 'validate.';

    var t = function t(text) {
      return editor.i18next.t(i18nPrefix + text);
    }; // ------------------------------ 获取配置信息 ------------------------------
    // 服务端地址


    var uploadVideoServer = config.uploadVideoServer; // 上传视频的最大体积，默认 1024M

    var maxSize = config.uploadVideoMaxSize;
    var uploadVideoMaxSize = maxSize / 1024; // 一次最多上传多少个视频
    // const uploadVideoMaxLength = config.uploadVideoMaxLength
    // 自定义上传视频的名称

    var uploadVideoName = config.uploadVideoName; // 上传视频自定义参数

    var uploadVideoParams = config.uploadVideoParams; // 自定义参数拼接到 url 中

    var uploadVideoParamsWithUrl = config.uploadVideoParamsWithUrl; // 上传视频自定义 header

    var uploadVideoHeaders = config.uploadVideoHeaders; // 钩子函数

    var uploadVideoHooks = config.uploadVideoHooks; // 上传视频超时时间 ms 默认2个小时

    var uploadVideoTimeout = config.uploadVideoTimeout; // 跨域带 cookie

    var withVideoCredentials = config.withVideoCredentials; // 自定义上传

    var customUploadVideo = config.customUploadVideo; // 格式校验

    var uploadVideoAccept = config.uploadVideoAccept; // ------------------------------ 验证文件信息 ------------------------------

    var resultFiles = [];
    var errInfos = [];
    util_1.arrForEach(files, function (file) {
      var name = file.name;
      var size = file.size / 1024 / 1024; // chrome 低版本 name === undefined

      if (!name || !size) {
        return;
      }

      if (!(uploadVideoAccept instanceof Array)) {
        // 格式不是数组
        errInfos.push("\u3010" + uploadVideoAccept + "\u3011" + t('uploadVideoAccept 不是Array'));
        return;
      }

      if (!(0, _some["default"])(uploadVideoAccept).call(uploadVideoAccept, function (item) {
        return item === name.split('.')[name.split('.').length - 1];
      })) {
        // 后缀名不合法，不是视频
        errInfos.push("\u3010" + name + "\u3011" + t('不是视频'));
        return;
      }

      if (uploadVideoMaxSize < size) {
        // 上传视频过大
        errInfos.push("\u3010" + name + "\u3011" + t('大于') + " " + uploadVideoMaxSize + "M");
        return;
      } //验证通过的加入结果列表


      resultFiles.push(file);
    }); // 抛出验证信息

    if (errInfos.length) {
      config.customAlert(t('视频验证未通过') + ": \n" + errInfos.join('\n'), 'warning');
      return;
    } // 如果过滤后文件列表为空直接返回


    if (resultFiles.length === 0) {
      config.customAlert(t('传入的文件不合法'), 'warning');
      return;
    } // ------------------------------ 自定义上传 ------------------------------


    if (customUploadVideo && typeof customUploadVideo === 'function') {
      var _context;

      customUploadVideo(resultFiles, (0, _bind["default"])(_context = this.insertVideo).call(_context, this));
      return;
    } // 添加视频数据


    var formData = new FormData();
    (0, _forEach["default"])(resultFiles).call(resultFiles, function (file, index) {
      var name = uploadVideoName || file.name;

      if (resultFiles.length > 1) {
        // 多个文件时，filename 不能重复
        name = name + (index + 1);
      }

      formData.append(name, file);
    }); // ------------------------------ 上传视频 ------------------------------
    //添加自定义参数  基于有服务端地址的情况下

    if (uploadVideoServer) {
      // 添加自定义参数
      var uploadVideoServerArr = uploadVideoServer.split('#');
      uploadVideoServer = uploadVideoServerArr[0];
      var uploadVideoServerHash = uploadVideoServerArr[1] || '';
      (0, _forEach["default"])(util_1).call(util_1, uploadVideoParams, function (key, val) {
        // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉
        // val = encodeURIComponent(val)
        // 第一，将参数拼接到 url 中
        if (uploadVideoParamsWithUrl) {
          if ((0, _indexOf["default"])(uploadVideoServer).call(uploadVideoServer, '?') > 0) {
            uploadVideoServer += '&';
          } else {
            uploadVideoServer += '?';
          }

          uploadVideoServer = uploadVideoServer + key + '=' + val;
        } // 第二，将参数添加到 formData 中


        formData.append(key, val);
      });

      if (uploadVideoServerHash) {
        uploadVideoServer += '#' + uploadVideoServerHash;
      } // 开始上传


      var xhr = upload_core_1["default"](uploadVideoServer, {
        timeout: uploadVideoTimeout,
        formData: formData,
        headers: uploadVideoHeaders,
        withCredentials: !!withVideoCredentials,
        beforeSend: function beforeSend(xhr) {
          if (uploadVideoHooks.before) return uploadVideoHooks.before(xhr, editor, resultFiles);
        },
        onTimeout: function onTimeout(xhr) {
          config.customAlert(t('上传视频超时'), 'error');
          if (uploadVideoHooks.timeout) uploadVideoHooks.timeout(xhr, editor);
        },
        onProgress: function onProgress(percent, e) {
          var progressBar = new progress_1["default"](editor);

          if (e.lengthComputable) {
            percent = e.loaded / e.total;
            progressBar.show(percent);
          }
        },
        onError: function onError(xhr) {
          config.customAlert(t('上传视频错误'), 'error', t('上传视频错误') + "\uFF0C" + t('服务器返回状态') + ": " + xhr.status);
          if (uploadVideoHooks.error) uploadVideoHooks.error(xhr, editor);
        },
        onFail: function onFail(xhr, resultStr) {
          config.customAlert(t('上传视频失败'), 'error', t('上传视频返回结果错误') + ("\uFF0C" + t('返回结果') + ": ") + resultStr);
          if (uploadVideoHooks.fail) uploadVideoHooks.fail(xhr, editor, resultStr);
        },
        onSuccess: function onSuccess(xhr, result) {
          if (uploadVideoHooks.customInsert) {
            var _context2;

            // 自定义插入视频
            uploadVideoHooks.customInsert((0, _bind["default"])(_context2 = _this.insertVideo).call(_context2, _this), result, editor);
            return;
          }

          if (result.errno != '0') {
            // 返回格式不对，应该为 { errno: 0, data: [...] }
            config.customAlert(t('上传视频失败'), 'error', t('上传视频返回结果错误') + "\uFF0C" + t('返回结果') + " errno=" + result.errno);
            if (uploadVideoHooks.fail) uploadVideoHooks.fail(xhr, editor, result);
            return;
          } // 成功，插入视频


          var data = result.data;

          _this.insertVideo(data.url); // 钩子函数


          if (uploadVideoHooks.success) uploadVideoHooks.success(xhr, editor, result);
        }
      });

      if (typeof xhr === 'string') {
        // 上传被阻止
        config.customAlert(xhr, 'error');
      }
    }
  };
  /**
   * 往编辑器区域插入视频
   * @param url 视频访问地址
   */


  UploadVideo.prototype.insertVideo = function (url) {
    var editor = this.editor;
    var config = editor.config;
    var i18nPrefix = 'validate.';

    var t = function t(text, prefix) {
      if (prefix === void 0) {
        prefix = i18nPrefix;
      }

      return editor.i18next.t(prefix + text);
    }; // 判断用户是否自定义插入视频


    if (!config.customInsertVideo) {
      if (util_2.UA.isFirefox) {
        editor.cmd["do"]('insertHTML', "<p data-we-video-p=\"true\"><video src=\"" + url + "\" controls=\"controls\" style=\"max-width:100%\"></video></p><p>&#8203</p>");
      } else {
        editor.cmd["do"]('insertHTML', "<video src=\"" + url + "\" controls=\"controls\" style=\"max-width:100%\"></video>" + const_1.EMPTY_P);
      }
    } else {
      config.customInsertVideo(url);
      return;
    } // 加载视频


    var video = document.createElement('video');

    video.onload = function () {
      video = null;
    };

    video.onerror = function () {
      config.customAlert(t('插入视频错误'), 'error', "wangEditor: " + t('插入视频错误') + "\uFF0C" + t('视频链接') + " \"" + url + "\"\uFF0C" + t('下载链接失败'));
      video = null;
    };

    video.onabort = function () {
      return video = null;
    };

    video.src = url;
  };

  return UploadVideo;
}();

exports["default"] = UploadVideo;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(343);

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(344);

module.exports = parent;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(345);
var path = __webpack_require__(10);

module.exports = path.Date.now;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);

// `Date.now` method
// https://tc39.es/ecma262/#sec-date.now
$({ target: 'Date', stat: true }, {
  now: function now() {
    return new Date().getTime();
  }
});


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 绑定视频的事件
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var tooltip_event_1 = tslib_1.__importDefault(__webpack_require__(347));

var keyboard_1 = tslib_1.__importDefault(__webpack_require__(349));
/**
 * 绑定事件
 * @param editor 编辑器实例
 */


function bindEvent(editor) {
  //Tooltip
  tooltip_event_1["default"](editor);
  keyboard_1["default"](editor);
}

exports["default"] = bindEvent;

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description tooltip 事件
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.createShowHideFn = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36));

var video_alignment_1 = tslib_1.__importDefault(__webpack_require__(348));
/**
 * 生成 Tooltip 的显示隐藏函数
 */


function createShowHideFn(editor) {
  var tooltip;

  var t = function t(text, prefix) {
    if (prefix === void 0) {
      prefix = '';
    }

    return editor.i18next.t(prefix + text);
  };
  /**
   * 显示 tooltip
   * @param $node 链接元素
   */


  function showVideoTooltip($node) {
    var conf = [{
      $elem: dom_core_1["default"]("<span class='w-e-icon-trash-o'></span>"),
      onClick: function onClick(editor, $node) {
        // 选中video元素 删除
        $node.remove(); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]('<span>100%</span>'),
      onClick: function onClick(editor, $node) {
        $node.attr('width', '100%');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]('<span>50%</span>'),
      onClick: function onClick(editor, $node) {
        $node.attr('width', '50%');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]('<span>30%</span>'),
      onClick: function onClick(editor, $node) {
        $node.attr('width', '30%');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('重置') + "</span>"),
      onClick: function onClick(editor, $node) {
        $node.removeAttr('width');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('menus.justify.靠左') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 获取顶级元素
        video_alignment_1["default"]($node, 'left'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('menus.justify.居中') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 获取顶级元素
        video_alignment_1["default"]($node, 'center'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('menus.justify.靠右') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 获取顶级元素
        video_alignment_1["default"]($node, 'right'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }];
    tooltip = new Tooltip_1["default"](editor, $node, conf);
    tooltip.create();
  }
  /**
   * 隐藏 tooltip
   */


  function hideVideoTooltip() {
    // 移除 tooltip
    if (tooltip) {
      tooltip.remove();
      tooltip = null;
    }
  }

  return {
    showVideoTooltip: showVideoTooltip,
    hideVideoTooltip: hideVideoTooltip
  };
}

exports.createShowHideFn = createShowHideFn;
/**
 * 绑定 tooltip 事件
 * @param editor 编辑器实例
 */

function bindTooltipEvent(editor) {
  var _a = createShowHideFn(editor),
      showVideoTooltip = _a.showVideoTooltip,
      hideVideoTooltip = _a.hideVideoTooltip; // 点击视频元素是，显示 tooltip


  editor.txt.eventHooks.videoClickEvents.push(showVideoTooltip); // 点击其他地方，或者滚动时，隐藏 tooltip

  editor.txt.eventHooks.clickEvents.push(hideVideoTooltip);
  editor.txt.eventHooks.keyupEvents.push(hideVideoTooltip);
  editor.txt.eventHooks.toolbarClickEvents.push(hideVideoTooltip);
  editor.txt.eventHooks.menuClickEvents.push(hideVideoTooltip);
  editor.txt.eventHooks.textScrollEvents.push(hideVideoTooltip); // change 时隐藏

  editor.txt.eventHooks.changeEvents.push(hideVideoTooltip);
}

exports["default"] = bindTooltipEvent;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 视频布局 事件
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _includes = _interopRequireDefault(__webpack_require__(55));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3)); // 设置布局方式


function setAlignment($node, value) {
  // 设置顶级元素匹配
  var NODENAME = ['P']; // 获取匹配得顶级元素

  var topNode = getSelectedTopNode($node, NODENAME); // 判断是否存在

  if (topNode) {
    dom_core_1["default"](topNode).css('text-align', value);
  }
}

exports["default"] = setAlignment;
/**
 * 获取选中的元素的顶级元素
 * @params el 选中的元素
 * @params tag 匹配顶级的元素 如 P LI ....
 */

function getSelectedTopNode(el, tag) {
  var _a;

  var parentNode = el.elems[0]; // 可能出现嵌套的情况，所以一级一级向上找，找到指定得顶级元素

  while (parentNode != null) {
    if ((0, _includes["default"])(tag).call(tag, parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName)) {
      return parentNode;
    } // 兜底 body


    if (((_a = parentNode === null || parentNode === void 0 ? void 0 : parentNode.parentNode) === null || _a === void 0 ? void 0 : _a.nodeName) === 'BODY') {
      return null;
    }

    parentNode = parentNode.parentNode;
  }

  return parentNode;
}

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__(6);

function bindEventKeyboardEvent(editor) {
  if (!util_1.UA.isFirefox) return;
  var txt = editor.txt,
      selection = editor.selection;
  var keydownEvents = txt.eventHooks.keydownEvents;
  keydownEvents.push(function (e) {
    // 实时保存选区
    // editor.selection.saveRange()
    var $selectionContainerElem = selection.getSelectionContainerElem();

    if ($selectionContainerElem) {
      var $topElem = $selectionContainerElem.getNodeTop(editor);
      var $preElem = $topElem.length ? $topElem.prev().length ? $topElem.prev() : null : null;

      if ($preElem && $preElem.attr('data-we-video-p')) {
        // 光标处于选区开头
        if (selection.getCursorPos() === 0) {
          // 如果上一个dom是包含video， 按下删除连video一块删除
          if (e.keyCode === 8) {
            $preElem.remove();
          }
        }
      }
    }
  });
}

exports["default"] = bindEventKeyboardEvent;

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 插入、上传图片
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var const_1 = __webpack_require__(7);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var index_1 = tslib_1.__importDefault(__webpack_require__(351));

var create_panel_conf_1 = tslib_1.__importDefault(__webpack_require__(363));

var Image =
/** @class */
function (_super) {
  tslib_1.__extends(Image, _super);

  function Image(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="图片"><i class="w-e-icon-image"></i></div>');
    var imgPanelConfig = create_panel_conf_1["default"](editor);

    if (imgPanelConfig.onlyUploadConf) {
      var _context;

      $elem = imgPanelConfig.onlyUploadConf.$elem;
      (0, _map["default"])(_context = imgPanelConfig.onlyUploadConf.events).call(_context, function (event) {
        var type = event.type;
        var fn = event.fn || const_1.EMPTY_FN;
        $elem.on(type, function (e) {
          e.stopPropagation();
          fn(e);
        });
      });
    }

    _this = _super.call(this, $elem, editor) || this;
    _this.imgPanelConfig = imgPanelConfig; // 绑定事件，如粘贴图片

    index_1["default"](editor);
    return _this;
  }
  /**
   * 菜单点击事件
   */


  Image.prototype.clickHandler = function () {
    if (!this.imgPanelConfig.onlyUploadConf) {
      this.createPanel();
    }
  };
  /**
   * 创建 panel
   */


  Image.prototype.createPanel = function () {
    var conf = this.imgPanelConfig;
    var panel = new Panel_1["default"](this, conf);
    this.setPanel(panel);
    panel.create();
  };
  /**
   * 尝试修改菜单 active 状态
   */


  Image.prototype.tryChangeActive = function () {};

  return Image;
}(PanelMenu_1["default"]);

exports["default"] = Image;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 绑定图片的事件
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var paste_img_1 = tslib_1.__importDefault(__webpack_require__(352));

var drop_img_1 = tslib_1.__importDefault(__webpack_require__(353));

var drag_size_1 = tslib_1.__importDefault(__webpack_require__(354));

var tooltip_event_1 = tslib_1.__importDefault(__webpack_require__(362));
/**
 * 绑定事件
 * @param editor 编辑器实例
 */


function bindEvent(editor) {
  // 粘贴图片
  paste_img_1["default"](editor); // 拖拽图片

  drop_img_1["default"](editor); // 可再扩展其他事件...如图片 tooltip 等
  // 拖拽图片尺寸

  drag_size_1["default"](editor); //Tooltip

  tooltip_event_1["default"](editor);
}

exports["default"] = bindEvent;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 粘贴图片
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var paste_event_1 = __webpack_require__(128);

var upload_img_1 = tslib_1.__importDefault(__webpack_require__(97));
/**
 * 剪切板是否有 text 或者 html ？
 * @param editor 编辑器对象
 * @param e 粘贴事件参数
 */


function _haveTextOrHtml(editor, e) {
  var config = editor.config;
  var pasteFilterStyle = config.pasteFilterStyle;
  var pasteIgnoreImg = config.pasteIgnoreImg;
  var pasteHtml = paste_event_1.getPasteHtml(e, pasteFilterStyle, pasteIgnoreImg);
  if (pasteHtml) return true;
  var pasteText = paste_event_1.getPasteText(e);
  if (pasteText) return true;
  return false; // text html 都没有，则返回 false
}
/**
 * 剪切板是否有 Files
 * @param editor 编辑器对象
 * @param e 粘贴事件参数
 */


function _haveFiles(editor, e) {
  var _a;

  var types = ((_a = e.clipboardData) === null || _a === void 0 ? void 0 : _a.types) || [];

  for (var i = 0; i < types.length; i++) {
    var type = types[i];

    if (type === 'Files') {
      return true;
    }
  }

  return false;
}
/**
 * 粘贴图片事件方法
 * @param e 事件参数
 */


function pasteImgHandler(e, editor) {
  // 粘贴过来的没有 file 时，判断 text 或者 html
  if (!_haveFiles(editor, e)) {
    if (_haveTextOrHtml(editor, e)) {
      // 粘贴过来的有 text 或者 html ，则不执行粘贴图片逻辑
      return;
    }
  } // 获取粘贴的图片列表


  var pastedFiles = paste_event_1.getPasteImgs(e);

  if (!pastedFiles.length) {
    return;
  } // code 中忽略（暂不管它）
  // 执行上传


  var uploadImg = new upload_img_1["default"](editor);
  uploadImg.uploadImg(pastedFiles);
}
/**
 * 粘贴图片
 * @param editor 编辑器对象
 * @param pasteEvents 粘贴事件列表
 */


function bindPasteImg(editor) {
  /**
   * 绑定 paste 事件
   * 这里使用了unshift，以前是push
   * 在以前的流程中，pasteImgHandler触发之前，会调用到window.getSelection().removeAllRanges()
   * 会导致性能变差。在编辑器中粘贴，粘贴耗时多了100+ms，根本原因未知
   * 最小复现demo，在div内粘贴图片就可以看到getData耗时异常得长
   * <html>
   *     <div id="a" contenteditable="true"></div>
   *     <script>
   *         const div = document.getElementById('a')
   *         div.addEventListener('paste', (e) => {
   *             window.getSelection().removeAllRanges()
   *             e.clipboardData.getData('text/html')
   *         })
   *     </script>
   * </html>
   * 因此改成unshift，先触发pasteImgHandler就不会有性能问题
   */
  editor.txt.eventHooks.pasteEvents.unshift(function (e) {
    pasteImgHandler(e, editor);
  });
}

exports["default"] = bindPasteImg;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 拖拽上传图片
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var upload_img_1 = tslib_1.__importDefault(__webpack_require__(97));

function bindDropImg(editor) {
  /**
   * 拖拽图片的事件
   * @param e 事件参数
   */
  function dropImgHandler(e) {
    var files = e.dataTransfer && e.dataTransfer.files;

    if (!files || !files.length) {
      return;
    } // 上传图片


    var uploadImg = new upload_img_1["default"](editor);
    uploadImg.uploadImg(files);
  } // 绑定 drop 事件


  editor.txt.eventHooks.dropEvents.push(dropImgHandler);
}

exports["default"] = bindDropImg;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 图片拖拽事件绑定
 * @author xiaokyo
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _find = _interopRequireDefault(__webpack_require__(30));

var _parseFloat2 = _interopRequireDefault(__webpack_require__(355));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.createShowHideFn = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

__webpack_require__(360);

var util_1 = __webpack_require__(6);
/**
 * 设置拖拽框的rect
 * @param $drag drag Dom
 * @param width 要设置的宽度
 * @param height 要设置的高度
 * @param left 要设置的左边
 * @param top 要设置的顶部距离
 */


function setDragStyle($drag, width, height, left, top) {
  $drag.attr('style', "width:" + width + "px; height:" + height + "px; left:" + left + "px; top:" + top + "px;");
}
/**
 * 生成一个图片指定大小的拖拽框
 * @param editor 编辑器实例
 * @param $textContainerElem 编辑框对象
 */


function createDragBox(editor, $textContainerElem) {
  var $drag = dom_core_1["default"]("<div class=\"w-e-img-drag-mask\">\n            <div class=\"w-e-img-drag-show-size\"></div>\n            <div class=\"w-e-img-drag-rb\"></div>\n         </div>");
  $drag.hide();
  $textContainerElem.append($drag);
  return $drag;
}
/**
 * 显示拖拽框并设置宽度
 * @param $textContainerElem 编辑框实例
 * @param $drag 拖拽框对象
 */


function showDargBox($textContainerElem, $drag, $img) {
  var boxRect = $textContainerElem.getBoundingClientRect();
  var rect = $img.getBoundingClientRect();
  var rectW = rect.width.toFixed(2);
  var rectH = rect.height.toFixed(2);
  (0, _find["default"])($drag).call($drag, '.w-e-img-drag-show-size').text(rectW + "px * " + rectH + "px");
  setDragStyle($drag, (0, _parseFloat2["default"])(rectW), (0, _parseFloat2["default"])(rectH), rect.left - boxRect.left, rect.top - boxRect.top);
  $drag.show();
}
/**
 * 生成图片拖拽框的 显示/隐藏 函数
 */


function createShowHideFn(editor) {
  var $textContainerElem = editor.$textContainerElem;
  var $imgTarget; // 生成拖拽框

  var $drag = createDragBox(editor, $textContainerElem);
  /**
   * 设置拖拽事件
   * @param $drag 拖拽框的domElement
   * @param $textContainerElem 编辑器实例
   */

  function bindDragEvents($drag, $container) {
    $drag.on('click', function (e) {
      e.stopPropagation();
    });
    $drag.on('mousedown', '.w-e-img-drag-rb', function (e) {
      // e.stopPropagation()
      e.preventDefault();
      if (!$imgTarget) return;
      var firstX = e.clientX;
      var firstY = e.clientY;
      var boxRect = $container.getBoundingClientRect();
      var imgRect = $imgTarget.getBoundingClientRect();
      var width = imgRect.width;
      var height = imgRect.height;
      var left = imgRect.left - boxRect.left;
      var top = imgRect.top - boxRect.top;
      var ratio = width / height;
      var setW = width;
      var setH = height;
      var $document = dom_core_1["default"](document);

      function offEvents() {
        $document.off('mousemove', mouseMoveHandler);
        $document.off('mouseup', mouseUpHandler);
      }

      function mouseMoveHandler(ev) {
        ev.stopPropagation();
        ev.preventDefault();
        setW = width + (ev.clientX - firstX);
        setH = height + (ev.clientY - firstY); // 等比计算

        if (setW / setH != ratio) {
          setH = setW / ratio;
        }

        setW = (0, _parseFloat2["default"])(setW.toFixed(2));
        setH = (0, _parseFloat2["default"])(setH.toFixed(2));
        (0, _find["default"])($drag).call($drag, '.w-e-img-drag-show-size').text(setW.toFixed(2).replace('.00', '') + "px * " + setH.toFixed(2).replace('.00', '') + "px");
        setDragStyle($drag, setW, setH, left, top);
      }

      $document.on('mousemove', mouseMoveHandler);

      function mouseUpHandler() {
        $imgTarget.attr('width', setW + '');
        $imgTarget.attr('height', setH + '');
        var newImgRect = $imgTarget.getBoundingClientRect();
        setDragStyle($drag, setW, setH, newImgRect.left - boxRect.left, newImgRect.top - boxRect.top); // 解绑事件

        offEvents();
      }

      $document.on('mouseup', mouseUpHandler); // 解绑事件

      $document.on('mouseleave', offEvents);
    });
  } // 显示拖拽框


  function showDrag($target) {
    if (util_1.UA.isIE()) return false;

    if ($target) {
      $imgTarget = $target;
      showDargBox($textContainerElem, $drag, $imgTarget);
    }
  } // 隐藏拖拽框


  function hideDrag() {
    (0, _find["default"])($textContainerElem).call($textContainerElem, '.w-e-img-drag-mask').hide();
  } // 事件绑定


  bindDragEvents($drag, $textContainerElem); // 后期改成 blur 触发

  dom_core_1["default"](document).on('click', hideDrag);
  editor.beforeDestroy(function () {
    dom_core_1["default"](document).off('click', hideDrag);
  });
  return {
    showDrag: showDrag,
    hideDrag: hideDrag
  };
}

exports.createShowHideFn = createShowHideFn;
/**
 * 点击事件委托
 * @param editor 编辑器实例
 */

function bindDragImgSize(editor) {
  var _a = createShowHideFn(editor),
      showDrag = _a.showDrag,
      hideDrag = _a.hideDrag; // 显示拖拽框


  editor.txt.eventHooks.imgClickEvents.push(showDrag); // 隐藏拖拽框

  editor.txt.eventHooks.textScrollEvents.push(hideDrag);
  editor.txt.eventHooks.keyupEvents.push(hideDrag);
  editor.txt.eventHooks.toolbarClickEvents.push(hideDrag);
  editor.txt.eventHooks.menuClickEvents.push(hideDrag);
  editor.txt.eventHooks.changeEvents.push(hideDrag);
}

exports["default"] = bindDragImgSize;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(356);

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(357);

module.exports = parent;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(358);
var path = __webpack_require__(10);

module.exports = path.parseFloat;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var parseFloatImplementation = __webpack_require__(359);

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
$({ global: true, forced: parseFloat != parseFloatImplementation }, {
  parseFloat: parseFloatImplementation
});


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var trim = __webpack_require__(92).trim;
var whitespaces = __webpack_require__(72);

var $parseFloat = global.parseFloat;
var FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity;

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
module.exports = FORCED ? function parseFloat(string) {
  var trimmedString = trim(String(string));
  var result = $parseFloat(trimmedString);
  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(361);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-text-container {\n  overflow: hidden;\n}\n.w-e-img-drag-mask {\n  position: absolute;\n  z-index: 1;\n  border: 1px dashed #ccc;\n  box-sizing: border-box;\n}\n.w-e-img-drag-mask .w-e-img-drag-rb {\n  position: absolute;\n  right: -5px;\n  bottom: -5px;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: #ccc;\n  cursor: se-resize;\n}\n.w-e-img-drag-mask .w-e-img-drag-show-size {\n  min-width: 110px;\n  height: 22px;\n  line-height: 22px;\n  font-size: 14px;\n  color: #999;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: #999;\n  color: #fff;\n  border-radius: 2px;\n  padding: 0 5px;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description tooltip 事件
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.createShowHideFn = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36));
/**
 * 生成 Tooltip 的显示隐藏函数
 */


function createShowHideFn(editor) {
  var tooltip;

  var t = function t(text, prefix) {
    if (prefix === void 0) {
      prefix = '';
    }

    return editor.i18next.t(prefix + text);
  };
  /**
   * 显示 tooltip
   * @param $node 链接元素
   */


  function showImgTooltip($node) {
    var conf = [{
      $elem: dom_core_1["default"]("<span class='w-e-icon-trash-o'></span>"),
      onClick: function onClick(editor, $node) {
        // 选中img元素
        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();
        editor.cmd["do"]('delete'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]('<span>30%</span>'),
      onClick: function onClick(editor, $node) {
        $node.attr('width', '30%');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]('<span>50%</span>'),
      onClick: function onClick(editor, $node) {
        $node.attr('width', '50%');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]('<span>100%</span>'),
      onClick: function onClick(editor, $node) {
        $node.attr('width', '100%');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }];
    conf.push({
      $elem: dom_core_1["default"]("<span>" + t('重置') + "</span>"),
      onClick: function onClick(editor, $node) {
        $node.removeAttr('width');
        $node.removeAttr('height'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    });

    if ($node.attr('data-href')) {
      conf.push({
        $elem: dom_core_1["default"]("<span>" + t('查看链接') + "</span>"),
        onClick: function onClick(editor, $node) {
          var link = $node.attr('data-href');

          if (link) {
            link = decodeURIComponent(link);
            window.open(link, '_target');
          } // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。


          return true;
        }
      });
    }

    tooltip = new Tooltip_1["default"](editor, $node, conf);
    tooltip.create();
  }
  /**
   * 隐藏 tooltip
   */


  function hideImgTooltip() {
    // 移除 tooltip
    if (tooltip) {
      tooltip.remove();
      tooltip = null;
    }
  }

  return {
    showImgTooltip: showImgTooltip,
    hideImgTooltip: hideImgTooltip
  };
}

exports.createShowHideFn = createShowHideFn;
/**
 * 绑定 tooltip 事件
 * @param editor 编辑器实例
 */

function bindTooltipEvent(editor) {
  var _a = createShowHideFn(editor),
      showImgTooltip = _a.showImgTooltip,
      hideImgTooltip = _a.hideImgTooltip; // 点击图片元素是，显示 tooltip


  editor.txt.eventHooks.imgClickEvents.push(showImgTooltip); // 点击其他地方，或者滚动时，隐藏 tooltip

  editor.txt.eventHooks.clickEvents.push(hideImgTooltip);
  editor.txt.eventHooks.keyupEvents.push(hideImgTooltip);
  editor.txt.eventHooks.toolbarClickEvents.push(hideImgTooltip);
  editor.txt.eventHooks.menuClickEvents.push(hideImgTooltip);
  editor.txt.eventHooks.textScrollEvents.push(hideImgTooltip);
  editor.txt.eventHooks.imgDragBarMouseDownEvents.push(hideImgTooltip); // change 时隐藏

  editor.txt.eventHooks.changeEvents.push(hideImgTooltip);
}

exports["default"] = bindTooltipEvent;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description image 菜单 panel tab 配置
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var upload_img_1 = tslib_1.__importDefault(__webpack_require__(97));

function default_1(editor) {
  var _context;

  var config = editor.config;
  var uploadImg = new upload_img_1["default"](editor); // panel 中需要用到的id

  var upTriggerId = util_1.getRandom('up-trigger-id');
  var upFileId = util_1.getRandom('up-file-id');
  var linkUrlId = util_1.getRandom('input-link-url');
  var linkUrlAltId = util_1.getRandom('input-link-url-alt');
  var linkUrlHrefId = util_1.getRandom('input-link-url-href');
  var linkBtnId = util_1.getRandom('btn-link');
  var i18nPrefix = 'menus.panelMenus.image.';

  var t = function t(text, prefix) {
    if (prefix === void 0) {
      prefix = i18nPrefix;
    }

    return editor.i18next.t(prefix + text);
  };
  /**
   * 校验网络图片链接是否合法
   * @param linkImg 网络图片链接
   */


  function checkLinkImg(src, linkUrlAltText, linkUrlHrefText) {
    //查看开发者自定义配置的返回值
    var check = config.linkImgCheck(src);

    if (check === true) {
      return true;
    } else if (typeof check === 'string') {
      //用户未能通过开发者的校验，开发者希望我们提示这一字符串
      config.customAlert(check, 'error');
    }

    return false;
  } // tabs 配置 -----------------------------------------


  var fileMultipleAttr = config.uploadImgMaxLength === 1 ? '' : 'multiple="multiple"';
  var accepts = (0, _map["default"])(_context = config.uploadImgAccept).call(_context, function (item) {
    return "image/" + item;
  }).join(',');
  /**
   * 设置模板的类名和icon图标
   * w-e-menu是作为button菜单的模板
   * w-e-up-img-container是做为panel菜单的窗口内容的模板
   * @param containerClass 模板最外层的类名
   * @param iconClass 模板中icon的类名
   * @param titleName 模板中标题的名称 需要则设置不需要则设为空字符
   */

  var getUploadImgTpl = function getUploadImgTpl(containerClass, iconClass, titleName) {
    return "<div class=\"" + containerClass + "\" data-title=\"" + titleName + "\">\n            <div id=\"" + upTriggerId + "\" class=\"w-e-up-btn\">\n                <i class=\"" + iconClass + "\"></i>\n            </div>\n            <div style=\"display:none;\">\n                <input id=\"" + upFileId + "\" type=\"file\" " + fileMultipleAttr + " accept=\"" + accepts + "\"/>\n            </div>\n        </div>";
  };

  var uploadEvents = [// 触发选择图片
  {
    selector: '#' + upTriggerId,
    type: 'click',
    fn: function fn() {
      var uploadImgFromMedia = config.uploadImgFromMedia;

      if (uploadImgFromMedia && typeof uploadImgFromMedia === 'function') {
        uploadImgFromMedia();
        return true;
      }

      var $file = dom_core_1["default"]('#' + upFileId);
      var fileElem = $file.elems[0];

      if (fileElem) {
        fileElem.click();
      } else {
        // 返回 true 可关闭 panel
        return true;
      }
    }
  }, // 选择图片完毕
  {
    selector: '#' + upFileId,
    type: 'change',
    fn: function fn() {
      var $file = dom_core_1["default"]('#' + upFileId);
      var fileElem = $file.elems[0];

      if (!fileElem) {
        // 返回 true 可关闭 panel
        return true;
      } // 获取选中的 file 对象列表


      var fileList = fileElem.files;

      if (fileList === null || fileList === void 0 ? void 0 : fileList.length) {
        uploadImg.uploadImg(fileList);
      } // 返回 true 可关闭 panel


      return true;
    }
  }];
  var linkImgInputs = ["<input\n            id=\"" + linkUrlId + "\"\n            type=\"text\"\n            class=\"block\"\n            placeholder=\"" + t('图片地址') + "\"/>"];

  if (config.showLinkImgAlt) {
    linkImgInputs.push("\n        <input\n            id=\"" + linkUrlAltId + "\"\n            type=\"text\"\n            class=\"block\"\n            placeholder=\"" + t('图片文字说明') + "\"/>");
  }

  if (config.showLinkImgHref) {
    linkImgInputs.push("\n        <input\n            id=\"" + linkUrlHrefId + "\"\n            type=\"text\"\n            class=\"block\"\n            placeholder=\"" + t('跳转链接') + "\"/>");
  }

  var tabsConf = [// first tab
  {
    // 标题
    title: t('上传图片'),
    // 模板
    tpl: getUploadImgTpl('w-e-up-img-container', 'w-e-icon-upload2', ''),
    // 事件绑定
    events: uploadEvents
  }, // second tab
  {
    title: t('网络图片'),
    tpl: "<div>\n                    " + linkImgInputs.join('') + "\n                    <div class=\"w-e-button-container\">\n                        <button type=\"button\" id=\"" + linkBtnId + "\" class=\"right\">" + t('插入', '') + "</button>\n                    </div>\n                </div>",
    events: [{
      selector: '#' + linkBtnId,
      type: 'click',
      fn: function fn() {
        var _context2;

        var $linkUrl = dom_core_1["default"]('#' + linkUrlId);
        var url = (0, _trim["default"])(_context2 = $linkUrl.val()).call(_context2); //如果url为空则直接返回

        if (!url) return;
        var linkUrlAltText;

        if (config.showLinkImgAlt) {
          var _context3;

          linkUrlAltText = (0, _trim["default"])(_context3 = dom_core_1["default"]('#' + linkUrlAltId).val()).call(_context3);
        }

        var linkUrlHrefText;

        if (config.showLinkImgHref) {
          var _context4;

          linkUrlHrefText = (0, _trim["default"])(_context4 = dom_core_1["default"]('#' + linkUrlHrefId).val()).call(_context4);
        } //如果不能通过校验也直接返回


        if (!checkLinkImg(url)) return; //插入图片url

        uploadImg.insertImg(url, linkUrlAltText, linkUrlHrefText); // 返回 true 表示函数执行结束之后关闭 panel

        return true;
      }
    }]
  } // second tab end
  ]; // tabs end
  // 最终的配置 -----------------------------------------

  var conf = {
    width: 300,
    height: 0,
    tabs: [],
    onlyUploadConf: {
      $elem: dom_core_1["default"](getUploadImgTpl('w-e-menu', 'w-e-icon-image', '图片')),
      events: uploadEvents
    }
  }; // 显示“上传图片”

  if (window.FileReader && (config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg || config.uploadImgFromMedia)) {
    conf.tabs.push(tabsConf[0]);
  } // 显示“插入网络图片”


  if (config.showLinkImg) {
    conf.tabs.push(tabsConf[1]);
    conf.onlyUploadConf = undefined;
  }

  return conf;
}

exports["default"] = default_1;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 增加缩进/减少缩进
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var operate_element_1 = tslib_1.__importDefault(__webpack_require__(365));

var Indent =
/** @class */
function (_super) {
  tslib_1.__extends(Indent, _super);

  function Indent(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u7F29\u8FDB\">\n                <i class=\"w-e-icon-indent-increase\"></i>\n            </div>");
    var dropListConf = {
      width: 130,
      title: '设置缩进',
      type: 'list',
      list: [{
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-indent-increase w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.indent.增加缩进') + "\n                        <p>"),
        value: 'increase'
      }, {
        $elem: dom_core_1["default"]("<p>\n                            <i class=\"w-e-icon-indent-decrease w-e-drop-list-item\"></i>\n                            " + editor.i18next.t('menus.dropListMenu.indent.减少缩进') + "\n                        <p>"),
        value: 'decrease'
      }],
      clickHandler: function clickHandler(value) {
        // 注意 this 是指向当前的 Indent 对象
        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, dropListConf) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  Indent.prototype.command = function (value) {
    var editor = this.editor;
    var $selectionElem = editor.selection.getSelectionContainerElem(); // 判断 当前选区为 textElem 时

    if ($selectionElem && editor.$textElem.equal($selectionElem)) {
      // 当 当前选区 等于 textElem 时
      // 代表 当前选区 可能是一个选择了一个完整的段落或者多个段落
      var $elems = editor.selection.getSelectionRangeTopNodes();

      if ($elems.length > 0) {
        (0, _forEach["default"])($elems).call($elems, function (item) {
          operate_element_1["default"](dom_core_1["default"](item), value, editor);
        });
      }
    } else {
      // 当 当前选区 不等于 textElem 时
      // 代表 当前选区要么是一个段落，要么是段落中的一部分
      if ($selectionElem && $selectionElem.length > 0) {
        (0, _forEach["default"])($selectionElem).call($selectionElem, function (item) {
          operate_element_1["default"](dom_core_1["default"](item), value, editor);
        });
      }
    } // 恢复选区


    editor.selection.restoreSelection();
    this.tryChangeActive();
  };
  /**
   * 尝试改变菜单激活（高亮）状态
   */


  Indent.prototype.tryChangeActive = function () {
    var editor = this.editor;
    var $selectionElem = editor.selection.getSelectionStartElem();
    var $selectionStartElem = dom_core_1["default"]($selectionElem).getNodeTop(editor);
    if ($selectionStartElem.length <= 0) return;

    if ($selectionStartElem.elems[0].style['paddingLeft'] != '') {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Indent;
}(DropListMenu_1["default"]);

exports["default"] = Indent;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 对节点 操作 进行封装
 *                  获取当前节点的段落
 *                  根据type判断是增加还是减少缩进
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _slice = _interopRequireDefault(__webpack_require__(44));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var increase_indent_style_1 = tslib_1.__importDefault(__webpack_require__(366));

var decrease_indent_style_1 = tslib_1.__importDefault(__webpack_require__(367));

var lengthRegex = /^(\d+)(\w+)$/;
var percentRegex = /^(\d+)%$/;

function parseIndentation(editor) {
  var indentation = editor.config.indentation;

  if (typeof indentation === 'string') {
    if (lengthRegex.test(indentation)) {
      var _context;

      var _a = (0, _slice["default"])(_context = (0, _trim["default"])(indentation).call(indentation).match(lengthRegex)).call(_context, 1, 3),
          value = _a[0],
          unit = _a[1];

      return {
        value: Number(value),
        unit: unit
      };
    } else if (percentRegex.test(indentation)) {
      return {
        value: Number((0, _trim["default"])(indentation).call(indentation).match(percentRegex)[1]),
        unit: '%'
      };
    }
  } else if (indentation.value !== void 0 && indentation.unit) {
    return indentation;
  }

  return {
    value: 2,
    unit: 'em'
  };
}

function operateElement($node, type, editor) {
  var $elem = $node.getNodeTop(editor);
  var reg = /^P$/i;

  if (reg.test($elem.getNodeName())) {
    if (type === 'increase') increase_indent_style_1["default"]($elem, parseIndentation(editor));else if (type === 'decrease') decrease_indent_style_1["default"]($elem, parseIndentation(editor));
  }
}

exports["default"] = operateElement;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 增加缩进
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _slice = _interopRequireDefault(__webpack_require__(44));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

function increaseIndentStyle($node, options) {
  var $elem = $node.elems[0];

  if ($elem.style['paddingLeft'] === '') {
    $node.css('padding-left', options.value + options.unit);
  } else {
    var oldPL = $elem.style['paddingLeft'];
    var oldVal = (0, _slice["default"])(oldPL).call(oldPL, 0, oldPL.length - options.unit.length);
    var newVal = Number(oldVal) + options.value;
    $node.css('padding-left', "" + newVal + options.unit);
  }
}

exports["default"] = increaseIndentStyle;

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 减少缩进
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _slice = _interopRequireDefault(__webpack_require__(44));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

function decreaseIndentStyle($node, options) {
  var $elem = $node.elems[0];

  if ($elem.style['paddingLeft'] !== '') {
    var oldPL = $elem.style['paddingLeft'];
    var oldVal = (0, _slice["default"])(oldPL).call(oldPL, 0, oldPL.length - options.unit.length);
    var newVal = Number(oldVal) - options.value;

    if (newVal > 0) {
      $node.css('padding-left', "" + newVal + options.unit);
    } else {
      $node.css('padding-left', '');
    }
  }
}

exports["default"] = decreaseIndentStyle;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description 插入表情
 * @author liuwe
 */


var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var create_panel_conf_1 = tslib_1.__importDefault(__webpack_require__(369));

var Emoticon =
/** @class */
function (_super) {
  tslib_1.__extends(Emoticon, _super);

  function Emoticon(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u8868\u60C5\">\n                <i class=\"w-e-icon-happy\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 创建 panel
   */


  Emoticon.prototype.createPanel = function () {
    var conf = create_panel_conf_1["default"](this.editor);
    var panel = new Panel_1["default"](this, conf);
    panel.create();
  };
  /**
   * 菜单表情点击事件
   */


  Emoticon.prototype.clickHandler = function () {
    this.createPanel();
  };

  Emoticon.prototype.tryChangeActive = function () {};

  return Emoticon;
}(PanelMenu_1["default"]);

exports["default"] = Emoticon;

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description  表情菜单 panel配置
 * @author liuwei
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

var _filter = _interopRequireDefault(__webpack_require__(74));

var _trim = _interopRequireDefault(__webpack_require__(19));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

function default_1(editor) {
  // 声明emotions数据结构
  var emotions = editor.config.emotions;
  /* tabs配置项 ==================================================================*/
  // 生成表情结构 TODO jele type类型待优化

  function GenerateExpressionStructure(ele) {
    // 返回为一个数组对象
    var res = []; // 如果type是image类型则生成一个img标签

    if (ele.type == 'image') {
      var _context;

      res = (0, _map["default"])(_context = ele.content).call(_context, function (con) {
        if (typeof con == 'string') return '';
        return "<span  title=\"" + con.alt + "\">\n                    <img class=\"eleImg\" data-emoji=\"" + con.alt + "\" style src=\"" + con.src + "\" alt=\"[" + con.alt + "]\">\n                </span>";
      });
      res = (0, _filter["default"])(res).call(res, function (s) {
        return s !== '';
      });
    } //否则直接当内容处理
    else {
        var _context2;

        res = (0, _map["default"])(_context2 = ele.content).call(_context2, function (con) {
          return "<span class=\"eleImg\" title=\"" + con + "\">" + con + "</span>";
        });
      }

    return res.join('').replace(/&nbsp;/g, '');
  }

  var tabsConf = (0, _map["default"])(emotions).call(emotions, function (ele) {
    return {
      title: editor.i18next.t("menus.panelMenus.emoticon." + ele.title),
      // 判断type类型如果是image则以img的形式插入否则以内容
      tpl: "<div>" + GenerateExpressionStructure(ele) + "</div>",
      events: [{
        selector: '.eleImg',
        type: 'click',
        fn: function fn(e) {
          // e为事件对象
          var $target = dom_core_1["default"](e.target);
          var nodeName = $target.getNodeName();
          var insertHtml;

          if (nodeName === 'IMG') {
            var _context3;

            // 插入图片
            insertHtml = (0, _trim["default"])(_context3 = $target.parent().html()).call(_context3);
          } else {
            // 插入 emoji
            insertHtml = '<span>' + $target.html() + '</span>';
          }

          editor.cmd["do"]('insertHTML', insertHtml); // 示函数执行结束之后关闭 panel

          return true;
        }
      }]
    };
  });
  /* tabs配置项 =================================================================end*/
  // 最终的配置 -----------------------------------------

  var conf = {
    width: 300,
    height: 230,
    tabs: tabsConf
  };
  return conf;
}

exports["default"] = default_1;

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.createListHandle = exports.ClassType = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var WrapListHandle_1 = tslib_1.__importDefault(__webpack_require__(371));

var JoinListHandle_1 = tslib_1.__importDefault(__webpack_require__(373));

var StartJoinListHandle_1 = tslib_1.__importDefault(__webpack_require__(374));

var EndJoinListHandle_1 = tslib_1.__importDefault(__webpack_require__(375));

var OtherListHandle_1 = tslib_1.__importDefault(__webpack_require__(376));

var ClassType;

(function (ClassType) {
  ClassType["Wrap"] = "WrapListHandle";
  ClassType["Join"] = "JoinListHandle";
  ClassType["StartJoin"] = "StartJoinListHandle";
  ClassType["EndJoin"] = "EndJoinListHandle";
  ClassType["Other"] = "OtherListHandle";
})(ClassType = exports.ClassType || (exports.ClassType = {}));

var handle = {
  WrapListHandle: WrapListHandle_1["default"],
  JoinListHandle: JoinListHandle_1["default"],
  StartJoinListHandle: StartJoinListHandle_1["default"],
  EndJoinListHandle: EndJoinListHandle_1["default"],
  OtherListHandle: OtherListHandle_1["default"]
};

function createListHandle(classType, options, range) {
  if (classType === ClassType.Other && range === undefined) {
    throw new Error('other 类需要传入 range');
  }

  return classType !== ClassType.Other ? new handle[classType](options) : new handle[classType](options, range);
}

exports.createListHandle = createListHandle;
/**
 * 统一执行的接口
 */

var ListHandleCommand =
/** @class */
function () {
  function ListHandleCommand(handle) {
    this.handle = handle;
    this.handle.exec();
  }

  ListHandleCommand.prototype.getSelectionRangeElem = function () {
    return dom_core_1["default"](this.handle.selectionRangeElem.get());
  };

  return ListHandleCommand;
}();

exports["default"] = ListHandleCommand;

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var ListHandle_1 = __webpack_require__(57);

var utils_1 = __webpack_require__(46);
/**
 * 选区在序列内的处理
 */


var WrapListHandle =
/** @class */
function (_super) {
  tslib_1.__extends(WrapListHandle, _super);

  function WrapListHandle(options) {
    return _super.call(this, options) || this;
  }

  WrapListHandle.prototype.exec = function () {
    var _a = this.options,
        listType = _a.listType,
        listTarget = _a.listTarget,
        $selectionElem = _a.$selectionElem,
        $startElem = _a.$startElem,
        $endElem = _a.$endElem;
    var $containerFragment; // 容器 - HTML 文档片段

    var $nodes = []; // 获取选中的段落
    // 获取 selectionElem 的标签名

    var containerNodeName = $selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.getNodeName(); // 获取开始以及结束的 li 元素

    var $start = $startElem.prior;
    var $end = $endElem.prior; // =====================================
    // 当 开始节点 和 结束节点 没有 prior
    // 并且 开始节点 没有前一个兄弟节点
    // 并且 结束节点 没有后一个兄弟节点
    // 即代表 全选序列
    // =====================================

    if (!$startElem.prior && !$endElem.prior || !($start === null || $start === void 0 ? void 0 : $start.prev().length) && !($end === null || $end === void 0 ? void 0 : $end.next().length)) {
      var _context;
      (0, _forEach["default"])(_context = $selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.children()).call(_context, function ($node) {
        $nodes.push(dom_core_1["default"]($node));
      }); // =====================================
      // 当 selectionElem 的标签名和按钮类型 一致 的时候
      // 代表着当前的操作是 取消 序列
      // =====================================

      if (containerNodeName === listType) {
        // 生成对应的段落(p)并添加到文档片段中，然后删除掉无用的 li
        $containerFragment = utils_1.createElementFragment($nodes, utils_1.createDocumentFragment(), // 创建 文档片段
        'p');
      } // =====================================
      // 当 selectionElem 的标签名和按钮类型 不一致 的时候
      // 代表着当前的操作是 转换 序列
      // =====================================
      else {
          // 创建 序列节点
          $containerFragment = utils_1.createElement(listTarget); // 因为是转换，所以 li 元素可以直接使用

          (0, _forEach["default"])($nodes).call($nodes, function ($node) {
            $containerFragment.append($node.elems[0]);
          });
        } // 把 文档片段 或 序列节点 插入到 selectionElem 的前面


      this.selectionRangeElem.set($containerFragment); // 插入到 $selectionElem 之前

      utils_1.insertBefore($selectionElem, $containerFragment, $selectionElem.elems[0]); // 删除无用的 selectionElem 因为它被掏空了

      $selectionElem.remove();
    } // =====================================
    // 当不是全选序列的时候就代表是非全选序列(废话)
    // 非全选序列的情况
    // =====================================
    else {
        // 获取选中的内容
        var $startDom = $start;

        while ($startDom.length) {
          $nodes.push($startDom);
          ($end === null || $end === void 0 ? void 0 : $end.equal($startDom)) ? $startDom = dom_core_1["default"](undefined) : // 结束
          $startDom = $startDom.next(); // 继续
        } // 获取开始节点的上一个兄弟节点


        var $prveDom = $start.prev(); // 获取结束节点的下一个兄弟节点

        var $nextDom = $end.next(); // =====================================
        // 当 selectionElem 的标签名和按钮类型一致的时候
        // 代表着当前的操作是 取消 序列
        // =====================================

        if (containerNodeName === listType) {
          // 生成对应的段落(p)并添加到文档片段中，然后删除掉无用的 li
          $containerFragment = utils_1.createElementFragment($nodes, utils_1.createDocumentFragment(), // 创建 文档片段
          'p');
        } // =====================================
        // 当 selectionElem 的标签名和按钮类型不一致的时候
        // 代表着当前的操作是 转换 序列
        // =====================================
        else {
            // 创建 文档片段
            $containerFragment = utils_1.createElement(listTarget); // 因为是转换，所以 li 元素可以直接使用

            (0, _forEach["default"])($nodes).call($nodes, function ($node) {
              $containerFragment.append($node.elems[0]);
            });
          } // =====================================
        // 当 prveDom 和 nextDom 都存在的时候
        // 代表着当前选区是在序列的中间
        // 所以要先把 下半部分 未选择的 li 元素独立出来生成一个 序列
        // =====================================


        if ($prveDom.length && $nextDom.length) {
          // 获取尾部的元素
          var $tailDomArr = [];

          while ($nextDom.length) {
            $tailDomArr.push($nextDom);
            $nextDom = $nextDom.next();
          } // 创建 尾部序列节点


          var $tailDocFragment_1 = utils_1.createElement(containerNodeName); // 把尾部元素节点添加到尾部序列节点中

          (0, _forEach["default"])($tailDomArr).call($tailDomArr, function ($node) {
            $tailDocFragment_1.append($node.elems[0]);
          }); // 把尾部序列节点插入到 selectionElem 的后面

          dom_core_1["default"]($tailDocFragment_1).insertAfter($selectionElem); // =====================================
          // 获取选区容器元素的父元素，一般就是编辑区域
          // 然后判断 selectionElem 是否还有下一个兄弟节点
          // 如果有，就把文档片段添加到 selectionElem 下一个兄弟节点前
          // 如果没有，就把文档片段添加到 编辑区域 末尾
          // =====================================

          this.selectionRangeElem.set($containerFragment);
          var $selectionNextDom = $selectionElem.next();
          $selectionNextDom.length ? utils_1.insertBefore($selectionElem, $containerFragment, $selectionNextDom.elems[0]) : $selectionElem.parent().elems[0].append($containerFragment);
        } // =====================================
        // 不管是 取消 还是 转换 都需要重新插入节点
        //
        // prveDom.length 等于 0 即代表选区是 selectionElem 序列的上半部分
        // 上半部分的 li 元素
        // =====================================
        else if (!$prveDom.length) {
            // 文档片段插入到 selectionElem 之前
            this.selectionRangeElem.set($containerFragment);
            utils_1.insertBefore($selectionElem, $containerFragment, $selectionElem.elems[0]);
          } // =====================================
          // 不管是 取消 还是 转换 都需要重新插入节点
          //
          // nextDom.length 等于 0 即代表选区是 selectionElem 序列的下半部分
          // 下半部分的 li 元素  if (!$nextDom.length)
          // =====================================
          else {
              // 文档片段插入到 selectionElem 之后
              this.selectionRangeElem.set($containerFragment);
              var $selectionNextDom = $selectionElem.next();
              $selectionNextDom.length ? utils_1.insertBefore($selectionElem, $containerFragment, $selectionNextDom.elems[0]) : $selectionElem.parent().elems[0].append($containerFragment);
            }
      }
  };

  return WrapListHandle;
}(ListHandle_1.ListHandle);

exports["default"] = WrapListHandle;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/**
 * @description 选区的 Element
 * @author tonghan
 */

var SelectionRangeElem =
/** @class */
function () {
  function SelectionRangeElem() {
    this._element = null;
  }
  /**
   * 设置 SelectionRangeElem 的值
   * @param { SetSelectionRangeType } data
   */


  SelectionRangeElem.prototype.set = function (data) {
    //
    if (data instanceof DocumentFragment) {
      var _context;

      var childNode_1 = [];
      (0, _forEach["default"])(_context = data.childNodes).call(_context, function ($node) {
        childNode_1.push($node);
      });
      data = childNode_1;
    }

    this._element = data;
  };
  /**
   * 获取 SelectionRangeElem 的值
   * @returns { SelectionRangeType } Elem
   */


  SelectionRangeElem.prototype.get = function () {
    return this._element;
  };
  /**
   * 清除 SelectionRangeElem 的值
   */


  SelectionRangeElem.prototype.clear = function () {
    this._element = null;
  };

  return SelectionRangeElem;
}();

exports["default"] = SelectionRangeElem;

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var ListHandle_1 = __webpack_require__(57);

var utils_1 = __webpack_require__(46);

var JoinListHandle =
/** @class */
function (_super) {
  tslib_1.__extends(JoinListHandle, _super);

  function JoinListHandle(options) {
    return _super.call(this, options) || this;
  }

  JoinListHandle.prototype.exec = function () {
    var _a, _b, _c, _d, _e, _f, _g;

    var _h = this.options,
        editor = _h.editor,
        listType = _h.listType,
        listTarget = _h.listTarget,
        $startElem = _h.$startElem,
        $endElem = _h.$endElem; // 容器 - HTML 文档片段

    var $containerFragment; // 获取选中的段落

    var $nodes = editor.selection.getSelectionRangeTopNodes(); // 获取开始段落和结束段落 标签名

    var startNodeName = $startElem === null || $startElem === void 0 ? void 0 : $startElem.getNodeName();
    var endNodeName = $endElem === null || $endElem === void 0 ? void 0 : $endElem.getNodeName(); // =====================================
    // 开头结尾都是序列的情况下
    // 开头序列 和 结尾序列的标签名一致的时候
    // =====================================

    if (startNodeName === endNodeName) {
      // =====================================
      // 开头序列 和 结尾序列 中间还有其他的段落的时候
      // =====================================
      if ($nodes.length > 2) {
        // 弹出 开头 和 结尾
        $nodes.shift();
        $nodes.pop(); // 把中间部分的节点元素转换成 li 元素并添加到文档片段后删除

        $containerFragment = utils_1.createElementFragment(utils_1.filterSelectionNodes($nodes), // 过滤 $nodes 获取到符合要求的选中元素节点
        utils_1.createDocumentFragment() // 创建 文档片段
        ); // =====================================
        // 由于开头序列 和 结尾序列的标签名一样，所以只判断了开头序列的
        // 当开头序列的标签名和按钮类型 一致 的时候
        // 代表着当前是一个 设置序列 的操作
        // =====================================

        if (startNodeName === listType) {
          // 把结束序列的 li 元素添加到 文档片段中
          (_a = $endElem.children()) === null || _a === void 0 ? void 0 : (0, _forEach["default"])(_a).call(_a, function ($list) {
            $containerFragment.append($list);
          }); // 下序列全选被掏空了，就卸磨杀驴吧

          $endElem.remove(); // 在开始序列中添加 文档片段

          this.selectionRangeElem.set($containerFragment);
          $startElem.elems[0].append($containerFragment);
        } // =====================================
        // 由于开头序列 和 结尾序列的标签名一样，所以只判断了开头序列的
        // 当开头序列的标签名和按钮类型 不一致 的时候
        // 代表着当前是一个 转换序列 的操作
        // =====================================
        else {
            // 创建 开始序列和结束序列的文档片段
            var $startFragment = document.createDocumentFragment();
            var $endFragment_1 = document.createDocumentFragment(); // 获取起点元素

            var $startDom = utils_1.getStartPoint($startElem); // 获取上半序列中的选中内容，并添加到文档片段中

            while ($startDom.length) {
              var _element = $startDom.elems[0];
              $startDom = $startDom.next();
              $startFragment.append(_element);
            } // 获取结束元素


            var $endDom = utils_1.getEndPoint($endElem); // 获取下半序列中选中的内容

            var domArr = [];

            while ($endDom.length) {
              domArr.unshift($endDom.elems[0]);
              $endDom = $endDom.prev();
            } // 添加到文档片段中


            (0, _forEach["default"])(domArr).call(domArr, function ($node) {
              $endFragment_1.append($node);
            }); // 合并文档片段

            var $orderFragment = utils_1.createElement(listTarget);
            $orderFragment.append($startFragment);
            $orderFragment.append($containerFragment);
            $orderFragment.append($endFragment_1);
            $containerFragment = $orderFragment; // 插入

            this.selectionRangeElem.set($containerFragment);
            dom_core_1["default"]($orderFragment).insertAfter($startElem); // 序列全选被掏空了后，就卸磨杀驴吧

            !((_b = $startElem.children()) === null || _b === void 0 ? void 0 : _b.length) && $startElem.remove();
            !((_c = $endElem.children()) === null || _c === void 0 ? void 0 : _c.length) && $endElem.remove();
          }
      } // =====================================
      // 开头序列 和 结尾序列 中间没有其他的段落
      // =====================================
      else {
          $nodes.length = 0; // 获取起点元素

          var $startDom = utils_1.getStartPoint($startElem); // 获取上半序列中的选中内容

          while ($startDom.length) {
            $nodes.push($startDom);
            $startDom = $startDom.next();
          } // 获取结束元素


          var $endDom = utils_1.getEndPoint($endElem); // 获取下半序列中选中的内容

          var domArr = []; // 获取下半序列中的选中内容

          while ($endDom.length) {
            domArr.unshift($endDom);
            $endDom = $endDom.prev();
          } // 融合内容


          $nodes.push.apply($nodes, domArr); // =====================================
          // 由于开头序列 和 结尾序列的标签名一样，所以只判断了开头序列的
          // 当开头序列的标签名和按钮类型 一致 的时候
          // 代表着当前是一个 取消序列 的操作
          // =====================================

          if (startNodeName === listType) {
            // 创建 文档片段
            // 把 li 转换为 p 标签
            $containerFragment = utils_1.createElementFragment($nodes, utils_1.createDocumentFragment(), 'p'); // 插入到 endElem 前

            this.selectionRangeElem.set($containerFragment);
            utils_1.insertBefore($startElem, $containerFragment, $endElem.elems[0]);
          } // =====================================
          // 由于开头序列 和 结尾序列的标签名一样，所以只判断了开头序列的
          // 当开头序列的标签名和按钮类型 不一致 的时候
          // 代表着当前是一个 设置序列 的操作
          // =====================================
          else {
              // 创建 序列元素
              $containerFragment = utils_1.createElement(listTarget); // li 元素添加到 序列元素 中

              (0, _forEach["default"])($nodes).call($nodes, function ($list) {
                $containerFragment.append($list.elems[0]);
              }); // 插入到 startElem 之后

              this.selectionRangeElem.set($containerFragment);
              dom_core_1["default"]($containerFragment).insertAfter($startElem);
            } // 序列全选被掏空了后，就卸磨杀驴吧


          !((_d = $startElem.children()) === null || _d === void 0 ? void 0 : _d.length) && $endElem.remove();
          !((_e = $endElem.children()) === null || _e === void 0 ? void 0 : _e.length) && $endElem.remove();
        }
    } // =====================================
    // 由于开头序列 和 结尾序列的标签名不一样
    // =====================================
    else {
        // 下序列元素数组
        var lowerListElems = []; // 获取结束元素

        var $endDom = utils_1.getEndPoint($endElem); // 获取下半序列中选中的内容

        while ($endDom.length) {
          lowerListElems.unshift($endDom);
          $endDom = $endDom.prev();
        } // 上序列元素数组


        var upperListElems = []; // 获取起点元素

        var $startDom = utils_1.getStartPoint($startElem); // 获取上半序列中的选中内容，并添加到文档片段中

        while ($startDom.length) {
          upperListElems.push($startDom);
          $startDom = $startDom.next();
        } // 创建 文档片段


        $containerFragment = utils_1.createDocumentFragment(); // 弹出开头和结尾的序列

        $nodes.shift();
        $nodes.pop(); // 把头部序列的内容添加到文档片段当中

        (0, _forEach["default"])(upperListElems).call(upperListElems, function ($list) {
          return $containerFragment.append($list.elems[0]);
        }); // 生成 li 标签，并且添加到 文档片段中，删除无用节点

        $containerFragment = utils_1.createElementFragment(utils_1.filterSelectionNodes($nodes), // 序列中间的数据 - 进行数据过滤
        $containerFragment); // 把尾部序列的内容添加到文档片段当中

        (0, _forEach["default"])(lowerListElems).call(lowerListElems, function ($list) {
          return $containerFragment.append($list.elems[0]);
        }); // 记录

        this.selectionRangeElem.set($containerFragment); // =====================================
        // 开头序列 和 设置序列类型相同
        // =====================================

        if (startNodeName === listType) {
          // 插入到 开始序列的尾部(作为子元素)
          $startElem.elems[0].append($containerFragment); // 序列全选被掏空了后，就卸磨杀驴吧

          !((_f = $endElem.children()) === null || _f === void 0 ? void 0 : _f.length) && $endElem.remove();
        } // =====================================
        // 结尾序列 和 设置序列类型相同
        // =====================================
        else {
            // 插入到结束序列的顶部(作为子元素)
            if ((_g = $endElem.children()) === null || _g === void 0 ? void 0 : _g.length) {
              var $endElemChild = $endElem.children();
              utils_1.insertBefore($endElemChild, $containerFragment, $endElemChild.elems[0]);
            } else {
              $endElem.elems[0].append($containerFragment);
            }
          }
      }
  };

  return JoinListHandle;
}(ListHandle_1.ListHandle);

exports["default"] = JoinListHandle;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var ListHandle_1 = __webpack_require__(57);

var utils_1 = __webpack_require__(46);

var StartJoinListHandle =
/** @class */
function (_super) {
  tslib_1.__extends(StartJoinListHandle, _super);

  function StartJoinListHandle(options) {
    return _super.call(this, options) || this;
  }

  StartJoinListHandle.prototype.exec = function () {
    var _a;

    var _b = this.options,
        editor = _b.editor,
        listType = _b.listType,
        listTarget = _b.listTarget,
        $startElem = _b.$startElem; // 容器 - HTML 文档片段

    var $containerFragment; // 获取选中的段落

    var $nodes = editor.selection.getSelectionRangeTopNodes(); // 获取开始段落标签名

    var startNodeName = $startElem === null || $startElem === void 0 ? void 0 : $startElem.getNodeName(); // 弹出 开头序列

    $nodes.shift(); // 上序列元素数组

    var upperListElems = []; // 获取起点元素

    var $startDom = utils_1.getStartPoint($startElem); // 获取上半序列中的选中内容，并添加到文档片段中

    while ($startDom.length) {
      upperListElems.push($startDom);
      $startDom = $startDom.next();
    } // =====================================
    // 当前序列类型和开头序列的类型 一致
    // 代表当前是一个 融合(把其他段落加入到开头序列中) 的操作
    // =====================================


    if (startNodeName === listType) {
      $containerFragment = utils_1.createDocumentFragment();
      (0, _forEach["default"])(upperListElems).call(upperListElems, function ($list) {
        return $containerFragment.append($list.elems[0]);
      }); // 生成 li 元属，并删除

      $containerFragment = utils_1.createElementFragment(utils_1.filterSelectionNodes($nodes), // 过滤元素节点数据
      $containerFragment); // 插入到开始序列末尾

      this.selectionRangeElem.set($containerFragment); // this.selectionRangeElem.set($startElem.elems[0])

      $startElem.elems[0].append($containerFragment);
    } // =====================================
    // 当前序列类型和开头序列的类型 不一致
    // 代表当前是一个 设置序列 的操作
    // =====================================
    else {
        // 创建 序列节点
        $containerFragment = utils_1.createElement(listTarget);
        (0, _forEach["default"])(upperListElems).call(upperListElems, function ($list) {
          return $containerFragment.append($list.elems[0]);
        }); // 生成 li 元素，并添加到 序列节点 当中，删除无用节点

        $containerFragment = utils_1.createElementFragment(utils_1.filterSelectionNodes($nodes), // 过滤普通节点
        $containerFragment); // 插入到开始元素

        this.selectionRangeElem.set($containerFragment);
        dom_core_1["default"]($containerFragment).insertAfter($startElem); // 序列全选被掏空了后，就卸磨杀驴吧

        !((_a = $startElem.children()) === null || _a === void 0 ? void 0 : _a.length) && $startElem.remove();
      }
  };

  return StartJoinListHandle;
}(ListHandle_1.ListHandle);

exports["default"] = StartJoinListHandle;

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var ListHandle_1 = __webpack_require__(57);

var utils_1 = __webpack_require__(46);

var EndJoinListHandle =
/** @class */
function (_super) {
  tslib_1.__extends(EndJoinListHandle, _super);

  function EndJoinListHandle(options) {
    return _super.call(this, options) || this;
  }

  EndJoinListHandle.prototype.exec = function () {
    var _a, _b;

    var _c = this.options,
        editor = _c.editor,
        listType = _c.listType,
        listTarget = _c.listTarget,
        $endElem = _c.$endElem; // 容器 - HTML 文档片段

    var $containerFragment; // 获取选中的段落

    var $nodes = editor.selection.getSelectionRangeTopNodes(); // 获取结束段落标签名

    var endNodeName = $endElem === null || $endElem === void 0 ? void 0 : $endElem.getNodeName(); // 弹出 结束序列

    $nodes.pop(); // 下序列元素数组

    var lowerListElems = []; // 获取结束元素

    var $endDom = utils_1.getEndPoint($endElem); // 获取下半序列中选中的内容

    while ($endDom.length) {
      lowerListElems.unshift($endDom);
      $endDom = $endDom.prev();
    } // =====================================
    // 当前序列类型和结束序列的类型 一致
    // 代表当前是一个 融合(把其他段落加入到结束序列中) 的操作
    // =====================================


    if (endNodeName === listType) {
      // 生成 li 元属，并删除原来的 dom 元素
      $containerFragment = utils_1.createElementFragment(utils_1.filterSelectionNodes($nodes), // 过滤元素节点数据
      utils_1.createDocumentFragment() // 创建 文档片段
      );
      (0, _forEach["default"])(lowerListElems).call(lowerListElems, function ($list) {
        return $containerFragment.append($list.elems[0]);
      }); // 插入到结束序列之前

      this.selectionRangeElem.set($containerFragment);

      if ((_a = $endElem.children()) === null || _a === void 0 ? void 0 : _a.length) {
        var $endElemChild = $endElem.children();
        utils_1.insertBefore($endElemChild, $containerFragment, $endElemChild.elems[0]);
      } else {
        $endElem.elems[0].append($containerFragment);
      }
    } // =====================================
    // 当前序列类型和结束序列的类型 不一致
    // 代表当前是一个 设置序列 的操作
    // =====================================
    else {
        // 过滤元素节点数据
        var $selectionNodes = utils_1.filterSelectionNodes($nodes); // 把下序列的内容添加到过滤元素中

        $selectionNodes.push.apply($selectionNodes, lowerListElems); // 生成 li 元素并且添加到序列节点后删除原节点

        $containerFragment = utils_1.createElementFragment($selectionNodes, utils_1.createElement(listTarget) // 创建 序列节点
        ); // 插入到结束序列之前

        this.selectionRangeElem.set($containerFragment);
        dom_core_1["default"]($containerFragment).insertBefore($endElem); // 序列全选被掏空了后，就卸磨杀驴吧

        !((_b = $endElem.children()) === null || _b === void 0 ? void 0 : _b.length) && $endElem.remove();
      }
  };

  return EndJoinListHandle;
}(ListHandle_1.ListHandle);

exports["default"] = EndJoinListHandle;

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var ListHandle_1 = __webpack_require__(57);

var utils_1 = __webpack_require__(46);

var OtherListHandle =
/** @class */
function (_super) {
  tslib_1.__extends(OtherListHandle, _super);

  function OtherListHandle(options, range) {
    var _this = _super.call(this, options) || this;

    _this.range = range;
    return _this;
  }

  OtherListHandle.prototype.exec = function () {
    var _a = this.options,
        editor = _a.editor,
        listTarget = _a.listTarget; // 获取选中的段落

    var $nodes = editor.selection.getSelectionRangeTopNodes(); // 生成 li 元素并且添加到序列节点后删除原节点

    var $containerFragment = utils_1.createElementFragment(utils_1.filterSelectionNodes($nodes), // 过滤选取的元素
    utils_1.createElement(listTarget) // 创建 序列节点
    ); // 插入节点到选区

    this.selectionRangeElem.set($containerFragment);
    this.range.insertNode($containerFragment);
  };

  return OtherListHandle;
}(ListHandle_1.ListHandle);

exports["default"] = OtherListHandle;

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 段落行高 LineHeight
 * @author lichunlin
 *
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var DropListMenu_1 = tslib_1.__importDefault(__webpack_require__(24));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var lineHeightList_1 = tslib_1.__importDefault(__webpack_require__(378));

var util_1 = __webpack_require__(6);

var LineHeight =
/** @class */
function (_super) {
  tslib_1.__extends(LineHeight, _super);

  function LineHeight(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u884C\u9AD8\">\n                    <i class=\"w-e-icon-row-height\"></i>\n                </div>");
    var lineHeightMenu = new lineHeightList_1["default"](editor, editor.config.lineHeights);
    var DropListMenu = {
      width: 100,
      title: '设置行高',
      type: 'list',
      list: lineHeightMenu.getItemList(),
      clickHandler: function clickHandler(value) {
        //保存焦点
        editor.selection.saveRange();

        _this.command(value);
      }
    };
    _this = _super.call(this, $elem, editor, DropListMenu) || this;
    return _this;
  }
  /**
   * 执行命令
   * @param value value
   */


  LineHeight.prototype.command = function (value) {
    var _this = this;

    var _a;

    var selection = window.getSelection ? window.getSelection() : document.getSelection(); //允许设置dom

    var allowArray = ['P'];
    var editor = this.editor;
    var st = ''; //恢复焦点

    editor.selection.restoreSelection();
    var $selectionElem = dom_core_1["default"](editor.selection.getSelectionContainerElem());
    if (!($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.length)) return;
    var $selectionAll = dom_core_1["default"](editor.selection.getSelectionContainerElem()); // let dom:HTMLElement= $selectionElem.elems[0]

    var dom = dom_core_1["default"](editor.selection.getSelectionStartElem()).elems[0]; //获取元素的style

    var style = '';
    var styleList = []; //点击默认的时候删除line-height属性 并重新设置 style

    var styleStr = ''; //选中多行操作

    if ($selectionElem && editor.$textElem.equal($selectionElem)) {
      var isIE = util_1.UA.isIE();

      if (isIE) {
        // ie下禁止多行操作 避免多行造成除第一行外的段落内容都被删除
        return;
      } //获取range 开头结束的dom在 祖父元素的下标


      var indexStore_1 = [];
      var arrayDom_a = [];
      var arrayDom_b = []; //获取range 开头结束的dom

      var StartElem_1 = dom_core_1["default"](editor.selection.getSelectionStartElem());
      var EndElem_1 = dom_core_1["default"](editor.selection.getSelectionEndElem());
      var childList = (_a = editor.selection.getRange()) === null || _a === void 0 ? void 0 : _a.commonAncestorContainer.childNodes;
      arrayDom_a.push(this.getDom(StartElem_1.elems[0]));
      childList === null || childList === void 0 ? void 0 : (0, _forEach["default"])(childList).call(childList, function (item, index) {
        if (item === _this.getDom(StartElem_1.elems[0])) {
          indexStore_1.push(index);
        }

        if (item === _this.getDom(EndElem_1.elems[0])) {
          indexStore_1.push(index);
        }
      }); //遍历 获取头尾之间的dom元素

      var i = 0;
      var d = void 0;
      arrayDom_b.push(this.getDom(StartElem_1.elems[0]));

      while (arrayDom_a[i] !== this.getDom(EndElem_1.elems[0])) {
        d = dom_core_1["default"](arrayDom_a[i].nextElementSibling).elems[0];

        if ((0, _indexOf["default"])(allowArray).call(allowArray, dom_core_1["default"](d).getNodeName()) !== -1) {
          arrayDom_b.push(d);
          arrayDom_a.push(d);
        } else {
          arrayDom_a.push(d);
        }

        i++;
      } //设置段落选取 全选


      if (dom_core_1["default"](arrayDom_a[0]).getNodeName() !== 'P') {
        i = 0; //遍历集合得到第一个p标签的下标

        for (var k = 0; k < arrayDom_a.length; k++) {
          if (dom_core_1["default"](arrayDom_a[k]).getNodeName() === 'P') {
            i = k;
            break;
          }
        } //i===0 说明选区中没有p段落


        if (i === 0) {
          return;
        }

        var _i = 0;

        while (_i !== i) {
          arrayDom_a.shift();
          _i++;
        }
      } //设置替换的选区


      this.setRange(arrayDom_a[0], arrayDom_a[arrayDom_a.length - 1]); //生成innerHtml html字符串

      (0, _forEach["default"])(arrayDom_a).call(arrayDom_a, function (item) {
        style = item.getAttribute('style');
        styleList = style ? style.split(';') : [];
        styleStr = '';

        if (dom_core_1["default"](item).getNodeName() === 'P') {
          //判断是否 点击默认
          value ? styleStr = _this.styleProcessing(styleList) + ("line-height:" + value + ";") : styleStr = _this.styleProcessing(styleList);
          st = st + ("<" + dom_core_1["default"](item).getNodeName().toLowerCase() + " style=\"" + styleStr + "\">" + item.innerHTML + "</" + dom_core_1["default"](item).getNodeName().toLowerCase() + ">");
        } else {
          styleStr = _this.styleProcessing(styleList);
          st = st + ("<" + dom_core_1["default"](item).getNodeName().toLowerCase() + " style=\"" + styleStr + "\">" + item.innerHTML + "</" + dom_core_1["default"](item).getNodeName().toLowerCase() + ">");
        }
      });
      this.action(st, editor); //恢复已选择的选区

      dom = $selectionAll.elems[0];
      this.setRange(dom.children[indexStore_1[0]], dom.children[indexStore_1[1]]);
      return;
    } //遍历dom 获取祖父元素 直到contenteditable属性的div标签


    dom = this.getDom(dom); //校验允许lineheight设置标签

    if ((0, _indexOf["default"])(allowArray).call(allowArray, dom_core_1["default"](dom).getNodeName()) === -1) {
      return;
    }

    style = dom.getAttribute('style');
    styleList = style ? style.split(';') : []; //全选 dom下所有的内容

    selection === null || selection === void 0 ? void 0 : selection.selectAllChildren(dom); //保存range

    editor.selection.saveRange(); //判断是否存在value 默认 移除line-height

    if (!value) {
      if (style) {
        styleStr = this.styleProcessing(styleList); //避免没有其它属性 只留下 ‘style’ 减少代码

        if (styleStr === '') {
          st = "<" + dom_core_1["default"](dom).getNodeName().toLowerCase() + ">" + dom.innerHTML + "</" + dom_core_1["default"](dom).getNodeName().toLowerCase() + ">";
        } else {
          st = "<" + dom_core_1["default"](dom).getNodeName().toLowerCase() + " style=\"" + styleStr + "\">" + dom.innerHTML + "</" + dom_core_1["default"](dom).getNodeName().toLowerCase() + ">";
        }

        this.action(st, editor);
      }

      return;
    }

    if (style) {
      //存在style 检索其它style属性
      styleStr = this.styleProcessing(styleList) + ("line-height:" + value + ";");
    } else {
      styleStr = "line-height:" + value + ";";
    }

    st = "<" + dom_core_1["default"](dom).getNodeName().toLowerCase() + " style=\"" + styleStr + "\">" + dom.innerHTML + "</" + dom_core_1["default"](dom).getNodeName().toLowerCase() + ">"; //防止BLOCKQUOTE叠加

    if (dom_core_1["default"](dom).getNodeName() === 'BLOCKQUOTE') {
      dom_core_1["default"](dom).css('line-height', value);
    } else {
      this.action(st, editor);
    }
  };
  /**
   * 遍历dom 获取祖父元素 直到contenteditable属性的div标签
   *
   */


  LineHeight.prototype.getDom = function (dom) {
    var DOM = dom_core_1["default"](dom).elems[0];

    if (!DOM.parentNode) {
      return DOM;
    }

    function getParentNode($node, editor) {
      var $parent = dom_core_1["default"]($node.parentNode);

      if (editor.$textElem.equal($parent)) {
        return $node;
      } else {
        return getParentNode($parent.elems[0], editor);
      }
    }

    DOM = getParentNode(DOM, this.editor);
    return DOM;
  };
  /**
   * 执行 document.execCommand
   *
   */


  LineHeight.prototype.action = function (html_str, editor) {
    editor.cmd["do"]('insertHTML', html_str);
  };
  /**
   * style 处理
   */


  LineHeight.prototype.styleProcessing = function (styleList) {
    var styleStr = '';
    (0, _forEach["default"])(styleList).call(styleList, function (item) {
      item !== '' && (0, _indexOf["default"])(item).call(item, 'line-height') === -1 ? styleStr = styleStr + item + ';' : '';
    });
    return styleStr;
  };
  /**
   * 段落全选 比如：避免11变成111
   */


  LineHeight.prototype.setRange = function (startDom, endDom) {
    var editor = this.editor;
    var selection = window.getSelection ? window.getSelection() : document.getSelection(); //清除所有的选区

    selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
    var range = document.createRange();
    var star = startDom;
    var end = endDom;
    range.setStart(star, 0);
    range.setEnd(end, 1);
    selection === null || selection === void 0 ? void 0 : selection.addRange(range); //保存设置好的选区

    editor.selection.saveRange(); //清除所有的选区

    selection === null || selection === void 0 ? void 0 : selection.removeAllRanges(); //恢复选区

    editor.selection.restoreSelection();
  };
  /**
   * 尝试修改菜单激活状态
   */


  LineHeight.prototype.tryChangeActive = function () {
    var editor = this.editor;
    var $selectionElem = editor.selection.getSelectionContainerElem();

    if ($selectionElem && editor.$textElem.equal($selectionElem)) {
      //避免选中多行设置
      return;
    }

    var dom = dom_core_1["default"](editor.selection.getSelectionStartElem()); // 有些情况下 dom 可能为空，比如编辑器初始化

    if (dom.length === 0) return;
    dom = this.getDom(dom.elems[0]);
    var style = dom.getAttribute('style') ? dom.getAttribute('style') : ''; //判断当前标签是否具有line-height属性

    if (style && (0, _indexOf["default"])(style).call(style, 'line-height') !== -1) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return LineHeight;
}(DropListMenu_1["default"]);

exports["default"] = LineHeight;

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description 行高 菜单
 * @author lichunlin
 */


var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var lineHeightList =
/** @class */
function () {
  function lineHeightList(editor, list) {
    var _this = this;

    this.itemList = [{
      $elem: dom_core_1["default"]("<span>" + editor.i18next.t('默认') + "</span>"),
      value: ''
    }];
    (0, _forEach["default"])(list).call(list, function (item) {
      _this.itemList.push({
        $elem: dom_core_1["default"]("<span>" + item + "</span>"),
        value: item
      });
    });
  }

  lineHeightList.prototype.getItemList = function () {
    return this.itemList;
  };

  return lineHeightList;
}();

exports["default"] = lineHeightList;

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 撤销
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var Undo =
/** @class */
function (_super) {
  tslib_1.__extends(Undo, _super);

  function Undo(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u64A4\u9500\">\n                <i class=\"w-e-icon-undo\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 点击事件
   */


  Undo.prototype.clickHandler = function () {
    var editor = this.editor;
    editor.history.revoke(); // 重新创建 range，是处理当初始化编辑器，API插入内容后撤销，range 不在编辑器内部的问题

    var children = editor.$textElem.children();
    if (!(children === null || children === void 0 ? void 0 : children.length)) return;
    var $last = children.last();
    editor.selection.createRangeByElem($last, false, true);
    editor.selection.restoreSelection();
  };
  /**
   * 尝试修改菜单激活状态
   */


  Undo.prototype.tryChangeActive = function () {
    // 标准模式下才进行操作
    if (!this.editor.isCompatibleMode) {
      if (this.editor.history.size[0]) {
        this.active();
      } else {
        this.unActive();
      }
    }
  };

  return Undo;
}(BtnMenu_1["default"]);

exports["default"] = Undo;

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 重做
 * @author tonghan
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var Redo =
/** @class */
function (_super) {
  tslib_1.__extends(Redo, _super);

  function Redo(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u6062\u590D\">\n                <i class=\"w-e-icon-redo\"></i>\n            </div>");
    _this = _super.call(this, $elem, editor) || this;
    return _this;
  }
  /**
   * 点击事件
   */


  Redo.prototype.clickHandler = function () {
    var editor = this.editor;
    editor.history.restore(); // 重新创建 range，是处理当初始化编辑器，API插入内容后撤销，range 不在编辑器内部的问题

    var children = editor.$textElem.children();
    if (!(children === null || children === void 0 ? void 0 : children.length)) return;
    var $last = children.last();
    editor.selection.createRangeByElem($last, false, true);
    editor.selection.restoreSelection();
  };
  /**
   * 尝试修改菜单激活状态
   */


  Redo.prototype.tryChangeActive = function () {
    // 标准模式下才进行操作
    if (!this.editor.isCompatibleMode) {
      if (this.editor.history.size[1]) {
        this.active();
      } else {
        this.unActive();
      }
    }
  };

  return Redo;
}(BtnMenu_1["default"]);

exports["default"] = Redo;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 创建table
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var create_panel_conf_1 = tslib_1.__importDefault(__webpack_require__(382));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var index_1 = tslib_1.__importDefault(__webpack_require__(391));

var Table =
/** @class */
function (_super) {
  tslib_1.__extends(Table, _super);

  function Table(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="表格"><i class="w-e-icon-table2"></i></div>');
    _this = _super.call(this, $elem, editor) || this; // 绑定事件

    index_1["default"](editor);
    return _this;
  }
  /**
   * 菜单点击事件
   */


  Table.prototype.clickHandler = function () {
    this.createPanel();
  };
  /**
   * 创建 panel
   */


  Table.prototype.createPanel = function () {
    var conf = create_panel_conf_1["default"](this.editor);
    var panel = new Panel_1["default"](this, conf);
    panel.create();
  };
  /**
   * 尝试修改菜单 active 状态
   */


  Table.prototype.tryChangeActive = function () {};

  return Table;
}(PanelMenu_1["default"]);

exports["default"] = Table;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description table 菜单 panel tab 配置
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _isInteger = _interopRequireDefault(__webpack_require__(383));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

__webpack_require__(388);

var create_table_1 = tslib_1.__importDefault(__webpack_require__(390));
/**
 * 判断一个数值是否为正整数
 * @param { number } n 被验证的值
 */


function isPositiveInteger(n) {
  //是否为正整数
  return n > 0 && (0, _isInteger["default"])(n);
}

function default_1(editor) {
  var createTable = new create_table_1["default"](editor); // panel 中需要用到的id

  var colId = util_1.getRandom('w-col-id');
  var rowId = util_1.getRandom('w-row-id');
  var insertBtnId = util_1.getRandom('btn-link');
  var i18nPrefix = 'menus.panelMenus.table.';

  var t = function t(text) {
    return editor.i18next.t(text);
  }; // tabs 配置 -----------------------------------------


  var tabsConf = [{
    title: t(i18nPrefix + "\u63D2\u5165\u8868\u683C"),
    tpl: "<div>\n                    <div class=\"w-e-table\">\n                        <span>" + t('创建') + "</span>\n                        <input id=\"" + rowId + "\"  type=\"text\" class=\"w-e-table-input\" value=\"5\"/></td>\n                        <span>" + t(i18nPrefix + "\u884C") + "</span>\n                        <input id=\"" + colId + "\" type=\"text\" class=\"w-e-table-input\" value=\"5\"/></td>\n                        <span>" + (t(i18nPrefix + "\u5217") + t(i18nPrefix + "\u7684") + t(i18nPrefix + "\u8868\u683C")) + "</span>\n                    </div>\n                    <div class=\"w-e-button-container\">\n                        <button type=\"button\" id=\"" + insertBtnId + "\" class=\"right\">" + t('插入') + "</button>\n                    </div>\n                </div>",
    events: [{
      selector: '#' + insertBtnId,
      type: 'click',
      fn: function fn() {
        var colValue = Number(dom_core_1["default"]('#' + colId).val());
        var rowValue = Number(dom_core_1["default"]('#' + rowId).val()); //校验是否传值

        if (isPositiveInteger(rowValue) && isPositiveInteger(colValue)) {
          createTable.createAction(rowValue, colValue);
          return true;
        } else {
          editor.config.customAlert('表格行列请输入正整数', 'warning');
          return false;
        } // 返回 true 表示函数执行结束之后关闭 panel

      }
    }]
  }]; // tabs end
  // 最终的配置 -----------------------------------------

  var conf = {
    width: 330,
    height: 0,
    tabs: []
  };
  conf.tabs.push(tabsConf[0]);
  return conf;
}

exports["default"] = default_1;

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(384);

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(385);

module.exports = parent;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(386);
var path = __webpack_require__(10);

module.exports = path.Number.isInteger;


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var isInteger = __webpack_require__(387);

// `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger
$({ target: 'Number', stat: true }, {
  isInteger: isInteger
});


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);

var floor = Math.floor;

// `Number.isInteger` method implementation
// https://tc39.es/ecma262/#sec-number.isinteger
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(389);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-table {\n  display: flex;\n}\n.w-e-table .w-e-table-input {\n  width: 40px;\n  text-align: center!important;\n  margin: 0 5px;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 创建tabel
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var const_1 = __webpack_require__(7);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var CreateTable =
/** @class */
function () {
  function CreateTable(editor) {
    this.editor = editor;
  }
  /**
   * 执行创建
   * @param rowValue 行数
   * @param colValue 列数
   */


  CreateTable.prototype.createAction = function (rowValue, colValue) {
    var editor = this.editor; //不允许在有序列表中添加table

    var $selectionElem = dom_core_1["default"](editor.selection.getSelectionContainerElem());
    var $ul = dom_core_1["default"]($selectionElem.elems[0]).parentUntilEditor('UL', editor);
    var $ol = dom_core_1["default"]($selectionElem.elems[0]).parentUntilEditor('OL', editor);

    if ($ul || $ol) {
      return;
    }

    var tableDom = this.createTableHtml(rowValue, colValue);
    editor.cmd["do"]('insertHTML', tableDom);
  };
  /**
   * 创建table、行、列
   * @param rowValue 行数
   * @param colValue 列数
   */


  CreateTable.prototype.createTableHtml = function (rowValue, colValue) {
    var rowStr = '';
    var colStr = '';

    for (var i = 0; i < rowValue; i++) {
      colStr = '';

      for (var j = 0; j < colValue; j++) {
        if (i === 0) {
          colStr = colStr + '<th></th>';
        } else {
          colStr = colStr + '<td></td>';
        }
      }

      rowStr = rowStr + '<tr>' + colStr + '</tr>';
    }

    var tableDom = "<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"><tbody>" + rowStr + ("</tbody></table>" + const_1.EMPTY_P);
    return tableDom;
  };

  return CreateTable;
}();

exports["default"] = CreateTable;

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 绑定点击事件
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var tooltip_event_1 = tslib_1.__importDefault(__webpack_require__(392));

var keyboard_1 = tslib_1.__importDefault(__webpack_require__(400));
/**
 * 绑定事件
 * @param editor 编辑器实例
 */


function bindEvent(editor) {
  //Tooltip
  tooltip_event_1["default"](editor);
  keyboard_1["default"](editor);
}

exports["default"] = bindEvent;

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description tooltip 事件
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36)); //操作事件


var operating_event_1 = tslib_1.__importDefault(__webpack_require__(393));

var getNode_1 = tslib_1.__importDefault(__webpack_require__(399));

var const_1 = __webpack_require__(7);
/**
 * 生成 Tooltip 的显示隐藏函数
 */


function createShowHideFn(editor) {
  var tooltip;
  /**
   * 显示 tooltip
   * @param  table元素
   */

  function showTableTooltip($node) {
    var getnode = new getNode_1["default"](editor);
    var i18nPrefix = 'menus.panelMenus.table.';

    var t = function t(text, prefix) {
      if (prefix === void 0) {
        prefix = i18nPrefix;
      }

      return editor.i18next.t(prefix + text);
    };

    var conf = [{
      // $elem: $("<span class='w-e-icon-trash-o'></span>"),
      $elem: dom_core_1["default"]("<span>" + t('删除表格') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 选中img元素
        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();
        editor.cmd["do"]('insertHTML', const_1.EMPTY_P); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('添加行') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 禁止多选操作
        var isMore = isMoreRowAction(editor);

        if (isMore) {
          return true;
        } //当前元素


        var selectDom = dom_core_1["default"](editor.selection.getSelectionStartElem()); //当前行

        var $currentRow = getnode.getRowNode(selectDom.elems[0]);

        if (!$currentRow) {
          return true;
        } //获取当前行的index


        var index = Number(getnode.getCurrentRowIndex($node.elems[0], $currentRow)); //生成要替换的html

        var htmlStr = getnode.getTableHtml($node.elems[0]); //生成新的table

        var newdom = getnode.getTableHtml(operating_event_1["default"].ProcessingRow(dom_core_1["default"](htmlStr), index).elems[0]);
        newdom = _isEmptyP($node, newdom); // 选中table

        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();
        editor.cmd["do"]('insertHTML', newdom);
        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('删除行') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 禁止多选操作
        var isMore = isMoreRowAction(editor);

        if (isMore) {
          return true;
        } //当前元素


        var selectDom = dom_core_1["default"](editor.selection.getSelectionStartElem()); //当前行

        var $currentRow = getnode.getRowNode(selectDom.elems[0]);

        if (!$currentRow) {
          return true;
        } //获取当前行的index


        var index = Number(getnode.getCurrentRowIndex($node.elems[0], $currentRow)); //生成要替换的html

        var htmlStr = getnode.getTableHtml($node.elems[0]); //获取新生成的table 判断是否是最后一行被删除 是 删除整个table

        var trLength = operating_event_1["default"].DeleteRow(dom_core_1["default"](htmlStr), index).elems[0].children[0].children.length; //生成新的table

        var newdom = ''; // 选中table

        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();

        if (trLength === 0) {
          newdom = const_1.EMPTY_P;
        } else {
          newdom = getnode.getTableHtml(operating_event_1["default"].DeleteRow(dom_core_1["default"](htmlStr), index).elems[0]);
        }

        newdom = _isEmptyP($node, newdom);
        editor.cmd["do"]('insertHTML', newdom);
        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('添加列') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 禁止多选操作
        var isMore = isMoreRowAction(editor);

        if (isMore) {
          return true;
        } //当前元素


        var selectDom = dom_core_1["default"](editor.selection.getSelectionStartElem()); //当前列的index

        var index = getnode.getCurrentColIndex(selectDom.elems[0]); //生成要替换的html

        var htmlStr = getnode.getTableHtml($node.elems[0]); //生成新的table

        var newdom = getnode.getTableHtml(operating_event_1["default"].ProcessingCol(dom_core_1["default"](htmlStr), index).elems[0]);
        newdom = _isEmptyP($node, newdom); // 选中table

        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();
        editor.cmd["do"]('insertHTML', newdom);
        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('删除列') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 禁止多选操作
        var isMore = isMoreRowAction(editor);

        if (isMore) {
          return true;
        } //当前元素


        var selectDom = dom_core_1["default"](editor.selection.getSelectionStartElem()); //当前列的index

        var index = getnode.getCurrentColIndex(selectDom.elems[0]); //生成要替换的html

        var htmlStr = getnode.getTableHtml($node.elems[0]); //获取新生成的table 判断是否是最后一列被删除 是 删除整个table

        var tdLength = operating_event_1["default"].DeleteCol(dom_core_1["default"](htmlStr), index).elems[0].children[0].children[0].children.length; //生成新的table

        var newdom = ''; // 选中table

        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();

        if (tdLength === 1) {
          newdom = const_1.EMPTY_P;
        } else {
          newdom = getnode.getTableHtml(operating_event_1["default"].DeleteCol(dom_core_1["default"](htmlStr), index).elems[0]);
        }

        newdom = _isEmptyP($node, newdom);
        editor.cmd["do"]('insertHTML', newdom);
        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('设置表头') + "</span>"),
      onClick: function onClick(editor, $node) {
        // 禁止多选操作
        var isMore = isMoreRowAction(editor);

        if (isMore) {
          return true;
        } //当前元素


        var selectDom = dom_core_1["default"](editor.selection.getSelectionStartElem()); //当前行

        var $currentRow = getnode.getRowNode(selectDom.elems[0]);

        if (!$currentRow) {
          return true;
        } //获取当前行的index


        var index = Number(getnode.getCurrentRowIndex($node.elems[0], $currentRow));

        if (index !== 0) {
          //控制在table的第一行
          index = 0;
        } //生成要替换的html


        var htmlStr = getnode.getTableHtml($node.elems[0]); //生成新的table

        var newdom = getnode.getTableHtml(operating_event_1["default"].setTheHeader(dom_core_1["default"](htmlStr), index, 'th').elems[0]);
        newdom = _isEmptyP($node, newdom); // 选中table

        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();
        editor.cmd["do"]('insertHTML', newdom);
        return true;
      }
    }, {
      $elem: dom_core_1["default"]("<span>" + t('取消表头') + "</span>"),
      onClick: function onClick(editor, $node) {
        //当前元素
        var selectDom = dom_core_1["default"](editor.selection.getSelectionStartElem()); //当前行

        var $currentRow = getnode.getRowNode(selectDom.elems[0]);

        if (!$currentRow) {
          return true;
        } //获取当前行的index


        var index = Number(getnode.getCurrentRowIndex($node.elems[0], $currentRow));

        if (index !== 0) {
          //控制在table的第一行
          index = 0;
        } //生成要替换的html


        var htmlStr = getnode.getTableHtml($node.elems[0]); //生成新的table

        var newdom = getnode.getTableHtml(operating_event_1["default"].setTheHeader(dom_core_1["default"](htmlStr), index, 'td').elems[0]);
        newdom = _isEmptyP($node, newdom); // 选中table

        editor.selection.createRangeByElem($node);
        editor.selection.restoreSelection();
        editor.cmd["do"]('insertHTML', newdom);
        return true;
      }
    }];
    tooltip = new Tooltip_1["default"](editor, $node, conf);
    tooltip.create();
  }
  /**
   * 隐藏 tooltip
   */


  function hideTableTooltip() {
    // 移除 tooltip
    if (tooltip) {
      tooltip.remove();
      tooltip = null;
    }
  }

  return {
    showTableTooltip: showTableTooltip,
    hideTableTooltip: hideTableTooltip
  };
}
/**
 * 判断是否是多行
 */


function isMoreRowAction(editor) {
  var $startElem = editor.selection.getSelectionStartElem();
  var $endElem = editor.selection.getSelectionEndElem();

  if (($startElem === null || $startElem === void 0 ? void 0 : $startElem.elems[0]) !== ($endElem === null || $endElem === void 0 ? void 0 : $endElem.elems[0])) {
    return true;
  } else {
    return false;
  }
}
/**
 * 绑定 tooltip 事件
 * @param editor 编辑器实例
 */


function bindTooltipEvent(editor) {
  var _a = createShowHideFn(editor),
      showTableTooltip = _a.showTableTooltip,
      hideTableTooltip = _a.hideTableTooltip; // 点击table元素是，显示 tooltip


  editor.txt.eventHooks.tableClickEvents.push(showTableTooltip); // 点击其他地方，或者滚动时，隐藏 tooltip

  editor.txt.eventHooks.clickEvents.push(hideTableTooltip);
  editor.txt.eventHooks.keyupEvents.push(hideTableTooltip);
  editor.txt.eventHooks.toolbarClickEvents.push(hideTableTooltip);
  editor.txt.eventHooks.menuClickEvents.push(hideTableTooltip);
  editor.txt.eventHooks.textScrollEvents.push(hideTableTooltip);
}

exports["default"] = bindTooltipEvent;
/**
 * 判断表格的下一个节点是否是空行
 */

function _isEmptyP($node, newdom) {
  // 当表格的下一个兄弟节点是空行时，在 newdom 后添加 EMPTY_P
  var nextNode = $node.elems[0].nextSibling;

  if (!nextNode || nextNode.innerHTML === '<br>') {
    newdom += "" + const_1.EMPTY_P;
  }

  return newdom;
}

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _slice = _interopRequireDefault(__webpack_require__(44));

var _splice = _interopRequireDefault(__webpack_require__(93));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _from = _interopRequireDefault(__webpack_require__(137));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 处理新添加行
 * @param $node 整个table
 * @param _index 行的inde
 */


function ProcessingRow($node, _index) {
  //执行获取tbody节点
  var $dom = generateDomAction($node); //取出所有的行

  var domArray = (0, _slice["default"])(Array.prototype).apply($dom.children); //列的数量

  var childrenLength = domArray[0].children.length; //创建新tr

  var tr = document.createElement('tr');

  for (var i = 0; i < childrenLength; i++) {
    var td = document.createElement('td');
    tr.appendChild(td);
  } //插入集合中


  (0, _splice["default"])(domArray).call(domArray, _index + 1, 0, tr); //移除、新增节点事件

  removeAndInsertAction($dom, domArray);
  return dom_core_1["default"]($dom.parentNode);
}
/**
 * 处理新添加列
 * @param $node 整个table
 * @param _index 列的inde
 */


function ProcessingCol($node, _index) {
  //执行获取tbody节点
  var $dom = generateDomAction($node); //取出所有的行

  var domArray = (0, _slice["default"])(Array.prototype).apply($dom.children);

  var _loop_1 = function _loop_1(i) {
    var _context;

    var cArray = []; //取出所有的列

    (0, _forEach["default"])(_context = (0, _from["default"])(domArray[i].children)).call(_context, function (item) {
      cArray.push(item);
    }); //移除行的旧的子节点

    while (domArray[i].children.length !== 0) {
      domArray[i].removeChild(domArray[i].children[0]);
    } //列分th td


    var td = dom_core_1["default"](cArray[0]).getNodeName() !== 'TH' ? document.createElement('td') : document.createElement('th'); // let td = document.createElement('td')

    (0, _splice["default"])(cArray).call(cArray, _index + 1, 0, td); //插入新的子节点

    for (var j = 0; j < cArray.length; j++) {
      domArray[i].appendChild(cArray[j]);
    }
  }; //创建td


  for (var i = 0; i < domArray.length; i++) {
    _loop_1(i);
  } //移除、新增节点事件


  removeAndInsertAction($dom, domArray);
  return dom_core_1["default"]($dom.parentNode);
}
/**
 * 处理删除行
 * @param $node  整个table
 * @param _index  行的inde
 */


function DeleteRow($node, _index) {
  //执行获取tbody节点
  var $dom = generateDomAction($node); //取出所有的行

  var domArray = (0, _slice["default"])(Array.prototype).apply($dom.children); //删除行

  (0, _splice["default"])(domArray).call(domArray, _index, 1); //移除、新增节点事件

  removeAndInsertAction($dom, domArray);
  return dom_core_1["default"]($dom.parentNode);
}
/**
 * 处理删除列
 * @param $node
 * @param _index
 */


function DeleteCol($node, _index) {
  //执行获取tbody节点
  var $dom = generateDomAction($node); //取出所有的行

  var domArray = (0, _slice["default"])(Array.prototype).apply($dom.children);

  var _loop_2 = function _loop_2(i) {
    var _context2;

    var cArray = []; //取出所有的列

    (0, _forEach["default"])(_context2 = (0, _from["default"])(domArray[i].children)).call(_context2, function (item) {
      cArray.push(item);
    }); //移除行的旧的子节点

    while (domArray[i].children.length !== 0) {
      domArray[i].removeChild(domArray[i].children[0]);
    }

    (0, _splice["default"])(cArray).call(cArray, _index, 1); //插入新的子节点

    for (var j = 0; j < cArray.length; j++) {
      domArray[i].appendChild(cArray[j]);
    }
  }; //创建td


  for (var i = 0; i < domArray.length; i++) {
    _loop_2(i);
  } //移除、新增节点事件


  removeAndInsertAction($dom, domArray);
  return dom_core_1["default"]($dom.parentNode);
}
/**
 * 处理设置/取消表头
 * @param $node
 * @param _index
 * @type 替换的列 th 还是td
 */


function setTheHeader($node, _index, type) {
  //执行获取tbody节点
  var $dom = generateDomAction($node); //取出所有的行

  var domArray = (0, _slice["default"])(Array.prototype).apply($dom.children); //列的数量

  var childrenLength = domArray[_index].children; //创建新tr

  var tr = document.createElement('tr');

  var _loop_3 = function _loop_3(i) {
    var _context3;

    //替换td为th
    var th = document.createElement(type);
    (0, _forEach["default"])(_context3 = (0, _from["default"])(childrenLength[i].children)).call(_context3, function (item) {
      th.appendChild(item);
    });
    tr.appendChild(th);
  };

  for (var i = 0; i < childrenLength.length; i++) {
    _loop_3(i);
  } //插入集合中


  (0, _splice["default"])(domArray).call(domArray, _index, 1, tr); //移除、新增节点事件

  removeAndInsertAction($dom, domArray);
  return dom_core_1["default"]($dom.parentNode);
}
/**
 * 封装移除、新增节点事件
 * @param $dom tbody节点
 * @param domArray  所有的行
 */


function removeAndInsertAction($dom, domArray) {
  //移除所有的旧的子节点
  while ($dom.children.length !== 0) {
    $dom.removeChild($dom.children[0]);
  } //插入新的子节点


  for (var i = 0; i < domArray.length; i++) {
    $dom.appendChild(domArray[i]);
  }
}
/**
 * 封装判断是否tbody节点
 * 粘贴的table 第一个节点是<colgroup> 最后的节点<tbody>
 * @param dom
 */


function generateDomAction($node) {
  var $dom = $node.elems[0].children[0];

  if ($dom.nodeName === 'COLGROUP') {
    $dom = $node.elems[0].children[$node.elems[0].children.length - 1];
  }

  return $dom;
}

exports["default"] = {
  ProcessingRow: ProcessingRow,
  ProcessingCol: ProcessingCol,
  DeleteRow: DeleteRow,
  DeleteCol: DeleteCol,
  setTheHeader: setTheHeader
};

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(395);

module.exports = parent;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(51);
__webpack_require__(396);
var path = __webpack_require__(10);

module.exports = path.Array.from;


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var from = __webpack_require__(397);
var checkCorrectnessOfIteration = __webpack_require__(113);

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(38);
var toObject = __webpack_require__(33);
var callWithSafeIterationClosing = __webpack_require__(398);
var isArrayIteratorMethod = __webpack_require__(105);
var toLength = __webpack_require__(34);
var createProperty = __webpack_require__(73);
var getIteratorMethod = __webpack_require__(107);

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(20);
var iteratorClose = __webpack_require__(108);

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    iteratorClose(iterator);
    throw error;
  }
};


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 获取dom节点
 * @author lichunlin
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _from = _interopRequireDefault(__webpack_require__(137));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var getNode =
/** @class */
function () {
  function getNode(editor) {
    this.editor = editor;
  }
  /**
   * 获取焦点所在行
   * @param $node 当前table
   */


  getNode.prototype.getRowNode = function ($node) {
    var _a;

    var DOM = dom_core_1["default"]($node).elems[0];

    if (!DOM.parentNode) {
      return DOM;
    }

    DOM = (_a = dom_core_1["default"](DOM).parentUntil('TR', DOM)) === null || _a === void 0 ? void 0 : _a.elems[0];
    return DOM;
  };
  /**
   * 获取当前行的下标
   * @param $node 当前table
   * @param $dmo 当前行节点
   */


  getNode.prototype.getCurrentRowIndex = function ($node, $dom) {
    var _context;

    var _index = 0;
    var $nodeChild = $node.children[0]; //粘贴的table 最后一个节点才是tbody

    if ($nodeChild.nodeName === 'COLGROUP') {
      $nodeChild = $node.children[$node.children.length - 1];
    }

    (0, _forEach["default"])(_context = (0, _from["default"])($nodeChild.children)).call(_context, function (item, index) {
      item === $dom ? _index = index : '';
    });
    return _index;
  };
  /**
   * 获取当前列的下标
   * @param $node 当前点击元素
   */


  getNode.prototype.getCurrentColIndex = function ($node) {
    var _context2;

    var _a; //当前行


    var _index = 0; //获取当前列 td或th

    var rowDom = dom_core_1["default"]($node).getNodeName() === 'TD' || dom_core_1["default"]($node).getNodeName() === 'TH' ? $node : (_a = dom_core_1["default"]($node).parentUntil('TD', $node)) === null || _a === void 0 ? void 0 : _a.elems[0];
    var colDom = dom_core_1["default"](rowDom).parent();
    (0, _forEach["default"])(_context2 = (0, _from["default"])(colDom.elems[0].children)).call(_context2, function (item, index) {
      item === rowDom ? _index = index : '';
    });
    return _index;
  };
  /**
   * 返回元素html字符串
   * @param $node
   */


  getNode.prototype.getTableHtml = function ($node) {
    var htmlStr = "<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">" + dom_core_1["default"]($node).html() + "</table>";
    return htmlStr;
  };

  return getNode;
}();

exports["default"] = getNode;

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/**
 * @description 是否是空行
 * @param topElem
 */

function isEmptyLine(topElem) {
  if (!topElem.length) {
    return false;
  }

  var dom = topElem.elems[0];
  return dom.nodeName === 'P' && dom.innerHTML === '<br>';
}

function bindEventKeyboardEvent(editor) {
  var txt = editor.txt,
      selection = editor.selection;
  var keydownEvents = txt.eventHooks.keydownEvents;
  keydownEvents.push(function (e) {
    // 实时保存选区
    editor.selection.saveRange();
    var $selectionContainerElem = selection.getSelectionContainerElem();

    if ($selectionContainerElem) {
      var $topElem = $selectionContainerElem.getNodeTop(editor);
      var $preElem = $topElem.length ? $topElem.prev().length ? $topElem.prev() : null : null; // 删除时，选区前面是table，且选区没有选中文本，阻止默认行为

      if ($preElem && $preElem.getNodeName() === 'TABLE' && selection.isSelectionEmpty() && selection.getCursorPos() === 0 && e.keyCode === 8) {
        var $nextElem = $topElem.next();
        var hasNext = !!$nextElem.length;
        /**
         * 如果当前是空行，并且当前行下面还有内容，删除当前行
         * 浏览器默认行为不会删除掉当前行的<br>标签
         * 因此阻止默认行为，特殊处理
         */

        if (hasNext && isEmptyLine($topElem)) {
          $topElem.remove();
          editor.selection.setRangeToElem($nextElem.elems[0]);
        }

        e.preventDefault();
      }
    }
  });
}

exports["default"] = bindEventKeyboardEvent;

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 代码 菜单
 * @author lkw
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.formatCodeHtml = void 0;

var tslib_1 = __webpack_require__(2);

var PanelMenu_1 = tslib_1.__importDefault(__webpack_require__(35));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var create_panel_conf_1 = tslib_1.__importDefault(__webpack_require__(402));

var is_active_1 = tslib_1.__importDefault(__webpack_require__(138));

var Panel_1 = tslib_1.__importDefault(__webpack_require__(31));

var index_1 = tslib_1.__importDefault(__webpack_require__(403));

function formatCodeHtml(editor, html) {
  if (!html) return html;
  html = deleteHighlightCode(html);
  html = formatEnterCode(html);
  html = util_1.replaceSpecialSymbol(html);
  return html; // 格式化换换所产生的code标签

  function formatEnterCode(html) {
    var preArr = html.match(/<pre[\s|\S]+?\/pre>/g);
    if (preArr === null) return html;
    (0, _map["default"])(preArr).call(preArr, function (item) {
      //将连续的code标签换为\n换行
      html = html.replace(item, item.replace(/<\/code><code>/g, '\n').replace(/<br>/g, ''));
    });
    return html;
  } // highlight格式化方法


  function deleteHighlightCode(html) {
    var _context;

    // 获取所有hljs文本
    var m = html.match(/<span\sclass="hljs[\s|\S]+?\/span>/gm); // 没有代码渲染文本则退出
    // @ts-ignore

    if (!m || !m.length) return html; // 获取替换文本

    var r = (0, _map["default"])(_context = util_1.deepClone(m)).call(_context, function (i) {
      i = i.replace(/<span\sclass="hljs[^>]+>/, '');
      return i.replace(/<\/span>/, '');
    }); // @ts-ignore

    for (var i = 0; i < m.length; i++) {
      html = html.replace(m[i], r[i]);
    }

    return deleteHighlightCode(html);
  }
}

exports.formatCodeHtml = formatCodeHtml;

var Code =
/** @class */
function (_super) {
  tslib_1.__extends(Code, _super);

  function Code(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="代码"><i class="w-e-icon-terminal"></i></div>');
    _this = _super.call(this, $elem, editor) || this; // 绑定事件，如点击链接时，可以查看链接

    index_1["default"](editor);
    return _this;
  }
  /**
   * 插入行内代码
   * @param text
   * @return null
   */


  Code.prototype.insertLineCode = function (text) {
    var editor = this.editor; // 行内代码处理

    var $code = dom_core_1["default"]("<code>" + text + "</code>");
    editor.cmd["do"]('insertElem', $code);
    editor.selection.createRangeByElem($code, false);
    editor.selection.restoreSelection();
  };
  /**
   * 菜单点击事件
   */


  Code.prototype.clickHandler = function () {
    var editor = this.editor;
    var selectionText = editor.selection.getSelectionText();

    if (this.isActive) {
      return;
    } else {
      // 菜单未被激活，说明选区不在链接里
      if (editor.selection.isSelectionEmpty()) {
        // 选区是空的，未选中内容
        this.createPanel('', '');
      } else {
        // 行内代码处理 选中了非代码内容
        this.insertLineCode(selectionText);
      }
    }
  };
  /**
   * 创建 panel
   * @param text 代码文本
   * @param languageType 代码类型
   */


  Code.prototype.createPanel = function (text, languageType) {
    var conf = create_panel_conf_1["default"](this.editor, text, languageType);
    var panel = new Panel_1["default"](this, conf);
    panel.create();
  };
  /**
   * 尝试修改菜单 active 状态
   */


  Code.prototype.tryChangeActive = function () {
    var editor = this.editor;

    if (is_active_1["default"](editor)) {
      this.active();
    } else {
      this.unActive();
    }
  };

  return Code;
}(PanelMenu_1["default"]);

exports["default"] = Code;

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description code 菜单 panel tab 配置
 * @author lkw
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _map = _interopRequireDefault(__webpack_require__(25));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var util_1 = __webpack_require__(6);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var is_active_1 = tslib_1.__importDefault(__webpack_require__(138));

var const_1 = __webpack_require__(7);

function default_1(editor, text, languageType) {
  var _context;

  // panel 中需要用到的id
  var inputIFrameId = util_1.getRandom('input-iframe');
  var languageId = util_1.getRandom('select');
  var btnOkId = util_1.getRandom('btn-ok');
  /**
   * 插入链接
   * @param text 文字
   * @param code 链接
   */

  function insertCode(text) {
    // 选区处于链接中，则选中整个菜单，再执行 insertHTML
    var active = is_active_1["default"](editor);

    if (active) {
      selectCodeElem();
    }

    editor.cmd["do"]('insertHTML', text);
    var $code = editor.selection.getSelectionStartElem();
    var $codeElem = $code === null || $code === void 0 ? void 0 : $code.getNodeTop(editor); // 通过dom操作添加换行标签
    // @ts-ignore

    dom_core_1["default"](const_1.EMPTY_P).insertAfter($codeElem);
  }
  /**
   * 选中整个链接元素
   */


  function selectCodeElem() {
    if (!is_active_1["default"](editor)) return; // eslint-disable-next-line @typescript-eslint/no-unused-vars
    var $code = editor.selection.getSelectionStartElem();
    var $codeElem = $code === null || $code === void 0 ? void 0 : $code.getNodeTop(editor);
    if (!$codeElem) return;
    editor.selection.createRangeByElem($codeElem);
    editor.selection.restoreSelection();
  }

  var t = function t(text) {
    return editor.i18next.t(text);
  }; // @ts-ignore


  var conf = {
    width: 500,
    height: 0,
    // panel 中可包含多个 tab
    tabs: [{
      // tab 的标题
      title: t('menus.panelMenus.code.插入代码'),
      // 模板
      tpl: "<div>\n                        <select name=\"\" id=\"" + languageId + "\">\n                            " + (0, _map["default"])(_context = editor.config.languageType).call(_context, function (language) {
        return '<option ' + (languageType == language ? 'selected' : '') + ' value ="' + language + '">' + language + '</option>';
      }) + "\n                        </select>\n                        <textarea id=\"" + inputIFrameId + "\" type=\"text\" class=\"wang-code-textarea\" placeholder=\"\" style=\"height: 160px\">" + text.replace(/&quot;/g, '"') + "</textarea>\n                        <div class=\"w-e-button-container\">\n                            <button type=\"button\" id=\"" + btnOkId + "\" class=\"right\">" + (is_active_1["default"](editor) ? t('修改') : t('插入')) + "</button>\n                        </div>\n                    </div>",
      // 事件绑定
      events: [// 插入链接
      {
        selector: '#' + btnOkId,
        type: 'click',
        fn: function fn() {
          var formatCode, codeDom;
          var $code = document.getElementById(inputIFrameId);
          var $select = dom_core_1["default"]('#' + languageId);
          var languageType = $select.val(); // @ts-ignore

          var code = $code.value; // 高亮渲染

          if (editor.highlight) {
            formatCode = editor.highlight.highlightAuto(code).value;
          } else {
            formatCode = "<xmp>" + code + "</xmp>";
          } // 代码为空，则不插入


          if (!code) return; //增加标签

          if (is_active_1["default"](editor)) {
            return false;
          } else {
            //增加pre标签
            codeDom = "<pre><code class=\"" + languageType + "\">" + formatCode + "</code></pre>"; // @ts-ignore

            insertCode(codeDom);
          } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭


          return true;
        }
      }]
    } // tab end
    ] // tabs end

  };
  return conf;
}

exports["default"] = default_1;

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 绑定链接元素的事件，入口
 * @author lkw
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var tooltip_event_1 = tslib_1.__importDefault(__webpack_require__(404));

var jump_code_block_down_1 = tslib_1.__importDefault(__webpack_require__(405));
/**
 * 绑定事件
 * @param editor 编辑器实例
 */


function bindEvent(editor) {
  // tooltip 事件
  tooltip_event_1["default"](editor); // 代码块为最后内容的跳出处理

  jump_code_block_down_1["default"](editor);
}

exports["default"] = bindEvent;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description tooltip 事件
 * @author lkw
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.createShowHideFn = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36));
/**
 * 生成 Tooltip 的显示隐藏函数
 */


function createShowHideFn(editor) {
  var tooltip;
  /**
   * 显示 tooltip
   * @param $code 链接元素
   */

  function showCodeTooltip($code) {
    var i18nPrefix = 'menus.panelMenus.code.';

    var t = function t(text, prefix) {
      if (prefix === void 0) {
        prefix = i18nPrefix;
      }

      return editor.i18next.t(prefix + text);
    };

    var conf = [{
      $elem: dom_core_1["default"]("<span>" + t('删除代码') + "</span>"),
      onClick: function onClick(editor, $code) {
        //dom操作删除
        $code.remove(); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }]; // 创建 tooltip

    tooltip = new Tooltip_1["default"](editor, $code, conf);
    tooltip.create();
  }
  /**
   * 隐藏 tooltip
   */


  function hideCodeTooltip() {
    // 移除 tooltip
    if (tooltip) {
      tooltip.remove();
      tooltip = null;
    }
  }

  return {
    showCodeTooltip: showCodeTooltip,
    hideCodeTooltip: hideCodeTooltip
  };
}

exports.createShowHideFn = createShowHideFn;
/**
 * 绑定 tooltip 事件
 * @param editor 编辑器实例
 */


function bindTooltipEvent(editor) {
  var _a = createShowHideFn(editor),
      showCodeTooltip = _a.showCodeTooltip,
      hideCodeTooltip = _a.hideCodeTooltip; // 点击代码元素时，显示 tooltip


  editor.txt.eventHooks.codeClickEvents.push(showCodeTooltip); // 点击其他地方，或者滚动时，隐藏 tooltip

  editor.txt.eventHooks.clickEvents.push(hideCodeTooltip);
  editor.txt.eventHooks.toolbarClickEvents.push(hideCodeTooltip);
  editor.txt.eventHooks.menuClickEvents.push(hideCodeTooltip);
  editor.txt.eventHooks.textScrollEvents.push(hideCodeTooltip);
}

exports["default"] = bindTooltipEvent;

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description 代码块为最后一块内容时往下跳出代码块
 * @author zhengwenjian
 */


var const_1 = __webpack_require__(7);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));
/**
 * 在代码块最后一行 按方向下键跳出代码块的处理
 * @param editor 编辑器实例
 */


function bindEventJumpCodeBlock(editor) {
  var $textElem = editor.$textElem,
      selection = editor.selection,
      txt = editor.txt;
  var keydownEvents = txt.eventHooks.keydownEvents;
  keydownEvents.push(function (e) {
    var _a; // 40 是键盘中的下方向键


    if (e.keyCode !== 40) return;
    var node = selection.getSelectionContainerElem();
    var $lastNode = (_a = $textElem.children()) === null || _a === void 0 ? void 0 : _a.last();

    if ((node === null || node === void 0 ? void 0 : node.elems[0].tagName) === 'XMP' && ($lastNode === null || $lastNode === void 0 ? void 0 : $lastNode.elems[0].tagName) === 'PRE') {
      // 就是最后一块是代码块的情况插入空p标签并光标移至p
      var $emptyP = dom_core_1["default"](const_1.EMPTY_P);
      $textElem.append($emptyP);
    }
  }); // fix: 修复代码块作为最后一个元素时，用户无法再进行输入的问题

  keydownEvents.push(function (e) {
    // 实时保存选区
    editor.selection.saveRange();
    var $selectionContainerElem = selection.getSelectionContainerElem();

    if ($selectionContainerElem) {
      var $topElem = $selectionContainerElem.getNodeTop(editor); // 获取选区所在节点的上一元素

      var $preElem = $topElem === null || $topElem === void 0 ? void 0 : $topElem.prev(); // 判断该元素后面是否还存在元素
      // 如果存在则允许删除

      var $nextElem = $topElem === null || $topElem === void 0 ? void 0 : $topElem.getNextSibling();

      if ($preElem.length && ($preElem === null || $preElem === void 0 ? void 0 : $preElem.getNodeName()) === 'PRE' && $nextElem.length === 0) {
        // 光标处于选区开头
        if (selection.getCursorPos() === 0) {
          // 按下delete键阻止默认行为
          if (e.keyCode === 8) {
            e.preventDefault();
          }
        }
      }
    }
  });
}

exports["default"] = bindEventJumpCodeBlock;

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description 分割线
 * @author wangqiaoling
 */


var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var index_1 = tslib_1.__importDefault(__webpack_require__(407));

var util_1 = __webpack_require__(6);

var const_1 = __webpack_require__(7);

var splitLine =
/** @class */
function (_super) {
  tslib_1.__extends(splitLine, _super);

  function splitLine(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]('<div class="w-e-menu" data-title="分割线"><i class="w-e-icon-split-line"></i></div>');
    _this = _super.call(this, $elem, editor) || this; // 绑定事件

    index_1["default"](editor);
    return _this;
  }
  /**
   * 菜单点击事件
   */


  splitLine.prototype.clickHandler = function () {
    var editor = this.editor;
    var range = editor.selection.getRange();
    var $selectionElem = editor.selection.getSelectionContainerElem();
    if (!($selectionElem === null || $selectionElem === void 0 ? void 0 : $selectionElem.length)) return;
    var $DomElement = dom_core_1["default"]($selectionElem.elems[0]);
    var $tableDOM = $DomElement.parentUntil('TABLE', $selectionElem.elems[0]);
    var $imgDOM = $DomElement.children(); // 禁止在代码块中添加分割线

    if ($DomElement.getNodeName() === 'CODE') return; // 禁止在表格中添加分割线

    if ($tableDOM && dom_core_1["default"]($tableDOM.elems[0]).getNodeName() === 'TABLE') return; // 禁止在图片处添加分割线

    if ($imgDOM && $imgDOM.length !== 0 && dom_core_1["default"]($imgDOM.elems[0]).getNodeName() === 'IMG' && !(range === null || range === void 0 ? void 0 : range.collapsed) // 处理光标在 img 后面的情况
    ) {
        return;
      }

    this.createSplitLine();
  };
  /**
   * 创建 splitLine
   */


  splitLine.prototype.createSplitLine = function () {
    // 防止插入分割线时没有占位元素的尴尬
    var splitLineDOM = "<hr/>" + const_1.EMPTY_P; // 火狐浏览器不需要br标签占位

    if (util_1.UA.isFirefox) {
      splitLineDOM = '<hr/><p></p>';
    }

    this.editor.cmd["do"]('insertHTML', splitLineDOM);
  };
  /**
   * 尝试修改菜单激活状态
   */


  splitLine.prototype.tryChangeActive = function () {};

  return splitLine;
}(BtnMenu_1["default"]);

exports["default"] = splitLine;

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var tooltip_event_1 = tslib_1.__importDefault(__webpack_require__(408));
/**
 * 绑定事件
 * @param editor 编辑器实例
 */


function bindEvent(editor) {
  // 分割线的 tooltip 事件
  tooltip_event_1["default"](editor);
}

exports["default"] = bindEvent;

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);
/**
 * @description tooltip 事件
 * @author wangqiaoling
 */


var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var Tooltip_1 = tslib_1.__importDefault(__webpack_require__(36));
/**
 * 生成 Tooltip 的显示隐藏函数
 */


function createShowHideFn(editor) {
  var tooltip;
  /**
   * 显示分割线的 tooltip
   * @param $splitLine 分割线元素
   */

  function showSplitLineTooltip($splitLine) {
    // 定义 splitLine tooltip 配置
    var conf = [{
      $elem: dom_core_1["default"]("<span>" + editor.i18next.t('menus.panelMenus.删除') + "</span>"),
      onClick: function onClick(editor, $splitLine) {
        // 选中 分割线 元素
        editor.selection.createRangeByElem($splitLine);
        editor.selection.restoreSelection();
        editor.cmd["do"]('delete'); // 返回 true，表示执行完之后，隐藏 tooltip。否则不隐藏。

        return true;
      }
    }]; // 实例化 tooltip

    tooltip = new Tooltip_1["default"](editor, $splitLine, conf); // 创建 tooltip

    tooltip.create();
  }
  /**
   * 隐藏分割线的 tooltip
   */


  function hideSplitLineTooltip() {
    if (tooltip) {
      tooltip.remove();
      tooltip = null;
    }
  }

  return {
    showSplitLineTooltip: showSplitLineTooltip,
    hideSplitLineTooltip: hideSplitLineTooltip
  };
}

function bindTooltipEvent(editor) {
  var _a = createShowHideFn(editor),
      showSplitLineTooltip = _a.showSplitLineTooltip,
      hideSplitLineTooltip = _a.hideSplitLineTooltip; // 点击分割线时，显示 tooltip


  editor.txt.eventHooks.splitLineEvents.push(showSplitLineTooltip); // 点击其他地方（工具栏、滚动、keyup）时，隐藏 tooltip

  editor.txt.eventHooks.clickEvents.push(hideSplitLineTooltip);
  editor.txt.eventHooks.keyupEvents.push(hideSplitLineTooltip);
  editor.txt.eventHooks.toolbarClickEvents.push(hideSplitLineTooltip);
  editor.txt.eventHooks.menuClickEvents.push(hideSplitLineTooltip);
  editor.txt.eventHooks.textScrollEvents.push(hideSplitLineTooltip);
}

exports["default"] = bindTooltipEvent;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var BtnMenu_1 = tslib_1.__importDefault(__webpack_require__(23));

var util_1 = __webpack_require__(98);

var bind_event_1 = tslib_1.__importDefault(__webpack_require__(415));

var todo_1 = tslib_1.__importDefault(__webpack_require__(139));

var Todo =
/** @class */
function (_super) {
  tslib_1.__extends(Todo, _super);

  function Todo(editor) {
    var _this = this;

    var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5F85\u529E\u4E8B\u9879\">\n                    <i class=\"w-e-icon-checkbox-checked\"></i>\n                </div>");
    _this = _super.call(this, $elem, editor) || this;
    bind_event_1["default"](editor);
    return _this;
  }
  /**
   * 点击事件
   */


  Todo.prototype.clickHandler = function () {
    var editor = this.editor;

    if (!util_1.isAllTodo(editor)) {
      // 设置todolist
      this.setTodo();
    } else {
      // 取消设置todolist
      this.cancelTodo();
      this.tryChangeActive();
    }
  };

  Todo.prototype.tryChangeActive = function () {
    if (util_1.isAllTodo(this.editor)) {
      this.active();
    } else {
      this.unActive();
    }
  };
  /**
   * 设置todo
   */


  Todo.prototype.setTodo = function () {
    var editor = this.editor;
    var topNodeElem = editor.selection.getSelectionRangeTopNodes();
    (0, _forEach["default"])(topNodeElem).call(topNodeElem, function ($node) {
      var _a;

      var nodeName = $node === null || $node === void 0 ? void 0 : $node.getNodeName();

      if (nodeName === 'P') {
        var todo = todo_1["default"]($node);
        var todoNode = todo.getTodo();
        var child = (_a = todoNode.children()) === null || _a === void 0 ? void 0 : _a.getNode();
        todoNode.insertAfter($node);
        editor.selection.moveCursor(child);
        $node.remove();
      }
    });
    this.tryChangeActive();
  };
  /**
   * 取消设置todo
   */


  Todo.prototype.cancelTodo = function () {
    var editor = this.editor;
    var $topNodeElems = editor.selection.getSelectionRangeTopNodes();
    (0, _forEach["default"])($topNodeElems).call($topNodeElems, function ($topNodeElem) {
      var _a, _b, _c;

      var content = (_b = (_a = $topNodeElem.childNodes()) === null || _a === void 0 ? void 0 : _a.childNodes()) === null || _b === void 0 ? void 0 : _b.clone(true);
      var $p = dom_core_1["default"]("<p></p>");
      $p.append(content);
      $p.insertAfter($topNodeElem); // 移除input

      (_c = $p.childNodes()) === null || _c === void 0 ? void 0 : _c.get(0).remove();
      editor.selection.moveCursor($p.getNode());
      $topNodeElem.remove();
    });
  };

  return Todo;
}(BtnMenu_1["default"]);

exports["default"] = Todo;

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(411);

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

var parent = __webpack_require__(412);

module.exports = parent;


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

var every = __webpack_require__(413);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.every;
  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.every) ? every : own;
};


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(414);
var entryVirtual = __webpack_require__(14);

module.exports = entryVirtual('Array').every;


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(5);
var $every = __webpack_require__(29).every;
var arrayMethodIsStrict = __webpack_require__(71);

var STRICT_METHOD = arrayMethodIsStrict('every');

// `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(98);

var todo_1 = tslib_1.__importDefault(__webpack_require__(139));

var util_2 = __webpack_require__(98);

var const_1 = __webpack_require__(7);
/**
 * todolist 内部逻辑
 * @param editor
 */


function bindEvent(editor) {
  /**
   * todo的自定义回车事件
   * @param e 事件属性
   */
  function todoEnter(e) {
    var _a, _b; // 判断是否为todo节点


    if (util_1.isAllTodo(editor)) {
      e.preventDefault();
      var selection = editor.selection;
      var $topSelectElem = selection.getSelectionRangeTopNodes()[0];
      var $li = (_a = $topSelectElem.childNodes()) === null || _a === void 0 ? void 0 : _a.get(0);
      var selectionNode = (_b = window.getSelection()) === null || _b === void 0 ? void 0 : _b.anchorNode;
      var range = selection.getRange();

      if (!(range === null || range === void 0 ? void 0 : range.collapsed)) {
        var rangeChildNodes = range === null || range === void 0 ? void 0 : range.commonAncestorContainer.childNodes;
        var startContainer_1 = range === null || range === void 0 ? void 0 : range.startContainer;
        var endContainer_1 = range === null || range === void 0 ? void 0 : range.endContainer;
        var startPos = range === null || range === void 0 ? void 0 : range.startOffset;
        var endPos = range === null || range === void 0 ? void 0 : range.endOffset;
        var startElemIndex_1 = 0;
        var endElemIndex_1 = 0;
        var delList_1 = []; // 找出startContainer和endContainer在rangeChildNodes中的位置

        rangeChildNodes === null || rangeChildNodes === void 0 ? void 0 : (0, _forEach["default"])(rangeChildNodes).call(rangeChildNodes, function (v, i) {
          if (v.contains(startContainer_1)) startElemIndex_1 = i;
          if (v.contains(endContainer_1)) endElemIndex_1 = i;
        }); // 删除两个容器间的内容

        if (endElemIndex_1 - startElemIndex_1 > 1) {
          rangeChildNodes === null || rangeChildNodes === void 0 ? void 0 : (0, _forEach["default"])(rangeChildNodes).call(rangeChildNodes, function (v, i) {
            if (i <= startElemIndex_1) return;
            if (i >= endElemIndex_1) return;
            delList_1.push(v);
          });
          (0, _forEach["default"])(delList_1).call(delList_1, function (v) {
            v.remove();
          });
        } // 删除两个容器里拖蓝的内容


        util_2.dealTextNode(startContainer_1, startPos);
        util_2.dealTextNode(endContainer_1, endPos, false);
        editor.selection.moveCursor(endContainer_1, 0);
      } // 回车时内容为空时，删去此行


      if ($topSelectElem.text() === '') {
        var $p = dom_core_1["default"](const_1.EMPTY_P);
        $p.insertAfter($topSelectElem);
        selection.moveCursor($p.getNode());
        $topSelectElem.remove();
        return;
      }

      var pos = selection.getCursorPos();
      var CursorNextNode = util_1.getCursorNextNode($li === null || $li === void 0 ? void 0 : $li.getNode(), selectionNode, pos);
      var todo = todo_1["default"](dom_core_1["default"](CursorNextNode));
      var $inputcontainer = todo.getInputContainer();
      var todoLiElem = $inputcontainer.parent().getNode();
      var $newTodo = todo.getTodo();
      var contentSection = $inputcontainer.getNode().nextSibling; // 处理光标在最前面时回车input不显示的问题

      if (($li === null || $li === void 0 ? void 0 : $li.text()) === '') {
        $li === null || $li === void 0 ? void 0 : $li.append(dom_core_1["default"]("<br>"));
      }

      $newTodo.insertAfter($topSelectElem); // 处理在google中光标在最后面的，input不显示的问题(必须插入之后移动光标)

      if (!contentSection || (contentSection === null || contentSection === void 0 ? void 0 : contentSection.textContent) === '') {
        // 防止多个br出现的情况
        if ((contentSection === null || contentSection === void 0 ? void 0 : contentSection.nodeName) !== 'BR') {
          var $br = dom_core_1["default"]("<br>");
          $br.insertAfter($inputcontainer);
        }

        selection.moveCursor(todoLiElem, 1);
      } else {
        selection.moveCursor(todoLiElem);
      }
    }
  }
  /**
   * 自定义删除事件，用来处理光标在最前面删除input产生的问题
   */


  function delDown(e) {
    var _a, _b;

    if (util_1.isAllTodo(editor)) {
      var selection = editor.selection;
      var $topSelectElem = selection.getSelectionRangeTopNodes()[0];
      var $li = (_a = $topSelectElem.childNodes()) === null || _a === void 0 ? void 0 : _a.getNode();
      var $p = dom_core_1["default"]("<p></p>");
      var p_1 = $p.getNode();
      var selectionNode = (_b = window.getSelection()) === null || _b === void 0 ? void 0 : _b.anchorNode;
      var pos = selection.getCursorPos();
      var prevNode = selectionNode.previousSibling; // 处理内容为空的情况

      if ($topSelectElem.text() === '') {
        e.preventDefault();
        var $newP = dom_core_1["default"](const_1.EMPTY_P);
        $newP.insertAfter($topSelectElem);
        $topSelectElem.remove();
        selection.moveCursor($newP.getNode(), 0);
        return;
      } // 处理有内容时，光标在最前面的情况


      if ((prevNode === null || prevNode === void 0 ? void 0 : prevNode.nodeName) === 'SPAN' && prevNode.childNodes[0].nodeName === 'INPUT' && pos === 0) {
        var _context;

        e.preventDefault();
        $li === null || $li === void 0 ? void 0 : (0, _forEach["default"])(_context = $li.childNodes).call(_context, function (v, index) {
          if (index === 0) return;
          p_1.appendChild(v.cloneNode(true));
        });
        $p.insertAfter($topSelectElem);
        $topSelectElem.remove();
      }
    }
  }
  /**
   * 自定义删除键up事件
   */


  function deleteUp() {
    var selection = editor.selection;
    var $topSelectElem = selection.getSelectionRangeTopNodes()[0];

    if ($topSelectElem && util_2.isTodo($topSelectElem)) {
      if ($topSelectElem.text() === '') {
        dom_core_1["default"](const_1.EMPTY_P).insertAfter($topSelectElem);
        $topSelectElem.remove();
      }
    }
  }

  editor.txt.eventHooks.enterDownEvents.push(todoEnter);
  editor.txt.eventHooks.deleteUpEvents.push(deleteUp);
  editor.txt.eventHooks.deleteDownEvents.push(delDown);
}

exports["default"] = bindEvent;

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 初始化编辑器 DOM 结构
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);

var const_1 = __webpack_require__(7);

var styleSettings = {
  border: '1px solid #c9d8db',
  toolbarBgColor: '#FFF',
  toolbarBottomBorder: '1px solid #EEE'
};

function default_1(editor) {
  var toolbarSelector = editor.toolbarSelector;
  var $toolbarSelector = dom_core_1["default"](toolbarSelector);
  var textSelector = editor.textSelector;
  var config = editor.config;
  var height = config.height;
  var i18next = editor.i18next;
  var $toolbarElem = dom_core_1["default"]('<div></div>');
  var $textContainerElem = dom_core_1["default"]('<div></div>');
  var $textElem;
  var $children;
  var $subChildren = null;

  if (textSelector == null) {
    // 将编辑器区域原有的内容，暂存起来
    $children = $toolbarSelector.children(); // 添加到 DOM 结构中

    $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式

    $toolbarElem.css('background-color', styleSettings.toolbarBgColor).css('border', styleSettings.border).css('border-bottom', styleSettings.toolbarBottomBorder);
    $textContainerElem.css('border', styleSettings.border).css('border-top', 'none').css('height', height + "px");
  } else {
    // toolbarSelector 和 textSelector 都有
    $toolbarSelector.append($toolbarElem); // 菜单分离后，文本区域内容暂存

    $subChildren = dom_core_1["default"](textSelector).children();
    dom_core_1["default"](textSelector).append($textContainerElem); // 将编辑器区域原有的内容，暂存起来

    $children = $textContainerElem.children();
  } // 编辑区域


  $textElem = dom_core_1["default"]('<div></div>');
  $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 添加 placeholder

  var $placeholder = dom_core_1["default"]("<div>" + i18next.t(editor.config.placeholder) + "</div>");
  $placeholder.addClass('placeholder'); // 初始化编辑区域内容

  if ($children && $children.length) {
    $textElem.append($children); // 编辑器有默认值的时候隐藏placeholder

    $placeholder.hide();
  } else {
    $textElem.append(dom_core_1["default"](const_1.EMPTY_P)); // 新增一行，方便继续编辑
  } // 菜单分离后，文本区域有标签的带入编辑器内


  if ($subChildren && $subChildren.length) {
    $textElem.append($subChildren); // 编辑器有默认值的时候隐藏placeholder

    $placeholder.hide();
  } // 编辑区域加入DOM


  $textContainerElem.append($textElem); // 添加placeholder

  $textContainerElem.append($placeholder); // 设置通用的 class

  $toolbarElem.addClass('w-e-toolbar').css('z-index', editor.zIndex.get('toolbar'));
  $textContainerElem.addClass('w-e-text-container');
  $textContainerElem.css('z-index', editor.zIndex.get());
  $textElem.addClass('w-e-text'); // 添加 ID

  var toolbarElemId = util_1.getRandom('toolbar-elem');
  $toolbarElem.attr('id', toolbarElemId);
  var textElemId = util_1.getRandom('text-elem');
  $textElem.attr('id', textElemId); // 判断编辑区与容器高度是否一致

  var textContainerCliheight = $textContainerElem.getBoundingClientRect().height;
  var textElemClientHeight = $textElem.getBoundingClientRect().height;

  if (textContainerCliheight !== textElemClientHeight) {
    $textElem.css('min-height', textContainerCliheight + 'px');
  } // 记录属性


  editor.$toolbarElem = $toolbarElem;
  editor.$textContainerElem = $textContainerElem;
  editor.$textElem = $textElem;
  editor.toolbarElemId = toolbarElemId;
  editor.textElemId = textElemId;
}

exports["default"] = default_1;

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 初始化编辑器选区，将光标定位到文档末尾
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var const_1 = __webpack_require__(7);
/**
 * 初始化编辑器选区，将光标定位到文档末尾
 * @param editor 编辑器实例
 * @param newLine 是否新增一行
 */


function initSelection(editor, newLine) {
  var $textElem = editor.$textElem;
  var $children = $textElem.children();

  if (!$children || !$children.length) {
    // 如果编辑器区域无内容，添加一个空行，重新设置选区
    $textElem.append(dom_core_1["default"](const_1.EMPTY_P));
    initSelection(editor);
    return;
  }

  var $last = $children.last();

  if (newLine) {
    // 新增一个空行
    var html = $last.html().toLowerCase();
    var nodeName = $last.getNodeName();

    if (html !== '<br>' && html !== '<br/>' || nodeName !== 'P') {
      // 最后一个元素不是 空标签，添加一个空行，重新设置选区
      $textElem.append(dom_core_1["default"](const_1.EMPTY_P));
      initSelection(editor);
      return;
    }
  }

  editor.selection.createRangeByElem($last, false, true);

  if (editor.config.focus) {
    editor.selection.restoreSelection();
  } else {
    // 防止focus=false受其他因素影响
    editor.selection.clearWindowSelectionRange();
  }
}

exports["default"] = initSelection;

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 绑定编辑器事件 change blur focus
 * @author wangfupeng
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

function bindEvent(editor) {
  // 绑定 change 事件
  _bindChange(editor); // 绑定 focus blur 事件


  _bindFocusAndBlur(editor); // 绑定 input 输入


  _bindInput(editor);
}
/**
 * 绑定 change 事件
 * @param editor 编辑器实例
 */


function _bindChange(editor) {
  editor.txt.eventHooks.changeEvents.push(function () {
    var onchange = editor.config.onchange;

    if (onchange) {
      var html = editor.txt.html() || '';
      onchange(html);
    }

    editor.txt.togglePlaceholder();
  });
}
/**
 * 绑定 focus blur 事件
 * @param editor 编辑器实例
 */


function _bindFocusAndBlur(editor) {
  // 当前编辑器是否是焦点状态
  editor.isFocus = false;

  function listener(e) {
    var target = e.target;
    var $target = dom_core_1["default"](target);
    var $textElem = editor.$textElem;
    var $toolbarElem = editor.$toolbarElem; //判断当前点击元素是否在编辑器内

    var isChild = $textElem.isContain($target); //判断当前点击元素是否为工具栏

    var isToolbar = $toolbarElem.isContain($target);
    var isMenu = $toolbarElem.elems[0] == e.target ? true : false;

    if (!isChild) {
      // 若为选择工具栏中的功能，则不视为成 blur 操作
      if (isToolbar && !isMenu || !editor.isFocus) {
        return;
      }

      _blurHandler(editor);

      editor.isFocus = false;
    } else {
      if (!editor.isFocus) {
        _focusHandler(editor);
      }

      editor.isFocus = true;
    }
  } // fix: 增加判断条件，防止当用户设置isFocus=false时，初始化完成后点击其他元素依旧会触发blur事件的问题


  if (document.activeElement === editor.$textElem.elems[0] && editor.config.focus) {
    _focusHandler(editor);

    editor.isFocus = true;
  } // 绑定监听事件


  dom_core_1["default"](document).on('click', listener); // 全局事件在编辑器实例销毁的时候进行解绑

  editor.beforeDestroy(function () {
    dom_core_1["default"](document).off('click', listener);
  });
}
/**
 * 绑定 input 事件
 * @param editor 编辑器实例
 */


function _bindInput(editor) {
  // 绑定中文输入
  editor.$textElem.on('compositionstart', function () {
    editor.isComposing = true;
    editor.txt.togglePlaceholder();
  }).on('compositionend', function () {
    editor.isComposing = false;
    editor.txt.togglePlaceholder();
  });
}
/**
 * blur 事件
 * @param editor 编辑器实例
 */


function _blurHandler(editor) {
  var _context;

  var config = editor.config;
  var onblur = config.onblur;
  var currentHtml = editor.txt.html() || '';
  (0, _forEach["default"])(_context = editor.txt.eventHooks.onBlurEvents).call(_context, function (fn) {
    return fn();
  });
  onblur(currentHtml);
}
/**
 * focus 事件
 * @param editor 编辑器实例
 */


function _focusHandler(editor) {
  var config = editor.config;
  var onfocus = config.onfocus;
  var currentHtml = editor.txt.html() || '';
  onfocus(currentHtml);
}

exports["default"] = bindEvent;

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 国际化 初始化
 * @author tonghan
 * i18next 是使用 JavaScript 编写的国际化框架
 * i18next 提供了标准的i18n功能，例如（复数，上下文，插值，格式）等
 * i18next 文档地址： https://www.i18next.com/overview/getting-started
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

function i18nextInit(editor) {
  var _a = editor.config,
      lang = _a.lang,
      languages = _a.languages;

  if (editor.i18next != null) {
    try {
      editor.i18next.init({
        ns: 'wangEditor',
        lng: lang,
        defaultNS: 'wangEditor',
        resources: languages
      });
    } catch (error) {
      throw new Error('i18next:' + error);
    }

    return;
  } // 没有引入 i18next 的替代品


  editor.i18next = {
    t: function t(str) {
      var strArr = str.split('.');
      return strArr[strArr.length - 1];
    }
  };
}

exports["default"] = i18nextInit;

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 全屏功能
 * @author xiaokyo
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _find = _interopRequireDefault(__webpack_require__(30));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.setUnFullScreen = exports.setFullScreen = void 0;

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

__webpack_require__(421);

var iconFullScreenText = 'w-e-icon-fullscreen'; // 全屏icon class

var iconExitFullScreenText = 'w-e-icon-fullscreen_exit'; // 退出全屏icon class

var classfullScreenEditor = 'w-e-full-screen-editor'; // 全屏添加至编辑器的class

/**
 * 设置全屏
 * @param editor 编辑器实例
 */

var setFullScreen = function setFullScreen(editor) {
  var $editorParent = dom_core_1["default"](editor.toolbarSelector);
  var $textContainerElem = editor.$textContainerElem;
  var $toolbarElem = editor.$toolbarElem;
  var $iconElem = (0, _find["default"])($toolbarElem).call($toolbarElem, "i." + iconFullScreenText);
  var config = editor.config;
  $iconElem.removeClass(iconFullScreenText);
  $iconElem.addClass(iconExitFullScreenText);
  $editorParent.addClass(classfullScreenEditor);
  $editorParent.css('z-index', config.zIndexFullScreen);
  var bar = $toolbarElem.getBoundingClientRect();
  $textContainerElem.css('height', "calc(100% - " + bar.height + "px)");
};

exports.setFullScreen = setFullScreen;
/**
 * 取消全屏
 * @param editor 编辑器实例
 */

var setUnFullScreen = function setUnFullScreen(editor) {
  var $editorParent = dom_core_1["default"](editor.toolbarSelector);
  var $textContainerElem = editor.$textContainerElem;
  var $toolbarElem = editor.$toolbarElem;
  var $iconElem = (0, _find["default"])($toolbarElem).call($toolbarElem, "i." + iconExitFullScreenText);
  var config = editor.config;
  $iconElem.removeClass(iconExitFullScreenText);
  $iconElem.addClass(iconFullScreenText);
  $editorParent.removeClass(classfullScreenEditor);
  $editorParent.css('z-index', 'auto');
  $textContainerElem.css('height', config.height + 'px');
};

exports.setUnFullScreen = setUnFullScreen;
/**
 * 初始化全屏功能
 * @param editor 编辑器实例
 */

var initFullScreen = function initFullScreen(editor) {
  // 当textSelector有值的时候，也就是编辑器是工具栏和编辑区域分离的情况， 则不生成全屏功能按钮
  if (editor.textSelector) return;
  if (!editor.config.showFullScreen) return;
  var $toolbarElem = editor.$toolbarElem;
  var $elem = dom_core_1["default"]("<div class=\"w-e-menu\" data-title=\"\u5168\u5C4F\">\n            <i class=\"" + iconFullScreenText + "\"></i>\n        </div>");
  $elem.on('click', function (e) {
    var _context;

    var $elemIcon = (0, _find["default"])(_context = dom_core_1["default"](e.currentTarget)).call(_context, 'i');

    if ($elemIcon.hasClass(iconFullScreenText)) {
      $elem.attr('data-title', '取消全屏');
      exports.setFullScreen(editor);
    } else {
      $elem.attr('data-title', '全屏');
      exports.setUnFullScreen(editor);
    }
  });
  $toolbarElem.append($elem);
};

exports["default"] = initFullScreen;

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(422);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-full-screen-editor {\n  position: fixed;\n  width: 100%!important;\n  height: 100%!important;\n  left: 0;\n  top: 0;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 滚动到指定锚点
 * @author zhengwenjian
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _find = _interopRequireDefault(__webpack_require__(30));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/**
 * 编辑器滚动到指定锚点
 * @param editor 编辑器实例
 * @param id 标题锚点id
 */

var scrollToHead = function scrollToHead(editor, id) {
  var $textElem = editor.$textElem;
  var $targetHead = (0, _find["default"])($textElem).call($textElem, "[id='" + id + "']");
  var targetTop = $targetHead.getOffsetData().top;
  $textElem.scrollTop(targetTop);
};

exports["default"] = scrollToHead;

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var style_1 = tslib_1.__importDefault(__webpack_require__(127));

var tier = {
  menu: 2,
  panel: 2,
  toolbar: 1,
  tooltip: 1,
  textContainer: 1 // 编辑区域

};

var ZIndex =
/** @class */
function () {
  function ZIndex() {
    // 层级参数
    this.tier = tier; // 默认值

    this.baseZIndex = style_1["default"].zIndex;
  } // 获取 tierName 对应的 z-index 的值。如果 tierName 未定义则返回默认的 z-index 值


  ZIndex.prototype.get = function (tierName) {
    if (tierName && this.tier[tierName]) {
      return this.baseZIndex + this.tier[tierName];
    }

    return this.baseZIndex;
  }; // 初始化


  ZIndex.prototype.init = function (editor) {
    if (this.baseZIndex == style_1["default"].zIndex) {
      this.baseZIndex = editor.config.zIndex;
    }
  };

  return ZIndex;
}();

exports["default"] = ZIndex;

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 编辑器 change 事件
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _filter = _interopRequireDefault(__webpack_require__(74));

var _forEach = _interopRequireDefault(__webpack_require__(4));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var mutation_1 = tslib_1.__importDefault(__webpack_require__(426));

var util_1 = __webpack_require__(6);

var const_1 = __webpack_require__(7);
/**
 * 剔除编辑区容器的 attribute 变化中的非 contenteditable 变化
 * @param mutations MutationRecord[]
 * @param tar 编辑区容器的 DOM 节点
 */


function mutationsFilter(mutations, tar) {
  // 剔除编辑区容器的 attribute 变化中的非 contenteditable 变化
  return (0, _filter["default"])(mutations).call(mutations, function (_a) {
    var type = _a.type,
        target = _a.target,
        attributeName = _a.attributeName;
    return type != 'attributes' || type == 'attributes' && (attributeName == 'contenteditable' || target != tar);
  });
}
/**
 * Change 实现
 */


var Change =
/** @class */
function (_super) {
  tslib_1.__extends(Change, _super);

  function Change(editor) {
    var _this = _super.call(this, function (mutations, observer) {
      var _a; // 数据过滤


      mutations = mutationsFilter(mutations, observer.target); // 存储数据

      (_a = _this.data).push.apply(_a, mutations); // 标准模式下


      if (!editor.isCompatibleMode) {
        // 在非中文输入状态下时才保存数据
        if (!editor.isComposing) {
          return _this.asyncSave();
        }
      } // 兼容模式下
      else {
          _this.asyncSave();
        }
    }) || this;

    _this.editor = editor;
    /**
     * 变化的数据集合
     */

    _this.data = [];
    /**
     * 异步保存数据
     */

    _this.asyncSave = const_1.EMPTY_FN;
    return _this;
  }
  /**
   * 保存变化的数据并发布 change event
   */


  Change.prototype.save = function () {
    // 有数据
    if (this.data.length) {
      // 保存变化数据
      this.editor.history.save(this.data); // 清除缓存

      this.data.length = 0;
      this.emit();
    }
  };
  /**
   * 发布 change event
   */


  Change.prototype.emit = function () {
    var _context;

    // 执行 onchange 回调
    (0, _forEach["default"])(_context = this.editor.txt.eventHooks.changeEvents).call(_context, function (fn) {
      return fn();
    });
  }; // 重写 observe


  Change.prototype.observe = function () {
    var _this = this;

    _super.prototype.observe.call(this, this.editor.$textElem.elems[0]);

    var timeout = this.editor.config.onchangeTimeout;
    this.asyncSave = util_1.debounce(function () {
      _this.save();
    }, timeout);

    if (!this.editor.isCompatibleMode) {
      this.editor.$textElem.on('compositionend', function () {
        _this.asyncSave();
      });
    }
  };

  return Change;
}(mutation_1["default"]);

exports["default"] = Change;

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 封装 MutationObserver
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
/**
 * 封装 MutationObserver，抽离成公共类
 */

var Mutation =
/** @class */
function () {
  /**
   * 构造器
   * @param fn 发生变化时执行的回调函数
   * @param options 自定义配置项
   */
  function Mutation(fn, options) {
    var _this = this;
    /**
     * 默认的 MutationObserverInit 配置
     */


    this.options = {
      subtree: true,
      childList: true,
      attributes: true,
      attributeOldValue: true,
      characterData: true,
      characterDataOldValue: true
    };

    this.callback = function (mutations) {
      fn(mutations, _this);
    };

    this.observer = new MutationObserver(this.callback);
    options && (this.options = options);
  }

  (0, _defineProperty["default"])(Mutation.prototype, "target", {
    get: function get() {
      return this.node;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 绑定监听节点（初次绑定有效）
   * @param node 需要被监听的节点
   */

  Mutation.prototype.observe = function (node) {
    if (!(this.node instanceof Node)) {
      this.node = node;
      this.connect();
    }
  };
  /**
   * 连接监听器（开始观察）
   */


  Mutation.prototype.connect = function () {
    if (this.node) {
      this.observer.observe(this.node, this.options);
      return this;
    }

    throw new Error('还未初始化绑定，请您先绑定有效的 Node 节点');
  };
  /**
   * 断开监听器（停止观察）
   */


  Mutation.prototype.disconnect = function () {
    var list = this.observer.takeRecords();
    list.length && this.callback(list);
    this.observer.disconnect();
  };

  return Mutation;
}();

exports["default"] = Mutation;

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 历史记录
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var content_1 = tslib_1.__importDefault(__webpack_require__(428));

var scroll_1 = tslib_1.__importDefault(__webpack_require__(435));

var range_1 = tslib_1.__importDefault(__webpack_require__(436));
/**
 * 历史记录（撤销、恢复）
 */


var History =
/** @class */
function () {
  function History(editor) {
    this.editor = editor;
    this.content = new content_1["default"](editor);
    this.scroll = new scroll_1["default"](editor);
    this.range = new range_1["default"](editor);
  }

  (0, _defineProperty["default"])(History.prototype, "size", {
    /**
     *  获取缓存中的数据长度。格式为：[正常的数据的条数，被撤销的数据的条数]
     */
    get: function get() {
      return this.scroll.size;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 初始化绑定。在 editor.create() 结尾时调用
   */

  History.prototype.observe = function () {
    this.content.observe();
    this.scroll.observe(); // 标准模式下才进行初始化绑定

    !this.editor.isCompatibleMode && this.range.observe();
  };
  /**
   * 保存数据
   */


  History.prototype.save = function (mutations) {
    if (mutations.length) {
      this.content.save(mutations);
      this.scroll.save(); // 标准模式下才进行缓存

      !this.editor.isCompatibleMode && this.range.save();
    }
  };
  /**
   * 撤销
   */


  History.prototype.revoke = function () {
    this.editor.change.disconnect();
    var res = this.content.revoke();

    if (res) {
      this.scroll.revoke(); // 标准模式下才执行

      if (!this.editor.isCompatibleMode) {
        this.range.revoke();
        this.editor.$textElem.focus();
      }
    }

    this.editor.change.connect(); // 如果用户在 onchange 中修改了内容（DOM），那么缓存中的节点数据可能不连贯了，不连贯的数据必将导致恢复失败，所以必须将用户的 onchange 处于监控状态中

    res && this.editor.change.emit();
  };
  /**
   * 恢复
   */


  History.prototype.restore = function () {
    this.editor.change.disconnect();
    var res = this.content.restore();

    if (res) {
      this.scroll.restore(); // 标准模式下才执行

      if (!this.editor.isCompatibleMode) {
        this.range.restore();
        this.editor.$textElem.focus();
      }
    }

    this.editor.change.connect(); // 与 revoke 同理

    res && this.editor.change.emit();
  };

  return History;
}();

exports["default"] = History;

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 整合差异备份和内容备份，进行统一管理
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var node_1 = tslib_1.__importDefault(__webpack_require__(429));

var html_1 = tslib_1.__importDefault(__webpack_require__(433));

var ContentCache =
/** @class */
function () {
  function ContentCache(editor) {
    this.editor = editor;
  }
  /**
   * 初始化绑定
   */


  ContentCache.prototype.observe = function () {
    if (this.editor.isCompatibleMode) {
      // 兼容模式（内容备份）
      this.cache = new html_1["default"](this.editor);
    } else {
      // 标准模式（差异备份/节点备份）
      this.cache = new node_1["default"](this.editor);
    }

    this.cache.observe();
  };
  /**
   * 保存
   */


  ContentCache.prototype.save = function (mutations) {
    if (this.editor.isCompatibleMode) {
      this.cache.save();
    } else {
      this.cache.compile(mutations);
    }
  };
  /**
   * 撤销
   */


  ContentCache.prototype.revoke = function () {
    var _a;

    return (_a = this.cache) === null || _a === void 0 ? void 0 : _a.revoke();
  };
  /**
   * 恢复
   */


  ContentCache.prototype.restore = function () {
    var _a;

    return (_a = this.cache) === null || _a === void 0 ? void 0 : _a.restore();
  };

  return ContentCache;
}();

exports["default"] = ContentCache;

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 差异备份
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var cache_1 = tslib_1.__importDefault(__webpack_require__(99));

var compile_1 = tslib_1.__importDefault(__webpack_require__(431));

var decompilation_1 = __webpack_require__(432);

var NodeCache =
/** @class */
function (_super) {
  tslib_1.__extends(NodeCache, _super);

  function NodeCache(editor) {
    var _this = _super.call(this, editor.config.historyMaxSize) || this;

    _this.editor = editor;
    return _this;
  }

  NodeCache.prototype.observe = function () {
    this.resetMaxSize(this.editor.config.historyMaxSize);
  };
  /**
   * 编译并保存数据
   */


  NodeCache.prototype.compile = function (data) {
    this.save(compile_1["default"](data));
    return this;
  };
  /**
   * 撤销
   */


  NodeCache.prototype.revoke = function () {
    return _super.prototype.revoke.call(this, function (data) {
      decompilation_1.revoke(data);
    });
  };
  /**
   * 恢复
   */


  NodeCache.prototype.restore = function () {
    return _super.prototype.restore.call(this, function (data) {
      decompilation_1.restore(data);
    });
  };

  return NodeCache;
}(cache_1["default"]);

exports["default"] = NodeCache;

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 数据结构 - 栈
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.CeilStack = void 0;
/**
 * 栈（限制最大数据条数，栈满后可以继续入栈，而先入栈的数据将失效）
 */
// 取名灵感来自 Math.ceil，向上取有效值

var CeilStack =
/** @class */
function () {
  function CeilStack(max) {
    if (max === void 0) {
      max = 0;
    }
    /**
     * 数据缓存
     */


    this.data = [];
    /**
     * 栈的最大长度。为零则长度不限
     */

    this.max = 0;
    /**
     * 标识是否重设过 max 值
     */

    this.reset = false;
    max = Math.abs(max);
    max && (this.max = max);
  }
  /**
   * 允许用户重设一次 max 值
   */


  CeilStack.prototype.resetMax = function (maxSize) {
    maxSize = Math.abs(maxSize);

    if (!this.reset && !isNaN(maxSize)) {
      this.max = maxSize;
      this.reset = true;
    }
  };

  (0, _defineProperty["default"])(CeilStack.prototype, "size", {
    /**
     * 当前栈中的数据条数
     */
    get: function get() {
      return this.data.length;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 入栈
   * @param data 入栈的数据
   */

  CeilStack.prototype.instack = function (data) {
    this.data.unshift(data);

    if (this.max && this.size > this.max) {
      this.data.length = this.max;
    }

    return this;
  };
  /**
   * 出栈
   */


  CeilStack.prototype.outstack = function () {
    return this.data.shift();
  };
  /**
   * 清空栈
   */


  CeilStack.prototype.clear = function () {
    this.data.length = 0;
    return this;
  };

  return CeilStack;
}();

exports.CeilStack = CeilStack;

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 数据整理
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _indexOf = _interopRequireDefault(__webpack_require__(26));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.compliePosition = exports.complieNodes = exports.compileValue = exports.compileType = void 0;

var util_1 = __webpack_require__(6);
/**
 * 数据类型
 */


function compileType(data) {
  switch (data) {
    case 'childList':
      return 'node';

    case 'attributes':
      return 'attr';

    default:
      return 'text';
  }
}

exports.compileType = compileType;
/**
 * 获取当前的文本内容
 */

function compileValue(data) {
  switch (data.type) {
    case 'attributes':
      return data.target.getAttribute(data.attributeName) || '';

    case 'characterData':
      return data.target.textContent;

    default:
      return '';
  }
}

exports.compileValue = compileValue;
/**
 * addedNodes/removedNodes
 */

function complieNodes(data) {
  var temp = {};

  if (data.addedNodes.length) {
    temp.add = util_1.toArray(data.addedNodes);
  }

  if (data.removedNodes.length) {
    temp.remove = util_1.toArray(data.removedNodes);
  }

  return temp;
}

exports.complieNodes = complieNodes;
/**
 * addedNodes/removedNodes 的相对位置
 */

function compliePosition(data) {
  var temp;

  if (data.previousSibling) {
    temp = {
      type: 'before',
      target: data.previousSibling
    };
  } else if (data.nextSibling) {
    temp = {
      type: 'after',
      target: data.nextSibling
    };
  } else {
    temp = {
      type: 'parent',
      target: data.target
    };
  }

  return temp;
}

exports.compliePosition = compliePosition;
/**
 * 补全 Firefox 数据的特殊标签
 */

var tag = ['UL', 'OL', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6'];
/**
 * 将 MutationRecord 转换成自定义格式的数据
 */

function compile(data) {
  var temp = []; // 以下两个变量是兼容 Firefox 时使用到的
  // 前一次操作为删除元素节点

  var removeNode = false; // 连续的节点删除记录

  var removeCache = [];
  (0, _forEach["default"])(data).call(data, function (record, index) {
    var item = {
      type: compileType(record.type),
      target: record.target,
      attr: record.attributeName || '',
      value: compileValue(record) || '',
      oldValue: record.oldValue || '',
      nodes: complieNodes(record),
      position: compliePosition(record)
    };
    temp.push(item); // 兼容 Firefox，补全数据（这几十行代码写得吐血，跟 IE 有得一拼）

    if (!util_1.UA.isFirefox) {
      return;
    } // 正常的数据：缩进、行高、超链接、对齐方式、引用、插入表情、插入图片、分割线、表格、插入代码
    // 普通的数据补全：标题（纯文本内容）、加粗、斜体、删除线、下划线、颜色、背景色、字体、字号、列表（纯文本内容）
    // 特殊的数据补全：标题（包含 HTMLElement）、列表（包含 HTMLElement 或 ul -> ol 或 ol -> ul 或 Enter）


    if (removeNode && record.addedNodes.length && record.addedNodes[0].nodeType == 1) {
      // 需要被全数据的目标节点
      var replenishNode = record.addedNodes[0];
      var replenishData = {
        type: 'node',
        target: replenishNode,
        attr: '',
        value: '',
        oldValue: '',
        nodes: {
          add: [removeNode]
        },
        position: {
          type: 'parent',
          target: replenishNode
        }
      }; // 特殊的标签：['UL', 'OL', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6']

      if ((0, _indexOf["default"])(tag).call(tag, replenishNode.nodeName) != -1) {
        replenishData.nodes.add = util_1.toArray(replenishNode.childNodes);
        temp.push(replenishData);
      } // 上一个删除元素是文本节点
      else if (removeNode.nodeType == 3) {
          if (contains(replenishNode, removeCache)) {
            replenishData.nodes.add = util_1.toArray(replenishNode.childNodes);
          }

          temp.push(replenishData);
        } // 上一个删除元素是 Element && 由近到远的删除元素至少有一个是需要补全数据节点的子节点
        else if ((0, _indexOf["default"])(tag).call(tag, record.target.nodeName) == -1 && contains(replenishNode, removeCache)) {
            replenishData.nodes.add = util_1.toArray(replenishNode.childNodes);
            temp.push(replenishData);
          }
    } // 记录本次的节点信息


    if (item.type == 'node' && record.removedNodes.length == 1) {
      removeNode = record.removedNodes[0];
      removeCache.push(removeNode);
    } else {
      removeNode = false;
      removeCache.length = 0;
    }
  });
  return temp;
}

exports["default"] = compile; // 删除元素的历史记录中包含有多少个目标节点的子元素

function contains(tar, childs) {
  var count = 0;

  for (var i = childs.length - 1; i > 0; i--) {
    if (tar.contains(childs[i])) {
      count++;
    } else {
      break;
    }
  }

  return count;
}

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _forEach = _interopRequireDefault(__webpack_require__(4));

var _entries = _interopRequireDefault(__webpack_require__(130));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.restore = exports.revoke = void 0;
/**
 * 将节点添加到 DOM 树中
 * @param data 数据项
 * @param list 节点集合（addedNodes 或 removedNodes）
 */

function insertNode(data, list) {
  var reference = data.position.target;

  switch (data.position.type) {
    // reference 在这些节点的前面
    case 'before':
      if (reference.nextSibling) {
        reference = reference.nextSibling;
        (0, _forEach["default"])(list).call(list, function (item) {
          data.target.insertBefore(item, reference);
        });
      } else {
        (0, _forEach["default"])(list).call(list, function (item) {
          data.target.appendChild(item);
        });
      }

      break;
    // reference 在这些节点的后面

    case 'after':
      (0, _forEach["default"])(list).call(list, function (item) {
        data.target.insertBefore(item, reference);
      });
      break;
    // parent
    // reference 是这些节点的父节点

    default:
      (0, _forEach["default"])(list).call(list, function (item) {
        reference.appendChild(item);
      });
      break;
  }
}
/* ------------------------------------------------------------------ 撤销逻辑 ------------------------------------------------------------------ */


function revokeNode(data) {
  for (var _i = 0, _a = (0, _entries["default"])(data.nodes); _i < _a.length; _i++) {
    var _b = _a[_i],
        relative = _b[0],
        list = _b[1];

    switch (relative) {
      // 反向操作，将这些节点从 DOM 中移除
      case 'add':
        (0, _forEach["default"])(list).call(list, function (item) {
          data.target.removeChild(item);
        });
        break;
      // remove（反向操作，将这些节点添加到 DOM 中）

      default:
        {
          insertNode(data, list);
          break;
        }
    }
  }
}
/**
 * 撤销 attribute
 */


function revokeAttr(data) {
  var target = data.target;

  if (data.oldValue == null) {
    target.removeAttribute(data.attr);
  } else {
    target.setAttribute(data.attr, data.oldValue);
  }
}
/**
 * 撤销文本内容
 */


function revokeText(data) {
  data.target.textContent = data.oldValue;
}

var revokeFns = {
  node: revokeNode,
  text: revokeText,
  attr: revokeAttr
}; // 撤销 - 对外暴露的接口

function revoke(data) {
  for (var i = data.length - 1; i > -1; i--) {
    var item = data[i];
    revokeFns[item.type](item);
  }
}

exports.revoke = revoke;
/* ------------------------------------------------------------------ 恢复逻辑 ------------------------------------------------------------------ */

function restoreNode(data) {
  for (var _i = 0, _a = (0, _entries["default"])(data.nodes); _i < _a.length; _i++) {
    var _b = _a[_i],
        relative = _b[0],
        list = _b[1];

    switch (relative) {
      case 'add':
        {
          insertNode(data, list);
          break;
        }
      // remove

      default:
        {
          (0, _forEach["default"])(list).call(list, function (item) {
            item.parentNode.removeChild(item);
          });
          break;
        }
    }
  }
}

function restoreText(data) {
  data.target.textContent = data.value;
}

function restoreAttr(data) {
  data.target.setAttribute(data.attr, data.value);
}

var restoreFns = {
  node: restoreNode,
  text: restoreText,
  attr: restoreAttr
}; // 恢复 - 对外暴露的接口

function restore(data) {
  for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
    var item = data_1[_i];
    restoreFns[item.type](item);
  }
}

exports.restore = restore;

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var chain_1 = __webpack_require__(434);

var HtmlCache =
/** @class */
function () {
  function HtmlCache(editor) {
    this.editor = editor;
    this.data = new chain_1.TailChain();
  }
  /**
   * 初始化绑定
   */


  HtmlCache.prototype.observe = function () {
    this.data.resetMax(this.editor.config.historyMaxSize); // 保存初始化值

    this.data.insertLast(this.editor.$textElem.html());
  };
  /**
   * 保存
   */


  HtmlCache.prototype.save = function () {
    this.data.insertLast(this.editor.$textElem.html());
    return this;
  };
  /**
   * 撤销
   */


  HtmlCache.prototype.revoke = function () {
    var data = this.data.prev();

    if (data) {
      this.editor.$textElem.html(data);
      return true;
    }

    return false;
  };
  /**
   * 恢复
   */


  HtmlCache.prototype.restore = function () {
    var data = this.data.next();

    if (data) {
      this.editor.$textElem.html(data);
      return true;
    }

    return false;
  };

  return HtmlCache;
}();

exports["default"] = HtmlCache;

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 数据结构 - 链表
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _splice = _interopRequireDefault(__webpack_require__(93));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});
exports.TailChain = void 0;
/**
 * 特殊链表（数据尾插入、插入前自动清理指针后边的数据、插入后指针永远定位于最后一位元素、可限制链表长度、指针双向移动）
 */

var TailChain =
/** @class */
function () {
  function TailChain() {
    /**
     * 链表数据
     */
    this.data = [];
    /**
     * 链表最大长度，零表示长度不限
     */

    this.max = 0;
    /**
     * 指针
     */

    this.point = 0; // 当前指针是否人为操作过

    this.isRe = false;
  }
  /**
   * 允许用户重设一次 max 值
   */


  TailChain.prototype.resetMax = function (maxSize) {
    maxSize = Math.abs(maxSize);
    maxSize && (this.max = maxSize);
  };

  (0, _defineProperty["default"])(TailChain.prototype, "size", {
    /**
     * 当前链表的长度
     */
    get: function get() {
      return this.data.length;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 尾插入
   * @param data 插入的数据
   */

  TailChain.prototype.insertLast = function (data) {
    // 人为操作过指针，清除指针后面的元素
    if (this.isRe) {
      var _context;

      (0, _splice["default"])(_context = this.data).call(_context, this.point + 1);
      this.isRe = false;
    }

    this.data.push(data); // 超出链表最大长度

    while (this.max && this.size > this.max) {
      this.data.shift();
    } // 从新定位指针到最后一个元素


    this.point = this.size - 1;
    return this;
  };
  /**
   * 获取当前指针元素
   */


  TailChain.prototype.current = function () {
    return this.data[this.point];
  };
  /**
   * 获取上一指针元素
   */


  TailChain.prototype.prev = function () {
    !this.isRe && (this.isRe = true);
    this.point--;

    if (this.point < 0) {
      this.point = 0;
      return undefined;
    }

    return this.current();
  };
  /**
   * 下一指针元素
   */


  TailChain.prototype.next = function () {
    !this.isRe && (this.isRe = true);
    this.point++;

    if (this.point >= this.size) {
      this.point = this.size - 1;
      return undefined;
    }

    return this.current();
  };

  return TailChain;
}();

exports.TailChain = TailChain;

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 记录 scrollTop
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var cache_1 = tslib_1.__importDefault(__webpack_require__(99));

var ScrollCache =
/** @class */
function (_super) {
  tslib_1.__extends(ScrollCache, _super);

  function ScrollCache(editor) {
    var _this = _super.call(this, editor.config.historyMaxSize) || this;

    _this.editor = editor;
    /**
     * 上一次的 scrollTop
     */

    _this.last = 0;
    _this.target = editor.$textElem.elems[0];
    return _this;
  }
  /**
   * 给编辑区容器绑定 scroll 事件
   */


  ScrollCache.prototype.observe = function () {
    var _this = this;

    this.target = this.editor.$textElem.elems[0];
    this.editor.$textElem.on('scroll', function () {
      _this.last = _this.target.scrollTop;
    });
    this.resetMaxSize(this.editor.config.historyMaxSize);
  };
  /**
   * 保存 scrollTop 值
   */


  ScrollCache.prototype.save = function () {
    _super.prototype.save.call(this, [this.last, this.target.scrollTop]);

    return this;
  };
  /**
   * 撤销
   */


  ScrollCache.prototype.revoke = function () {
    var _this = this;

    return _super.prototype.revoke.call(this, function (data) {
      _this.target.scrollTop = data[0];
    });
  };
  /**
   * 恢复
   */


  ScrollCache.prototype.restore = function () {
    var _this = this;

    return _super.prototype.restore.call(this, function (data) {
      _this.target.scrollTop = data[1];
    });
  };

  return ScrollCache;
}(cache_1["default"]);

exports["default"] = ScrollCache;

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @description 记录 range 变化
 * @author fangzhicong
 */

var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var cache_1 = tslib_1.__importDefault(__webpack_require__(99));

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

var util_1 = __webpack_require__(6);
/**
 * 把 Range 对象转换成缓存对象
 * @param range Range 对象
 */


function rangeToObject(range) {
  return {
    start: [range.startContainer, range.startOffset],
    end: [range.endContainer, range.endOffset],
    root: range.commonAncestorContainer,
    collapsed: range.collapsed
  };
}
/**
 * 编辑区 range 缓存管理器
 */


var RangeCache =
/** @class */
function (_super) {
  tslib_1.__extends(RangeCache, _super);

  function RangeCache(editor) {
    var _this = _super.call(this, editor.config.historyMaxSize) || this;

    _this.editor = editor;
    _this.lastRange = rangeToObject(document.createRange());
    _this.root = editor.$textElem.elems[0];
    _this.updateLastRange = util_1.debounce(function () {
      _this.lastRange = rangeToObject(_this.rangeHandle);
    }, editor.config.onchangeTimeout);
    return _this;
  }

  (0, _defineProperty["default"])(RangeCache.prototype, "rangeHandle", {
    /**
     * 获取 Range 对象
     */
    get: function get() {
      var selection = document.getSelection();
      return selection && selection.rangeCount ? selection.getRangeAt(0) : document.createRange();
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 初始化绑定
   */

  RangeCache.prototype.observe = function () {
    var self = this; // 同步节点数据

    this.root = this.editor.$textElem.elems[0];
    this.resetMaxSize(this.editor.config.historyMaxSize); // selection change 回调函数

    function selectionchange() {
      var handle = self.rangeHandle;

      if (self.root === handle.commonAncestorContainer || self.root.contains(handle.commonAncestorContainer)) {
        // 非中文输入状态下才进行记录
        if (!self.editor.isComposing) {
          self.updateLastRange();
        }
      }
    } // backspace 和 delete 手动更新 Range 缓存


    function deletecallback(e) {
      if (e.key == 'Backspace' || e.key == 'Delete') {
        // self.lastRange = rangeToObject(self.rangeHandle)
        self.updateLastRange();
      }
    } // 绑定事件（必须绑定在 document 上，不能绑定在 window 上）


    dom_core_1["default"](document).on('selectionchange', selectionchange); // 解除事件绑定

    this.editor.beforeDestroy(function () {
      dom_core_1["default"](document).off('selectionchange', selectionchange);
    }); // 删除文本时手动更新 range

    self.editor.$textElem.on('keydown', deletecallback);
  };
  /**
   * 保存 Range
   */


  RangeCache.prototype.save = function () {
    var current = rangeToObject(this.rangeHandle);

    _super.prototype.save.call(this, [this.lastRange, current]);

    this.lastRange = current;
    return this;
  };
  /**
   * 设置 Range，在 撤销/恢复 中调用
   * @param range 缓存的 Range 数据
   */


  RangeCache.prototype.set = function (range) {
    try {
      if (range) {
        var handle = this.rangeHandle;
        handle.setStart.apply(handle, range.start);
        handle.setEnd.apply(handle, range.end);
        this.editor.menus.changeActive();
        return true;
      }
    } catch (err) {
      return false;
    }

    return false;
  };
  /**
   * 撤销
   */


  RangeCache.prototype.revoke = function () {
    var _this = this;

    return _super.prototype.revoke.call(this, function (data) {
      _this.set(data[0]);
    });
  };
  /**
   * 恢复
   */


  RangeCache.prototype.restore = function () {
    var _this = this;

    return _super.prototype.restore.call(this, function (data) {
      _this.set(data[1]);
    });
  };

  return RangeCache;
}(cache_1["default"]);

exports["default"] = RangeCache;

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

var _find = _interopRequireDefault(__webpack_require__(30));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__(2);

var dom_core_1 = tslib_1.__importDefault(__webpack_require__(3));

__webpack_require__(438);

function disableInit(editor) {
  var isCurtain = false; // 避免重复生成幕布

  var $contentDom;
  var $menuDom; // 禁用期间，通过 js 修改内容后，刷新内容

  editor.txt.eventHooks.changeEvents.push(function () {
    if (isCurtain) {
      (0, _find["default"])($contentDom).call($contentDom, '.w-e-content-preview').html(editor.$textElem.html());
    }
  }); // 创建幕布

  function disable() {
    if (isCurtain) return; // 隐藏编辑区域

    editor.$textElem.hide(); // 生成div 渲染编辑内容

    var textContainerZindexValue = editor.zIndex.get('textContainer');
    var content = editor.txt.html();
    $contentDom = dom_core_1["default"]("<div class=\"w-e-content-mantle\" style=\"z-index:" + textContainerZindexValue + "\">\n                <div class=\"w-e-content-preview w-e-text\">" + content + "</div>\n            </div>");
    editor.$textContainerElem.append($contentDom); // 生成div 菜单膜布

    var menuZindexValue = editor.zIndex.get('menu');
    $menuDom = dom_core_1["default"]("<div class=\"w-e-menue-mantle\" style=\"z-index:" + menuZindexValue + "\"></div>");
    editor.$toolbarElem.append($menuDom);
    isCurtain = true;
  } // 销毁幕布并显示可编辑区域


  function enable() {
    if (!isCurtain) return;
    $contentDom.remove();
    $menuDom.remove();
    editor.$textElem.show();
    isCurtain = false;
  }

  return {
    disable: disable,
    enable: enable
  };
}

exports["default"] = disableInit;

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(21);
            var content = __webpack_require__(439);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

api(content, options);



module.exports = content.locals || {};

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(22);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".w-e-content-mantle {\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n}\n.w-e-content-mantle .w-e-content-preview {\n  width: 100%;\n  min-height: 100%;\n  padding: 0 10px;\n  line-height: 1.5;\n}\n.w-e-content-mantle .w-e-content-preview img {\n  cursor: default;\n}\n.w-e-content-mantle .w-e-content-preview img:hover {\n  box-shadow: none;\n}\n.w-e-menue-mantle {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {


var _interopRequireDefault = __webpack_require__(0);

var _defineProperty = _interopRequireDefault(__webpack_require__(1));

(0, _defineProperty["default"])(exports, "__esModule", {
  value: true
});

/***/ })
/******/ ])["default"];
});

});

var Editor = /*@__PURE__*/getDefaultExportFromCjs(wangEditor);


return {
  $: Wd,
  A: ApolloClient,
  B: un,
  C: po,
  D: ho,
  E: Editor,
  F: Fragment,
  G: or,
  H: qr,
  I: InMemoryCache,
  J: Zt,
  K: Xr,
  L: Zr,
  M: es,
  N: pl,
  O: Ys,
  P: id,
  Q: xd,
  R: Md,
  S: Sn,
  T: Rl,
  U: Fd,
  V: Vd,
  W: Ws,
  X: Xi,
  Y: Yd,
  Z: Zo,
  _: Nn,
  a: resolveComponent,
  a0: Ua,
  a1: Tp,
  a2: Ph,
  a3: render,
  a4: createRouter,
  a5: createWebHashHistory,
  a6: createApp,
  b: createBlock,
  c: computed,
  d: defineComponent,
  e: createVNode,
  f: createTextVNode,
  g: gql$1,
  h: vu,
  i: createCommentVNode,
  j: withCtx,
  k: popScopeId,
  l: withScopeId,
  m: reactive,
  n: onMounted,
  o: openBlock,
  p: pushScopeId,
  q: vModelText,
  r: ref,
  s: renderList,
  t: toDisplayString,
  u: useRoute,
  v: vShow,
  w: withDirectives,
  x: da,
  y: ha,
  z: on
};
})();
